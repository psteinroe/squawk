---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/select_distinct.sql
---
SOURCE_FILE
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- SELECT_DISTINCT"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- awk '{print $3;}' onek.data | sort -n | uniq"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "two"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- awk '{print $5;}' onek.data | sort -n | uniq"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "ten"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- awk '{print $16;}' onek.data | sort -d | uniq"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "string4"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- awk '{print $3,$16,$5;}' onek.data | sort -d | uniq |"
  WHITESPACE "\n"
  COMMENT "-- sort +0n -1 +1d -2 +2n -3"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "two"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "string4"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "ten"
    WHITESPACE "\n   "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
    WHITESPACE "\n   "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "two"
      WHITESPACE " "
      USING_KW "using"
      WHITESPACE " "
      L_ANGLE "<"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "string4"
      WHITESPACE " "
      USING_KW "using"
      WHITESPACE " "
      L_ANGLE "<"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "ten"
      WHITESPACE " "
      USING_KW "using"
      WHITESPACE " "
      L_ANGLE "<"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- awk '{print $2;}' person.data |"
  WHITESPACE "\n"
  COMMENT "-- awk '{if(NF!=1){print $2;}else{print;}}' - emp.data |"
  WHITESPACE "\n"
  COMMENT "-- awk '{if(NF!=1){print $2;}else{print;}}' - student.data |"
  WHITESPACE "\n"
  COMMENT "-- awk 'BEGIN{FS=\"      \";}{if(NF!=1){print $5;}else{print;}}' - stud_emp.data |"
  WHITESPACE "\n"
  COMMENT "-- sort -n -r | uniq"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "age"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "person"
      STAR "*"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "p"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "age"
      WHITESPACE " "
      USING_KW "using"
      WHITESPACE " "
      R_ANGLE ">"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Check mentioning same column more than once"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "VERBOSE"
    COMMA ","
    WHITESPACE " "
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE "\n  "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            DISTINCT_CLAUSE
              DISTINCT_KW "DISTINCT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "two"
              COMMA ","
              WHITESPACE " "
              TARGET
                NAME_REF
                  IDENT "four"
              COMMA ","
              WHITESPACE " "
              TARGET
                NAME_REF
                  IDENT "two"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "tenk1"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "ss"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE "\n  "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            DISTINCT_CLAUSE
              DISTINCT_KW "DISTINCT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "two"
              COMMA ","
              WHITESPACE " "
              TARGET
                NAME_REF
                  IDENT "four"
              COMMA ","
              WHITESPACE " "
              TARGET
                NAME_REF
                  IDENT "two"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "tenk1"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "ss"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Compare results between plans using sorting and plans using hash"
  WHITESPACE "\n"
  COMMENT "-- aggregation. Force spilling in both cases by setting work_mem low."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "work_mem"
    EQ "="
    LITERAL
      STRING "'64kB'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Produce results with sorting."
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_hashagg"
    EQ "="
    LITERAL
      FALSE_KW "FALSE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "jit_above_cost"
    EQ "="
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "g"
            PERCENT "%"
            LITERAL
              INT_NUMBER "1000"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          LITERAL
            INT_NUMBER "9999"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "g"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "distinct_group_1"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        DISTINCT_CLAUSE
          DISTINCT_KW "DISTINCT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "g"
              PERCENT "%"
              LITERAL
                INT_NUMBER "1000"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "0"
            COMMA ","
            LITERAL
              INT_NUMBER "9999"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "g"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "jit_above_cost"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "distinct_group_2"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        DISTINCT_CLAUSE
          DISTINCT_KW "DISTINCT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CAST_EXPR
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  NAME_REF
                    IDENT "g"
                  PERCENT "%"
                  LITERAL
                    INT_NUMBER "1000"
                R_PAREN ")"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "0"
            COMMA ","
            LITERAL
              INT_NUMBER "9999"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "g"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check to see we get an incremental sort plan"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "hundred"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "two"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_hashagg"
    EQ "="
    LITERAL
      TRUE_KW "TRUE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Produce results with hash aggregation."
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_sort"
    EQ "="
    LITERAL
      FALSE_KW "FALSE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "jit_above_cost"
    EQ "="
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "g"
            PERCENT "%"
            LITERAL
              INT_NUMBER "1000"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          LITERAL
            INT_NUMBER "9999"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "g"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "distinct_hash_1"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        DISTINCT_CLAUSE
          DISTINCT_KW "DISTINCT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "g"
              PERCENT "%"
              LITERAL
                INT_NUMBER "1000"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "0"
            COMMA ","
            LITERAL
              INT_NUMBER "9999"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "g"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "jit_above_cost"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "distinct_hash_2"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        DISTINCT_CLAUSE
          DISTINCT_KW "DISTINCT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CAST_EXPR
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  NAME_REF
                    IDENT "g"
                  PERCENT "%"
                  LITERAL
                    INT_NUMBER "1000"
                R_PAREN ")"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "0"
            COMMA ","
            LITERAL
              INT_NUMBER "9999"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "g"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_sort"
    EQ "="
    LITERAL
      TRUE_KW "TRUE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "work_mem"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Compare results"
  WHITESPACE "\n\n"
  COMPOUND_SELECT
    PAREN_EXPR
      L_PAREN "("
      COMPOUND_SELECT
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "distinct_hash_1"
        WHITESPACE " "
        EXCEPT_KW "EXCEPT"
        WHITESPACE " "
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "distinct_group_1"
      R_PAREN ")"
    WHITESPACE "\n  "
    UNION_KW "UNION"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE "\n"
    PAREN_EXPR
      L_PAREN "("
      COMPOUND_SELECT
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "distinct_group_1"
        WHITESPACE " "
        EXCEPT_KW "EXCEPT"
        WHITESPACE " "
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "distinct_hash_1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMPOUND_SELECT
    PAREN_EXPR
      L_PAREN "("
      COMPOUND_SELECT
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "distinct_hash_1"
        WHITESPACE " "
        EXCEPT_KW "EXCEPT"
        WHITESPACE " "
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "distinct_group_1"
      R_PAREN ")"
    WHITESPACE "\n  "
    UNION_KW "UNION"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE "\n"
    PAREN_EXPR
      L_PAREN "("
      COMPOUND_SELECT
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "distinct_group_1"
        WHITESPACE " "
        EXCEPT_KW "EXCEPT"
        WHITESPACE " "
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "distinct_hash_1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "distinct_hash_1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "distinct_hash_2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "distinct_group_1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "distinct_group_2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test parallel DISTINCT"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "parallel_tuple_cost"
    EQ "="
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "parallel_setup_cost"
    EQ "="
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "min_parallel_table_scan_size"
    EQ "="
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "max_parallel_workers_per_gather"
    EQ "="
    LITERAL
      INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we get a parallel plan"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "four"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure the parallel plan produces the correct results"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "four"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "OR"
      WHITESPACE " "
      REPLACE_KW "REPLACE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "distinct_func"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "INT"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "INT"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\n  BEGIN\n    RETURN a;\n  END;\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      PARALLEL_FUNC_OPTION
        PARALLEL_KW "PARALLEL"
        WHITESPACE " "
        IDENT "UNSAFE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we don't do parallel distinct with a parallel unsafe function"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "distinct_func"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- make the function parallel safe"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "OR"
      WHITESPACE " "
      REPLACE_KW "REPLACE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "distinct_func"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "INT"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "INT"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\n  BEGIN\n    RETURN a;\n  END;\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      PARALLEL_FUNC_OPTION
        PARALLEL_KW "PARALLEL"
        WHITESPACE " "
        IDENT "SAFE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we do parallel distinct now that the function is parallel safe"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "distinct_func"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "max_parallel_workers_per_gather"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "min_parallel_table_scan_size"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "parallel_setup_cost"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "parallel_tuple_cost"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test the planner's ability to use a LIMIT 1 instead of a Unique node when"
  WHITESPACE "\n"
  COMMENT "-- all of the distinct_pathkeys have been marked as redundant"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we get a plan with a Limit 1"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "four"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "four"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure the above gives us the correct result"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "four"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "four"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we get a plan with a Limit 1"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "four"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "four"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "two"
          WHITESPACE " "
          NEQB "<>"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure no rows are returned"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "four"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "four"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "two"
          WHITESPACE " "
          NEQB "<>"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we get a plan with a Limit 1 when the SELECT list contains constants"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "four"
        COMMA ","
        TARGET
          LITERAL
            INT_NUMBER "1"
        COMMA ","
        TARGET
          LITERAL
            INT_NUMBER "2"
        COMMA ","
        TARGET
          LITERAL
            INT_NUMBER "3"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "four"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we only get 1 row"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "four"
        COMMA ","
        TARGET
          LITERAL
            INT_NUMBER "1"
        COMMA ","
        TARGET
          LITERAL
            INT_NUMBER "2"
        COMMA ","
        TARGET
          LITERAL
            INT_NUMBER "3"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "four"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "parallel_setup_cost"
    EQ "="
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "min_parallel_table_scan_size"
    EQ "="
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "max_parallel_workers_per_gather"
    EQ "="
    LITERAL
      INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we get a plan with a Limit 1 in both partial distinct and final"
  WHITESPACE "\n"
  COMMENT "-- distinct"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "four"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "four"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "max_parallel_workers_per_gather"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "min_parallel_table_scan_size"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "parallel_setup_cost"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Also, some tests of IS DISTINCT FROM, which doesn't quite deserve its"
  WHITESPACE "\n"
  COMMENT "-- very own regression file."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "disttable"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "DISTTABLE"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "DISTTABLE"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "DISTTABLE"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "DISTTABLE"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        NULL_KW "NULL"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- basic cases"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "f1"
        COMMA ","
        WHITESPACE " "
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "f1"
            WHITESPACE " "
            IS_DISTINCT_FROM
              IS_KW "IS"
              WHITESPACE " "
              DISTINCT_KW "DISTINCT"
              WHITESPACE " "
              FROM_KW "FROM"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "2"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "\"not 2\""
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "disttable"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "f1"
        COMMA ","
        WHITESPACE " "
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "f1"
            WHITESPACE " "
            IS_DISTINCT_FROM
              IS_KW "IS"
              WHITESPACE " "
              DISTINCT_KW "DISTINCT"
              WHITESPACE " "
              FROM_KW "FROM"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "\"not null\""
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "disttable"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "f1"
        COMMA ","
        WHITESPACE " "
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "f1"
            WHITESPACE " "
            IS_DISTINCT_FROM
              IS_KW "IS"
              WHITESPACE " "
              DISTINCT_KW "DISTINCT"
              WHITESPACE " "
              FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "f1"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "\"false\""
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "disttable"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "f1"
        COMMA ","
        WHITESPACE " "
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "f1"
            WHITESPACE " "
            IS_DISTINCT_FROM
              IS_KW "IS"
              WHITESPACE " "
              DISTINCT_KW "DISTINCT"
              WHITESPACE " "
              FROM_KW "FROM"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "f1"
              PLUS "+"
              LITERAL
                INT_NUMBER "1"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "\"not null\""
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "disttable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check that optimizer constant-folds it properly"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            LITERAL
              INT_NUMBER "1"
            WHITESPACE " "
            IS_DISTINCT_FROM
              IS_KW "IS"
              WHITESPACE " "
              DISTINCT_KW "DISTINCT"
              WHITESPACE " "
              FROM_KW "FROM"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "2"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "\"yes\""
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            LITERAL
              INT_NUMBER "2"
            WHITESPACE " "
            IS_DISTINCT_FROM
              IS_KW "IS"
              WHITESPACE " "
              DISTINCT_KW "DISTINCT"
              WHITESPACE " "
              FROM_KW "FROM"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "2"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "\"no\""
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            LITERAL
              INT_NUMBER "2"
            WHITESPACE " "
            IS_DISTINCT_FROM
              IS_KW "IS"
              WHITESPACE " "
              DISTINCT_KW "DISTINCT"
              WHITESPACE " "
              FROM_KW "FROM"
            WHITESPACE " "
            LITERAL
              NULL_KW "null"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "\"yes\""
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            LITERAL
              NULL_KW "null"
            WHITESPACE " "
            IS_DISTINCT_FROM
              IS_KW "IS"
              WHITESPACE " "
              DISTINCT_KW "DISTINCT"
              WHITESPACE " "
              FROM_KW "FROM"
            WHITESPACE " "
            LITERAL
              NULL_KW "null"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "\"no\""
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- negated form"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            LITERAL
              INT_NUMBER "1"
            WHITESPACE " "
            IS_NOT_DISTINCT_FROM
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
              WHITESPACE " "
              DISTINCT_KW "DISTINCT"
              WHITESPACE " "
              FROM_KW "FROM"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "2"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "\"no\""
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            LITERAL
              INT_NUMBER "2"
            WHITESPACE " "
            IS_NOT_DISTINCT_FROM
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
              WHITESPACE " "
              DISTINCT_KW "DISTINCT"
              WHITESPACE " "
              FROM_KW "FROM"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "2"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "\"yes\""
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            LITERAL
              INT_NUMBER "2"
            WHITESPACE " "
            IS_NOT_DISTINCT_FROM
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
              WHITESPACE " "
              DISTINCT_KW "DISTINCT"
              WHITESPACE " "
              FROM_KW "FROM"
            WHITESPACE " "
            LITERAL
              NULL_KW "null"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "\"no\""
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            LITERAL
              NULL_KW "null"
            WHITESPACE " "
            IS_NOT_DISTINCT_FROM
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
              WHITESPACE " "
              DISTINCT_KW "DISTINCT"
              WHITESPACE " "
              FROM_KW "FROM"
            WHITESPACE " "
            LITERAL
              NULL_KW "null"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "\"yes\""
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test the planner's ability to reorder the distinctClause Pathkeys to match"
  WHITESPACE "\n"
  COMMENT "-- the input path's ordering"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "distinct_tbl"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "distinct_tbl"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "i"
              PERCENT "%"
              LITERAL
                INT_NUMBER "10"
          COMMA ","
          WHITESPACE " "
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "i"
              PERCENT "%"
              LITERAL
                INT_NUMBER "10"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1000"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "distinct_tbl_x_y_idx"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "distinct_tbl"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "x"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "y"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ANALYZE_STMT
    ANALYZE_KW "ANALYZE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "distinct_tbl"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Produce results with sorting."
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_hashagg"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we avoid the need to re-sort by reordering the distinctClause"
  WHITESPACE "\n"
  COMMENT "-- Pathkeys to match the ordering of the input path"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "y"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "x"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "distinct_tbl"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "y"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "x"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "distinct_tbl"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we leverage incremental-sort by reordering the distinctClause"
  WHITESPACE "\n"
  COMMENT "-- Pathkeys to partially match the ordering of the input path"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "y"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "x"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "distinct_tbl"
          WHITESPACE " "
          ORDER_BY_CLAUSE
            ORDER_KW "ORDER"
            WHITESPACE " "
            BY_KW "BY"
            WHITESPACE " "
            NAME_REF
              IDENT "x"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "y"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "x"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "distinct_tbl"
          WHITESPACE " "
          ORDER_BY_CLAUSE
            ORDER_KW "ORDER"
            WHITESPACE " "
            BY_KW "BY"
            WHITESPACE " "
            NAME_REF
              IDENT "x"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we avoid the need to re-sort in partial distinct by reordering the"
  WHITESPACE "\n"
  COMMENT "-- distinctClause Pathkeys to match the ordering of the input path"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "parallel_tuple_cost"
    EQ "="
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "parallel_setup_cost"
    EQ "="
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "min_parallel_table_scan_size"
    EQ "="
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "min_parallel_index_scan_size"
    EQ "="
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "max_parallel_workers_per_gather"
    EQ "="
    LITERAL
      INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "y"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "x"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "distinct_tbl"
    WHITESPACE " "
    LIMIT_CLAUSE
      LIMIT_KW "limit"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "y"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "x"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "distinct_tbl"
    WHITESPACE " "
    LIMIT_CLAUSE
      LIMIT_KW "limit"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "max_parallel_workers_per_gather"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "min_parallel_index_scan_size"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "min_parallel_table_scan_size"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "parallel_setup_cost"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "parallel_tuple_cost"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we reorder the distinctClause Pathkeys to match the ordering of the"
  WHITESPACE "\n"
  COMMENT "-- input path even if there is ORDER BY clause"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "y"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "x"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "distinct_tbl"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "y"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "y"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "x"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "distinct_tbl"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "y"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_hashagg"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "distinct_tbl"
  SEMICOLON ";"
  WHITESPACE "\n"
---
ERROR@915: expected R_PAREN
ERROR@916: expected command, found OFF_KW
ERROR@919: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@919: expected SEMICOLON
ERROR@919: expected command, found R_PAREN
ERROR@1330: expected R_PAREN
ERROR@1331: expected command, found OFF_KW
ERROR@1334: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@1334: expected SEMICOLON
ERROR@1334: expected command, found R_PAREN
ERROR@1697: expected R_PAREN
ERROR@1698: expected command, found OFF_KW
ERROR@1701: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@1701: expected SEMICOLON
ERROR@1701: expected command, found R_PAREN
ERROR@1898: expected R_PAREN
ERROR@1899: expected command, found OFF_KW
ERROR@1902: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@1902: expected SEMICOLON
ERROR@1902: expected command, found R_PAREN
ERROR@2871: expected R_PAREN
ERROR@2872: expected command, found OFF_KW
ERROR@2875: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@2875: expected SEMICOLON
ERROR@2875: expected command, found R_PAREN
ERROR@3221: expected R_PAREN
ERROR@3222: expected command, found OFF_KW
ERROR@3225: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@3225: expected SEMICOLON
ERROR@3225: expected command, found R_PAREN
ERROR@3526: expected R_PAREN
ERROR@3527: expected command, found OFF_KW
ERROR@3530: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@3530: expected SEMICOLON
ERROR@3530: expected command, found R_PAREN
ERROR@3907: expected R_PAREN
ERROR@3908: expected command, found OFF_KW
ERROR@3911: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@3911: expected SEMICOLON
ERROR@3911: expected command, found R_PAREN
ERROR@4112: expected R_PAREN
ERROR@4113: expected command, found OFF_KW
ERROR@4116: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@4116: expected SEMICOLON
ERROR@4116: expected command, found R_PAREN
ERROR@4366: expected R_PAREN
ERROR@4367: expected command, found OFF_KW
ERROR@4370: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@4370: expected SEMICOLON
ERROR@4370: expected command, found R_PAREN
ERROR@4713: expected R_PAREN
ERROR@4714: expected command, found OFF_KW
ERROR@4717: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@4717: expected SEMICOLON
ERROR@4717: expected command, found R_PAREN
ERROR@6346: expected R_PAREN
ERROR@6347: expected command, found OFF_KW
ERROR@6350: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@6350: expected SEMICOLON
ERROR@6350: expected command, found R_PAREN
ERROR@6581: expected R_PAREN
ERROR@6582: expected command, found OFF_KW
ERROR@6585: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@6585: expected SEMICOLON
ERROR@6585: expected command, found R_PAREN
ERROR@7050: expected R_PAREN
ERROR@7051: expected command, found OFF_KW
ERROR@7054: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@7054: expected SEMICOLON
ERROR@7054: expected command, found R_PAREN
ERROR@7460: expected R_PAREN
ERROR@7461: expected command, found OFF_KW
ERROR@7464: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@7464: expected SEMICOLON
ERROR@7464: expected command, found R_PAREN

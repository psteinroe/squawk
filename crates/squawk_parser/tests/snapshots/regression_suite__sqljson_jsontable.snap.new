---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/sqljson_jsontable.sql
---
SOURCE_FILE
  COMMENT "-- JSON_TABLE"
  WHITESPACE "\n\n"
  COMMENT "-- Should fail (JSON_TABLE can be used only in FROM clause)"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              JSON_TABLE_KW "JSON_TABLE"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'[]'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'$'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Only allow EMPTY and ERROR for ON ERROR"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'[]'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'strict $.a'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "js2"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          R_PAREN ")"
  WHITESPACE " "
  ERROR
    DEFAULT_KW "DEFAULT"
  WHITESPACE " "
  ERROR
    INT_NUMBER "1"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  WHITESPACE " "
  ERROR
    ERROR_KW "ERROR"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'[]'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'strict $.a'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "js2"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          R_PAREN ")"
  WHITESPACE " "
  ERROR
    NULL_KW "NULL"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  WHITESPACE " "
  ERROR
    ERROR_KW "ERROR"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'[]'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'strict $.a'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "js2"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          R_PAREN ")"
          WHITESPACE " "
          EMPTY_KW "EMPTY"
          WHITESPACE " "
          ON_KW "ON"
          WHITESPACE " "
          ERROR_KW "ERROR"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'[]'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'strict $.a'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "js2"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          R_PAREN ")"
          WHITESPACE " "
          ERROR_KW "ERROR"
          WHITESPACE " "
          ON_KW "ON"
          WHITESPACE " "
          ERROR_KW "ERROR"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Column and path names must be distinct"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            LITERAL
              STRING "'\"1.23\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$.a'"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "js2"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "js2"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "path"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Should fail (no columns)"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          LITERAL
            NULL_KW "NULL"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        WHITESPACE " "
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            LITERAL
              NULL_KW "NULL"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "jsonb"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "v1"
          WHITESPACE " "
          TIME_TYPE
            NAME_REF
              TIMESTAMP_KW "timestamp"
          R_PAREN ")"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "f"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "v1"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "v2"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--duplicated column name"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            LITERAL
              STRING "'\"1.23\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$.a'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "js2"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "path"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          COMMA ","
          WHITESPACE " "
          NAME
            IDENT "js2"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "path"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--return composite data type."
  WHITESPACE "\n"
  CREATE_TYPE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "comp"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'{\"rec\": \"(1,2)\"}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "id"
          WHITESPACE " "
          FOR_KW "FOR"
          WHITESPACE " "
          ORDINALITY_KW "ORDINALITY"
          COMMA ","
          WHITESPACE " "
          NAME
            IDENT "comp"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "comp"
          WHITESPACE " "
          PATH_KW "path"
          WHITESPACE " "
          LITERAL
            STRING "'$.rec'"
          WHITESPACE " "
          OMIT_KW "omit"
          WHITESPACE " "
          QUOTES_KW "quotes"
          R_PAREN ")"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "jt"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TYPE_STMT
    DROP_KW "drop"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comp"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- NULL => empty table"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            LITERAL
              NULL_KW "NULL"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "jsonb"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "foo"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          R_PAREN ")"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "bar"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            LITERAL
              STRING "'\"1.23\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'strict $.a'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "js2"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'123'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE "\n\t"
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "item"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          COMMA ","
          WHITESPACE " "
          NAME
            IDENT "foo"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          R_PAREN ")"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "bar"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- JSON_TABLE: basic functionality"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    DOMAIN_KW "DOMAIN"
    WHITESPACE " "
    NAME
      IDENT "jsonb_test_domain"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            TEXT_KW "text"
    WHITESPACE " "
    CHECK_CONSTRAINT
      CHECK_KW "CHECK"
      WHITESPACE " "
      L_PAREN "("
      BIN_EXPR
        NAME_REF
          VALUE_KW "value"
        WHITESPACE " "
        NEQB "<>"
        WHITESPACE " "
        LITERAL
          STRING "'foo'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "json_table_test"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "js"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
  WHITESPACE "\n\t"
  ERROR
    L_PAREN "("
  SELECT
    VALUES_KW "VALUES"
    WHITESPACE "\n\t\t"
    L_PAREN "("
    LITERAL
      STRING "'1'"
    R_PAREN ")"
    COMMA ","
    WHITESPACE "\n\t\t"
    L_PAREN "("
    LITERAL
      STRING "'[]'"
    R_PAREN ")"
    COMMA ","
    WHITESPACE "\n\t\t"
    L_PAREN "("
    LITERAL
      STRING "'{}'"
    R_PAREN ")"
    COMMA ","
    WHITESPACE "\n\t\t"
    L_PAREN "("
    LITERAL
      STRING "'[1, 1.23, \"2\", \"aaaaaaa\", \"foo\", null, false, true, {\"aaa\": 123}, \"[1,2]\", \"\\\"str\\\"\"]'"
    R_PAREN ")"
  WHITESPACE "\n\t"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Regular \"unformatted\" columns"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "json_table_test"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "vals"
      WHITESPACE "\n\t"
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        OUTER_KW "OUTER"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE "\n\t"
        CALL_EXPR
          NAME_REF
            JSON_TABLE_KW "JSON_TABLE"
          ARG_LIST
            L_PAREN "("
            WHITESPACE "\n\t\t"
            CAST_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "vals"
                DOT "."
                NAME_REF
                  IDENT "js"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "jsonb"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'lax $[*]'"
            WHITESPACE "\n\t\t"
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "id"
            WHITESPACE " "
            FOR_KW "FOR"
            WHITESPACE " "
            ORDINALITY_KW "ORDINALITY"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "\"int\""
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "\"text\""
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "\"char(4)\""
            WHITESPACE " "
            CHAR_TYPE
              CHAR_KW "char"
              L_PAREN "("
              ARG_LIST
                ARG
                  LITERAL
                    INT_NUMBER "4"
                R_PAREN ")"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "\"bool\""
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "bool"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "\"numeric\""
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    NUMERIC_KW "numeric"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "\"domain\""
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "jsonb_test_domain"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "js"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    JSON_KW "json"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "jb"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "jsonb"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            WHITESPACE "\n\t\t"
            R_PAREN ")"
            WHITESPACE "\n\t"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "jt"
        WHITESPACE "\n\t"
        ON_KW "ON"
        WHITESPACE " "
        LITERAL
          TRUE_KW "true"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- \"formatted\" columns"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "json_table_test"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "vals"
      WHITESPACE "\n\t"
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        OUTER_KW "OUTER"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE "\n\t"
        CALL_EXPR
          NAME_REF
            JSON_TABLE_KW "JSON_TABLE"
          ARG_LIST
            L_PAREN "("
            WHITESPACE "\n\t\t"
            CAST_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "vals"
                DOT "."
                NAME_REF
                  IDENT "js"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "jsonb"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'lax $[*]'"
            WHITESPACE "\n\t\t"
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "id"
            WHITESPACE " "
            FOR_KW "FOR"
            WHITESPACE " "
            ORDINALITY_KW "ORDINALITY"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "jst"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
            WHITESPACE "    "
            JSON_FORMAT_CLAUSE
              FORMAT_KW "FORMAT"
              WHITESPACE " "
              JSON_KW "JSON"
            WHITESPACE "  "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "jsc"
            WHITESPACE " "
            CHAR_TYPE
              CHAR_KW "char"
              L_PAREN "("
              ARG_LIST
                ARG
                  LITERAL
                    INT_NUMBER "4"
                R_PAREN ")"
            WHITESPACE " "
            JSON_FORMAT_CLAUSE
              FORMAT_KW "FORMAT"
              WHITESPACE " "
              JSON_KW "JSON"
            WHITESPACE "  "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "jsv"
            WHITESPACE " "
            CHAR_TYPE
              VARCHAR_KW "varchar"
              L_PAREN "("
              ARG_LIST
                ARG
                  LITERAL
                    INT_NUMBER "4"
                R_PAREN ")"
            WHITESPACE " "
            JSON_FORMAT_CLAUSE
              FORMAT_KW "FORMAT"
              WHITESPACE " "
              JSON_KW "JSON"
            WHITESPACE "  "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "jsb"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "jsonb"
            WHITESPACE " "
            JSON_FORMAT_CLAUSE
              FORMAT_KW "FORMAT"
              WHITESPACE " "
              JSON_KW "JSON"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "jsbq"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "jsonb"
            WHITESPACE " "
            JSON_FORMAT_CLAUSE
              FORMAT_KW "FORMAT"
              WHITESPACE " "
              JSON_KW "JSON"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            WHITESPACE " "
            OMIT_KW "OMIT"
            WHITESPACE " "
            QUOTES_KW "QUOTES"
            WHITESPACE "\n\t\t"
            R_PAREN ")"
            WHITESPACE "\n\t"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "jt"
        WHITESPACE "\n\t"
        ON_KW "ON"
        WHITESPACE " "
        LITERAL
          TRUE_KW "true"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- EXISTS columns"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "json_table_test"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "vals"
      WHITESPACE "\n\t"
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        OUTER_KW "OUTER"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE "\n\t"
        CALL_EXPR
          NAME_REF
            JSON_TABLE_KW "JSON_TABLE"
          ARG_LIST
            L_PAREN "("
            WHITESPACE "\n\t\t"
            CAST_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "vals"
                DOT "."
                NAME_REF
                  IDENT "js"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "jsonb"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'lax $[*]'"
            WHITESPACE "\n\t\t"
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "id"
            WHITESPACE " "
            FOR_KW "FOR"
            WHITESPACE " "
            ORDINALITY_KW "ORDINALITY"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "exists1"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "bool"
            WHITESPACE " "
            EXISTS_KW "EXISTS"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$.aaa'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "exists2"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
            WHITESPACE " "
            EXISTS_KW "EXISTS"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$.aaa'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "exists3"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
            WHITESPACE " "
            EXISTS_KW "EXISTS"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'strict $.aaa'"
        WHITESPACE " "
        ALIAS
          NAME
            UNKNOWN_KW "UNKNOWN"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        NAME_REF
          ERROR_KW "ERROR"
      COMMA ","
      WHITESPACE "\n\t\t\t"
      NAME_REF
        IDENT "exists4"
      WHITESPACE " "
      ALIAS
        NAME
          TEXT_KW "text"
  WHITESPACE " "
  ERROR
    EXISTS_KW "EXISTS"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'strict $.aaa'"
  WHITESPACE " "
  ERROR
    FALSE_KW "FALSE"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  WHITESPACE " "
  ERROR
    ERROR_KW "ERROR"
  WHITESPACE "\n\t\t"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n\t"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "jt"
  WHITESPACE "\n\t"
  ERROR
    ON_KW "ON"
  WHITESPACE " "
  ERROR
    TRUE_KW "true"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Other miscellaneous checks"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "json_table_test"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "vals"
      WHITESPACE "\n\t"
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        OUTER_KW "OUTER"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE "\n\t"
        CALL_EXPR
          NAME_REF
            JSON_TABLE_KW "JSON_TABLE"
          ARG_LIST
            L_PAREN "("
            WHITESPACE "\n\t\t"
            CAST_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "vals"
                DOT "."
                NAME_REF
                  IDENT "js"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "jsonb"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'lax $[*]'"
            WHITESPACE "\n\t\t"
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "id"
            WHITESPACE " "
            FOR_KW "FOR"
            WHITESPACE " "
            ORDINALITY_KW "ORDINALITY"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "aaa"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
            COMMA ","
            WHITESPACE " "
            COMMENT "-- \"aaa\" has implicit path '$.\"aaa\"'"
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "aaa1"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$.aaa'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "js2"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    JSON_KW "json"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "jsb2w"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "jsonb"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            WHITESPACE " "
            WITH_KW "WITH"
            WHITESPACE " "
            WRAPPER_KW "WRAPPER"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "jsb2q"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "jsonb"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            WHITESPACE " "
            OMIT_KW "OMIT"
            WHITESPACE " "
            QUOTES_KW "QUOTES"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "ia"
            WHITESPACE " "
            ARRAY_TYPE
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      INT_KW "int"
              L_BRACK "["
              R_BRACK "]"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "ta"
            WHITESPACE " "
            ARRAY_TYPE
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              L_BRACK "["
              R_BRACK "]"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "jba"
            WHITESPACE " "
            ARRAY_TYPE
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "jsonb"
              L_BRACK "["
              R_BRACK "]"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            WHITESPACE "\n\t\t"
            R_PAREN ")"
            WHITESPACE "\n\t"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "jt"
        WHITESPACE "\n\t"
        ON_KW "ON"
        WHITESPACE " "
        LITERAL
          TRUE_KW "true"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test using casts in DEFAULT .. ON ERROR expression"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'{\"d1\": \"H\"}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE "\n    "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "js1"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "jsonb_test_domain"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a2'"
          WHITESPACE " "
          DEFAULT_KW "DEFAULT"
          WHITESPACE " "
          CAST_EXPR
            CAST_EXPR
              LITERAL
                STRING "'\"foo1\"'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "jsonb"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          WHITESPACE " "
          ON_KW "ON"
          WHITESPACE " "
          EMPTY_KW "EMPTY"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'{\"d1\": \"H\"}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE "\n    "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "js1"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "jsonb_test_domain"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a2'"
          WHITESPACE " "
          DEFAULT_KW "DEFAULT"
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'foo'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "jsonb_test_domain"
          WHITESPACE " "
          ON_KW "ON"
          WHITESPACE " "
          EMPTY_KW "EMPTY"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'{\"d1\": \"H\"}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE "\n    "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "js1"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "jsonb_test_domain"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a2'"
          WHITESPACE " "
          DEFAULT_KW "DEFAULT"
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'foo1'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "jsonb_test_domain"
          WHITESPACE " "
          ON_KW "ON"
          WHITESPACE " "
          EMPTY_KW "EMPTY"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'{\"d1\": \"foo\"}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE "\n    "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "js1"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "jsonb_test_domain"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.d1'"
          WHITESPACE " "
          DEFAULT_KW "DEFAULT"
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'foo2'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "jsonb_test_domain"
          WHITESPACE " "
          ON_KW "ON"
          WHITESPACE " "
          ERROR_KW "ERROR"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'{\"d1\": \"foo\"}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE "\n    "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "js1"
          WHITESPACE " "
          ARRAY_TYPE
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
            L_BRACK "["
            R_BRACK "]"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.d2'"
          WHITESPACE " "
          DEFAULT_KW "DEFAULT"
          WHITESPACE " "
          CAST_EXPR
            CAST_EXPR
              LITERAL
                STRING "'{1}'"
              COLON2 "::"
              ARRAY_TYPE
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        INT_KW "int"
                L_BRACK "["
                R_BRACK "]"
            COLON2 "::"
            ARRAY_TYPE
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "oid"
              L_BRACK "["
              R_BRACK "]"
          WHITESPACE " "
          ON_KW "ON"
          WHITESPACE " "
          EMPTY_KW "EMPTY"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- JSON_TABLE: Test backward parsing"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "jsonb_table_view2"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE "\n\t"
        CALL_EXPR
          NAME_REF
            JSON_TABLE_KW "JSON_TABLE"
          ARG_LIST
            L_PAREN "("
            WHITESPACE "\n\t\t"
            CAST_EXPR
              NAME_REF
                IDENT "jsonb"
              WHITESPACE " "
              LITERAL
                STRING "'null'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'lax $[*]'"
            WHITESPACE " "
            PASSING_KW "PASSING"
            WHITESPACE " "
            BIN_EXPR
              LITERAL
                INT_NUMBER "1"
              WHITESPACE " "
              PLUS "+"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "a"
            COMMA ","
            WHITESPACE " "
            CAST_EXPR
              NAME_REF
                JSON_KW "json"
              WHITESPACE " "
              LITERAL
                STRING "'\"foo\"'"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "\"b c\""
            WHITESPACE "\n\t\t"
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "\"int\""
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "\"text\""
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "\"char(4)\""
            WHITESPACE " "
            CHAR_TYPE
              CHAR_KW "char"
              L_PAREN "("
              ARG_LIST
                ARG
                  LITERAL
                    INT_NUMBER "4"
                R_PAREN ")"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "\"bool\""
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "bool"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "\"numeric\""
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    NUMERIC_KW "numeric"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "\"domain\""
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "jsonb_test_domain"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            R_PAREN ")"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "jsonb_table_view3"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE "\n\t"
        CALL_EXPR
          NAME_REF
            JSON_TABLE_KW "JSON_TABLE"
          ARG_LIST
            L_PAREN "("
            WHITESPACE "\n\t\t"
            CAST_EXPR
              NAME_REF
                IDENT "jsonb"
              WHITESPACE " "
              LITERAL
                STRING "'null'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'lax $[*]'"
            WHITESPACE " "
            PASSING_KW "PASSING"
            WHITESPACE " "
            BIN_EXPR
              LITERAL
                INT_NUMBER "1"
              WHITESPACE " "
              PLUS "+"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "a"
            COMMA ","
            WHITESPACE " "
            CAST_EXPR
              NAME_REF
                JSON_KW "json"
              WHITESPACE " "
              LITERAL
                STRING "'\"foo\"'"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "\"b c\""
            WHITESPACE "\n\t\t"
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "js"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    JSON_KW "json"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "jb"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "jsonb"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "jst"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
            WHITESPACE "    "
            JSON_FORMAT_CLAUSE
              FORMAT_KW "FORMAT"
              WHITESPACE " "
              JSON_KW "JSON"
            WHITESPACE "  "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "jsc"
            WHITESPACE " "
            CHAR_TYPE
              CHAR_KW "char"
              L_PAREN "("
              ARG_LIST
                ARG
                  LITERAL
                    INT_NUMBER "4"
                R_PAREN ")"
            WHITESPACE " "
            JSON_FORMAT_CLAUSE
              FORMAT_KW "FORMAT"
              WHITESPACE " "
              JSON_KW "JSON"
            WHITESPACE "  "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "jsv"
            WHITESPACE " "
            CHAR_TYPE
              VARCHAR_KW "varchar"
              L_PAREN "("
              ARG_LIST
                ARG
                  LITERAL
                    INT_NUMBER "4"
                R_PAREN ")"
            WHITESPACE " "
            JSON_FORMAT_CLAUSE
              FORMAT_KW "FORMAT"
              WHITESPACE " "
              JSON_KW "JSON"
            WHITESPACE "  "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            R_PAREN ")"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "jsonb_table_view4"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE "\n\t"
        CALL_EXPR
          NAME_REF
            JSON_TABLE_KW "JSON_TABLE"
          ARG_LIST
            L_PAREN "("
            WHITESPACE "\n\t\t"
            CAST_EXPR
              NAME_REF
                IDENT "jsonb"
              WHITESPACE " "
              LITERAL
                STRING "'null'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'lax $[*]'"
            WHITESPACE " "
            PASSING_KW "PASSING"
            WHITESPACE " "
            BIN_EXPR
              LITERAL
                INT_NUMBER "1"
              WHITESPACE " "
              PLUS "+"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "a"
            COMMA ","
            WHITESPACE " "
            CAST_EXPR
              NAME_REF
                JSON_KW "json"
              WHITESPACE " "
              LITERAL
                STRING "'\"foo\"'"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "\"b c\""
            WHITESPACE "\n\t\t"
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            WHITESPACE "\n            "
            NAME
              IDENT "jsb"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "jsonb"
            WHITESPACE "   "
            JSON_FORMAT_CLAUSE
              FORMAT_KW "FORMAT"
              WHITESPACE " "
              JSON_KW "JSON"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n            "
            NAME
              IDENT "jsbq"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "jsonb"
            WHITESPACE " "
            JSON_FORMAT_CLAUSE
              FORMAT_KW "FORMAT"
              WHITESPACE " "
              JSON_KW "JSON"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            WHITESPACE " "
            OMIT_KW "OMIT"
            WHITESPACE " "
            QUOTES_KW "QUOTES"
            COMMA ","
            WHITESPACE "\n            "
            NAME
              IDENT "aaa"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
            COMMA ","
            WHITESPACE " "
            COMMENT "-- implicit path '$.\"aaa\"',"
            WHITESPACE "\n            "
            NAME
              IDENT "aaa1"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$.aaa'"
            R_PAREN ")"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "jsonb_table_view5"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE "\n\t"
        CALL_EXPR
          NAME_REF
            JSON_TABLE_KW "JSON_TABLE"
          ARG_LIST
            L_PAREN "("
            WHITESPACE "\n\t\t"
            CAST_EXPR
              NAME_REF
                IDENT "jsonb"
              WHITESPACE " "
              LITERAL
                STRING "'null'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'lax $[*]'"
            WHITESPACE " "
            PASSING_KW "PASSING"
            WHITESPACE " "
            BIN_EXPR
              LITERAL
                INT_NUMBER "1"
              WHITESPACE " "
              PLUS "+"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "a"
            COMMA ","
            WHITESPACE " "
            CAST_EXPR
              NAME_REF
                JSON_KW "json"
              WHITESPACE " "
              LITERAL
                STRING "'\"foo\"'"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "\"b c\""
            WHITESPACE "\n\t\t"
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "exists1"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "bool"
            WHITESPACE " "
            EXISTS_KW "EXISTS"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$.aaa'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "exists2"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
            WHITESPACE " "
            EXISTS_KW "EXISTS"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$.aaa'"
  WHITESPACE " "
  ERROR
    TRUE_KW "TRUE"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  WHITESPACE " "
  ERROR
    ERROR_KW "ERROR"
  ERROR
    COMMA ","
  WHITESPACE "\n\t\t\t"
  ERROR
    IDENT "exists3"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    EXISTS_KW "EXISTS"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'strict $.aaa'"
  WHITESPACE " "
  ERROR
    UNKNOWN_KW "UNKNOWN"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  WHITESPACE " "
  ERROR
    ERROR_KW "ERROR"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "jsonb_table_view6"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE "\n\t"
        CALL_EXPR
          NAME_REF
            JSON_TABLE_KW "JSON_TABLE"
          ARG_LIST
            L_PAREN "("
            WHITESPACE "\n\t\t"
            CAST_EXPR
              NAME_REF
                IDENT "jsonb"
              WHITESPACE " "
              LITERAL
                STRING "'null'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'lax $[*]'"
            WHITESPACE " "
            PASSING_KW "PASSING"
            WHITESPACE " "
            BIN_EXPR
              LITERAL
                INT_NUMBER "1"
              WHITESPACE " "
              PLUS "+"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "a"
            COMMA ","
            WHITESPACE " "
            CAST_EXPR
              NAME_REF
                JSON_KW "json"
              WHITESPACE " "
              LITERAL
                STRING "'\"foo\"'"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "\"b c\""
            WHITESPACE "\n\t\t"
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "js2"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    JSON_KW "json"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "jsb2w"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "jsonb"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            WHITESPACE " "
            WITH_KW "WITH"
            WHITESPACE " "
            WRAPPER_KW "WRAPPER"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "jsb2q"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "jsonb"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            WHITESPACE " "
            OMIT_KW "OMIT"
            WHITESPACE " "
            QUOTES_KW "QUOTES"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "ia"
            WHITESPACE " "
            ARRAY_TYPE
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      INT_KW "int"
              L_BRACK "["
              R_BRACK "]"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "ta"
            WHITESPACE " "
            ARRAY_TYPE
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              L_BRACK "["
              R_BRACK "]"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "jba"
            WHITESPACE " "
            ARRAY_TYPE
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "jsonb"
              L_BRACK "["
              R_BRACK "]"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            R_PAREN ")"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    VERBOSE_KW "VERBOSE"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "jsonb_table_view2"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    VERBOSE_KW "VERBOSE"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "jsonb_table_view3"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    VERBOSE_KW "VERBOSE"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "jsonb_table_view4"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    VERBOSE_KW "VERBOSE"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "jsonb_table_view5"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    VERBOSE_KW "VERBOSE"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "jsonb_table_view6"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- JSON_TABLE() with alias"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    VERBOSE_KW "VERBOSE"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE "\n\t"
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          WHITESPACE "\n\t\t"
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'null'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'lax $[*]'"
          WHITESPACE " "
          PASSING_KW "PASSING"
          WHITESPACE " "
          BIN_EXPR
            LITERAL
              INT_NUMBER "1"
            WHITESPACE " "
            PLUS "+"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "2"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "a"
          COMMA ","
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              JSON_KW "json"
            WHITESPACE " "
            LITERAL
              STRING "'\"foo\"'"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"b c\""
          WHITESPACE "\n\t\t"
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          WHITESPACE "\n\t\t\t"
          NAME
            IDENT "id"
          WHITESPACE " "
          FOR_KW "FOR"
          WHITESPACE " "
          ORDINALITY_KW "ORDINALITY"
          COMMA ","
          WHITESPACE "\n\t\t\t"
          NAME
            IDENT "\"int\""
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          COMMA ","
          WHITESPACE "\n\t\t\t"
          NAME
            IDENT "\"text\""
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE "\n\t"
          R_PAREN ")"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "json_table_func"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    FORMAT_KW "FORMAT"
  WHITESPACE " "
  ERROR
    JSON_KW "JSON"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    VERBOSE_KW "VERBOSE"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE "\n\t"
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          WHITESPACE "\n\t\t"
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'null'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'lax $[*]'"
          WHITESPACE " "
          PASSING_KW "PASSING"
          WHITESPACE " "
          BIN_EXPR
            LITERAL
              INT_NUMBER "1"
            WHITESPACE " "
            PLUS "+"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "2"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "a"
          COMMA ","
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              JSON_KW "json"
            WHITESPACE " "
            LITERAL
              STRING "'\"foo\"'"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"b c\""
          WHITESPACE "\n\t\t"
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          WHITESPACE "\n\t\t\t"
          NAME
            IDENT "id"
          WHITESPACE " "
          FOR_KW "FOR"
          WHITESPACE " "
          ORDINALITY_KW "ORDINALITY"
          COMMA ","
          WHITESPACE "\n\t\t\t"
          NAME
            IDENT "\"int\""
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          COMMA ","
          WHITESPACE "\n\t\t\t"
          NAME
            IDENT "\"text\""
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE "\n\t"
          R_PAREN ")"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "json_table_func"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "jsonb_table_view2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "jsonb_table_view3"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "jsonb_table_view4"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "jsonb_table_view5"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "jsonb_table_view6"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    DOMAIN_KW "DOMAIN"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "jsonb_test_domain"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- JSON_TABLE: only one FOR ORDINALITY columns allowed"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'1'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "id"
          WHITESPACE " "
          FOR_KW "FOR"
          WHITESPACE " "
          ORDINALITY_KW "ORDINALITY"
          COMMA ","
          WHITESPACE " "
          NAME
            IDENT "id2"
          WHITESPACE " "
          FOR_KW "FOR"
          WHITESPACE " "
          ORDINALITY_KW "ORDINALITY"
          COMMA ","
          WHITESPACE " "
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a'"
          WHITESPACE " "
          ERROR_KW "ERROR"
          WHITESPACE " "
          ON_KW "ON"
          WHITESPACE " "
          EMPTY_KW "EMPTY"
          R_PAREN ")"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "jt"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'1'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "id"
          WHITESPACE " "
          FOR_KW "FOR"
          WHITESPACE " "
          ORDINALITY_KW "ORDINALITY"
          COMMA ","
          WHITESPACE " "
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          ERROR_KW "ERROR"
          WHITESPACE " "
          ON_KW "ON"
          WHITESPACE " "
          EMPTY_KW "EMPTY"
          R_PAREN ")"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "jt"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- JSON_TABLE: ON EMPTY/ON ERROR behavior"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE "\n\t"
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'1'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'\"err\"'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "vals"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "js"
          R_PAREN ")"
      COMMA ","
      WHITESPACE "\n\t"
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "vals"
              DOT "."
              NAME_REF
                IDENT "js"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "jsonb"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          R_PAREN ")"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "jt"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE "\n\t"
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'1'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'\"err\"'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "vals"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "js"
          R_PAREN ")"
      WHITESPACE "\n\t\t"
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        OUTER_KW "OUTER"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE "\n\t"
        CALL_EXPR
          NAME_REF
            JSON_TABLE_KW "JSON_TABLE"
          ARG_LIST
            L_PAREN "("
            CAST_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "vals"
                DOT "."
                NAME_REF
                  IDENT "js"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "jsonb"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            WHITESPACE " "
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            NAME
              IDENT "a"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            WHITESPACE " "
            ERROR_KW "ERROR"
            WHITESPACE " "
            ON_KW "ON"
            WHITESPACE " "
            ERROR_KW "ERROR"
            R_PAREN ")"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "jt"
        WHITESPACE "\n\t\t"
        ON_KW "ON"
        WHITESPACE " "
        LITERAL
          TRUE_KW "true"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- TABLE-level ERROR ON ERROR is not propagated to columns"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE "\n\t"
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'1'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'\"err\"'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "vals"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "js"
          R_PAREN ")"
      WHITESPACE "\n\t\t"
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        OUTER_KW "OUTER"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE "\n\t"
        CALL_EXPR
          NAME_REF
            JSON_TABLE_KW "JSON_TABLE"
          ARG_LIST
            L_PAREN "("
            CAST_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "vals"
                DOT "."
                NAME_REF
                  IDENT "js"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "jsonb"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            WHITESPACE " "
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            NAME
              IDENT "a"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            WHITESPACE " "
            ERROR_KW "ERROR"
            WHITESPACE " "
            ON_KW "ON"
            WHITESPACE " "
            ERROR_KW "ERROR"
            R_PAREN ")"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "jt"
        WHITESPACE "\n\t\t"
        ON_KW "ON"
        WHITESPACE " "
        LITERAL
          TRUE_KW "true"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'1'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a'"
          WHITESPACE " "
          ERROR_KW "ERROR"
          WHITESPACE " "
          ON_KW "ON"
          WHITESPACE " "
          EMPTY_KW "EMPTY"
          R_PAREN ")"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "jt"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'1'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'strict $.a'"
          WHITESPACE " "
          ERROR_KW "ERROR"
          WHITESPACE " "
          ON_KW "ON"
          WHITESPACE " "
          ERROR_KW "ERROR"
          R_PAREN ")"
          WHITESPACE " "
          ERROR_KW "ERROR"
          WHITESPACE " "
          ON_KW "ON"
          WHITESPACE " "
          ERROR_KW "ERROR"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "jt"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'1'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'lax $.a'"
          WHITESPACE " "
          ERROR_KW "ERROR"
          WHITESPACE " "
          ON_KW "ON"
          WHITESPACE " "
          EMPTY_KW "EMPTY"
          R_PAREN ")"
          WHITESPACE " "
          ERROR_KW "ERROR"
          WHITESPACE " "
          ON_KW "ON"
          WHITESPACE " "
          ERROR_KW "ERROR"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "jt"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'\"a\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE "   "
          DEFAULT_KW "DEFAULT"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1"
          WHITESPACE " "
          ON_KW "ON"
          WHITESPACE " "
          EMPTY_KW "EMPTY"
  WHITESPACE " "
  ERROR
    DEFAULT_KW "DEFAULT"
  WHITESPACE " "
  ERROR
    INT_NUMBER "2"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  WHITESPACE " "
  ERROR
    ERROR_KW "ERROR"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "jt"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'\"a\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'strict $.a'"
          WHITESPACE " "
          DEFAULT_KW "DEFAULT"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1"
          WHITESPACE " "
          ON_KW "ON"
          WHITESPACE " "
          EMPTY_KW "EMPTY"
  WHITESPACE " "
  ERROR
    DEFAULT_KW "DEFAULT"
  WHITESPACE " "
  ERROR
    INT_NUMBER "2"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  WHITESPACE " "
  ERROR
    ERROR_KW "ERROR"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "jt"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'\"a\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'lax $.a'"
          WHITESPACE " "
          DEFAULT_KW "DEFAULT"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1"
          WHITESPACE " "
          ON_KW "ON"
          WHITESPACE " "
          EMPTY_KW "EMPTY"
  WHITESPACE " "
  ERROR
    DEFAULT_KW "DEFAULT"
  WHITESPACE " "
  ERROR
    INT_NUMBER "2"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  WHITESPACE " "
  ERROR
    ERROR_KW "ERROR"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "jt"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- JSON_TABLE: EXISTS PATH types"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'\"a\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "int4"
          WHITESPACE " "
          EXISTS_KW "EXISTS"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a'"
          WHITESPACE " "
          ERROR_KW "ERROR"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  WHITESPACE " "
  ERROR
    ERROR_KW "ERROR"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\t"
  COMMENT "-- ok; can cast to int4"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'\"a\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "int4"
          WHITESPACE " "
          EXISTS_KW "EXISTS"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          ERROR_KW "ERROR"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  WHITESPACE " "
  ERROR
    ERROR_KW "ERROR"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\t"
  COMMENT "-- ok; can cast to int4"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'\"a\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "int2"
          WHITESPACE " "
          EXISTS_KW "EXISTS"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a'"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'\"a\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "int8"
          WHITESPACE " "
          EXISTS_KW "EXISTS"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a'"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'\"a\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "float4"
          WHITESPACE " "
          EXISTS_KW "EXISTS"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a'"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Default FALSE (ON ERROR) doesn't fit char(3)"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'\"a\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          CHAR_TYPE
            CHAR_KW "char"
            L_PAREN "("
            ARG_LIST
              ARG
                LITERAL
                  INT_NUMBER "3"
              R_PAREN ")"
          WHITESPACE " "
          EXISTS_KW "EXISTS"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a'"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'\"a\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          CHAR_TYPE
            CHAR_KW "char"
            L_PAREN "("
            ARG_LIST
              ARG
                LITERAL
                  INT_NUMBER "3"
              R_PAREN ")"
          WHITESPACE " "
          EXISTS_KW "EXISTS"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a'"
          WHITESPACE " "
          ERROR_KW "ERROR"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  WHITESPACE " "
  ERROR
    ERROR_KW "ERROR"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'\"a\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          CHAR_TYPE
            CHAR_KW "char"
            L_PAREN "("
            ARG_LIST
              ARG
                LITERAL
                  INT_NUMBER "5"
              R_PAREN ")"
          WHITESPACE " "
          EXISTS_KW "EXISTS"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a'"
          WHITESPACE " "
          ERROR_KW "ERROR"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  WHITESPACE " "
  ERROR
    ERROR_KW "ERROR"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'\"a\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  JSON_KW "json"
          WHITESPACE " "
          EXISTS_KW "EXISTS"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a'"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'\"a\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "jsonb"
          WHITESPACE " "
          EXISTS_KW "EXISTS"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a'"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- EXISTS PATH domain over int"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    DOMAIN_KW "DOMAIN"
    WHITESPACE " "
    NAME
      IDENT "dint4"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    DOMAIN_KW "DOMAIN"
    WHITESPACE " "
    NAME
      IDENT "dint4_0"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    WHITESPACE " "
    CHECK_CONSTRAINT
      CHECK_KW "CHECK"
      WHITESPACE " "
      L_PAREN "("
      BIN_EXPR
        NAME_REF
          VALUE_KW "VALUE"
        WHITESPACE " "
        NEQB "<>"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
      WHITESPACE " "
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "a"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "bool"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'\"a\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "dint4"
          WHITESPACE " "
          EXISTS_KW "EXISTS"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a'"
          WHITESPACE " "
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "a"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "bool"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'{\"a\":1}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "dint4_0"
          WHITESPACE " "
          EXISTS_KW "EXISTS"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.b'"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "a"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "bool"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'{\"a\":1}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "dint4_0"
          WHITESPACE " "
          EXISTS_KW "EXISTS"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.b'"
          WHITESPACE " "
          ERROR_KW "ERROR"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  WHITESPACE " "
  ERROR
    ERROR_KW "ERROR"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "a"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "bool"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'{\"a\":1}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "dint4_0"
          WHITESPACE " "
          EXISTS_KW "EXISTS"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.b'"
  WHITESPACE " "
  ERROR
    FALSE_KW "FALSE"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  WHITESPACE " "
  ERROR
    ERROR_KW "ERROR"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "a"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "bool"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'{\"a\":1}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "dint4_0"
          WHITESPACE " "
          EXISTS_KW "EXISTS"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.b'"
  WHITESPACE " "
  ERROR
    TRUE_KW "TRUE"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  WHITESPACE " "
  ERROR
    ERROR_KW "ERROR"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    DOMAIN_KW "DOMAIN"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dint4"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dint4_0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- JSON_TABLE: WRAPPER/QUOTES clauses on scalar columns"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'\"world\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "item"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          KEEP_KW "KEEP"
          WHITESPACE " "
          QUOTES_KW "QUOTES"
          WHITESPACE " "
          ON_KW "ON"
          WHITESPACE " "
          SCALAR_KW "SCALAR"
          WHITESPACE " "
          STRING_KW "STRING"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'\"world\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "item"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          OMIT_KW "OMIT"
          WHITESPACE " "
          QUOTES_KW "QUOTES"
          WHITESPACE " "
          ON_KW "ON"
          WHITESPACE " "
          SCALAR_KW "SCALAR"
          WHITESPACE " "
          STRING_KW "STRING"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'\"world\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "item"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
          WHITESPACE " "
          JSON_FORMAT_CLAUSE
            FORMAT_KW "FORMAT"
            WHITESPACE " "
            JSON_KW "JSON"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          KEEP_KW "KEEP"
          WHITESPACE " "
          QUOTES_KW "QUOTES"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'\"world\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "item"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
          WHITESPACE " "
          JSON_FORMAT_CLAUSE
            FORMAT_KW "FORMAT"
            WHITESPACE " "
            JSON_KW "JSON"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          OMIT_KW "OMIT"
          WHITESPACE " "
          QUOTES_KW "QUOTES"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'\"world\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "item"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
          WHITESPACE " "
          JSON_FORMAT_CLAUSE
            FORMAT_KW "FORMAT"
            WHITESPACE " "
            JSON_KW "JSON"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          WITHOUT_KW "WITHOUT"
          WHITESPACE " "
          WRAPPER_KW "WRAPPER"
          WHITESPACE " "
          KEEP_KW "KEEP"
          WHITESPACE " "
          QUOTES_KW "QUOTES"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'\"world\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "item"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          WITHOUT_KW "WITHOUT"
          WHITESPACE " "
          WRAPPER_KW "WRAPPER"
          WHITESPACE " "
          OMIT_KW "OMIT"
          WHITESPACE " "
          QUOTES_KW "QUOTES"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'\"world\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "item"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
          WHITESPACE " "
          JSON_FORMAT_CLAUSE
            FORMAT_KW "FORMAT"
            WHITESPACE " "
            JSON_KW "JSON"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          WITH_KW "WITH"
          WHITESPACE " "
          WRAPPER_KW "WRAPPER"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Error: OMIT QUOTES should not be specified when WITH WRAPPER is present"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'\"world\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "item"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          WITH_KW "WITH"
          WHITESPACE " "
          WRAPPER_KW "WRAPPER"
          WHITESPACE " "
          OMIT_KW "OMIT"
          WHITESPACE " "
          QUOTES_KW "QUOTES"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- But KEEP QUOTES (the default) is fine"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'\"world\"'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "item"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
          WHITESPACE " "
          JSON_FORMAT_CLAUSE
            FORMAT_KW "FORMAT"
            WHITESPACE " "
            JSON_KW "JSON"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          WITH_KW "WITH"
          WHITESPACE " "
          WRAPPER_KW "WRAPPER"
          WHITESPACE " "
          KEEP_KW "KEEP"
          WHITESPACE " "
          QUOTES_KW "QUOTES"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test PASSING args"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          WHITESPACE "\n\t"
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'[1,2,3]'"
          COMMA ","
          WHITESPACE "\n\t"
          LITERAL
            STRING "'$[*] ? (@ < $x)'"
          WHITESPACE "\n\t\t"
          PASSING_KW "PASSING"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "3"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "x"
          WHITESPACE "\n\t\t"
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "y"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
          WHITESPACE " "
          JSON_FORMAT_CLAUSE
            FORMAT_KW "FORMAT"
            WHITESPACE " "
            JSON_KW "JSON"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          R_PAREN ")"
          WHITESPACE "\n\t"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "jt"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- PASSING arguments are also passed to column paths"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          WHITESPACE "\n\t"
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'[1,2,3]'"
          COMMA ","
          WHITESPACE "\n\t"
          LITERAL
            STRING "'$[*] ? (@ < $x)'"
          WHITESPACE "\n\t\t"
          PASSING_KW "PASSING"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "x"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "3"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "y"
          WHITESPACE "\n\t\t"
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
          WHITESPACE " "
          JSON_FORMAT_CLAUSE
            FORMAT_KW "FORMAT"
            WHITESPACE " "
            JSON_KW "JSON"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$ ? (@ < $y)'"
          R_PAREN ")"
          WHITESPACE "\n\t"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "jt"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Should fail (not supported)"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'{\"a\": 123}'"
          COMMA ","
          WHITESPACE " "
          BIN_EXPR
            LITERAL
              STRING "'$'"
            WHITESPACE " "
            CUSTOM_OP
              PIPE "|"
              PIPE "|"
            WHITESPACE " "
            BIN_EXPR
              LITERAL
                STRING "'.'"
              WHITESPACE " "
              CUSTOM_OP
                PIPE "|"
                PIPE "|"
              WHITESPACE " "
              LITERAL
                STRING "'a'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "foo"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- JsonPathQuery() error message mentioning column name"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'{\"a\": [{\"b\": \"1\"}, {\"b\": \"2\"}]}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "b"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  JSON_KW "json"
          WHITESPACE " "
          PATH_KW "path"
          WHITESPACE " "
          LITERAL
            STRING "'$.a[*].b'"
          WHITESPACE " "
          ERROR_KW "ERROR"
          WHITESPACE " "
          ON_KW "ON"
          WHITESPACE " "
          ERROR_KW "ERROR"
          R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- JSON_TABLE: nested paths"
  WHITESPACE "\n\n"
  COMMENT "-- Duplicate path names"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          WHITESPACE "\n\t"
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'[]'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "a"
          WHITESPACE "\n\t"
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          WHITESPACE "\n\t\t"
          NAME
            IDENT "b"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          COMMA ","
          WHITESPACE "\n\t\t"
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "a"
          WHITESPACE "\n\t\t"
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          WHITESPACE "\n\t\t\t"
          NAME
            IDENT "c"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE "\n\t\t"
          R_PAREN ")"
          WHITESPACE "\n\t"
          R_PAREN ")"
          WHITESPACE "\n"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "jt"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          WHITESPACE "\n\t"
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'[]'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "a"
          WHITESPACE "\n\t"
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          WHITESPACE "\n\t\t"
          NAME
            IDENT "b"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          COMMA ","
          WHITESPACE "\n\t\t"
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "n_a"
          WHITESPACE "\n\t\t"
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          WHITESPACE "\n\t\t\t"
          NAME
            IDENT "c"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE "\n\t\t"
          R_PAREN ")"
          WHITESPACE "\n\t"
          R_PAREN ")"
          WHITESPACE "\n"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "jt"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          WHITESPACE "\n\t"
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'[]'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE "\n\t"
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          WHITESPACE "\n\t\t"
          NAME
            IDENT "b"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          COMMA ","
          WHITESPACE "\n\t\t"
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "b"
          WHITESPACE "\n\t\t"
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          WHITESPACE "\n\t\t\t"
          NAME
            IDENT "c"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE "\n\t\t"
          R_PAREN ")"
          WHITESPACE "\n\t"
          R_PAREN ")"
          WHITESPACE "\n"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "jt"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          WHITESPACE "\n\t"
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'[]'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE "\n\t"
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          WHITESPACE "\n\t\t"
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "a"
          WHITESPACE "\n\t\t"
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          WHITESPACE "\n\t\t\t"
          NAME
            IDENT "b"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE "\n\t\t"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n\t\t"
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE "\n\t\t"
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          WHITESPACE "\n\t\t\t"
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "a"
          WHITESPACE "\n\t\t\t"
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          WHITESPACE "\n\t\t\t\t"
          NAME
            IDENT "c"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE "\n\t\t\t"
          R_PAREN ")"
          WHITESPACE "\n\t\t"
          R_PAREN ")"
          WHITESPACE "\n\t"
          R_PAREN ")"
          WHITESPACE "\n"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "jt"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- JSON_TABLE: plan execution"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "jsonb_table_test"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "js"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "jsonb"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "jsonb_table_test"
    WHITESPACE "\n"
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      WHITESPACE "\n\t"
      LITERAL
        STRING "'[\n\t\t{\"a\":  1,  \"b\": [], \"c\": []},\n\t\t{\"a\":  2,  \"b\": [1, 2, 3], \"c\": [10, null, 20]},\n\t\t{\"a\":  3,  \"b\": [1, 2], \"c\": []},\n\t\t{\"x\": \"4\", \"b\": [1, 2], \"c\": 123}\n\t ]'"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE "\n\t"
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "jt"
            DOT "."
            STAR "*"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE "\n\t"
      NAME_REF
        IDENT "jsonb_table_test"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "jtt"
      COMMA ","
      WHITESPACE "\n\t"
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "json_table"
        WHITESPACE " "
        ARG_LIST
          L_PAREN "("
          WHITESPACE "\n\t\t"
          FIELD_EXPR
            NAME_REF
              IDENT "jtt"
            DOT "."
            NAME_REF
              IDENT "js"
          COMMA ","
          LITERAL
            STRING "'strict $[*]'"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "p"
          WHITESPACE "\n\t\t"
          COLUMNS_KW "columns"
          WHITESPACE " "
          L_PAREN "("
          WHITESPACE "\n\t\t\t"
          NAME
            IDENT "n"
          WHITESPACE " "
          FOR_KW "for"
          WHITESPACE " "
          ORDINALITY_KW "ordinality"
          COMMA ","
          WHITESPACE "\n\t\t\t"
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "path"
          WHITESPACE " "
          LITERAL
            STRING "'lax $.a'"
          WHITESPACE " "
          DEFAULT_KW "default"
          WHITESPACE " "
          PREFIX_EXPR
            MINUS "-"
            LITERAL
              INT_NUMBER "1"
          WHITESPACE " "
          ON_KW "on"
          WHITESPACE " "
          EMPTY_KW "empty"
          COMMA ","
          WHITESPACE "\n\t\t\t"
          NESTED_KW "nested"
          WHITESPACE " "
          PATH_KW "path"
          WHITESPACE " "
          LITERAL
            STRING "'strict $.b[*]'"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "pb"
          WHITESPACE " "
          COLUMNS_KW "columns"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "b_id"
          WHITESPACE " "
          FOR_KW "for"
          WHITESPACE " "
          ORDINALITY_KW "ordinality"
          COMMA ","
          WHITESPACE " "
          NAME
            IDENT "b"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "path"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n\t\t\t"
          NESTED_KW "nested"
          WHITESPACE " "
          PATH_KW "path"
          WHITESPACE " "
          LITERAL
            STRING "'strict $.c[*]'"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "pc"
          WHITESPACE " "
          COLUMNS_KW "columns"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "c_id"
          WHITESPACE " "
          FOR_KW "for"
          WHITESPACE " "
          ORDINALITY_KW "ordinality"
          COMMA ","
          WHITESPACE " "
          NAME
            IDENT "c"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "path"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          R_PAREN ")"
          WHITESPACE "\n\t\t"
          R_PAREN ")"
          WHITESPACE "\n\t"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "jt"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- PASSING arguments are passed to nested paths and their columns' paths"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE "\n\t"
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
      COMMA ","
      WHITESPACE "\n\t"
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "y"
      COMMA ","
      WHITESPACE "\n\t"
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE "\n\t\t"
            LITERAL
              STRING "'[[1,2,3],[2,3,4,5],[3,4,5,6]]'"
          COMMA ","
          WHITESPACE "\n\t\t"
          LITERAL
            STRING "'strict $[*] ? (@[*] <= $x)'"
          WHITESPACE "\n\t\t"
          PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            IDENT "x"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "x"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "y"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "y"
          WHITESPACE "\n\t\t"
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          WHITESPACE "\n\t\t\t"
          NAME
            IDENT "y"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
          WHITESPACE " "
          JSON_FORMAT_CLAUSE
            FORMAT_KW "FORMAT"
            WHITESPACE " "
            JSON_KW "JSON"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          COMMA ","
          WHITESPACE "\n\t\t\t"
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'strict $[*] ? (@ == $y)'"
          WHITESPACE "\n\t\t\t"
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          WHITESPACE "\n\t\t\t\t"
          NAME
            IDENT "z"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE "\n\t\t\t"
          R_PAREN ")"
          WHITESPACE "\n\t\t"
          R_PAREN ")"
          WHITESPACE "\n\t"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "jt"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- JSON_TABLE: Test backward parsing with nested paths"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "jsonb_table_view_nested"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE "\n\t"
        CALL_EXPR
          NAME_REF
            JSON_TABLE_KW "JSON_TABLE"
          ARG_LIST
            L_PAREN "("
            WHITESPACE "\n\t\t"
            CAST_EXPR
              NAME_REF
                IDENT "jsonb"
              WHITESPACE " "
              LITERAL
                STRING "'null'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'lax $[*]'"
            WHITESPACE " "
            PASSING_KW "PASSING"
            WHITESPACE " "
            BIN_EXPR
              LITERAL
                INT_NUMBER "1"
              WHITESPACE " "
              PLUS "+"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "a"
            COMMA ","
            WHITESPACE " "
            CAST_EXPR
              NAME_REF
                JSON_KW "json"
              WHITESPACE " "
              LITERAL
                STRING "'\"foo\"'"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "\"b c\""
            WHITESPACE "\n\t\t"
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            WHITESPACE "\n\t\t\t"
            NAME
              IDENT "id"
            WHITESPACE " "
            FOR_KW "FOR"
            WHITESPACE " "
            ORDINALITY_KW "ORDINALITY"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NESTED_KW "NESTED"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$[1]'"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "p1"
            WHITESPACE " "
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            WHITESPACE "\n\t\t\t\t"
            NAME
              IDENT "a1"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
            COMMA ","
            WHITESPACE "\n\t\t\t\t"
            NESTED_KW "NESTED"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$[*]'"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "\"p1 1\""
            WHITESPACE " "
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            WHITESPACE "\n\t\t\t\t\t"
            NAME
              IDENT "a11"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
            WHITESPACE "\n\t\t\t\t"
            R_PAREN ")"
            COMMA ","
            WHITESPACE "\n\t\t\t\t"
            NAME
              IDENT "b1"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
            WHITESPACE "\n\t\t\t"
            R_PAREN ")"
            COMMA ","
            WHITESPACE "\n\t\t\t"
            NESTED_KW "NESTED"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$[2]'"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "p2"
            WHITESPACE " "
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            WHITESPACE "\n\t\t\t\t"
            NESTED_KW "NESTED"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$[*]'"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "\"p2:1\""
            WHITESPACE " "
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            WHITESPACE "\n\t\t\t\t\t"
            NAME
              IDENT "a21"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
            WHITESPACE "\n\t\t\t\t"
            R_PAREN ")"
            COMMA ","
            WHITESPACE "\n\t\t\t\t"
            NESTED_KW "NESTED"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$[*]'"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "p22"
            WHITESPACE " "
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            WHITESPACE "\n\t\t\t\t\t"
            NAME
              IDENT "a22"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
            WHITESPACE "\n\t\t\t\t"
            R_PAREN ")"
            WHITESPACE "\n\t\t\t"
            R_PAREN ")"
            WHITESPACE "\n\t\t"
            R_PAREN ")"
            WHITESPACE "\n\t"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "jsonb_table_view_nested"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "s"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "js"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "jsonb"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "s"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE "\n\t"
      L_PAREN "("
      LITERAL
        STRING "'{\"a\":{\"za\":[{\"z1\": [11,2222]},{\"z21\": [22, 234,2345]},{\"z22\": [32, 204,145]}]},\"c\": 3}'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n\t"
      L_PAREN "("
      LITERAL
        STRING "'{\"a\":{\"za\":[{\"z1\": [21,4222]},{\"z21\": [32, 134,1345]}]},\"c\": 10}'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- error"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "sub"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "s"
      COMMA ","
      WHITESPACE "\n\t"
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "js"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          PASSING_KW "PASSING"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "32"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "x"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "13"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "y"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          WHITESPACE "\n\t\t"
          NAME
            IDENT "xx"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "path"
          WHITESPACE " "
          LITERAL
            STRING "'$.c'"
          COMMA ","
          WHITESPACE "\n\t\t"
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a.za[1]'"
          WHITESPACE " "
          COLUMNS_KW "columns"
          WHITESPACE " "
          L_PAREN "("
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.z21[*]'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "z21"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "path"
          WHITESPACE " "
          LITERAL
            STRING "'$?(@ >= $\"x\")'"
          WHITESPACE " "
          ERROR_KW "ERROR"
          WHITESPACE " "
          ON_KW "ON"
          WHITESPACE " "
          ERROR_KW "ERROR"
          R_PAREN ")"
          R_PAREN ")"
          WHITESPACE "\n\t"
          R_PAREN ")"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "sub"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Parent columns xx1, xx appear before NESTED ones"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "sub"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "s"
      COMMA ","
      WHITESPACE "\n\t"
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "23"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "13"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "13"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "y"
      COMMA ","
      WHITESPACE "\n\t"
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "js"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "c1"
          WHITESPACE " "
          PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            IDENT "x"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "x"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "y"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "y"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          WHITESPACE "\n\t\t"
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a.za[2]'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          WHITESPACE "\n\t\t\t"
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.z22[*]'"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "z22"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "c"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          R_PAREN ")"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n\t\t\t"
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a.za[1]'"
          WHITESPACE " "
          COLUMNS_KW "columns"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "d"
          WHITESPACE " "
          ARRAY_TYPE
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
            L_BRACK "["
            R_BRACK "]"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.z21'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n\t\t\t"
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a.za[0]'"
          WHITESPACE " "
          COLUMNS_KW "columns"
          WHITESPACE " "
          L_PAREN "("
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.z1[*]'"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "z1"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE "  "
          LITERAL
            STRING "'$'"
          R_PAREN ")"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n\t\t\t"
          NAME
            IDENT "xx1"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.c'"
          COMMA ","
          WHITESPACE "\n\t\t\t"
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a.za[1]'"
          WHITESPACE "  "
          COLUMNS_KW "columns"
          WHITESPACE " "
          L_PAREN "("
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.z21[*]'"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "z21"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "b"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          R_PAREN ")"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n\t\t\t"
          NAME
            IDENT "xx"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.c'"
          WHITESPACE "\n\t"
          R_PAREN ")"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "sub"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test applying PASSING variables at different nesting levels"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "sub"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "s"
      COMMA ","
      WHITESPACE "\n\t"
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "23"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "13"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "13"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "y"
      COMMA ","
      WHITESPACE "\n\t"
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "js"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "c1"
          WHITESPACE " "
          PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            IDENT "x"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "x"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "y"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "y"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          WHITESPACE "\n\t\t"
          NAME
            IDENT "xx1"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.c'"
          COMMA ","
          WHITESPACE "\n\t\t"
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a.za[0].z1[*]'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$ ?(@ >= ($\"x\" -2))'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          R_PAREN ")"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n\t\t"
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a.za[0]'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.z1[*] ? (@ >= ($\"x\" -2))'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "b"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          R_PAREN ")"
          R_PAREN ")"
          WHITESPACE "\n\t"
          R_PAREN ")"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "sub"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test applying PASSING variable to paths all the levels"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "sub"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "s"
      COMMA ","
      WHITESPACE "\n\t"
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "23"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
      COMMA ","
      WHITESPACE "\n\t"
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "13"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "13"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "y"
      COMMA ","
      WHITESPACE "\n\t"
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "js"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "c1"
          WHITESPACE " "
          PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            IDENT "x"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "x"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "y"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "y"
          WHITESPACE "\n\t"
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          WHITESPACE "\n\t\t"
          NAME
            IDENT "xx1"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.c'"
          COMMA ","
          WHITESPACE "\n\t\t"
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a.za[1]'"
          WHITESPACE "\n\t\t\t"
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.z21[*]'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "b"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          R_PAREN ")"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n\t\t"
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a.za[1] ? (@.z21[*] >= ($\"x\"-1))'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE "\n\t\t\t"
          L_PAREN "("
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.z21[*] ? (@ >= ($\"y\" + 3))'"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "z22"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$ ? (@ >= ($\"y\" + 12))'"
          R_PAREN ")"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n\t\t"
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a.za[1]'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE "\n\t\t\t"
          L_PAREN "("
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.z21[*] ? (@ >= ($\"y\" +121))'"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "z21"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "c"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$ ? (@ > ($\"x\" +111))'"
          R_PAREN ")"
          R_PAREN ")"
          WHITESPACE "\n\t"
          R_PAREN ")"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "sub"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "----- test on empty behavior"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "sub"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "s"
      COMMA ","
      WHITESPACE "\n\t"
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          L_PAREN "("
          LITERAL
            INT_NUMBER "23"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
      COMMA ","
      WHITESPACE "\n\t"
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "13"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "13"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "y"
      COMMA ","
      WHITESPACE "\n\t"
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "js"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "c1"
          WHITESPACE " "
          PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            IDENT "x"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "x"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "y"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "y"
          WHITESPACE "\n\t"
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          WHITESPACE "\n\t\t"
          NAME
            IDENT "xx1"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.c'"
          COMMA ","
          WHITESPACE "\n\t\t"
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a.za[2]'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.z22[*]'"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "z22"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "c"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          R_PAREN ")"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n\t\t"
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a.za[1]'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "d"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  JSON_KW "json"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$ ? (@.z21[*] == ($\"x\" -1))'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n\t\t"
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a.za[0]'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.z1[*] ? (@ >= ($\"x\" -2))'"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "z1"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          R_PAREN ")"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n\t\t"
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.a.za[1]'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE "\n\t\t\t"
          L_PAREN "("
          NESTED_KW "NESTED"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$.z21[*] ? (@ >= ($\"y\" +121))'"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "z21"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "b"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          PATH_KW "PATH"
          WHITESPACE " "
          LITERAL
            STRING "'$ ? (@ > ($\"x\" +111))'"
          WHITESPACE " "
          DEFAULT_KW "DEFAULT"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          WHITESPACE " "
          ON_KW "ON"
          WHITESPACE " "
          EMPTY_KW "EMPTY"
          R_PAREN ")"
          R_PAREN ")"
          WHITESPACE "\n\t"
          R_PAREN ")"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "sub"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "OR"
      WHITESPACE " "
      REPLACE_KW "REPLACE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "jsonb_table_view7"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            FIELD_EXPR
              NAME_REF
                IDENT "sub"
              DOT "."
              STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "s"
        COMMA ","
        WHITESPACE "\n\t"
        PAREN_EXPR
          L_PAREN "("
          SELECT
            VALUES_KW "values"
            L_PAREN "("
            LITERAL
              INT_NUMBER "23"
            R_PAREN ")"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "x"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "x"
            R_PAREN ")"
        COMMA ","
        WHITESPACE "\n\t"
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "13"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "13"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "y"
        COMMA ","
        WHITESPACE "\n\t"
        CALL_EXPR
          NAME_REF
            JSON_TABLE_KW "JSON_TABLE"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "js"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "c1"
            WHITESPACE " "
            PASSING_KW "PASSING"
            WHITESPACE " "
            NAME_REF
              IDENT "x"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "x"
            COMMA ","
            WHITESPACE " "
            NAME_REF
              IDENT "y"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "y"
            WHITESPACE "\n\t"
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            WHITESPACE "\n\t\t"
            NAME
              IDENT "xx1"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$.c'"
            COMMA ","
            WHITESPACE "\n\t\t"
            NESTED_KW "NESTED"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$.a.za[2]'"
            WHITESPACE " "
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            NESTED_KW "NESTED"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$.z22[*]'"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "z22"
            WHITESPACE " "
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            NAME
              IDENT "c"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            WHITESPACE " "
            WITHOUT_KW "WITHOUT"
            WHITESPACE " "
            WRAPPER_KW "WRAPPER"
            WHITESPACE " "
            OMIT_KW "OMIT"
            WHITESPACE " "
            QUOTES_KW "QUOTES"
            R_PAREN ")"
            R_PAREN ")"
            COMMA ","
            WHITESPACE "\n\t\t"
            NESTED_KW "NESTED"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$.a.za[1]'"
            WHITESPACE " "
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            NAME
              IDENT "d"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    JSON_KW "json"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$ ? (@.z21[*] == ($\"x\" -1))'"
            WHITESPACE " "
            WITH_KW "WITH"
            WHITESPACE " "
            WRAPPER_KW "WRAPPER"
            R_PAREN ")"
            COMMA ","
            WHITESPACE "\n\t\t"
            NESTED_KW "NESTED"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$.a.za[0]'"
            WHITESPACE " "
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            NESTED_KW "NESTED"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$.z1[*] ? (@ >= ($\"x\" -2))'"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "z1"
            WHITESPACE " "
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            NAME
              IDENT "a"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            WHITESPACE " "
            KEEP_KW "KEEP"
            WHITESPACE " "
            QUOTES_KW "QUOTES"
            R_PAREN ")"
            R_PAREN ")"
            COMMA ","
            WHITESPACE "\n\t\t"
            NESTED_KW "NESTED"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$.a.za[1]'"
            WHITESPACE " "
            COLUMNS_KW "COLUMNS"
            WHITESPACE "\n\t\t\t"
            L_PAREN "("
            NESTED_KW "NESTED"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$.z21[*] ? (@ >= ($\"y\" +121))'"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "z21"
            WHITESPACE " "
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            NAME
              IDENT "b"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$ ? (@ > ($\"x\" +111))'"
            WHITESPACE " "
            DEFAULT_KW "DEFAULT"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
            WHITESPACE " "
            ON_KW "ON"
            WHITESPACE " "
            EMPTY_KW "EMPTY"
            R_PAREN ")"
            R_PAREN ")"
            WHITESPACE "\n\t"
            R_PAREN ")"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "sub"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "jsonb_table_view7"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "s"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Prevent ON EMPTY specification on EXISTS columns"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'1'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          EXISTS_KW "exists"
          WHITESPACE " "
          EMPTY_KW "empty"
      WHITESPACE " "
      ALIAS
        NAME
          OBJECT_KW "object"
  WHITESPACE " "
  ERROR
    ON_KW "on"
  WHITESPACE " "
  ERROR
    EMPTY_KW "empty"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test ON ERROR / EMPTY value validity for the function and column types;"
  WHITESPACE "\n"
  COMMENT "-- all fail"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'1'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          R_PAREN ")"
  WHITESPACE " "
  ERROR
    NULL_KW "NULL"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  WHITESPACE " "
  ERROR
    ERROR_KW "ERROR"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'1'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
  WHITESPACE " "
  ERROR
    TRUE_KW "true"
  WHITESPACE " "
  ERROR
    ON_KW "on"
  WHITESPACE " "
  ERROR
    EMPTY_KW "empty"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'1'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          OMIT_KW "omit"
          WHITESPACE " "
          QUOTES_KW "quotes"
  WHITESPACE " "
  ERROR
    TRUE_KW "true"
  WHITESPACE " "
  ERROR
    ON_KW "on"
  WHITESPACE " "
  ERROR
    ERROR_KW "error"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          JSON_TABLE_KW "JSON_TABLE"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            NAME_REF
              IDENT "jsonb"
            WHITESPACE " "
            LITERAL
              STRING "'1'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'$'"
          WHITESPACE " "
          COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          L_PAREN "("
          NAME
            IDENT "a"
          WHITESPACE " "
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
          WHITESPACE " "
          EXISTS_KW "exists"
          WHITESPACE " "
          EMPTY_KW "empty"
      WHITESPACE " "
      ALIAS
        NAME
          OBJECT_KW "object"
  WHITESPACE " "
  ERROR
    ON_KW "on"
  WHITESPACE " "
  ERROR
    ERROR_KW "error"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test JSON_TABLE() column deparsing -- don't emit default ON ERROR / EMPTY"
  WHITESPACE "\n"
  COMMENT "-- behavior"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "json_table_view8"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            JSON_TABLE_KW "JSON_TABLE"
          ARG_LIST
            L_PAREN "("
            LITERAL
              STRING "'\"a\"'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            WHITESPACE " "
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            NAME
              IDENT "a"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            R_PAREN ")"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "json_table_view9"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            JSON_TABLE_KW "JSON_TABLE"
          ARG_LIST
            L_PAREN "("
            LITERAL
              STRING "'\"a\"'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            WHITESPACE " "
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            NAME
              IDENT "a"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            R_PAREN ")"
            WHITESPACE " "
            ERROR_KW "ERROR"
            WHITESPACE " "
            ON_KW "ON"
            WHITESPACE " "
            ERROR_KW "ERROR"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "json_table_view8"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "json_table_view9"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test JSON_TABLE() deparsing -- don't emit default ON ERROR behavior"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "json_table_view8"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            JSON_TABLE_KW "JSON_TABLE"
          ARG_LIST
            L_PAREN "("
            LITERAL
              STRING "'\"a\"'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            WHITESPACE " "
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            NAME
              IDENT "a"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            R_PAREN ")"
            WHITESPACE " "
            EMPTY_KW "EMPTY"
            WHITESPACE " "
            ON_KW "ON"
            WHITESPACE " "
            ERROR_KW "ERROR"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "json_table_view9"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            JSON_TABLE_KW "JSON_TABLE"
          ARG_LIST
            L_PAREN "("
            LITERAL
              STRING "'\"a\"'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            WHITESPACE " "
            COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            L_PAREN "("
            NAME
              IDENT "a"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
            WHITESPACE " "
            PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'$'"
            R_PAREN ")"
            WHITESPACE " "
            EMPTY_KW "EMPTY"
            WHITESPACE " "
            ARRAY_KW "ARRAY"
            WHITESPACE " "
            ON_KW "ON"
            WHITESPACE " "
            ERROR_KW "ERROR"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "json_table_view8"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "json_table_view9"
  SEMICOLON ";"
  WHITESPACE "\n"
---
ERROR@219: expected R_PAREN
ERROR@219: expected SEMICOLON
ERROR@220: expected command, found DEFAULT_KW
ERROR@228: expected command, found INT_NUMBER
ERROR@230: expected command, found ON_KW
ERROR@233: expected command, found ERROR_KW
ERROR@238: expected command, found R_PAREN
ERROR@311: expected R_PAREN
ERROR@311: expected SEMICOLON
ERROR@312: expected command, found NULL_KW
ERROR@317: expected command, found ON_KW
ERROR@320: expected command, found ERROR_KW
ERROR@325: expected command, found R_PAREN
ERROR@702: expected name
ERROR@702: expected type name
ERROR@1514: expected type name
ERROR@1518: expected SELECT, TABLE, VALUES, or EXECUTE
ERROR@1518: expected SEMICOLON
ERROR@1520: expected command, found L_PAREN
ERROR@1648: expected SEMICOLON
ERROR@1650: expected command, found R_PAREN
ERROR@2684: expected ON_KW
ERROR@2684: expected ERROR_KW
ERROR@2684: expected R_PAREN
ERROR@2684: expected R_PAREN
ERROR@2718: expected SEMICOLON
ERROR@2719: expected command, found EXISTS_KW
ERROR@2726: expected command, found PATH_KW
ERROR@2731: expected command, found STRING
ERROR@2746: expected command, found FALSE_KW
ERROR@2752: expected command, found ON_KW
ERROR@2755: expected command, found ERROR_KW
ERROR@2763: expected command, found R_PAREN
ERROR@2766: expected command, found R_PAREN
ERROR@2768: expected command, found IDENT
ERROR@2772: expected command, found ON_KW
ERROR@2775: expected command, found TRUE_KW
ERROR@5161: expected ON_KW
ERROR@5161: expected ERROR_KW
ERROR@5161: expected R_PAREN
ERROR@5161: expected R_PAREN
ERROR@5161: expected SEMICOLON
ERROR@5162: expected command, found TRUE_KW
ERROR@5167: expected command, found ON_KW
ERROR@5170: expected command, found ERROR_KW
ERROR@5175: expected command, found COMMA
ERROR@5180: expected command, found IDENT
ERROR@5188: expected command, found TEXT_KW
ERROR@5193: expected command, found EXISTS_KW
ERROR@5200: expected command, found PATH_KW
ERROR@5205: expected command, found STRING
ERROR@5220: expected command, found UNKNOWN_KW
ERROR@5228: expected command, found ON_KW
ERROR@5231: expected command, found ERROR_KW
ERROR@5236: expected command, found R_PAREN
ERROR@5237: expected command, found R_PAREN
ERROR@5567: expected R_PAREN
ERROR@5568: expected command, found OFF_KW
ERROR@5571: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@5571: expected SEMICOLON
ERROR@5571: expected command, found COMMA
ERROR@5573: expected command, found VERBOSE_KW
ERROR@5580: expected command, found R_PAREN
ERROR@5629: expected R_PAREN
ERROR@5630: expected command, found OFF_KW
ERROR@5633: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@5633: expected SEMICOLON
ERROR@5633: expected command, found COMMA
ERROR@5635: expected command, found VERBOSE_KW
ERROR@5642: expected command, found R_PAREN
ERROR@5691: expected R_PAREN
ERROR@5692: expected command, found OFF_KW
ERROR@5695: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@5695: expected SEMICOLON
ERROR@5695: expected command, found COMMA
ERROR@5697: expected command, found VERBOSE_KW
ERROR@5704: expected command, found R_PAREN
ERROR@5753: expected R_PAREN
ERROR@5754: expected command, found OFF_KW
ERROR@5757: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@5757: expected SEMICOLON
ERROR@5757: expected command, found COMMA
ERROR@5759: expected command, found VERBOSE_KW
ERROR@5766: expected command, found R_PAREN
ERROR@5815: expected R_PAREN
ERROR@5816: expected command, found OFF_KW
ERROR@5819: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@5819: expected SEMICOLON
ERROR@5819: expected command, found COMMA
ERROR@5821: expected command, found VERBOSE_KW
ERROR@5828: expected command, found R_PAREN
ERROR@5905: expected R_PAREN
ERROR@5906: expected command, found OFF_KW
ERROR@5909: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@5909: expected SEMICOLON
ERROR@5909: expected command, found COMMA
ERROR@5911: expected command, found VERBOSE_KW
ERROR@5918: expected command, found R_PAREN
ERROR@6133: expected R_PAREN
ERROR@6134: expected command, found OFF_KW
ERROR@6137: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@6137: expected SEMICOLON
ERROR@6137: expected command, found COMMA
ERROR@6139: expected command, found FORMAT_KW
ERROR@6146: expected command, found JSON_KW
ERROR@6150: expected command, found COMMA
ERROR@6152: expected command, found VERBOSE_KW
ERROR@6159: expected command, found R_PAREN
ERROR@7739: expected R_PAREN
ERROR@7739: expected R_PAREN
ERROR@7739: expected SEMICOLON
ERROR@7740: expected command, found DEFAULT_KW
ERROR@7748: expected command, found INT_NUMBER
ERROR@7750: expected command, found ON_KW
ERROR@7753: expected command, found ERROR_KW
ERROR@7758: expected command, found R_PAREN
ERROR@7759: expected command, found R_PAREN
ERROR@7761: expected command, found IDENT
ERROR@7858: expected R_PAREN
ERROR@7858: expected R_PAREN
ERROR@7858: expected SEMICOLON
ERROR@7859: expected command, found DEFAULT_KW
ERROR@7867: expected command, found INT_NUMBER
ERROR@7869: expected command, found ON_KW
ERROR@7872: expected command, found ERROR_KW
ERROR@7877: expected command, found R_PAREN
ERROR@7878: expected command, found R_PAREN
ERROR@7880: expected command, found IDENT
ERROR@7974: expected R_PAREN
ERROR@7974: expected R_PAREN
ERROR@7974: expected SEMICOLON
ERROR@7975: expected command, found DEFAULT_KW
ERROR@7983: expected command, found INT_NUMBER
ERROR@7985: expected command, found ON_KW
ERROR@7988: expected command, found ERROR_KW
ERROR@7993: expected command, found R_PAREN
ERROR@7994: expected command, found R_PAREN
ERROR@7996: expected command, found IDENT
ERROR@8109: expected ON_KW
ERROR@8115: expected R_PAREN
ERROR@8115: expected R_PAREN
ERROR@8115: expected SEMICOLON
ERROR@8116: expected command, found ON_KW
ERROR@8119: expected command, found ERROR_KW
ERROR@8124: expected command, found R_PAREN
ERROR@8125: expected command, found R_PAREN
ERROR@8225: expected ON_KW
ERROR@8231: expected R_PAREN
ERROR@8231: expected R_PAREN
ERROR@8231: expected SEMICOLON
ERROR@8232: expected command, found ON_KW
ERROR@8235: expected command, found ERROR_KW
ERROR@8240: expected command, found R_PAREN
ERROR@8241: expected command, found R_PAREN
ERROR@8715: expected ON_KW
ERROR@8721: expected R_PAREN
ERROR@8721: expected R_PAREN
ERROR@8721: expected SEMICOLON
ERROR@8722: expected command, found ON_KW
ERROR@8725: expected command, found ERROR_KW
ERROR@8730: expected command, found R_PAREN
ERROR@8731: expected command, found R_PAREN
ERROR@8812: expected ON_KW
ERROR@8818: expected R_PAREN
ERROR@8818: expected R_PAREN
ERROR@8818: expected SEMICOLON
ERROR@8819: expected command, found ON_KW
ERROR@8822: expected command, found ERROR_KW
ERROR@8827: expected command, found R_PAREN
ERROR@8828: expected command, found R_PAREN
ERROR@9376: expected ON_KW
ERROR@9382: expected R_PAREN
ERROR@9382: expected R_PAREN
ERROR@9382: expected SEMICOLON
ERROR@9383: expected command, found ON_KW
ERROR@9386: expected command, found ERROR_KW
ERROR@9391: expected command, found R_PAREN
ERROR@9392: expected command, found R_PAREN
ERROR@9486: expected ON_KW
ERROR@9486: expected ERROR_KW
ERROR@9486: expected R_PAREN
ERROR@9486: expected R_PAREN
ERROR@9486: expected SEMICOLON
ERROR@9487: expected command, found FALSE_KW
ERROR@9493: expected command, found ON_KW
ERROR@9496: expected command, found ERROR_KW
ERROR@9501: expected command, found R_PAREN
ERROR@9502: expected command, found R_PAREN
ERROR@9596: expected ON_KW
ERROR@9596: expected ERROR_KW
ERROR@9596: expected R_PAREN
ERROR@9596: expected R_PAREN
ERROR@9596: expected SEMICOLON
ERROR@9597: expected command, found TRUE_KW
ERROR@9602: expected command, found ON_KW
ERROR@9605: expected command, found ERROR_KW
ERROR@9610: expected command, found R_PAREN
ERROR@9611: expected command, found R_PAREN
ERROR@17135: expected R_PAREN
ERROR@17141: expected ON_KW
ERROR@17141: expected ERROR_KW
ERROR@17141: expected R_PAREN
ERROR@17148: expected SEMICOLON
ERROR@17149: expected command, found ON_KW
ERROR@17152: expected command, found EMPTY_KW
ERROR@17157: expected command, found R_PAREN
ERROR@17158: expected command, found R_PAREN
ERROR@17304: expected R_PAREN
ERROR@17304: expected SEMICOLON
ERROR@17305: expected command, found NULL_KW
ERROR@17310: expected command, found ON_KW
ERROR@17313: expected command, found ERROR_KW
ERROR@17318: expected command, found R_PAREN
ERROR@17375: expected R_PAREN
ERROR@17375: expected R_PAREN
ERROR@17375: expected SEMICOLON
ERROR@17376: expected command, found TRUE_KW
ERROR@17381: expected command, found ON_KW
ERROR@17384: expected command, found EMPTY_KW
ERROR@17389: expected command, found R_PAREN
ERROR@17390: expected command, found R_PAREN
ERROR@17459: expected R_PAREN
ERROR@17459: expected R_PAREN
ERROR@17459: expected SEMICOLON
ERROR@17460: expected command, found TRUE_KW
ERROR@17465: expected command, found ON_KW
ERROR@17468: expected command, found ERROR_KW
ERROR@17473: expected command, found R_PAREN
ERROR@17474: expected command, found R_PAREN
ERROR@17538: expected R_PAREN
ERROR@17544: expected ON_KW
ERROR@17544: expected ERROR_KW
ERROR@17544: expected R_PAREN
ERROR@17551: expected SEMICOLON
ERROR@17552: expected command, found ON_KW
ERROR@17555: expected command, found ERROR_KW
ERROR@17560: expected command, found R_PAREN
ERROR@17561: expected command, found R_PAREN

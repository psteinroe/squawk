---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/copy.sql
---
SOURCE_FILE
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- COPY"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  COMMENT "-- directory paths are passed to us in environment variables"
  WHITESPACE "\n\n"
  COMMENT "--- test copying in CSV mode with various styles"
  WHITESPACE "\n"
  COMMENT "--- of embedded line ending characters"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copytest"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "style"
        WHITESPACE "\t"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "test"
        WHITESPACE " \t"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "filler"
        WHITESPACE "\t"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "copytest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        STRING "'DOS'"
      COMMA ","
      LITERAL
        ESC_STRING "E'abc\\r\\ndef'"
      COMMA ","
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "copytest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        STRING "'Unix'"
      COMMA ","
      LITERAL
        ESC_STRING "E'abc\\ndef'"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "copytest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        STRING "'Mac'"
      COMMA ","
      LITERAL
        ESC_STRING "E'abc\\rdef'"
      COMMA ","
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "copytest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        ESC_STRING "E'esc\\\\ape'"
      COMMA ","
      LITERAL
        ESC_STRING "E'a\\\\r\\\\\\r\\\\\\n\\\\nb'"
      COMMA ","
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copytest"
    WHITESPACE " "
    TO_KW "to"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'filename'"
  WHITESPACE " "
  ERROR
    CSV_KW "csv"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copytest2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      LIKE_CLAUSE
        LIKE_KW "like"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "copytest"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copytest2"
    WHITESPACE " "
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'filename'"
  WHITESPACE " "
  ERROR
    CSV_KW "csv"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMPOUND_SELECT
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "copytest"
    WHITESPACE " "
    EXCEPT_KW "except"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "copytest2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  TRUNCATE_STMT
    TRUNCATE_KW "truncate"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "copytest2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--- same test but with an escape char different from quote char"
  WHITESPACE "\n\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copytest"
    WHITESPACE " "
    TO_KW "to"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'filename'"
  WHITESPACE " "
  ERROR
    CSV_KW "csv"
  WHITESPACE " "
  ERROR
    QUOTE_KW "quote"
  WHITESPACE " "
  ERROR
    STRING "''''"
  WHITESPACE " "
  ERROR
    ESCAPE_KW "escape"
  WHITESPACE " "
  ERROR
    ESC_STRING "E'\\\\'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copytest2"
    WHITESPACE " "
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'filename'"
  WHITESPACE " "
  ERROR
    CSV_KW "csv"
  WHITESPACE " "
  ERROR
    QUOTE_KW "quote"
  WHITESPACE " "
  ERROR
    STRING "''''"
  WHITESPACE " "
  ERROR
    ESCAPE_KW "escape"
  WHITESPACE " "
  ERROR
    ESC_STRING "E'\\\\'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMPOUND_SELECT
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "copytest"
    WHITESPACE " "
    EXCEPT_KW "except"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "copytest2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--- test unquoted \\. as data inside CSV"
  WHITESPACE "\n"
  COMMENT "-- do not use copy out to export the data, as it would quote \\."
  WHITESPACE "\n"
  COMMENT "-- get the data back in with copy"
  WHITESPACE "\n"
  TRUNCATE_STMT
    TRUNCATE_KW "truncate"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "copytest2"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copytest2"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'filename'"
  WHITESPACE " "
  ERROR
    CSV_KW "csv"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "test"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "copytest2"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "test"
        WHITESPACE " "
        COLLATE_KW "collate"
        WHITESPACE " "
        NAME_REF
          IDENT "\"C\""
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- in text mode, \\. must be alone on its line"
  WHITESPACE "\n"
  TRUNCATE_STMT
    TRUNCATE_KW "truncate"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "copytest2"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copytest2"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    IDENT "line1"
  WHITESPACE "\n"
  ERROR
    IDENT "line2"
  WHITESPACE "\n"
  ERROR
    IDENT "foo"
  ERROR
    ERROR "\\"
  ERROR
    DOT "."
  WHITESPACE "\n"
  ERROR
    IDENT "line3"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copytest2"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    IDENT "line4"
  WHITESPACE "\n"
  ERROR
    IDENT "line5"
  WHITESPACE "\n"
  ERROR
    IDENT "line6"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "test"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "copytest2"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- test header line feature"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copytest3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "c1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "\"col with , comma\""
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "\"col with \""
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "\" quote\""
  WHITESPACE "  "
  ERROR
    INT_KW "int"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copytest3"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
  WHITESPACE " "
  ERROR
    CSV_KW "csv"
  WHITESPACE " "
  ERROR
    HEADER_KW "header"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    IDENT "this"
  WHITESPACE " "
  ERROR
    IS_KW "is"
  WHITESPACE " "
  ERROR
    IDENT "just"
  WHITESPACE " "
  ERROR
    IDENT "a"
  WHITESPACE " "
  ERROR
    IDENT "line"
  WHITESPACE " "
  ERROR
    FULL_KW "full"
  WHITESPACE " "
  ERROR
    OF_KW "of"
  WHITESPACE " "
  ERROR
    IDENT "junk"
  WHITESPACE " "
  ERROR
    IDENT "that"
  WHITESPACE " "
  ERROR
    IDENT "would"
  WHITESPACE " "
  ERROR
    ERROR_KW "error"
  WHITESPACE " "
  ERROR
    OUT_KW "out"
  WHITESPACE " "
  ERROR
    IF_KW "if"
  WHITESPACE " "
  ERROR
    IDENT "parsed"
  WHITESPACE "\n"
  ERROR
    INT_NUMBER "1"
  ERROR
    COMMA ","
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "1"
  WHITESPACE "\n"
  ERROR
    INT_NUMBER "2"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "2"
  WHITESPACE "\n\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copytest3"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    STDOUT_KW "stdout"
  WHITESPACE " "
  ERROR
    CSV_KW "csv"
  WHITESPACE " "
  ERROR
    HEADER_KW "header"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copytest4"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "c1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "\"colname with tab: \t\""
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copytest4"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
    WHITESPACE " "
    L_PAREN "("
    NAME
      HEADER_KW "header"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    IDENT "this"
  WHITESPACE " "
  ERROR
    IS_KW "is"
  WHITESPACE " "
  ERROR
    IDENT "just"
  WHITESPACE " "
  ERROR
    IDENT "a"
  WHITESPACE " "
  ERROR
    IDENT "line"
  WHITESPACE " "
  ERROR
    FULL_KW "full"
  WHITESPACE " "
  ERROR
    OF_KW "of"
  WHITESPACE " "
  ERROR
    IDENT "junk"
  WHITESPACE " "
  ERROR
    IDENT "that"
  WHITESPACE " "
  ERROR
    IDENT "would"
  WHITESPACE " "
  ERROR
    ERROR_KW "error"
  WHITESPACE " "
  ERROR
    OUT_KW "out"
  WHITESPACE " "
  ERROR
    IF_KW "if"
  WHITESPACE " "
  ERROR
    IDENT "parsed"
  WHITESPACE "\n"
  ERROR
    INT_NUMBER "1"
  WHITESPACE "\t"
  ERROR
    IDENT "a"
  WHITESPACE "\n"
  ERROR
    INT_NUMBER "2"
  WHITESPACE "\t"
  ERROR
    IDENT "b"
  WHITESPACE "\n\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copytest4"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    STDOUT_KW "stdout"
    WHITESPACE " "
    L_PAREN "("
    NAME
      HEADER_KW "header"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- test copy from with a partitioned table"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_copytest"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_copytest_a1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_copytest_a2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_copytest"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "attach"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "parted_copytest_a1"
      WHITESPACE " "
      FOR_KW "for"
      WHITESPACE " "
      VALUES_KW "values"
      WHITESPACE " "
      IN_KW "in"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_copytest"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "attach"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "parted_copytest_a2"
      WHITESPACE " "
      FOR_KW "for"
      WHITESPACE " "
      VALUES_KW "values"
      WHITESPACE " "
      IN_KW "in"
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- We must insert enough rows to trigger multi-inserts.  These are only"
  WHITESPACE "\n"
  COMMENT "-- enabled adaptively when there are few enough partition changes."
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_copytest"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "x"
          COMMA ","
          TARGET
            LITERAL
              INT_NUMBER "1"
          COMMA ","
          TARGET
            LITERAL
              STRING "'One'"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "1000"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_copytest"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "x"
          COMMA ","
          TARGET
            LITERAL
              INT_NUMBER "2"
          COMMA ","
          TARGET
            LITERAL
              STRING "'Two'"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1001"
            COMMA ","
            LITERAL
              INT_NUMBER "1010"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_copytest"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "x"
          COMMA ","
          TARGET
            LITERAL
              INT_NUMBER "1"
          COMMA ","
          TARGET
            LITERAL
              STRING "'One'"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1011"
            COMMA ","
            LITERAL
              INT_NUMBER "1020"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "parted_copytest"
      WHITESPACE " "
      ORDER_BY_CLAUSE
        ORDER_KW "order"
        WHITESPACE " "
        BY_KW "by"
        WHITESPACE " "
        NAME_REF
          IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'filename'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  TRUNCATE_STMT
    TRUNCATE_KW "truncate"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "parted_copytest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_copytest"
    WHITESPACE " "
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'filename'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure COPY FREEZE errors for partitioned tables."
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  TRUNCATE_STMT
    TRUNCATE_KW "truncate"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "parted_copytest"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_copytest"
    WHITESPACE " "
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'filename'"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    FREEZE_KW "freeze"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "rollback"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "tableoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "parted_copytest"
    WHITESPACE "\n"
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "tableoid"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      CAST_EXPR
        CAST_EXPR
          NAME_REF
            IDENT "tableoid"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NAME_KW "name"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  TRUNCATE_STMT
    TRUNCATE_KW "truncate"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "parted_copytest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- create before insert row trigger on parted_copytest_a2"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_ins_func"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TRIGGER_KW "trigger"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nbegin\n  return new;\nend;\n$$"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TRIGGER_KW "trigger"
    WHITESPACE " "
    NAME
      IDENT "part_ins_trig"
    WHITESPACE "\n\t"
    BEFORE_KW "before"
    WHITESPACE " "
    INSERT_KW "insert"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_copytest_a2"
    WHITESPACE "\n\t"
    FOR_KW "for"
    WHITESPACE " "
    EACH_KW "each"
    WHITESPACE " "
    ROW_KW "row"
    WHITESPACE "\n\t"
    EXECUTE_KW "execute"
    WHITESPACE " "
    PROCEDURE_KW "procedure"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "part_ins_func"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_copytest"
    WHITESPACE " "
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'filename'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "tableoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "parted_copytest"
    WHITESPACE "\n"
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "tableoid"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      CAST_EXPR
        CAST_EXPR
          NAME_REF
            IDENT "tableoid"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NAME_KW "name"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  TRUNCATE_STMT
    TRUNCATE_KW "truncate"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "parted_copytest"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_copytest"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "b"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TRIGGER_STMT
    DROP_KW "drop"
    WHITESPACE " "
    TRIGGER_KW "trigger"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_ins_trig"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_copytest_a2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_copytest"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    INT_NUMBER "1"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "1"
  WHITESPACE "\t"
  ERROR
    IDENT "str1"
  WHITESPACE "\n"
  ERROR
    INT_NUMBER "2"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "2"
  WHITESPACE "\t"
  ERROR
    IDENT "str2"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure index entries were properly added during the copy."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "parted_copytest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "parted_copytest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_copytest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- Progress reporting for COPY"
    WHITESPACE "\n"
    COMMENT "--"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tab_progress_reporting"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          NAME_KW "name"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "age"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          LOCATION_KW "location"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "point"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "salary"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "manager"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NAME_KW "name"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Add a trigger to catch and print the contents of the catalog view"
  WHITESPACE "\n"
  COMMENT "-- pg_stat_progress_copy during data insertion.  This allows to test"
  WHITESPACE "\n"
  COMMENT "-- the validation of some progress reports for COPY FROM where the trigger"
  WHITESPACE "\n"
  COMMENT "-- would fire."
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "notice_after_tab_progress_reporting"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TRIGGER_KW "trigger"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$\ndeclare report record;\nbegin\n  -- The fields ignored here are the ones that may not remain\n  -- consistent across multiple runs.  The sizes reported may differ\n  -- across platforms, so just check if these are strictly positive.\n  with progress_data as (\n    select\n       relid::regclass::text as relname,\n       command,\n       type,\n       bytes_processed > 0 as has_bytes_processed,\n       bytes_total > 0 as has_bytes_total,\n       tuples_processed,\n       tuples_excluded,\n       tuples_skipped\n      from pg_stat_progress_copy\n      where pid = pg_backend_pid())\n  select into report (to_jsonb(r)) as value\n    from progress_data r;\n\n  raise info 'progress: %', report.value::text;\n  return new;\nend;\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TRIGGER_KW "trigger"
    WHITESPACE " "
    NAME
      IDENT "check_after_tab_progress_reporting"
    WHITESPACE "\n\t"
    AFTER_KW "after"
    WHITESPACE " "
    INSERT_KW "insert"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tab_progress_reporting"
    WHITESPACE "\n\t"
    FOR_KW "for"
    WHITESPACE " "
    EACH_KW "each"
    WHITESPACE " "
    STATEMENT_KW "statement"
    WHITESPACE "\n\t"
    EXECUTE_KW "execute"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "notice_after_tab_progress_reporting"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Generate COPY FROM report with PIPE."
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tab_progress_reporting"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    IDENT "sharon"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "25"
  WHITESPACE "\t"
  ERROR
    L_PAREN "("
  ERROR
    INT_NUMBER "15"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "12"
  ERROR
    R_PAREN ")"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "1000"
  WHITESPACE "\t"
  ERROR
    IDENT "sam"
  WHITESPACE "\n"
  ERROR
    IDENT "sam"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "30"
  WHITESPACE "\t"
  ERROR
    L_PAREN "("
  ERROR
    INT_NUMBER "10"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "5"
  ERROR
    R_PAREN ")"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "2000"
  WHITESPACE "\t"
  ERROR
    IDENT "bill"
  WHITESPACE "\n"
  ERROR
    IDENT "bill"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "20"
  WHITESPACE "\t"
  ERROR
    L_PAREN "("
  ERROR
    INT_NUMBER "11"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "10"
  ERROR
    R_PAREN ")"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "1000"
  WHITESPACE "\t"
  ERROR
    IDENT "sharon"
  WHITESPACE "\n\n"
  COMMENT "-- Generate COPY FROM report with FILE, with some excluded tuples."
  WHITESPACE "\n"
  TRUNCATE_STMT
    TRUNCATE_KW "truncate"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "tab_progress_reporting"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tab_progress_reporting"
    WHITESPACE " "
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'filename'"
  WHITESPACE "\n\t"
  ERROR
    WHERE_KW "where"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "salary"
  WHITESPACE " "
  ERROR
    L_ANGLE "<"
  WHITESPACE " "
  ERROR
    INT_NUMBER "2000"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Generate COPY FROM report with PIPE, with some skipped tuples."
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tab_progress_reporting"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
    L_PAREN "("
    NAME
      IDENT "on_error"
    WHITESPACE " "
    IDENT "ignore"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    IDENT "sharon"
  WHITESPACE "\t"
  ERROR
    IDENT "x"
  WHITESPACE "\t"
  ERROR
    L_PAREN "("
  ERROR
    INT_NUMBER "15"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "12"
  ERROR
    R_PAREN ")"
  WHITESPACE "\t"
  ERROR
    IDENT "x"
  WHITESPACE "\t"
  ERROR
    IDENT "sam"
  WHITESPACE "\n"
  ERROR
    IDENT "sharon"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "25"
  WHITESPACE "\t"
  ERROR
    L_PAREN "("
  ERROR
    INT_NUMBER "15"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "12"
  ERROR
    R_PAREN ")"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "1000"
  WHITESPACE "\t"
  ERROR
    IDENT "sam"
  WHITESPACE "\n"
  ERROR
    IDENT "sharon"
  WHITESPACE "\t"
  ERROR
    IDENT "y"
  WHITESPACE "\t"
  ERROR
    L_PAREN "("
  ERROR
    INT_NUMBER "15"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "12"
  ERROR
    R_PAREN ")"
  WHITESPACE "\t"
  ERROR
    IDENT "x"
  WHITESPACE "\t"
  ERROR
    IDENT "sam"
  WHITESPACE "\n\n"
  DROP_TRIGGER_STMT
    DROP_KW "drop"
    WHITESPACE " "
    TRIGGER_KW "trigger"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "check_after_tab_progress_reporting"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tab_progress_reporting"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "drop"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "notice_after_tab_progress_reporting"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tab_progress_reporting"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test header matching feature"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "header_copytest"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Make sure it works with dropped columns"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "header_copytest"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "header_copytest"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "header_copytest"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    STDOUT_KW "stdout"
    WHITESPACE " "
    WITH_KW "with"
    WHITESPACE " "
    L_PAREN "("
    NAME
      HEADER_KW "header"
    WHITESPACE " "
    MATCH_KW "match"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "header_copytest"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
    WHITESPACE " "
    WITH_KW "with"
    WHITESPACE " "
    L_PAREN "("
    NAME
      HEADER_KW "header"
    WHITESPACE " "
    IDENT "wrong_choice"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- works"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "header_copytest"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
    WHITESPACE " "
    WITH_KW "with"
    WHITESPACE " "
    L_PAREN "("
    NAME
      HEADER_KW "header"
    WHITESPACE " "
    MATCH_KW "match"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    IDENT "a"
  WHITESPACE "\t"
  ERROR
    IDENT "b"
  WHITESPACE "\t"
  ERROR
    IDENT "c"
  WHITESPACE "\n"
  ERROR
    INT_NUMBER "1"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "2"
  WHITESPACE "\t"
  ERROR
    IDENT "foo"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "header_copytest"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
      R_PAREN ")"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
    WHITESPACE " "
    WITH_KW "with"
    WHITESPACE " "
    L_PAREN "("
    NAME
      HEADER_KW "header"
    WHITESPACE " "
    MATCH_KW "match"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    IDENT "c"
  WHITESPACE "\t"
  ERROR
    IDENT "a"
  WHITESPACE "\t"
  ERROR
    IDENT "b"
  WHITESPACE "\n"
  ERROR
    IDENT "bar"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "3"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "4"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "header_copytest"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
    WHITESPACE " "
    WITH_KW "with"
    WHITESPACE " "
    L_PAREN "("
    NAME
      HEADER_KW "header"
    WHITESPACE " "
    MATCH_KW "match"
    COMMA ","
    WHITESPACE " "
    NAME
      FORMAT_KW "format"
    WHITESPACE " "
    CSV_KW "csv"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    IDENT "c"
  WHITESPACE "\n"
  ERROR
    INT_NUMBER "5"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "6"
  ERROR
    COMMA ","
  ERROR
    IDENT "baz"
  WHITESPACE "\n"
  COMMENT "-- errors"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "header_copytest"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "a"
      R_PAREN ")"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
    WHITESPACE " "
    WITH_KW "with"
    WHITESPACE " "
    L_PAREN "("
    NAME
      HEADER_KW "header"
    WHITESPACE " "
    MATCH_KW "match"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    IDENT "a"
  WHITESPACE "\t"
  ERROR
    IDENT "b"
  WHITESPACE "\t"
  ERROR
    IDENT "c"
  WHITESPACE "\n"
  ERROR
    INT_NUMBER "1"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "2"
  WHITESPACE "\t"
  ERROR
    IDENT "foo"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "header_copytest"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
    WHITESPACE " "
    WITH_KW "with"
    WHITESPACE " "
    L_PAREN "("
    NAME
      HEADER_KW "header"
    WHITESPACE " "
    MATCH_KW "match"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    IDENT "a"
  WHITESPACE "\t"
  ERROR
    IDENT "b"
  WHITESPACE "\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "N"
  WHITESPACE "\n"
  ERROR
    INT_NUMBER "1"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "2"
  WHITESPACE "\t"
  ERROR
    IDENT "foo"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "header_copytest"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
    WHITESPACE " "
    WITH_KW "with"
    WHITESPACE " "
    L_PAREN "("
    NAME
      HEADER_KW "header"
    WHITESPACE " "
    MATCH_KW "match"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    IDENT "a"
  WHITESPACE "\t"
  ERROR
    IDENT "b"
  WHITESPACE "\n"
  ERROR
    INT_NUMBER "1"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "2"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "header_copytest"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
    WHITESPACE " "
    WITH_KW "with"
    WHITESPACE " "
    L_PAREN "("
    NAME
      HEADER_KW "header"
    WHITESPACE " "
    MATCH_KW "match"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    IDENT "a"
  WHITESPACE "\t"
  ERROR
    IDENT "b"
  WHITESPACE "\t"
  ERROR
    IDENT "c"
  WHITESPACE "\t"
  ERROR
    IDENT "d"
  WHITESPACE "\n"
  ERROR
    INT_NUMBER "1"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "2"
  WHITESPACE "\t"
  ERROR
    IDENT "foo"
  WHITESPACE "\t"
  ERROR
    IDENT "bar"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "header_copytest"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
    WHITESPACE " "
    WITH_KW "with"
    WHITESPACE " "
    L_PAREN "("
    NAME
      HEADER_KW "header"
    WHITESPACE " "
    MATCH_KW "match"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    IDENT "a"
  WHITESPACE "\t"
  ERROR
    IDENT "b"
  WHITESPACE "\t"
  ERROR
    IDENT "d"
  WHITESPACE "\n"
  ERROR
    INT_NUMBER "1"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "2"
  WHITESPACE "\t"
  ERROR
    IDENT "foo"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "header_copytest"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Drop an extra column, in the middle of the existing set."
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "header_copytest"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- works"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "header_copytest"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "a"
      R_PAREN ")"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
    WHITESPACE " "
    WITH_KW "with"
    WHITESPACE " "
    L_PAREN "("
    NAME
      HEADER_KW "header"
    WHITESPACE " "
    MATCH_KW "match"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    IDENT "c"
  WHITESPACE "\t"
  ERROR
    IDENT "a"
  WHITESPACE "\n"
  ERROR
    IDENT "foo"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "7"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "header_copytest"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
      R_PAREN ")"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
    WHITESPACE " "
    WITH_KW "with"
    WHITESPACE " "
    L_PAREN "("
    NAME
      HEADER_KW "header"
    WHITESPACE " "
    MATCH_KW "match"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    IDENT "a"
  WHITESPACE "\t"
  ERROR
    IDENT "c"
  WHITESPACE "\n"
  ERROR
    INT_NUMBER "8"
  WHITESPACE "\t"
  ERROR
    IDENT "foo"
  WHITESPACE "\n"
  COMMENT "-- errors"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "header_copytest"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
    WHITESPACE " "
    WITH_KW "with"
    WHITESPACE " "
    L_PAREN "("
    NAME
      HEADER_KW "header"
    WHITESPACE " "
    MATCH_KW "match"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    IDENT "a"
  WHITESPACE "\t"
  ERROR
    DOT "."
  ERROR
    DOT "."
  ERROR
    DOT "."
  ERROR
    DOT "."
  ERROR
    DOT "."
  ERROR
    DOT "."
  ERROR
    DOT "."
  ERROR
    DOT "."
  ERROR
    IDENT "pg"
  ERROR
    DOT "."
  ERROR
    IDENT "dropped"
  ERROR
    FLOAT_NUMBER ".2."
  ERROR
    DOT "."
  ERROR
    DOT "."
  ERROR
    DOT "."
  ERROR
    DOT "."
  ERROR
    DOT "."
  ERROR
    DOT "."
  ERROR
    DOT "."
  WHITESPACE "\t"
  ERROR
    IDENT "c"
  WHITESPACE "\n"
  ERROR
    INT_NUMBER "1"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "2"
  WHITESPACE "\t"
  ERROR
    IDENT "foo"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "header_copytest"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
      R_PAREN ")"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
    WHITESPACE " "
    WITH_KW "with"
    WHITESPACE " "
    L_PAREN "("
    NAME
      HEADER_KW "header"
    WHITESPACE " "
    MATCH_KW "match"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    IDENT "a"
  WHITESPACE "\t"
  ERROR
    IDENT "c"
  WHITESPACE "\t"
  ERROR
    IDENT "b"
  WHITESPACE "\n"
  ERROR
    INT_NUMBER "1"
  WHITESPACE "\t"
  ERROR
    IDENT "foo"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "2"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "header_copytest"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "header_copytest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- test COPY with overlong column defaults"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "oversized_column_default"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "col1"
        WHITESPACE " "
        CHAR_TYPE
          VARCHAR_KW "varchar"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "5"
            R_PAREN ")"
        WHITESPACE " "
        DEFAULT_CONSTRAINT
          DEFAULT_KW "DEFAULT"
          WHITESPACE " "
          LITERAL
            STRING "'more than 5 chars'"
      COMMA ","
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "col2"
        WHITESPACE " "
        CHAR_TYPE
          VARCHAR_KW "varchar"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "5"
            R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- normal COPY should work"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "oversized_column_default"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- error if the column is excluded"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "oversized_column_default"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "col2"
      R_PAREN ")"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- error if the DEFAULT option is given"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "oversized_column_default"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
    WHITESPACE " "
    L_PAREN "("
    NAME
      DEFAULT_KW "default"
    WHITESPACE " "
    LITERAL
      STRING "''"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "oversized_column_default"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- Create partitioned table that does not allow bulk insertions, to test bugs"
    WHITESPACE "\n"
    COMMENT "-- related to the reuse of BulkInsertState across partitions (only done when"
    WHITESPACE "\n"
    COMMENT "-- not using bulk insert).  Switching between partitions often makes it more"
    WHITESPACE "\n"
    COMMENT "-- likely to encounter these bugs, so we just switch on roughly every insert"
    WHITESPACE "\n"
    COMMENT "-- by having an even/odd number partition and inserting evenly distributed"
    WHITESPACE "\n"
    COMMENT "-- data."
    WHITESPACE "\n"
    COMMENT "--"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_si"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n  "
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      COMMA ","
      WHITESPACE "\n  "
      COLUMN
        NAME_REF
          DATA_KW "data"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      COMMA ","
      WHITESPACE "\n  "
      COMMENT "-- prevent use of bulk insert by having a volatile function"
      WHITESPACE "\n  "
      COLUMN
        NAME_REF
          IDENT "rand"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "float8"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
        WHITESPACE " "
        DEFAULT_CONSTRAINT
          DEFAULT_KW "default"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "random"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE "\n"
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "LIST"
    L_PAREN "("
    PAREN_EXPR
      L_PAREN "("
      BIN_EXPR
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PERCENT "%"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
      R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_si_p_even"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_si"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    IN_KW "IN"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_si_p_odd"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_si"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    IN_KW "IN"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test that bulk relation extension handles reusing a single BulkInsertState"
  WHITESPACE "\n"
  COMMENT "-- across partitions.  Without the fix applied, this reliably reproduces"
  WHITESPACE "\n"
  COMMENT "-- #18130 unless shared_buffers is extremely small (preventing any use of bulk"
  WHITESPACE "\n"
  COMMENT "-- relation extension). See"
  WHITESPACE "\n"
  COMMENT "-- https://postgr.es/m/18130-7a86a7356a75209d%40postgresql.org"
  WHITESPACE "\n"
  COMMENT "-- https://postgr.es/m/257696.1695670946%40sss.pgh.pa.us"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_si"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          DATA_KW "data"
      R_PAREN ")"
    WHITESPACE " "
    FROM_KW "FROM"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'filename'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- An earlier bug (see commit b1ecb9b3fcf) could end up using a buffer from"
  WHITESPACE "\n"
  COMMENT "-- the wrong partition. This test is *not* guaranteed to trigger that bug, but"
  WHITESPACE "\n"
  COMMENT "-- does so when shared_buffers is small enough.  To test if we encountered the"
  WHITESPACE "\n"
  COMMENT "-- bug, check that the partition condition isn't violated."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "tableoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          BIN_EXPR
            BIN_EXPR
              NAME_REF
                IDENT "id"
              WHITESPACE " "
              PERCENT "%"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          WHITESPACE " "
          NAME
            IDENT "is_even"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "parted_si"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_si"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ensure COPY FREEZE errors for foreign tables"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FOREIGN_DATA_WRAPPER_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FOREIGN_KW "foreign"
    WHITESPACE " "
    DATA_KW "data"
    WHITESPACE " "
    WRAPPER_KW "wrapper"
    WHITESPACE " "
    NAME
      IDENT "copytest_wrapper"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_SERVER_STMT
    CREATE_KW "create"
    WHITESPACE " "
    SERVER_KW "server"
    WHITESPACE " "
    NAME
      IDENT "copytest_server"
    WHITESPACE " "
    FOREIGN_KW "foreign"
    WHITESPACE " "
    DATA_KW "data"
    WHITESPACE " "
    WRAPPER_KW "wrapper"
    WHITESPACE " "
    NAME_REF
      IDENT "copytest_wrapper"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FOREIGN_TABLE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FOREIGN_KW "foreign"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copytest_foreign_table"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "a"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    R_PAREN ")"
    WHITESPACE " "
    SERVER_KW "server"
    WHITESPACE " "
    NAME_REF
      IDENT "copytest_server"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copytest_foreign_table"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
    WHITESPACE " "
    L_PAREN "("
    NAME
      FREEZE_KW "freeze"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    INT_NUMBER "1"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "rollback"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Tests for COPY TO with materialized views."
  WHITESPACE "\n"
  COMMENT "-- COPY TO should fail for an unpopulated materialized view"
  WHITESPACE "\n"
  COMMENT "-- but succeed for a populated one."
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copytest_mv"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              INT_NUMBER "1"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "id"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NO_KW "NO"
    WHITESPACE " "
    DATA_KW "DATA"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copytest_mv"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
      R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "stdout"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    L_PAREN "("
    NAME
      HEADER_KW "header"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "copytest_mv"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copytest_mv"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
      R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "stdout"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    L_PAREN "("
    NAME
      HEADER_KW "header"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_MATERIALIZED_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "copytest_mv"
  SEMICOLON ";"
  WHITESPACE "\n"
---
ERROR@470: expected string literal
ERROR@470: expected SEMICOLON
ERROR@471: expected command, found COLON
ERROR@472: expected command, found STRING
ERROR@483: expected command, found CSV_KW
ERROR@554: expected string literal
ERROR@554: expected SEMICOLON
ERROR@555: expected command, found COLON
ERROR@556: expected command, found STRING
ERROR@567: expected command, found CSV_KW
ERROR@731: expected string literal
ERROR@731: expected SEMICOLON
ERROR@732: expected command, found COLON
ERROR@733: expected command, found STRING
ERROR@744: expected command, found CSV_KW
ERROR@748: expected command, found QUOTE_KW
ERROR@754: expected command, found STRING
ERROR@759: expected command, found ESCAPE_KW
ERROR@766: expected command, found ESC_STRING
ERROR@793: expected string literal
ERROR@793: expected SEMICOLON
ERROR@794: expected command, found COLON
ERROR@795: expected command, found STRING
ERROR@806: expected command, found CSV_KW
ERROR@810: expected command, found QUOTE_KW
ERROR@816: expected command, found STRING
ERROR@821: expected command, found ESCAPE_KW
ERROR@828: expected command, found ESC_STRING
ERROR@1075: expected string literal
ERROR@1075: expected SEMICOLON
ERROR@1076: expected command, found COLON
ERROR@1077: expected command, found STRING
ERROR@1088: expected command, found CSV_KW
ERROR@1247: expected command, found IDENT
ERROR@1253: expected command, found IDENT
ERROR@1259: expected command, found IDENT
ERROR@1262: expected command, found ERROR
ERROR@1263: expected command, found DOT
ERROR@1265: expected command, found IDENT
ERROR@1304: expected command, found IDENT
ERROR@1310: expected command, found IDENT
ERROR@1316: expected command, found IDENT
ERROR@1466: expected R_PAREN
ERROR@1466: expected SEMICOLON
ERROR@1468: expected command, found INT_KW
ERROR@1471: expected command, found R_PAREN
ERROR@1500: expected SEMICOLON
ERROR@1501: expected command, found CSV_KW
ERROR@1505: expected command, found HEADER_KW
ERROR@1513: expected command, found IDENT
ERROR@1518: expected command, found IS_KW
ERROR@1521: expected command, found IDENT
ERROR@1526: expected command, found IDENT
ERROR@1528: expected command, found IDENT
ERROR@1533: expected command, found FULL_KW
ERROR@1538: expected command, found OF_KW
ERROR@1541: expected command, found IDENT
ERROR@1546: expected command, found IDENT
ERROR@1551: expected command, found IDENT
ERROR@1557: expected command, found ERROR_KW
ERROR@1563: expected command, found OUT_KW
ERROR@1567: expected command, found IF_KW
ERROR@1570: expected command, found IDENT
ERROR@1577: expected command, found INT_NUMBER
ERROR@1578: expected command, found COMMA
ERROR@1579: expected command, found IDENT
ERROR@1580: expected command, found COMMA
ERROR@1581: expected command, found INT_NUMBER
ERROR@1583: expected command, found INT_NUMBER
ERROR@1584: expected command, found COMMA
ERROR@1585: expected command, found IDENT
ERROR@1586: expected command, found COMMA
ERROR@1587: expected command, found INT_NUMBER
ERROR@1614: expected SEMICOLON
ERROR@1615: expected command, found CSV_KW
ERROR@1619: expected command, found HEADER_KW
ERROR@1734: expected command, found IDENT
ERROR@1739: expected command, found IS_KW
ERROR@1742: expected command, found IDENT
ERROR@1747: expected command, found IDENT
ERROR@1749: expected command, found IDENT
ERROR@1754: expected command, found FULL_KW
ERROR@1759: expected command, found OF_KW
ERROR@1762: expected command, found IDENT
ERROR@1767: expected command, found IDENT
ERROR@1772: expected command, found IDENT
ERROR@1778: expected command, found ERROR_KW
ERROR@1784: expected command, found OUT_KW
ERROR@1788: expected command, found IF_KW
ERROR@1791: expected command, found IDENT
ERROR@1798: expected command, found INT_NUMBER
ERROR@1800: expected command, found IDENT
ERROR@1802: expected command, found INT_NUMBER
ERROR@1804: expected command, found IDENT
ERROR@2672: expected string literal
ERROR@2672: expected SEMICOLON
ERROR@2673: expected command, found COLON
ERROR@2674: expected command, found STRING
ERROR@2739: expected string literal
ERROR@2739: expected SEMICOLON
ERROR@2740: expected command, found COLON
ERROR@2741: expected command, found STRING
ERROR@2865: expected string literal
ERROR@2865: expected SEMICOLON
ERROR@2866: expected command, found COLON
ERROR@2867: expected command, found STRING
ERROR@2878: expected command, found L_PAREN
ERROR@2879: expected command, found FREEZE_KW
ERROR@2885: expected command, found R_PAREN
ERROR@3344: expected string literal
ERROR@3344: expected SEMICOLON
ERROR@3345: expected command, found COLON
ERROR@3346: expected command, found STRING
ERROR@3629: expected command, found INT_NUMBER
ERROR@3631: expected command, found INT_NUMBER
ERROR@3633: expected command, found IDENT
ERROR@3638: expected command, found INT_NUMBER
ERROR@3640: expected command, found INT_NUMBER
ERROR@3642: expected command, found IDENT
ERROR@5254: expected command, found IDENT
ERROR@5261: expected command, found INT_NUMBER
ERROR@5264: expected command, found L_PAREN
ERROR@5265: expected command, found INT_NUMBER
ERROR@5267: expected command, found COMMA
ERROR@5268: expected command, found INT_NUMBER
ERROR@5270: expected command, found R_PAREN
ERROR@5272: expected command, found INT_NUMBER
ERROR@5277: expected command, found IDENT
ERROR@5281: expected command, found IDENT
ERROR@5285: expected command, found INT_NUMBER
ERROR@5288: expected command, found L_PAREN
ERROR@5289: expected command, found INT_NUMBER
ERROR@5291: expected command, found COMMA
ERROR@5292: expected command, found INT_NUMBER
ERROR@5293: expected command, found R_PAREN
ERROR@5295: expected command, found INT_NUMBER
ERROR@5300: expected command, found IDENT
ERROR@5305: expected command, found IDENT
ERROR@5310: expected command, found INT_NUMBER
ERROR@5313: expected command, found L_PAREN
ERROR@5314: expected command, found INT_NUMBER
ERROR@5316: expected command, found COMMA
ERROR@5317: expected command, found INT_NUMBER
ERROR@5319: expected command, found R_PAREN
ERROR@5321: expected command, found INT_NUMBER
ERROR@5326: expected command, found IDENT
ERROR@5466: expected string literal
ERROR@5466: expected SEMICOLON
ERROR@5467: expected command, found COLON
ERROR@5468: expected command, found STRING
ERROR@5480: expected command, found WHERE_KW
ERROR@5486: expected command, found L_PAREN
ERROR@5487: expected command, found IDENT
ERROR@5494: expected command, found L_ANGLE
ERROR@5496: expected command, found INT_NUMBER
ERROR@5500: expected command, found R_PAREN
ERROR@5627: expected command, found IDENT
ERROR@5634: expected command, found IDENT
ERROR@5636: expected command, found L_PAREN
ERROR@5637: expected command, found INT_NUMBER
ERROR@5639: expected command, found COMMA
ERROR@5640: expected command, found INT_NUMBER
ERROR@5642: expected command, found R_PAREN
ERROR@5644: expected command, found IDENT
ERROR@5646: expected command, found IDENT
ERROR@5650: expected command, found IDENT
ERROR@5657: expected command, found INT_NUMBER
ERROR@5660: expected command, found L_PAREN
ERROR@5661: expected command, found INT_NUMBER
ERROR@5663: expected command, found COMMA
ERROR@5664: expected command, found INT_NUMBER
ERROR@5666: expected command, found R_PAREN
ERROR@5668: expected command, found INT_NUMBER
ERROR@5673: expected command, found IDENT
ERROR@5677: expected command, found IDENT
ERROR@5684: expected command, found IDENT
ERROR@5686: expected command, found L_PAREN
ERROR@5687: expected command, found INT_NUMBER
ERROR@5689: expected command, found COMMA
ERROR@5690: expected command, found INT_NUMBER
ERROR@5692: expected command, found R_PAREN
ERROR@5694: expected command, found IDENT
ERROR@5696: expected command, found IDENT
ERROR@6262: expected command, found IDENT
ERROR@6264: expected command, found IDENT
ERROR@6266: expected command, found IDENT
ERROR@6268: expected command, found INT_NUMBER
ERROR@6270: expected command, found INT_NUMBER
ERROR@6272: expected command, found IDENT
ERROR@6339: expected command, found IDENT
ERROR@6341: expected command, found IDENT
ERROR@6343: expected command, found IDENT
ERROR@6345: expected command, found IDENT
ERROR@6349: expected command, found INT_NUMBER
ERROR@6351: expected command, found INT_NUMBER
ERROR@6418: expected command, found IDENT
ERROR@6419: expected command, found COMMA
ERROR@6420: expected command, found IDENT
ERROR@6421: expected command, found COMMA
ERROR@6422: expected command, found IDENT
ERROR@6424: expected command, found INT_NUMBER
ERROR@6425: expected command, found COMMA
ERROR@6426: expected command, found INT_NUMBER
ERROR@6427: expected command, found COMMA
ERROR@6428: expected command, found IDENT
ERROR@6505: expected command, found IDENT
ERROR@6507: expected command, found IDENT
ERROR@6509: expected command, found IDENT
ERROR@6511: expected command, found INT_NUMBER
ERROR@6513: expected command, found INT_NUMBER
ERROR@6515: expected command, found IDENT
ERROR@6572: expected command, found IDENT
ERROR@6574: expected command, found IDENT
ERROR@6576: expected command, found ERROR
ERROR@6577: expected command, found IDENT
ERROR@6579: expected command, found INT_NUMBER
ERROR@6581: expected command, found INT_NUMBER
ERROR@6583: expected command, found IDENT
ERROR@6640: expected command, found IDENT
ERROR@6642: expected command, found IDENT
ERROR@6644: expected command, found INT_NUMBER
ERROR@6646: expected command, found INT_NUMBER
ERROR@6701: expected command, found IDENT
ERROR@6703: expected command, found IDENT
ERROR@6705: expected command, found IDENT
ERROR@6707: expected command, found IDENT
ERROR@6709: expected command, found INT_NUMBER
ERROR@6711: expected command, found INT_NUMBER
ERROR@6713: expected command, found IDENT
ERROR@6717: expected command, found IDENT
ERROR@6774: expected command, found IDENT
ERROR@6776: expected command, found IDENT
ERROR@6778: expected command, found IDENT
ERROR@6780: expected command, found INT_NUMBER
ERROR@6782: expected command, found INT_NUMBER
ERROR@6784: expected command, found IDENT
ERROR@7003: expected command, found IDENT
ERROR@7005: expected command, found IDENT
ERROR@7007: expected command, found IDENT
ERROR@7011: expected command, found INT_NUMBER
ERROR@7073: expected command, found IDENT
ERROR@7075: expected command, found IDENT
ERROR@7077: expected command, found INT_NUMBER
ERROR@7079: expected command, found IDENT
ERROR@7146: expected command, found IDENT
ERROR@7148: expected command, found DOT
ERROR@7149: expected command, found DOT
ERROR@7150: expected command, found DOT
ERROR@7151: expected command, found DOT
ERROR@7152: expected command, found DOT
ERROR@7153: expected command, found DOT
ERROR@7154: expected command, found DOT
ERROR@7155: expected command, found DOT
ERROR@7156: expected command, found IDENT
ERROR@7158: expected command, found DOT
ERROR@7159: expected command, found IDENT
ERROR@7166: expected command, found FLOAT_NUMBER
ERROR@7169: expected command, found DOT
ERROR@7170: expected command, found DOT
ERROR@7171: expected command, found DOT
ERROR@7172: expected command, found DOT
ERROR@7173: expected command, found DOT
ERROR@7174: expected command, found DOT
ERROR@7175: expected command, found DOT
ERROR@7177: expected command, found IDENT
ERROR@7179: expected command, found INT_NUMBER
ERROR@7181: expected command, found INT_NUMBER
ERROR@7183: expected command, found IDENT
ERROR@7247: expected command, found IDENT
ERROR@7249: expected command, found IDENT
ERROR@7251: expected command, found IDENT
ERROR@7253: expected command, found INT_NUMBER
ERROR@7255: expected command, found IDENT
ERROR@7259: expected command, found INT_NUMBER
ERROR@8929: expected string literal
ERROR@8929: expected SEMICOLON
ERROR@8930: expected command, found COLON
ERROR@8931: expected command, found STRING
ERROR@9653: expected command, found INT_NUMBER

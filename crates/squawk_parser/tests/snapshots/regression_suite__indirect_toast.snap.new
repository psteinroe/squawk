---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/indirect_toast.sql
---
SOURCE_FILE
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Tests for external toast datums"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  COMMENT "-- directory paths and dlsuffix are passed to us in environment variables"
  WHITESPACE "\n\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "make_tuple_indirect"
    WHITESPACE " "
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "record"
      R_PAREN ")"
    WHITESPACE "\n        "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "record"
    WHITESPACE "\n        "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'regresslib'"
  WHITESPACE "\n        "
  ERROR
    LANGUAGE_KW "LANGUAGE"
  WHITESPACE " "
  ERROR
    IDENT "C"
  WHITESPACE " "
  ERROR
    STRICT_KW "STRICT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Other compression algorithms may cause the compressed data to be stored"
  WHITESPACE "\n"
  COMMENT "-- inline.  pglz guarantees that the data is externalized, so stick to it."
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "default_toast_compression"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'pglz'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "indtoasttest"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "descr"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "cnt"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        DEFAULT_CONSTRAINT
          DEFAULT_KW "DEFAULT"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "indtoasttest"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "descr"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f1"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'two-compressed'"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "repeat"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'1234567890'"
          COMMA ","
          LITERAL
            INT_NUMBER "1000"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "repeat"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'1234567890'"
          COMMA ","
          LITERAL
            INT_NUMBER "1000"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "indtoasttest"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "descr"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f1"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'two-toasted'"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "repeat"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'1234567890'"
          COMMA ","
          LITERAL
            INT_NUMBER "30000"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "repeat"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'1234567890'"
          COMMA ","
          LITERAL
            INT_NUMBER "50000"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "indtoasttest"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "descr"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f1"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'one-compressed,one-null'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        NULL_KW "NULL"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "repeat"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'1234567890'"
          COMMA ","
          LITERAL
            INT_NUMBER "1000"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "indtoasttest"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "descr"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f1"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'one-toasted,one-null'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        NULL_KW "NULL"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "repeat"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'1234567890'"
          COMMA ","
          LITERAL
            INT_NUMBER "50000"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check whether indirect tuples works on the most basic level"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "descr"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              SUBSTRING_KW "substring"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                CALL_EXPR
                  NAME_REF
                    IDENT "make_tuple_indirect"
                  ARG_LIST
                    L_PAREN "("
                    NAME_REF
                      IDENT "indtoasttest"
                    R_PAREN ")"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        TEXT_KW "text"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "200"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "indtoasttest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- modification without changing varlenas"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "indtoasttest"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "cnt"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "cnt"
      WHITESPACE " "
      PLUS "+"
      LITERAL
        INT_NUMBER "1"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        SUBSTRING_KW "substring"
      ARG_LIST
        L_PAREN "("
        CAST_EXPR
          NAME_REF
            IDENT "indtoasttest"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
        COMMA ","
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
        COMMA ","
        WHITESPACE " "
        LITERAL
          INT_NUMBER "200"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- modification without modifying assigned value"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "indtoasttest"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "cnt"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "cnt"
      WHITESPACE " "
      PLUS "+"
      LITERAL
        INT_NUMBER "1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "f1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NAME_REF
      IDENT "f1"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        SUBSTRING_KW "substring"
      ARG_LIST
        L_PAREN "("
        CAST_EXPR
          NAME_REF
            IDENT "indtoasttest"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
        COMMA ","
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
        COMMA ","
        WHITESPACE " "
        LITERAL
          INT_NUMBER "200"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- modification modifying, but effectively not changing"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "indtoasttest"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "cnt"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "cnt"
      WHITESPACE " "
      PLUS "+"
      LITERAL
        INT_NUMBER "1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "f1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "f1"
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      LITERAL
        STRING "''"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        SUBSTRING_KW "substring"
      ARG_LIST
        L_PAREN "("
        CAST_EXPR
          NAME_REF
            IDENT "indtoasttest"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
        COMMA ","
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
        COMMA ","
        WHITESPACE " "
        LITERAL
          INT_NUMBER "200"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "indtoasttest"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "cnt"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "cnt"
      WHITESPACE " "
      PLUS "+"
      LITERAL
        INT_NUMBER "1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "f1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      LITERAL
        STRING "'-'"
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      BIN_EXPR
        NAME_REF
          IDENT "f1"
        CUSTOM_OP
          PIPE "|"
          PIPE "|"
        LITERAL
          STRING "'-'"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        SUBSTRING_KW "substring"
      ARG_LIST
        L_PAREN "("
        CAST_EXPR
          NAME_REF
            IDENT "indtoasttest"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
        COMMA ","
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
        COMMA ","
        WHITESPACE " "
        LITERAL
          INT_NUMBER "200"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              SUBSTRING_KW "substring"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "indtoasttest"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        TEXT_KW "text"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "200"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "indtoasttest"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- check we didn't screw with main/toast tuple visibility"
  WHITESPACE "\n"
  VACUUM_STMT
    VACUUM_KW "VACUUM"
    WHITESPACE " "
    FREEZE_KW "FREEZE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "indtoasttest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              SUBSTRING_KW "substring"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "indtoasttest"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        TEXT_KW "text"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "200"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "indtoasttest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- now create a trigger that forces all Datums to be indirect ones"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "update_using_indirect"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE "\n        "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TRIGGER_KW "trigger"
    WHITESPACE "\n        "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nBEGIN\n    NEW := make_tuple_indirect(NEW);\n    RETURN NEW;\nEND$$"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    NAME
      IDENT "indtoasttest_update_indirect"
    WHITESPACE "\n        "
    BEFORE_KW "BEFORE"
    WHITESPACE " "
    INSERT_KW "INSERT"
    WHITESPACE " "
    OR_KW "OR"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE "\n        "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "indtoasttest"
    WHITESPACE "\n        "
    FOR_KW "FOR"
    WHITESPACE " "
    EACH_KW "EACH"
    WHITESPACE " "
    ROW_KW "ROW"
    WHITESPACE "\n        "
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    PROCEDURE_KW "PROCEDURE"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "update_using_indirect"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- modification without changing varlenas"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "indtoasttest"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "cnt"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "cnt"
      WHITESPACE " "
      PLUS "+"
      LITERAL
        INT_NUMBER "1"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        SUBSTRING_KW "substring"
      ARG_LIST
        L_PAREN "("
        CAST_EXPR
          NAME_REF
            IDENT "indtoasttest"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
        COMMA ","
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
        COMMA ","
        WHITESPACE " "
        LITERAL
          INT_NUMBER "200"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- modification without modifying assigned value"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "indtoasttest"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "cnt"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "cnt"
      WHITESPACE " "
      PLUS "+"
      LITERAL
        INT_NUMBER "1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "f1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NAME_REF
      IDENT "f1"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        SUBSTRING_KW "substring"
      ARG_LIST
        L_PAREN "("
        CAST_EXPR
          NAME_REF
            IDENT "indtoasttest"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
        COMMA ","
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
        COMMA ","
        WHITESPACE " "
        LITERAL
          INT_NUMBER "200"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- modification modifying, but effectively not changing"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "indtoasttest"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "cnt"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "cnt"
      WHITESPACE " "
      PLUS "+"
      LITERAL
        INT_NUMBER "1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "f1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "f1"
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      LITERAL
        STRING "''"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        SUBSTRING_KW "substring"
      ARG_LIST
        L_PAREN "("
        CAST_EXPR
          NAME_REF
            IDENT "indtoasttest"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
        COMMA ","
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
        COMMA ","
        WHITESPACE " "
        LITERAL
          INT_NUMBER "200"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "indtoasttest"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "cnt"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "cnt"
      WHITESPACE " "
      PLUS "+"
      LITERAL
        INT_NUMBER "1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "f1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      LITERAL
        STRING "'-'"
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      BIN_EXPR
        NAME_REF
          IDENT "f1"
        CUSTOM_OP
          PIPE "|"
          PIPE "|"
        LITERAL
          STRING "'-'"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        SUBSTRING_KW "substring"
      ARG_LIST
        L_PAREN "("
        CAST_EXPR
          NAME_REF
            IDENT "indtoasttest"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
        COMMA ","
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
        COMMA ","
        WHITESPACE " "
        LITERAL
          INT_NUMBER "200"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "indtoasttest"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "descr"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f1"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'one-toasted,one-null, via indirect'"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "repeat"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'1234567890'"
          COMMA ","
          LITERAL
            INT_NUMBER "30000"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      LITERAL
        NULL_KW "NULL"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              SUBSTRING_KW "substring"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "indtoasttest"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        TEXT_KW "text"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "200"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "indtoasttest"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- check we didn't screw with main/toast tuple visibility"
  WHITESPACE "\n"
  VACUUM_STMT
    VACUUM_KW "VACUUM"
    WHITESPACE " "
    FREEZE_KW "FREEZE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "indtoasttest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              SUBSTRING_KW "substring"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "indtoasttest"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        TEXT_KW "text"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "200"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "indtoasttest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "indtoasttest"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "update_using_indirect"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "default_toast_compression"
  SEMICOLON ";"
  WHITESPACE "\n"
---
ERROR@196: expected string literal
ERROR@196: expected SEMICOLON
ERROR@197: expected command, found COLON
ERROR@198: expected command, found STRING
ERROR@219: expected command, found LANGUAGE_KW
ERROR@228: expected command, found IDENT
ERROR@230: expected command, found STRICT_KW

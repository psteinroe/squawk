---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/spgist.sql
---
SOURCE_FILE
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test SP-GiST indexes."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- There are other tests to test different SP-GiST opclasses. This is for"
  WHITESPACE "\n"
  COMMENT "-- testing SP-GiST code itself."
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "spgist_point_tbl"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "p"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "point"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "spgist_point_idx"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "spgist_point_tbl"
    WHITESPACE " "
    USING_KW "using"
    WHITESPACE " "
    NAME_REF
      IDENT "spgist"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "p"
      R_PAREN ")"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "with"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "fillfactor"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "75"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test vacuum-root operation. It gets invoked when the root is also a leaf,"
  WHITESPACE "\n"
  COMMENT "-- i.e. the index is very small."
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "spgist_point_tbl"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "p"
      R_PAREN ")"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "g"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "point"
              ARG_LIST
                L_PAREN "("
                BIN_EXPR
                  NAME_REF
                    IDENT "g"
                  STAR "*"
                  LITERAL
                    INT_NUMBER "10"
                COMMA ","
                WHITESPACE " "
                BIN_EXPR
                  NAME_REF
                    IDENT "g"
                  STAR "*"
                  LITERAL
                    INT_NUMBER "10"
                R_PAREN ")"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "10"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "g"
  SEMICOLON ";"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "delete"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "spgist_point_tbl"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "5"
  SEMICOLON ";"
  WHITESPACE "\n"
  VACUUM_STMT
    VACUUM_KW "vacuum"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "spgist_point_tbl"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Insert more data, to make the index a few levels deep."
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "spgist_point_tbl"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "p"
      R_PAREN ")"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "g"
          COMMA ","
          WHITESPACE "      "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "point"
              ARG_LIST
                L_PAREN "("
                BIN_EXPR
                  NAME_REF
                    IDENT "g"
                  STAR "*"
                  LITERAL
                    INT_NUMBER "10"
                COMMA ","
                WHITESPACE " "
                BIN_EXPR
                  NAME_REF
                    IDENT "g"
                  STAR "*"
                  LITERAL
                    INT_NUMBER "10"
                R_PAREN ")"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "10000"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "g"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "spgist_point_tbl"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "p"
      R_PAREN ")"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "g"
              PLUS "+"
              LITERAL
                INT_NUMBER "100000"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "point"
              ARG_LIST
                L_PAREN "("
                BIN_EXPR
                  BIN_EXPR
                    NAME_REF
                      IDENT "g"
                    STAR "*"
                    LITERAL
                      INT_NUMBER "10"
                  PLUS "+"
                  LITERAL
                    INT_NUMBER "1"
                COMMA ","
                WHITESPACE " "
                BIN_EXPR
                  BIN_EXPR
                    NAME_REF
                      IDENT "g"
                    STAR "*"
                    LITERAL
                      INT_NUMBER "10"
                  PLUS "+"
                  LITERAL
                    INT_NUMBER "1"
                R_PAREN ")"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "10000"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "g"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- To test vacuum, delete some entries from all over the index."
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "delete"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "spgist_point_tbl"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "id"
          WHITESPACE " "
          PERCENT "%"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "2"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- And also delete some concentration of values. (SP-GiST doesn't currently"
  WHITESPACE "\n"
  COMMENT "-- attempt to delete pages even when they become empty, but if it did, this"
  WHITESPACE "\n"
  COMMENT "-- would exercise it)"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "delete"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "spgist_point_tbl"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10000"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  VACUUM_STMT
    VACUUM_KW "vacuum"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "spgist_point_tbl"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test rescan paths (cf. bug #15378)"
  WHITESPACE "\n"
  COMMENT "-- use box and && rather than point, so that rescan happens when the"
  WHITESPACE "\n"
  COMMENT "-- traverse stack is non-empty"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "spgist_box_tbl"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "serial"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "box"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "spgist_box_tbl"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
      R_PAREN ")"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "box"
              ARG_LIST
                L_PAREN "("
                CALL_EXPR
                  NAME_REF
                    IDENT "point"
                  ARG_LIST
                    L_PAREN "("
                    NAME_REF
                      IDENT "i"
                    COMMA ","
                    NAME_REF
                      IDENT "j"
                    R_PAREN ")"
                COMMA ","
                CALL_EXPR
                  NAME_REF
                    IDENT "point"
                  ARG_LIST
                    L_PAREN "("
                    BIN_EXPR
                      NAME_REF
                        IDENT "i"
                      PLUS "+"
                      NAME_REF
                        IDENT "s"
                    COMMA ","
                    BIN_EXPR
                      NAME_REF
                        IDENT "j"
                      PLUS "+"
                      NAME_REF
                        IDENT "s"
                    R_PAREN ")"
                R_PAREN ")"
      WHITESPACE "\n  "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "100"
            COMMA ","
            LITERAL
              INT_NUMBER "5"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "i"
        COMMA ","
        WHITESPACE "\n       "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "100"
            COMMA ","
            LITERAL
              INT_NUMBER "5"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "j"
        COMMA ","
        WHITESPACE "\n       "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "10"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "s"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "spgist_box_idx"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "spgist_box_tbl"
    WHITESPACE " "
    USING_KW "using"
    WHITESPACE " "
    NAME_REF
      IDENT "spgist"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "b"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              IDENT "point"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "5"
              COMMA ","
              LITERAL
                INT_NUMBER "5"
              R_PAREN ")"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              IDENT "point"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "8"
              COMMA ","
              LITERAL
                INT_NUMBER "8"
              R_PAREN ")"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              IDENT "point"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "12"
              COMMA ","
              LITERAL
                INT_NUMBER "12"
              R_PAREN ")"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "p"
          R_PAREN ")"
    WHITESPACE "\n "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          EXISTS_KW "exists"
        ARG_LIST
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  STAR "*"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "spgist_box_tbl"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "b"
            WHITESPACE " "
            WHERE_CLAUSE
              WHERE_KW "where"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "b"
                  DOT "."
                  NAME_REF
                    IDENT "b"
                WHITESPACE " "
                CUSTOM_OP
                  AMP "&"
                  AMP "&"
                WHITESPACE " "
                CALL_EXPR
                  NAME_REF
                    IDENT "box"
                  ARG_LIST
                    L_PAREN "("
                    FIELD_EXPR
                      NAME_REF
                        IDENT "v"
                      DOT "."
                      NAME_REF
                        IDENT "p"
                    COMMA ","
                    FIELD_EXPR
                      NAME_REF
                        IDENT "v"
                      DOT "."
                      NAME_REF
                        IDENT "p"
                    R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- The point opclass's choose method only uses the spgMatchNode action,"
  WHITESPACE "\n"
  COMMENT "-- so the other actions are not tested by the above. Create an index using"
  WHITESPACE "\n"
  COMMENT "-- text opclass, which uses the others actions."
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "spgist_text_tbl"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "t"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "spgist_text_idx"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "spgist_text_tbl"
    WHITESPACE " "
    USING_KW "using"
    WHITESPACE " "
    NAME_REF
      IDENT "spgist"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "t"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "spgist_text_tbl"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "t"
      R_PAREN ")"
    WHITESPACE "\n"
    COMPOUND_SELECT
      SELECT
        SELECT_CLAUSE
          SELECT_KW "select"
          WHITESPACE " "
          TARGET_LIST
            TARGET
              NAME_REF
                IDENT "g"
            COMMA ","
            WHITESPACE " "
            TARGET
              BIN_EXPR
                LITERAL
                  STRING "'f'"
                WHITESPACE " "
                CUSTOM_OP
                  PIPE "|"
                  PIPE "|"
                WHITESPACE " "
                BIN_EXPR
                  CALL_EXPR
                    NAME_REF
                      IDENT "repeat"
                    ARG_LIST
                      L_PAREN "("
                      LITERAL
                        STRING "'o'"
                      COMMA ","
                      WHITESPACE " "
                      LITERAL
                        INT_NUMBER "100"
                      R_PAREN ")"
                  WHITESPACE " "
                  CUSTOM_OP
                    PIPE "|"
                    PIPE "|"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "g"
        WHITESPACE " "
        FROM_CLAUSE
          FROM_KW "from"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "10000"
              R_PAREN ")"
          WHITESPACE " "
          ALIAS
            NAME
              IDENT "g"
      WHITESPACE "\n"
      UNION_KW "union"
      WHITESPACE " "
      ALL_KW "all"
      WHITESPACE "\n"
      SELECT
        SELECT_CLAUSE
          SELECT_KW "select"
          WHITESPACE " "
          TARGET_LIST
            TARGET
              NAME_REF
                IDENT "g"
            COMMA ","
            WHITESPACE " "
            TARGET
              BIN_EXPR
                LITERAL
                  STRING "'baaaaaaaaaaaaaar'"
                WHITESPACE " "
                CUSTOM_OP
                  PIPE "|"
                  PIPE "|"
                WHITESPACE " "
                NAME_REF
                  IDENT "g"
        WHITESPACE " "
        FROM_CLAUSE
          FROM_KW "from"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1000"
              R_PAREN ")"
          WHITESPACE " "
          ALIAS
            NAME
              IDENT "g"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Do a lot of insertions that have to split an existing node. Hopefully"
  WHITESPACE "\n"
  COMMENT "-- one of these will cause the page to run out of space, causing the inner"
  WHITESPACE "\n"
  COMMENT "-- tuple to be moved to another page."
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "spgist_text_tbl"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "t"
      R_PAREN ")"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            PREFIX_EXPR
              MINUS "-"
              NAME_REF
                IDENT "g"
          COMMA ","
          WHITESPACE " "
          TARGET
            BIN_EXPR
              LITERAL
                STRING "'f'"
              WHITESPACE " "
              CUSTOM_OP
                PIPE "|"
                PIPE "|"
              WHITESPACE " "
              BIN_EXPR
                CALL_EXPR
                  NAME_REF
                    IDENT "repeat"
                  ARG_LIST
                    L_PAREN "("
                    LITERAL
                      STRING "'o'"
                    COMMA ","
                    WHITESPACE " "
                    BIN_EXPR
                      LITERAL
                        INT_NUMBER "100"
                      MINUS "-"
                      NAME_REF
                        IDENT "g"
                    R_PAREN ")"
                WHITESPACE " "
                CUSTOM_OP
                  PIPE "|"
                  PIPE "|"
                WHITESPACE " "
                LITERAL
                  STRING "'surprise'"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "100"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "g"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test out-of-range fillfactor values"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "spgist_point_idx2"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "spgist_point_tbl"
    WHITESPACE " "
    USING_KW "using"
    WHITESPACE " "
    NAME_REF
      IDENT "spgist"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "p"
      R_PAREN ")"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "with"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "fillfactor"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "9"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "spgist_point_idx2"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "spgist_point_tbl"
    WHITESPACE " "
    USING_KW "using"
    WHITESPACE " "
    NAME_REF
      IDENT "spgist"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "p"
      R_PAREN ")"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "with"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "fillfactor"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "101"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Modify fillfactor in existing index"
  WHITESPACE "\n"
  ALTER_INDEX_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "spgist_point_idx"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "fillfactor"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "90"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  REINDEX_STMT
    REINDEX_KW "reindex"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "spgist_point_idx"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test index over a domain"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "spgist_text"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    CHAR_TYPE
      VARCHAR_KW "varchar"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "spgist_domain_tbl"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "spgist_text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "spgist_domain_idx"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "spgist_domain_tbl"
    WHITESPACE " "
    USING_KW "using"
    WHITESPACE " "
    NAME_REF
      IDENT "spgist"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "f1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "spgist_domain_tbl"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        STRING "'fee'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'fi'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'fo'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'fum'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "spgist_domain_tbl"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'fo'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "spgist_domain_tbl"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'fo'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- test an unlogged table, mostly to get coverage of spgistbuildempty"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    UNLOGGED_KW "unlogged"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "spgist_unlogged_tbl"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "serial"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "box"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "spgist_unlogged_idx"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "spgist_unlogged_tbl"
    WHITESPACE " "
    USING_KW "using"
    WHITESPACE " "
    NAME_REF
      IDENT "spgist"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "b"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "spgist_unlogged_tbl"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
      R_PAREN ")"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "box"
              ARG_LIST
                L_PAREN "("
                CALL_EXPR
                  NAME_REF
                    IDENT "point"
                  ARG_LIST
                    L_PAREN "("
                    NAME_REF
                      IDENT "i"
                    COMMA ","
                    NAME_REF
                      IDENT "j"
                    R_PAREN ")"
                R_PAREN ")"
      WHITESPACE "\n  "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "100"
            COMMA ","
            LITERAL
              INT_NUMBER "5"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "i"
        COMMA ","
        WHITESPACE "\n       "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "10"
            COMMA ","
            LITERAL
              INT_NUMBER "5"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "j"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- leave this table around, to help in testing dump/restore"
  WHITESPACE "\n"
---
ERROR@3175: expected R_PAREN
ERROR@3176: expected command, found OFF_KW
ERROR@3179: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@3179: expected SEMICOLON
ERROR@3179: expected command, found R_PAREN

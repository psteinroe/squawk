---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/psql.sql
---
SOURCE_FILE
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Tests for psql features that aren't closely connected to any"
  WHITESPACE "\n"
  COMMENT "-- specific server features"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  COMMENT "-- \\set"
  WHITESPACE "\n\n"
  COMMENT "-- fail: invalid name"
  WHITESPACE "\n"
  COMMENT "-- fail: invalid value for special variable"
  WHITESPACE "\n"
  COMMENT "-- check handling of built-in boolean variable"
  WHITESPACE "\n\n"
  COMMENT "-- \\g and \\gx"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "1"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "one"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "2"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "two"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "g"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "3"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "three"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "4"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "four"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "gx"
  WHITESPACE "\n\n"
  COMMENT "-- \\gx should work in FETCH_COUNT mode too"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "1"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "one"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "2"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "two"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "g"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "3"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "three"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "4"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "four"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "gx"
  WHITESPACE "\n\n\n"
  COMMENT "-- \\g/\\gx with pset options"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "1"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "one"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "2"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "two"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "g"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    FORMAT_KW "format"
  ERROR
    EQ "="
  ERROR
    CSV_KW "csv"
  WHITESPACE " "
  ERROR
    IDENT "csv_fieldsep"
  ERROR
    EQ "="
  ERROR
    STRING "'\\t'"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "1"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "one"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "2"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "two"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "gx"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "title"
  ERROR
    EQ "="
  ERROR
    STRING "'foo bar'"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n\n"
  COMMENT "-- \\parse (extended query protocol)"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "1"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "parse"
  WHITESPACE " "
  ERROR
    STRING "''"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "2"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "parse"
  WHITESPACE " "
  ERROR
    IDENT "stmt1"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            PARAM "$1"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "parse"
  WHITESPACE " "
  ERROR
    IDENT "stmt2"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            PARAM "$1"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            PARAM "$2"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "parse"
  WHITESPACE " "
  ERROR
    IDENT "stmt3"
  WHITESPACE "\n\n"
  COMMENT "-- \\bind_named (extended query protocol)"
  WHITESPACE "\n"
  COMMENT "-- Repeated calls.  The second call generates an error, cleaning up the"
  WHITESPACE "\n"
  COMMENT "-- statement name set by the first call."
  WHITESPACE "\n"
  COMMENT "-- Last \\bind_named wins"
  WHITESPACE "\n"
  COMMENT "-- Multiple \\g calls mean multiple executions"
  WHITESPACE "\n\n"
  COMMENT "-- \\close (extended query protocol)"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            NAME_KW "name"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            STATEMENT_KW "statement"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_prepared_statements"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        NAME_KW "name"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- \\bind (extended query protocol)"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "1"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "bind"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "g"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            PARAM "$1"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "bind"
  WHITESPACE " "
  ERROR
    STRING "'foo'"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "g"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            PARAM "$1"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            PARAM "$2"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "bind"
  WHITESPACE " "
  ERROR
    STRING "'foo'"
  WHITESPACE " "
  ERROR
    STRING "'bar'"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "g"
  WHITESPACE "\n\n"
  COMMENT "-- last \\bind wins"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            LITERAL
              PARAM "$1"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "col"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "bind"
  WHITESPACE " "
  ERROR
    STRING "'foo'"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "bind"
  WHITESPACE " "
  ERROR
    INT_NUMBER "2"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "g"
  WHITESPACE "\n"
  COMMENT "-- Multiple \\g calls mean multiple executions"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            LITERAL
              PARAM "$1"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "col"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "bind"
  WHITESPACE " "
  ERROR
    INT_NUMBER "1"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "g"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "bind"
  WHITESPACE " "
  ERROR
    INT_NUMBER "2"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "g"
  WHITESPACE "\n\n"
  COMMENT "-- errors"
  WHITESPACE "\n"
  COMMENT "-- parse error"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "foo"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "bind"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "g"
  WHITESPACE "\n"
  COMMENT "-- tcop error"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "1"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "2"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "bind"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "g"
  WHITESPACE "\n"
  COMMENT "-- bind error"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            PARAM "$1"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            PARAM "$2"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "bind"
  WHITESPACE " "
  ERROR
    STRING "'foo'"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "g"
  WHITESPACE "\n"
  COMMENT "-- bind_named error"
  WHITESPACE "\n\n"
  COMMENT "-- ;"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "10"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "test01"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "20"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "test02"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            STRING "'Hello'"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "test03"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE " "
  ERROR
    IDENT "pref01_"
  WHITESPACE "\n\n\n"
  COMMENT "-- should fail: bad variable name"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "10"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "\"bad name\""
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "97"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "\"EOF\""
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            STRING "'ok'"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "_foo"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE " "
  ERROR
    IDENT "IGNORE"
  WHITESPACE "\n\n"
  COMMENT "-- multiple backslash commands in one line"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "1"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "x"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "2"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "y"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE " "
  ERROR
    IDENT "pref01_"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    ERROR "\\"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "pref01_x"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "3"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "x"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "4"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "y"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE " "
  ERROR
    IDENT "pref01_"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "pref01_x"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "pref01_y"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "5"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "x"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "6"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "y"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE " "
  ERROR
    IDENT "pref01_"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    ERROR "\\"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "g"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "pref01_x"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "pref01_y"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "7"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "x"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "8"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "y"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "g"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE " "
  ERROR
    IDENT "pref01_"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "pref01_x"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "pref01_y"
  WHITESPACE "\n\n"
  COMMENT "-- NULL should unset the variable"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "1"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "var1"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            NULL_KW "NULL"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "var2"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "3"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "var3"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ; requires just one tuple"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "10"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "test01"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "20"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "test02"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "10"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "test01"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "20"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "test02"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ; returns no tuples"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "a"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "11"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ; should work in FETCH_COUNT mode too"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "1"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "x"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "2"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "y"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE " "
  ERROR
    IDENT "pref01_"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    ERROR "\\"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "pref01_x"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "3"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "x"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "4"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "y"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE " "
  ERROR
    IDENT "pref01_"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "pref01_x"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "pref01_y"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "10"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "test01"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "20"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "test02"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "10"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "test01"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "20"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "test02"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- \\gdesc"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE "\n    "
      TARGET_LIST
        TARGET
          LITERAL
            NULL_KW "NULL"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "zero"
        COMMA ","
        WHITESPACE "\n    "
        TARGET
          LITERAL
            INT_NUMBER "1"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "one"
        COMMA ","
        WHITESPACE "\n    "
        TARGET
          LITERAL
            FLOAT_NUMBER "2.0"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "two"
        COMMA ","
        WHITESPACE "\n    "
        TARGET
          LITERAL
            STRING "'three'"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "three"
        COMMA ","
        WHITESPACE "\n    "
        TARGET
          LITERAL
            PARAM "$1"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "four"
        COMMA ","
        WHITESPACE "\n    "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sin"
            ARG_LIST
              L_PAREN "("
              LITERAL
                PARAM "$2"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "five"
        COMMA ","
        WHITESPACE "\n    "
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'foo'"
            COLON2 "::"
            CHAR_TYPE
              VARCHAR_KW "varchar"
              L_PAREN "("
              ARG_LIST
                ARG
                  LITERAL
                    INT_NUMBER "4"
                R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "six"
        COMMA ","
        WHITESPACE "\n    "
        TARGET
          NAME_REF
            CURRENT_DATE_KW "CURRENT_DATE"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "now"
        WHITESPACE "\n\n"
        COMMENT "-- should work with tuple-returning utilities, such as EXECUTE"
        WHITESPACE "\n"
        TARGET
          NAME_REF
            PREPARE_KW "PREPARE"
          WHITESPACE " "
          NAME
            IDENT "test"
  WHITESPACE " "
  ERROR
    AS_KW "AS"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "1"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            FIRST_KW "first"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "2"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            SECOND_KW "second"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "test"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "gdesc"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    EXECUTE_STMT
      EXECUTE_KW "EXECUTE"
      WHITESPACE " "
      NAME_REF
        IDENT "test"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "gdesc"
  WHITESPACE "\n\n"
  COMMENT "-- should fail cleanly - syntax error"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            LITERAL
              INT_NUMBER "1"
            WHITESPACE " "
            PLUS "+"
            WHITESPACE " "
            ERROR
              ERROR "\\"
          NAME
            IDENT "gdesc"
  WHITESPACE "\n\n"
  COMMENT "-- check behavior with empty results"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "gdesc"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bububu"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "gdesc"
  WHITESPACE "\n\n"
  COMMENT "-- subject command should not have executed"
  WHITESPACE "\n"
  SELECT
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bububu"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n\n"
  COMMENT "-- query buffer should remain unchanged"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "1"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "x"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            STRING "'Hello'"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "2"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "y"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            TRUE_KW "true"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"dirty\\name\""
  WHITESPACE "\n\n"
  COMMENT "-- all on one line"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "3"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "x"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            STRING "'Hello'"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "4"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "y"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            TRUE_KW "true"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"dirty\\name\""
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "gdesc"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "g"
  WHITESPACE "\n\n"
  COMMENT "-- test for server bug #17983 with empty statement in aborted transaction"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "search_path"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    IDENT "bogus"
  SEMICOLON ";"
  WHITESPACE "\n"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "rollback"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- \\gexec"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMPORARY_KW "temporary"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "gexec_test"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "date"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "d"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                FLOAT_KW "float"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              FORMAT_KW "format"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'create index on gexec_test(%I)'"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "attname"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_attribute"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "attrelid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'gexec_test'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "attnum"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "attnum"
  WHITESPACE "\n\n"
  COMMENT "-- \\gexec should work in FETCH_COUNT mode too"
  WHITESPACE "\n"
  COMMENT "-- (though the fetch limit applies to the executed queries not the meta query)"
  WHITESPACE "\n\n"
  COMPOUND_SELECT
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              STRING "'select 1 as ones'"
          COMMA ","
          WHITESPACE " "
          TARGET
            LITERAL
              STRING "'select x.y, x.y*2 as double from generate_series(1,4) as x(y)'"
    WHITESPACE "\n"
    UNION_KW "union"
    WHITESPACE " "
    ALL_KW "all"
    WHITESPACE "\n"
    COMPOUND_SELECT
      SELECT
        SELECT_CLAUSE
          SELECT_KW "select"
          WHITESPACE " "
          TARGET_LIST
            TARGET
              LITERAL
                STRING "'drop table gexec_test'"
            COMMA ","
            WHITESPACE " "
            TARGET
              LITERAL
                NULL_KW "NULL"
      WHITESPACE "\n"
      UNION_KW "union"
      WHITESPACE " "
      ALL_KW "all"
      WHITESPACE "\n"
      SELECT
        SELECT_CLAUSE
          SELECT_KW "select"
          WHITESPACE " "
          TARGET_LIST
            TARGET
              LITERAL
                STRING "'drop table gexec_test'"
            COMMA ","
            WHITESPACE " "
            TARGET
              LITERAL
                STRING "'select ''2000-01-01''::date as party_over'"
              WHITESPACE "\n\n\n"
              COMMENT "-- \\setenv, \\getenv"
              WHITESPACE "\n\n"
              COMMENT "-- ensure MYVAR isn't set"
              WHITESPACE "\n"
              COMMENT "-- in which case, reading it doesn't change the target"
              WHITESPACE "\n"
              COMMENT "-- now set it"
              WHITESPACE "\n\n"
              COMMENT "-- show all pset options"
              WHITESPACE "\n\n"
              COMMENT "-- test multi-line headers, wrapping, and newline indicators"
              WHITESPACE "\n"
              COMMENT "-- in aligned, unaligned, and wrapped formats"
              WHITESPACE "\n"
              NAME
                PREPARE_KW "prepare"
            WHITESPACE " "
            TARGET
              NAME_REF
                IDENT "q"
              WHITESPACE " "
              AS_KW "as"
              WHITESPACE " "
              NAME
                SELECT_KW "select"
            WHITESPACE " "
            TARGET
              CALL_EXPR
                NAME_REF
                  IDENT "array_to_string"
                ARG_LIST
                  L_PAREN "("
                  CALL_EXPR
                    NAME_REF
                      IDENT "array_agg"
                    ARG_LIST
                      L_PAREN "("
                      CALL_EXPR
                        NAME_REF
                          IDENT "repeat"
                        ARG_LIST
                          L_PAREN "("
                          LITERAL
                            STRING "'x'"
                          COMMA ","
                          BIN_EXPR
                            LITERAL
                              INT_NUMBER "2"
                            STAR "*"
                            NAME_REF
                              IDENT "n"
                          R_PAREN ")"
                      R_PAREN ")"
                  COMMA ","
                  LITERAL
                    ESC_STRING "E'\\n'"
                  R_PAREN ")"
              WHITESPACE " "
              AS_KW "as"
              WHITESPACE " "
              NAME
                IDENT "\"ab\n\nc\""
            COMMA ","
            WHITESPACE " "
            TARGET
              CALL_EXPR
                NAME_REF
                  IDENT "array_to_string"
                ARG_LIST
                  L_PAREN "("
                  CALL_EXPR
                    NAME_REF
                      IDENT "array_agg"
                    ARG_LIST
                      L_PAREN "("
                      CALL_EXPR
                        NAME_REF
                          IDENT "repeat"
                        ARG_LIST
                          L_PAREN "("
                          LITERAL
                            STRING "'y'"
                          COMMA ","
                          BIN_EXPR
                            LITERAL
                              INT_NUMBER "20"
                            MINUS "-"
                            BIN_EXPR
                              LITERAL
                                INT_NUMBER "2"
                              STAR "*"
                              NAME_REF
                                IDENT "n"
                          R_PAREN ")"
                      R_PAREN ")"
                  COMMA ","
                  LITERAL
                    ESC_STRING "E'\\n'"
                  R_PAREN ")"
              WHITESPACE " "
              AS_KW "as"
              WHITESPACE " "
              NAME
                IDENT "\"a\nbc\""
        WHITESPACE " "
        FROM_CLAUSE
          FROM_KW "from"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "10"
              R_PAREN ")"
          WHITESPACE " "
          ALIAS
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "n"
            COLUMN_LIST
              L_PAREN "("
              COLUMN
                NAME
                  IDENT "n"
              R_PAREN ")"
        WHITESPACE " "
        GROUP_BY_CLAUSE
          GROUP_KW "group"
          WHITESPACE " "
          BY_KW "by"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "n"
            R_ANGLE ">"
            LITERAL
              INT_NUMBER "1"
        WHITESPACE " "
        ORDER_BY_CLAUSE
          ORDER_KW "order"
          WHITESPACE " "
          BY_KW "by"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "n"
            R_ANGLE ">"
            LITERAL
              INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DEALLOCATE_STMT
    DEALLOCATE_KW "deallocate"
    WHITESPACE " "
    NAME
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test single-line header and data"
  WHITESPACE "\n"
  PREPARE_STMT
    PREPARE_KW "prepare"
    WHITESPACE " "
    NAME
      IDENT "q"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "repeat"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  STRING "'x'"
                COMMA ","
                BIN_EXPR
                  LITERAL
                    INT_NUMBER "2"
                  STAR "*"
                  NAME_REF
                    IDENT "n"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "\"0123456789abcdef\""
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "repeat"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  STRING "'y'"
                COMMA ","
                BIN_EXPR
                  LITERAL
                    INT_NUMBER "20"
                  MINUS "-"
                  BIN_EXPR
                    LITERAL
                      INT_NUMBER "2"
                    STAR "*"
                    NAME_REF
                      IDENT "n"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "\"0123456789\""
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "10"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "n"
  SEMICOLON ";"
  WHITESPACE "\n\n\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DEALLOCATE_STMT
    DEALLOCATE_KW "deallocate"
    WHITESPACE " "
    NAME
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- support table for output-format tests (useful to create a footer)"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "psql_serial_tab"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "serial"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test header/footer/tuples_only behavior in aligned/unaligned/wrapped cases"
  WHITESPACE "\n\n\n"
  COMMENT "-- empty table is a special case for this format"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
  SEMICOLON ";"
  WHITESPACE "\n\n\n\n\n\n"
  COMMENT "-- check conditional am display"
  WHITESPACE "\n\n"
  CREATE_SCHEMA_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SCHEMA_KW "SCHEMA"
    WHITESPACE " "
    NAME
      IDENT "tableam_display"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_ROLE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME
      IDENT "regress_display_role"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_SCHEMA_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SCHEMA_KW "SCHEMA"
    WHITESPACE " "
    NAME_REF
      IDENT "tableam_display"
    WHITESPACE " "
    OWNER_KW "OWNER"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_display_role"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "search_path"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "tableam_display"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_ACCESS_METHOD_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    ACCESS_KW "ACCESS"
    WHITESPACE " "
    METHOD_KW "METHOD"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "heap_psql"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    HANDLER_KW "HANDLER"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "heap_tableam_handler"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_ROLE_STMT
    SET_KW "SET"
    WHITESPACE " "
    ROLE_KW "ROLE"
  WHITESPACE " "
  ERROR
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    IDENT "regress_display_role"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    COMMENT "-- Use only relations with a physical size of zero."
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tbl_heap_psql"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        CHAR_TYPE
          CHAR_KW "char"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "100"
            R_PAREN ")"
      R_PAREN ")"
    WHITESPACE " "
    USING_KW "using"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "heap_psql"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tbl_heap"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        CHAR_TYPE
          CHAR_KW "char"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "100"
            R_PAREN ")"
      R_PAREN ")"
    WHITESPACE " "
    USING_KW "using"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "heap"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "view_heap_psql"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "f1"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "tbl_heap_psql"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mat_view_heap_psql"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    NAME_REF
      IDENT "heap_psql"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "f1"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "tbl_heap_psql"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- AM is displayed for tables, indexes and materialized views."
  WHITESPACE "\n"
  COMMENT "-- But not for views and sequences."
  WHITESPACE "\n"
  COMMENT "-- \\d with 'x' enables expanded mode, but only without a pattern"
  WHITESPACE "\n"
  SET_ROLE_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    ROLE_KW "ROLE"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "search_path"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_SCHEMA_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    SCHEMA_KW "SCHEMA"
    WHITESPACE " "
    NAME
      IDENT "tableam_display"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ACCESS_METHOD_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    ACCESS_KW "ACCESS"
    WHITESPACE " "
    METHOD_KW "METHOD"
    WHITESPACE " "
    NAME_REF
      IDENT "heap_psql"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_display_role"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test numericlocale (as best we can without control of psql's locale)"
  WHITESPACE "\n\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "n"
        COMMA ","
        WHITESPACE " "
        TARGET
          PREFIX_EXPR
            MINUS "-"
            NAME_REF
              IDENT "n"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "m"
        COMMA ","
        WHITESPACE " "
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "n"
            WHITESPACE " "
            STAR "*"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "111"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "x"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'1e90'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "float8"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "f"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "n"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- test asciidoc output format"
  WHITESPACE "\n\n\n\n"
  PREPARE_STMT
    PREPARE_KW "prepare"
    WHITESPACE " "
    NAME
      IDENT "q"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              STRING "'some|text'"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "\"a|title\""
          COMMA ","
          WHITESPACE " "
          TARGET
            LITERAL
              STRING "'        '"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "\"empty \""
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "n"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              INT_KW "int"
      WHITESPACE "\n  "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "2"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "n"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DEALLOCATE_STMT
    DEALLOCATE_KW "deallocate"
    WHITESPACE " "
    NAME
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test csv output format"
  WHITESPACE "\n\n\n\n"
  PREPARE_STMT
    PREPARE_KW "prepare"
    WHITESPACE " "
    NAME
      IDENT "q"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              STRING "'some\"text'"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "\"a\""
          TARGET
            NAME_REF
              IDENT "\"title\""
          COMMA ","
          WHITESPACE " "
          TARGET
            LITERAL
              ESC_STRING "E'  <foo>\\n<bar>'"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "\"junk\""
          COMMA ","
          WHITESPACE "\n         "
          TARGET
            LITERAL
              STRING "'   '"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "\"empty\""
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "n"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              INT_KW "int"
      WHITESPACE "\n  "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "2"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "n"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DEALLOCATE_STMT
    DEALLOCATE_KW "deallocate"
    WHITESPACE " "
    NAME
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- special cases"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            STRING "'comma,comma'"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "comma"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            STRING "'semi;semi'"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "semi"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            STRING "'comma,comma'"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "comma"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            STRING "'semi;semi'"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "semi"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            STRING "'\\.'"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            DATA_KW "data"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            STRING "'\\'"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "d1"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            STRING "''"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "d2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- illegal csv separators"
  WHITESPACE "\n\n\n"
  COMMENT "-- test html output format"
  WHITESPACE "\n\n\n\n"
  PREPARE_STMT
    PREPARE_KW "prepare"
    WHITESPACE " "
    NAME
      IDENT "q"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              STRING "'some\"text'"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "\"a&title\""
          COMMA ","
          WHITESPACE " "
          TARGET
            LITERAL
              ESC_STRING "E'  <foo>\\n<bar>'"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "\"junk\""
          COMMA ","
          WHITESPACE "\n         "
          TARGET
            LITERAL
              STRING "'   '"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "\"empty\""
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "n"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              INT_KW "int"
      WHITESPACE "\n  "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "2"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "n"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DEALLOCATE_STMT
    DEALLOCATE_KW "deallocate"
    WHITESPACE " "
    NAME
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test latex output format"
  WHITESPACE "\n\n\n\n"
  PREPARE_STMT
    PREPARE_KW "prepare"
    WHITESPACE " "
    NAME
      IDENT "q"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              STRING "'some\\more_text'"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "\"a$title\""
          COMMA ","
          WHITESPACE " "
          TARGET
            LITERAL
              ESC_STRING "E'  #<foo>%&^~|\\n{bar}'"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "\"junk\""
          COMMA ","
          WHITESPACE "\n         "
          TARGET
            LITERAL
              STRING "'   '"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "\"empty\""
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "n"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              INT_KW "int"
      WHITESPACE "\n  "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "2"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "n"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DEALLOCATE_STMT
    DEALLOCATE_KW "deallocate"
    WHITESPACE " "
    NAME
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test latex-longtable output format"
  WHITESPACE "\n\n\n\n"
  PREPARE_STMT
    PREPARE_KW "prepare"
    WHITESPACE " "
    NAME
      IDENT "q"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              STRING "'some\\more_text'"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "\"a$title\""
          COMMA ","
          WHITESPACE " "
          TARGET
            LITERAL
              ESC_STRING "E'  #<foo>%&^~|\\n{bar}'"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "\"junk\""
          COMMA ","
          WHITESPACE "\n         "
          TARGET
            LITERAL
              STRING "'   '"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "\"empty\""
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "n"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              INT_KW "int"
      WHITESPACE "\n  "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "2"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "n"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DEALLOCATE_STMT
    DEALLOCATE_KW "deallocate"
    WHITESPACE " "
    NAME
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test troff-ms output format"
  WHITESPACE "\n\n\n\n"
  PREPARE_STMT
    PREPARE_KW "prepare"
    WHITESPACE " "
    NAME
      IDENT "q"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              STRING "'some\\text'"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "\"a\\title\""
          COMMA ","
          WHITESPACE " "
          TARGET
            LITERAL
              ESC_STRING "E'  <foo>\\n<bar>'"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "\"junk\""
          COMMA ","
          WHITESPACE "\n         "
          TARGET
            LITERAL
              STRING "'   '"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "\"empty\""
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "n"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              INT_KW "int"
      WHITESPACE "\n  "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "2"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "n"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DEALLOCATE_STMT
    DEALLOCATE_KW "deallocate"
    WHITESPACE " "
    NAME
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check ambiguous format requests"
  WHITESPACE "\n\n\n"
  COMMENT "-- clean up after output format tests"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "psql_serial_tab"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- \\echo and allied features"
  WHITESPACE "\n\n\n\n\n\n"
  COMMENT "-- tests for \\if ... \\endif"
  WHITESPACE "\n\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            STRING "'okay'"
  SEMICOLON ";"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            STRING "'still okay'"
  SEMICOLON ";"
  WHITESPACE "\n  "
  ERROR
    NOT_KW "not"
  WHITESPACE " "
  ERROR
    IDENT "okay"
  SEMICOLON ";"
  WHITESPACE "\n  "
  ERROR
    IDENT "still"
  WHITESPACE " "
  ERROR
    NOT_KW "not"
  WHITESPACE " "
  ERROR
    IDENT "okay"
  WHITESPACE "\n\n"
  COMMENT "-- at this point query buffer should still have last valid line"
  WHITESPACE "\n\n"
  COMMENT "-- \\if should work okay on part of a query"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
  WHITESPACE "\n  "
  ERROR
    ERROR "\\"
  ERROR
    IF_KW "if"
  WHITESPACE " "
  ERROR
    TRUE_KW "true"
  WHITESPACE "\n    "
  ERROR
    INT_NUMBER "42"
  WHITESPACE "\n  "
  ERROR
    ERROR "\\"
  ERROR
    ELSE_KW "else"
  WHITESPACE "\n    "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "bogus"
  WHITESPACE "\n  "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "endif"
  WHITESPACE "\n  "
  ERROR
    IDENT "forty_two"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IF_KW "if"
  WHITESPACE " "
  ERROR
    FALSE_KW "false"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    ERROR "\\"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "bogus"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    ELSE_KW "else"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    ERROR "\\"
  WHITESPACE " "
  ERROR
    INT_NUMBER "42"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "endif"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    ERROR "\\"
  WHITESPACE " "
  ERROR
    IDENT "forty_two"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test a large nested if using a variety of true-equivalents"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IF_KW "if"
  WHITESPACE " "
  ERROR
    INT_NUMBER "1"
  WHITESPACE "\n\t\t"
  ERROR
    ERROR "\\"
  ERROR
    IF_KW "if"
  WHITESPACE " "
  ERROR
    YES_KW "yes"
  WHITESPACE "\n\t\t\t"
  ERROR
    ERROR "\\"
  ERROR
    IF_KW "if"
  WHITESPACE " "
  ERROR
    ON_KW "on"
  WHITESPACE "\n\t\t\t\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'all true'"
  WHITESPACE "\n\t\t\t"
  ERROR
    ERROR "\\"
  ERROR
    ELSE_KW "else"
  WHITESPACE "\n\t\t\t\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'should not print #1-1'"
  WHITESPACE "\n\t\t\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "endif"
  WHITESPACE "\n\t\t"
  ERROR
    ERROR "\\"
  ERROR
    ELSE_KW "else"
  WHITESPACE "\n\t\t\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'should not print #1-2'"
  WHITESPACE "\n\t\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "endif"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    ELSE_KW "else"
  WHITESPACE "\n\t\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'should not print #1-3'"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "endif"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'should not print #1-4'"
  WHITESPACE "\n\n"
  COMMENT "-- test a variety of false-equivalents in an if/elif/else structure"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'should not print #2-1'"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'should not print #2-2'"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'should not print #2-3'"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'should not print #2-4'"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'all false'"
  WHITESPACE "\n\n"
  COMMENT "-- test true-false elif after initial true branch"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'should print #2-5'"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'should not print #2-6'"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'should not print #2-7'"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'should not print #2-8'"
  WHITESPACE "\n\n"
  COMMENT "-- test simple true-then-else"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'first thing true'"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'should not print #3-1'"
  WHITESPACE "\n\n"
  COMMENT "-- test simple false-true-else"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'should not print #4-1'"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'second thing true'"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'should not print #5-1'"
  WHITESPACE "\n\n"
  COMMENT "-- invalid boolean expressions are false"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'will not print #6-1'"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'will print anyway #6-2'"
  WHITESPACE "\n\n"
  COMMENT "-- test un-matched endif"
  WHITESPACE "\n\n"
  COMMENT "-- test un-matched else"
  WHITESPACE "\n\n"
  COMMENT "-- test un-matched elif"
  WHITESPACE "\n\n"
  COMMENT "-- test double-else error"
  WHITESPACE "\n\n"
  COMMENT "-- test elif out-of-order"
  WHITESPACE "\n\n"
  COMMENT "-- test if-endif matching in a false branch"
  WHITESPACE "\n    "
  ERROR
    ERROR "\\"
  ERROR
    IF_KW "if"
  WHITESPACE " "
  ERROR
    FALSE_KW "false"
  WHITESPACE "\n        "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'should not print #7-1'"
  WHITESPACE "\n    "
  ERROR
    ERROR "\\"
  ERROR
    ELSE_KW "else"
  WHITESPACE "\n        "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'should not print #7-2'"
  WHITESPACE "\n    "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "endif"
  WHITESPACE "\n    "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'should not print #7-3'"
  WHITESPACE "\n    "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'should print #7-4'"
  WHITESPACE "\n\n"
  COMMENT "-- show that vars and backticks are not expanded when ignoring extra args"
  WHITESPACE "\n\n"
  COMMENT "-- show that vars and backticks are not expanded and commands are ignored"
  WHITESPACE "\n"
  COMMENT "-- when in a false if-branch"
  WHITESPACE "\n\t"
  ERROR
    COLON ":"
  ERROR
    IDENT "try_to_quit"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    BACKTICK "`"
  ERROR
    IDENT "nosuchcommand"
  ERROR
    BACKTICK "`"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "foo"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'foo'"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "\"foo\""
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "pset"
  WHITESPACE " "
  ERROR
    IDENT "fieldsep"
  WHITESPACE " "
  ERROR
    PIPE "|"
  WHITESPACE " "
  ERROR
    BACKTICK "`"
  ERROR
    IDENT "nosuchcommand"
  ERROR
    BACKTICK "`"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "foo"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'foo'"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "\"foo\""
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "a"
  WHITESPACE "\n\t"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            PARAM "$1"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "bind"
  WHITESPACE " "
  ERROR
    INT_NUMBER "1"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "g"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "bind_named"
  WHITESPACE " "
  ERROR
    IDENT "stmt1"
  WHITESPACE " "
  ERROR
    INT_NUMBER "1"
  WHITESPACE " "
  ERROR
    INT_NUMBER "2"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "g"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "C"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "c"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE " "
  ERROR
    IDENT "arg2"
  WHITESPACE " "
  ERROR
    IDENT "arg3"
  WHITESPACE " "
  ERROR
    IDENT "arg4"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "cd"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  CLOSE_STMT
    CLOSE_KW "close"
    WHITESPACE " "
    NAME
      IDENT "stmt1"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "conninfo"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "arg1"
  WHITESPACE " "
  ERROR
    IDENT "arg2"
  WHITESPACE " "
  ERROR
    IDENT "arg3"
  WHITESPACE " "
  ERROR
    IDENT "arg4"
  WHITESPACE " "
  ERROR
    IDENT "arg5"
  WHITESPACE " "
  ERROR
    IDENT "arg6"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "copyright"
  WHITESPACE "\n\t"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "1"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "one"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "2"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "3"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "crosstabview"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "dt"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "e"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE " "
  ERROR
    IDENT "arg2"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "ef"
  WHITESPACE " "
  ERROR
    IDENT "whole_line"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "ev"
  WHITESPACE " "
  ERROR
    IDENT "whole_line"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE " "
  ERROR
    IDENT "arg2"
  WHITESPACE " "
  ERROR
    IDENT "arg3"
  WHITESPACE " "
  ERROR
    IDENT "arg4"
  WHITESPACE " "
  ERROR
    IDENT "arg5"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    ENCODING_KW "encoding"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "endpipeline"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "errverbose"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "f"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "flush"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "flushrequest"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "g"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "gx"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "gexec"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "getresults"
  WHITESPACE "\n\t"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "1"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "one"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "h"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    QUESTION "?"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "html"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "i"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "ir"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "l"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "lo"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE " "
  ERROR
    IDENT "arg2"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "lo_list"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "o"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "p"
  WHITESPACE "\n\t"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "1"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "parse"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    PASSWORD_KW "password"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "prompt"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE " "
  ERROR
    IDENT "arg2"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "pset"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE " "
  ERROR
    IDENT "arg2"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "q"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  RESET_STMT
    RESET_KW "reset"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "s"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "sendpipeline"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "arg1"
    WHITESPACE " "
    IDENT "arg2"
  WHITESPACE " "
  ERROR
    IDENT "arg3"
  WHITESPACE " "
  ERROR
    IDENT "arg4"
  WHITESPACE " "
  ERROR
    IDENT "arg5"
  WHITESPACE " "
  ERROR
    IDENT "arg6"
  WHITESPACE " "
  ERROR
    IDENT "arg7"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "setenv"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE " "
  ERROR
    IDENT "arg2"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "sf"
  WHITESPACE " "
  ERROR
    IDENT "whole_line"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "sv"
  WHITESPACE " "
  ERROR
    IDENT "whole_line"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "startpipeline"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "syncpipeline"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "t"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "T"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "timing"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "unset"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "w"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "watch"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE " "
  ERROR
    IDENT "arg2"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "x"
  WHITESPACE " "
  ERROR
    IDENT "arg1"
  WHITESPACE "\n\t"
  COMMENT "-- \\else here is eaten as part of OT_FILEPIPE argument"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "w"
  WHITESPACE " "
  ERROR
    PIPE "|"
  ERROR
    SLASH "/"
  ERROR
    NO_KW "no"
  ERROR
    SLASH "/"
  ERROR
    IDENT "such"
  ERROR
    SLASH "/"
  ERROR
    IDENT "file"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    ELSE_KW "else"
  WHITESPACE "\n\t"
  COMMENT "-- \\endif here is eaten as part of whole-line argument"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    BANG "!"
  WHITESPACE " "
  ERROR
    IDENT "whole_line"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "endif"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "z"
  WHITESPACE "\n\t"
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'should print #8-1'"
  WHITESPACE "\n\n"
  COMMENT "-- :{?...} defined variable test"
  WHITESPACE "\n  "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'#9-1 ok, variable i is defined'"
  WHITESPACE "\n  "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'should not print #9-2'"
  WHITESPACE "\n\n  "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'should not print #10-1'"
  WHITESPACE "\n  "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "echo"
  WHITESPACE " "
  ERROR
    STRING "'#10-2 ok, variable no_such_variable is not defined'"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    ERROR "{"
  ERROR
    QUESTION "?"
  ERROR
    IDENT "i"
  ERROR
    ERROR "}"
  WHITESPACE " "
  ERROR
    AS_KW "AS"
  WHITESPACE " "
  ERROR
    IDENT "i_is_defined"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          PREFIX_EXPR
            NOT_KW "NOT"
            WHITESPACE " "
            ERROR
              COLON ":"
  ERROR
    ERROR "{"
  ERROR
    QUESTION "?"
  ERROR
    IDENT "no_such_var"
  ERROR
    ERROR "}"
  WHITESPACE " "
  ERROR
    AS_KW "AS"
  WHITESPACE " "
  ERROR
    IDENT "no_such_var_is_not_defined"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- SHOW_CONTEXT"
  WHITESPACE "\n\n"
  DO_STMT
    DO_KW "do"
    WHITESPACE " "
    LITERAL
      DOLLAR_QUOTED_STRING "$$\nbegin\n  raise notice 'foo';\n  raise exception 'bar';\nend $$"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DO_STMT
    DO_KW "do"
    WHITESPACE " "
    LITERAL
      DOLLAR_QUOTED_STRING "$$\nbegin\n  raise notice 'foo';\n  raise exception 'bar';\nend $$"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DO_STMT
    DO_KW "do"
    WHITESPACE " "
    LITERAL
      DOLLAR_QUOTED_STRING "$$\nbegin\n  raise notice 'foo';\n  raise exception 'bar';\nend $$"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test printing and clearing the query buffer"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "2"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "r"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "3"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "p"
  WHITESPACE "\n"
  ERROR
    UNION_KW "UNION"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "4"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "p"
  WHITESPACE "\n"
  ERROR
    UNION_KW "UNION"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "5"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- tests for special result variables"
  WHITESPACE "\n\n"
  COMMENT "-- working query, 2 rows selected"
  WHITESPACE "\n"
  COMPOUND_SELECT
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              INT_NUMBER "1"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "stuff"
    WHITESPACE " "
    UNION_KW "UNION"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- syntax error"
  WHITESPACE "\n"
  COMPOUND_SELECT
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              INT_NUMBER "1"
    WHITESPACE " "
    UNION_KW "UNION"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- empty query"
  WHITESPACE "\n"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- must have kept previous values"
  WHITESPACE "\n\n"
  COMMENT "-- other query error"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "this_table_does_not_exist"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- nondefault verbosity error settings (except verbose, which is too unstable)"
  WHITESPACE "\n"
  COMPOUND_SELECT
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              INT_NUMBER "1"
    WHITESPACE " "
    UNION_KW "UNION"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            LITERAL
              INT_NUMBER "1"
            SLASH "/"
            LITERAL
              INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- working \\gdesc"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "3"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "three"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "4"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "four"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "gdesc"
  WHITESPACE "\n\n"
  COMMENT "-- \\gdesc with an error"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "4"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          ERROR
            ERROR "\\"
        TARGET
          NAME_REF
            IDENT "gdesc"
          WHITESPACE "\n\n"
          COMMENT "-- check row count for a query with chunked results"
          WHITESPACE "\n"
          NAME
            SELECT_KW "select"
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "unique2"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "unique2"
    WHITESPACE " "
    LIMIT_CLAUSE
      LIMIT_KW "limit"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "19"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- chunked results with an error after the first chunk"
  WHITESPACE "\n"
  COMMENT "-- (we must disable parallel query here, else the behavior is timing-dependent)"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "debug_parallel_query"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            LITERAL
              INT_NUMBER "1"
            SLASH "/"
            PAREN_EXPR
              L_PAREN "("
              BIN_EXPR
                LITERAL
                  INT_NUMBER "15"
                MINUS "-"
                NAME_REF
                  IDENT "unique2"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "unique2"
    WHITESPACE " "
    LIMIT_CLAUSE
      LIMIT_KW "limit"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "19"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "debug_parallel_query"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  CREATE_SCHEMA_STMT
    CREATE_KW "create"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    NAME
      IDENT "testpart"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_ROLE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    ROLE_KW "role"
    WHITESPACE " "
    NAME
      IDENT "regress_partitioning_role"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_SCHEMA_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    NAME_REF
      IDENT "testpart"
    WHITESPACE " "
    OWNER_KW "owner"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    IDENT "regress_partitioning_role"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_ROLE_STMT
    SET_KW "set"
    WHITESPACE " "
    ROLE_KW "role"
  WHITESPACE " "
  ERROR
    TO_KW "to"
  WHITESPACE " "
  ERROR
    IDENT "regress_partitioning_role"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- run test inside own schema and hide other partitions"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "search_path"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    IDENT "testpart"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "testtable_apple"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "logdate"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "date"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "testtable_orange"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "logdate"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "date"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "testtable_apple_index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "testtable_apple"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "logdate"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "testtable_orange_index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "testtable_orange"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "logdate"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "testpart_apple"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "logdate"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "date"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    RANGE_KW "range"
    L_PAREN "("
    NAME_REF
      IDENT "logdate"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "testpart_orange"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "logdate"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "date"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    RANGE_KW "range"
    L_PAREN "("
    NAME_REF
      IDENT "logdate"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "testpart_apple_index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "testpart_apple"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "logdate"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "testpart_orange_index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "testpart_orange"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "logdate"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- only partition related object should be displayed"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "testtable_apple"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "testtable_orange"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "testpart_apple"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "testpart_orange"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parent_tab"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    RANGE_KW "range"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "id"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "parent_index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent_tab"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "id"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "child_0_10"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent_tab"
    WHITESPACE "\n  "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "10"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "child_10_20"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent_tab"
    WHITESPACE "\n  "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "10"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "20"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "child_20_30"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent_tab"
    WHITESPACE "\n  "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "20"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "30"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent_tab"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          LITERAL
            INT_NUMBER "29"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "child_30_40"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent_tab"
    WHITESPACE "\n"
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "30"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "40"
    R_PAREN ")"
    WHITESPACE "\n  "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    RANGE_KW "range"
    L_PAREN "("
    NAME_REF
      IDENT "id"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "child_30_35"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "child_30_40"
    WHITESPACE "\n  "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "30"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "35"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "child_35_40"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "child_30_40"
    WHITESPACE "\n   "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "35"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "40"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent_tab"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "30"
          COMMA ","
          LITERAL
            INT_NUMBER "39"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent_tab"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_SCHEMA_STMT
    DROP_KW "drop"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    NAME
      IDENT "testpart"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "search_path"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_ROLE_STMT
    SET_KW "set"
    WHITESPACE " "
    ROLE_KW "role"
  WHITESPACE " "
  ERROR
    TO_KW "to"
  WHITESPACE " "
  ERROR
    DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "drop"
    WHITESPACE " "
    ROLE_KW "role"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_partitioning_role"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- \\d on toast table (use pg_statistic's toast table, which has a known name)"
  WHITESPACE "\n\n"
  COMMENT "-- check printing info about access methods"
  WHITESPACE "\n\n"
  COMMENT "-- check \\dconfig"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "work_mem"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "10240"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "work_mem"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check \\df, \\do with argument specifications"
  WHITESPACE "\n\n"
  COMMENT "-- check \\df+"
  WHITESPACE "\n"
  COMMENT "-- we have to use functions with a predictable owner name, so make a role"
  WHITESPACE "\n"
  CREATE_ROLE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    ROLE_KW "role"
    WHITESPACE " "
    NAME
      IDENT "regress_psql_user"
    WHITESPACE " "
    IDENT "superuser"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "set"
    WHITESPACE " "
    SESSION_KW "session"
    WHITESPACE " "
    AUTHORIZATION_KW "authorization"
    WHITESPACE " "
    IDENT "regress_psql_user"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "psql_df_internal"
    WHITESPACE " "
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "float8"
      R_PAREN ")"
    WHITESPACE "\n  "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "float8"
    WHITESPACE "\n  "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "internal"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "immutable"
      WHITESPACE " "
      PARALLEL_FUNC_OPTION
        PARALLEL_KW "parallel"
        WHITESPACE " "
        IDENT "safe"
      WHITESPACE " "
      STRICT_FUNC_OPTION
        STRICT_KW "strict"
      WHITESPACE "\n  "
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          STRING "'dsin'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "psql_df_sql"
    WHITESPACE " "
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      R_PAREN ")"
    WHITESPACE "\n  "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INTEGER_KW "integer"
    WHITESPACE "\n  "
    FUNC_OPTION_LIST
      SECURITY_FUNC_OPTION
        SECURITY_KW "security"
        WHITESPACE " "
        DEFINER_KW "definer"
      WHITESPACE "\n  "
      BEGIN_FUNC_OPTION
        BEGIN_KW "begin"
        WHITESPACE " "
        ATOMIC_KW "atomic"
        WHITESPACE " "
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                BIN_EXPR
                  NAME_REF
                    IDENT "x"
                  WHITESPACE " "
                  PLUS "+"
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "1"
        SEMICOLON ";"
        WHITESPACE " "
        END_KW "end"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "psql_df_plpgsql"
    WHITESPACE " "
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE "\n  "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "void"
    WHITESPACE "\n  "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE "\n  "
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$ begin return; end; $$"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT_STMT
    COMMENT_KW "comment"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "psql_df_plpgsql"
    WHITESPACE " "
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    IS_KW "is"
    WHITESPACE " "
    LITERAL
      STRING "'some comment'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ROLLBACK_STMT
    ROLLBACK_KW "rollback"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "drop"
    WHITESPACE " "
    ROLE_KW "role"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_psql_user"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check \\sf"
  WHITESPACE "\n\n"
  COMMENT "-- AUTOCOMMIT"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "ac_test"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ac_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "ac_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ac_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "ac_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ac_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "ac_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ac_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "ac_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ac_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "ac_test"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- should be gone now"
  WHITESPACE "\n\n"
  COMMENT "-- ON_ERROR_ROLLBACK"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "oer_test"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "oer_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "oer_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'foo'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "oer_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "oer_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "oer_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "oer_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "oer_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
    WHITESPACE " "
    AND_KW "AND"
    WHITESPACE " "
    CHAIN_KW "CHAIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "oer_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "6"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "oer_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "oer_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ECHO errors"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "notexists"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- combined queries"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "warn"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "msg"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              BOOLEAN_KW "BOOLEAN"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE "\n"
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\n  BEGIN RAISE NOTICE 'warn %', msg ; RETURN TRUE ; END\n$$"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- show both"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "1"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "one"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "warn"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'1.5'"
              R_PAREN ")"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "2"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "two"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ; applies to last query only"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "3"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "three"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "warn"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'3.5'"
              R_PAREN ")"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "4"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "four"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- syntax error stops all processing"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "5"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            LITERAL
              INT_NUMBER "6"
            WHITESPACE " "
            PLUS "+"
            WHITESPACE " "
            ERROR
              ERROR "\\"
  SEMICOLON ";"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "warn"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'6.5'"
              R_PAREN ")"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "7"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- with aborted transaction, stop on first error"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "8"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "eight"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            LITERAL
              INT_NUMBER "9"
            SLASH "/"
            LITERAL
              INT_NUMBER "0"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "nine"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE " "
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "10"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "ten"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- close previously aborted transaction"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- miscellaneous SQL commands"
  WHITESPACE "\n"
  COMMENT "-- (non SELECT output is sent to stderr, thus is not shown in expected results)"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            STRING "'ok'"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"begin\""
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "psql_comics"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "s"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
      R_PAREN ")"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "psql_comics"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Calvin'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'hobbes'"
      R_PAREN ")"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "1"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "one"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "warn"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'1.5'"
              R_PAREN ")"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "2"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "two"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "warn"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          TEXT_KW "TEXT"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- \\g with file"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMPORARY_KW "TEMPORARY"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "reload_output"
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n  "
      COLUMN
        NAME_REF
          IDENT "lineno"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "NOT"
          WHITESPACE " "
          NULL_KW "NULL"
        WHITESPACE " "
        GENERATED_CONSTRAINT
          GENERATED_KW "GENERATED"
          WHITESPACE " "
          ALWAYS_KW "ALWAYS"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          IDENTITY_KW "IDENTITY"
      COMMA ","
      WHITESPACE "\n  "
      COLUMN
        NAME_REF
          IDENT "line"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "1"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "a"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "g"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "g_out_file"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "reload_output"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "line"
      R_PAREN ")"
    WHITESPACE " "
    FROM_KW "FROM"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'g_out_file'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "2"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "b"
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "3"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "c"
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "4"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "d"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "g"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "g_out_file"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "reload_output"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "line"
      R_PAREN ")"
    WHITESPACE " "
    FROM_KW "FROM"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'g_out_file'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              STRING "'foo'"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE " "
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              STRING "'bar'"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "g"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "g_out_file"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "reload_output"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "line"
      R_PAREN ")"
    WHITESPACE " "
    FROM_KW "FROM"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'g_out_file'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "line"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "reload_output"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "lineno"
  SEMICOLON ";"
  WHITESPACE "\n"
  TRUNCATE_STMT
    TRUNCATE_KW "TRUNCATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "reload_output"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- \\o with file"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "1"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "a"
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "2"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "b"
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "3"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "c"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- COPY TO file"
  WHITESPACE "\n"
  COMMENT "-- The data goes to :g_out_file and the status to :o_out_file"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "unique1"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "onek"
      WHITESPACE " "
      ORDER_BY_CLAUSE
        ORDER_KW "ORDER"
        WHITESPACE " "
        BY_KW "BY"
        WHITESPACE " "
        NAME_REF
          IDENT "unique1"
      WHITESPACE " "
      LIMIT_CLAUSE
        LIMIT_KW "LIMIT"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'g_out_file'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- DML command status"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "onek"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "unique1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NAME_REF
      IDENT "unique1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check the contents of the files generated."
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "reload_output"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "line"
      R_PAREN ")"
    WHITESPACE " "
    FROM_KW "FROM"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'g_out_file'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "line"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "reload_output"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "lineno"
  SEMICOLON ";"
  WHITESPACE "\n"
  TRUNCATE_STMT
    TRUNCATE_KW "TRUNCATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "reload_output"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "reload_output"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "line"
      R_PAREN ")"
    WHITESPACE " "
    FROM_KW "FROM"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'o_out_file'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "line"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "reload_output"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "lineno"
  SEMICOLON ";"
  WHITESPACE "\n"
  TRUNCATE_STMT
    TRUNCATE_KW "TRUNCATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "reload_output"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Multiple COPY TO STDOUT with output file"
  WHITESPACE "\n"
  COMMENT "-- The data goes to :o_out_file with no status generated."
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              STRING "'foo1'"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE " "
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              STRING "'bar1'"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Combination of \\o and \\g file with multiple COPY queries."
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              STRING "'foo2'"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE " "
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              STRING "'bar2'"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  ERROR
    IDENT "g"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "g_out_file"
  WHITESPACE "\n\n"
  COMMENT "-- Check the contents of the files generated."
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "reload_output"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "line"
      R_PAREN ")"
    WHITESPACE " "
    FROM_KW "FROM"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'g_out_file'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "line"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "reload_output"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "lineno"
  SEMICOLON ";"
  WHITESPACE "\n"
  TRUNCATE_STMT
    TRUNCATE_KW "TRUNCATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "reload_output"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "reload_output"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "line"
      R_PAREN ")"
    WHITESPACE " "
    FROM_KW "FROM"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'o_out_file'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "line"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "reload_output"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "lineno"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "reload_output"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- AUTOCOMMIT and combined queries"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- BEGIN is now implicit"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "foo"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "s"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
      R_PAREN ")"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "foo"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "s"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
      R_PAREN ")"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "foo"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "s"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'hello'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'world'"
      R_PAREN ")"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "foo"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- table foo is still there"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "foo"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- BEGIN now explicit for multi-statement transactions"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "foo"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "s"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
      R_PAREN ")"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "foo"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "s"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'hello'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'world'"
      R_PAREN ")"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "foo"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- implicit transactions"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "foo"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- test ON_ERROR_ROLLBACK and combined queries"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "psql_error"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "msg"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              BOOLEAN_KW "BOOLEAN"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\n  BEGIN\n    RAISE EXCEPTION 'error %', msg;\n  END;\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bla"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "s"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "NO_SUCH_TYPE"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "               "
  CREATE_TABLE
    COMMENT "-- fails"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bla"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "s"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "                       "
  COMMENT "-- succeeds"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "psql_error"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'oops!'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "                     "
  COMMENT "-- fails"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bla"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Calvin'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Hobbes'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "bla"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bla"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Susie'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "         "
  COMMENT "-- succeeds"
  WHITESPACE "\n"
  COMMENT "-- now with combined queries"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bla"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Rosalyn'"
      R_PAREN ")"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE "     "
  COMMENT "-- will rollback"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            STRING "'before error'"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            SHOW_KW "show"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE "          "
  COMMENT "-- will show nevertheless!"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "psql_error"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'boum!'"
              R_PAREN ")"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE "           "
  COMMENT "-- failure"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            STRING "'after error'"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "noshow"
  SEMICOLON ";"
  WHITESPACE "         "
  COMMENT "-- hidden by preceding error"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bla"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "s"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Moe'"
      R_PAREN ")"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE "      "
  COMMENT "-- will rollback"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "psql_error"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'bam!'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bla"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Miss Wormwood'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- succeeds"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "bla"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- some with autocommit off"
  WHITESPACE "\n\n"
  COMMENT "-- implicit BEGIN"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bla"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Dad'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "           "
  COMMENT "-- succeeds"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "psql_error"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'bad!'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "                "
  COMMENT "-- implicit partial rollback"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bla"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Mum'"
      R_PAREN ")"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE "         "
  COMMENT "-- will rollback"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"#mum\""
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "bla"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "s"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'Mum'"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE "               "
  COMMENT "-- but be counted here"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "psql_error"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'bad!'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "                "
  COMMENT "-- implicit partial rollback"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"#mum\""
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "bla"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "s"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'Mum'"
  WHITESPACE " "
  ERROR
    ERROR "\\"
  SEMICOLON ";"
  WHITESPACE "               "
  COMMENT "-- no mum here"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "bla"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- reset all"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bla"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "psql_error"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check describing invalid multipart names"
  WHITESPACE "\n\n"
  COMMENT "-- check that dots within quoted name segments are not counted"
  WHITESPACE "\n\n"
  COMMENT "-- again, but with dotted schema qualifications."
  WHITESPACE "\n\n"
  COMMENT "-- again, but with current database and dotted schema qualifications."
  WHITESPACE "\n\n"
  COMMENT "-- again, but with dotted database and dotted schema qualifications."
  WHITESPACE "\n\n"
  COMMENT "-- check \\drg and \\du"
  WHITESPACE "\n"
  CREATE_ROLE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME
      IDENT "regress_du_role0"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_ROLE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME
      IDENT "regress_du_role1"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_ROLE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME
      IDENT "regress_du_role2"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_ROLE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME
      IDENT "regress_du_admin"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    IDENT "regress_du_role0"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_du_admin"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    ADMIN_KW "ADMIN"
    WHITESPACE " "
    TRUE_KW "TRUE"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    IDENT "regress_du_role1"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_du_admin"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    ADMIN_KW "ADMIN"
    WHITESPACE " "
    TRUE_KW "TRUE"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    IDENT "regress_du_role2"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_du_admin"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    ADMIN_KW "ADMIN"
    WHITESPACE " "
    TRUE_KW "TRUE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    IDENT "regress_du_role0"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_du_role1"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    ADMIN_KW "ADMIN"
    WHITESPACE " "
    TRUE_KW "TRUE"
  ERROR
    COMMA ","
  WHITESPACE "  "
  ERROR
    INHERIT_KW "INHERIT"
  WHITESPACE " "
  ERROR
    TRUE_KW "TRUE"
  ERROR
    COMMA ","
  WHITESPACE "  "
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LITERAL
      TRUE_KW "TRUE"
  WHITESPACE "  "
  ERROR
    GRANTED_KW "GRANTED"
  WHITESPACE " "
  ERROR
    BY_KW "BY"
  WHITESPACE " "
  ERROR
    IDENT "regress_du_admin"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    IDENT "regress_du_role0"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_du_role2"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    ADMIN_KW "ADMIN"
    WHITESPACE " "
    TRUE_KW "TRUE"
  ERROR
    COMMA ","
  WHITESPACE "  "
  ERROR
    INHERIT_KW "INHERIT"
  WHITESPACE " "
  ERROR
    FALSE_KW "FALSE"
  ERROR
    COMMA ","
  WHITESPACE " "
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LITERAL
      FALSE_KW "FALSE"
  WHITESPACE " "
  ERROR
    GRANTED_KW "GRANTED"
  WHITESPACE " "
  ERROR
    BY_KW "BY"
  WHITESPACE " "
  ERROR
    IDENT "regress_du_admin"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    IDENT "regress_du_role1"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_du_role2"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    ADMIN_KW "ADMIN"
    WHITESPACE " "
    TRUE_KW "TRUE"
  WHITESPACE " "
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    INHERIT_KW "INHERIT"
  WHITESPACE " "
  ERROR
    FALSE_KW "FALSE"
  ERROR
    COMMA ","
  WHITESPACE " "
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LITERAL
      TRUE_KW "TRUE"
  WHITESPACE "  "
  ERROR
    GRANTED_KW "GRANTED"
  WHITESPACE " "
  ERROR
    BY_KW "BY"
  WHITESPACE " "
  ERROR
    IDENT "regress_du_admin"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    IDENT "regress_du_role0"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_du_role1"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    ADMIN_KW "ADMIN"
    WHITESPACE " "
    FALSE_KW "FALSE"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    INHERIT_KW "INHERIT"
  WHITESPACE " "
  ERROR
    TRUE_KW "TRUE"
  ERROR
    COMMA ","
  WHITESPACE "  "
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LITERAL
      FALSE_KW "FALSE"
  WHITESPACE " "
  ERROR
    GRANTED_KW "GRANTED"
  WHITESPACE " "
  ERROR
    BY_KW "BY"
  WHITESPACE " "
  ERROR
    IDENT "regress_du_role1"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    IDENT "regress_du_role0"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_du_role2"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    ADMIN_KW "ADMIN"
    WHITESPACE " "
    FALSE_KW "FALSE"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    INHERIT_KW "INHERIT"
  WHITESPACE " "
  ERROR
    TRUE_KW "TRUE"
  WHITESPACE " "
  ERROR
    COMMA ","
  WHITESPACE " "
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LITERAL
      TRUE_KW "TRUE"
  WHITESPACE "  "
  ERROR
    GRANTED_KW "GRANTED"
  WHITESPACE " "
  ERROR
    BY_KW "BY"
  WHITESPACE " "
  ERROR
    IDENT "regress_du_role1"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    IDENT "regress_du_role0"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_du_role1"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    ADMIN_KW "ADMIN"
    WHITESPACE " "
    FALSE_KW "FALSE"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    INHERIT_KW "INHERIT"
  WHITESPACE " "
  ERROR
    FALSE_KW "FALSE"
  ERROR
    COMMA ","
  WHITESPACE " "
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LITERAL
      TRUE_KW "TRUE"
  WHITESPACE "  "
  ERROR
    GRANTED_KW "GRANTED"
  WHITESPACE " "
  ERROR
    BY_KW "BY"
  WHITESPACE " "
  ERROR
    IDENT "regress_du_role2"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    IDENT "regress_du_role0"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_du_role2"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    ADMIN_KW "ADMIN"
    WHITESPACE " "
    FALSE_KW "FALSE"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    INHERIT_KW "INHERIT"
  WHITESPACE " "
  ERROR
    FALSE_KW "FALSE"
  ERROR
    COMMA ","
  WHITESPACE " "
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LITERAL
      FALSE_KW "FALSE"
  WHITESPACE " "
  ERROR
    GRANTED_KW "GRANTED"
  WHITESPACE " "
  ERROR
    BY_KW "BY"
  WHITESPACE " "
  ERROR
    IDENT "regress_du_role2"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  DROP_ROLE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_du_role0"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_du_role1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_du_role2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_du_admin"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test display of empty privileges."
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Create an owner for tested objects because output contains owner name."
  WHITESPACE "\n"
  CREATE_ROLE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME
      IDENT "regress_zeropriv_owner"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_ROLE_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    IDENT "regress_zeropriv_owner"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    DOMAIN_KW "DOMAIN"
    WHITESPACE " "
    NAME
      IDENT "regress_zeropriv_domain"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
  SEMICOLON ";"
  WHITESPACE "\n"
  REVOKE_STMT
    REVOKE_KW "REVOKE"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    DOMAIN_KW "DOMAIN"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "regress_zeropriv_domain"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    CURRENT_USER_KW "CURRENT_USER"
    COMMA ","
    WHITESPACE " "
    IDENT "PUBLIC"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_PROCEDURE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    PROCEDURE_KW "PROCEDURE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "regress_zeropriv_proc"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "''"
  SEMICOLON ";"
  WHITESPACE "\n"
  REVOKE_STMT
    REVOKE_KW "REVOKE"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PROCEDURE_KW "PROCEDURE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "regress_zeropriv_proc"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    CURRENT_USER_KW "CURRENT_USER"
    COMMA ","
    WHITESPACE " "
    IDENT "PUBLIC"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "regress_zeropriv_tbl"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  REVOKE_STMT
    REVOKE_KW "REVOKE"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "regress_zeropriv_tbl"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    CURRENT_USER_KW "CURRENT_USER"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TYPE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "regress_zeropriv_type"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  REVOKE_STMT
    REVOKE_KW "REVOKE"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "regress_zeropriv_type"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    CURRENT_USER_KW "CURRENT_USER"
    COMMA ","
    WHITESPACE " "
    IDENT "PUBLIC"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test display of default privileges with \\pset null."
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "defprivs"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "defprivs"
  SEMICOLON ";"
  WHITESPACE "\n"
---
ERROR@262: expected SEMICOLON
ERROR@263: expected command, found ERROR
ERROR@264: expected command, found IDENT
ERROR@294: expected SEMICOLON
ERROR@295: expected command, found ERROR
ERROR@296: expected command, found IDENT
ERROR@369: expected SEMICOLON
ERROR@370: expected command, found ERROR
ERROR@371: expected command, found IDENT
ERROR@401: expected SEMICOLON
ERROR@402: expected command, found ERROR
ERROR@403: expected command, found IDENT
ERROR@462: expected SEMICOLON
ERROR@463: expected command, found ERROR
ERROR@464: expected command, found IDENT
ERROR@466: expected command, found L_PAREN
ERROR@467: expected command, found FORMAT_KW
ERROR@473: expected command, found EQ
ERROR@474: expected command, found CSV_KW
ERROR@478: expected command, found IDENT
ERROR@490: expected command, found EQ
ERROR@491: expected command, found STRING
ERROR@495: expected command, found R_PAREN
ERROR@522: expected SEMICOLON
ERROR@523: expected command, found ERROR
ERROR@524: expected command, found IDENT
ERROR@527: expected command, found L_PAREN
ERROR@528: expected command, found IDENT
ERROR@533: expected command, found EQ
ERROR@534: expected command, found STRING
ERROR@543: expected command, found R_PAREN
ERROR@590: expected SEMICOLON
ERROR@591: expected command, found ERROR
ERROR@592: expected command, found IDENT
ERROR@598: expected command, found STRING
ERROR@609: expected SEMICOLON
ERROR@610: expected command, found ERROR
ERROR@611: expected command, found IDENT
ERROR@617: expected command, found IDENT
ERROR@632: expected SEMICOLON
ERROR@633: expected command, found ERROR
ERROR@634: expected command, found IDENT
ERROR@640: expected command, found IDENT
ERROR@659: expected SEMICOLON
ERROR@660: expected command, found ERROR
ERROR@661: expected command, found IDENT
ERROR@667: expected command, found IDENT
ERROR@1046: expected SEMICOLON
ERROR@1047: expected command, found ERROR
ERROR@1048: expected command, found IDENT
ERROR@1053: expected command, found ERROR
ERROR@1054: expected command, found IDENT
ERROR@1065: expected SEMICOLON
ERROR@1066: expected command, found ERROR
ERROR@1067: expected command, found IDENT
ERROR@1072: expected command, found STRING
ERROR@1078: expected command, found ERROR
ERROR@1079: expected command, found IDENT
ERROR@1094: expected SEMICOLON
ERROR@1095: expected command, found ERROR
ERROR@1096: expected command, found IDENT
ERROR@1101: expected command, found STRING
ERROR@1107: expected command, found STRING
ERROR@1113: expected command, found ERROR
ERROR@1114: expected command, found IDENT
ERROR@1157: expected SEMICOLON
ERROR@1158: expected command, found ERROR
ERROR@1159: expected command, found IDENT
ERROR@1164: expected command, found STRING
ERROR@1170: expected command, found ERROR
ERROR@1171: expected command, found IDENT
ERROR@1176: expected command, found INT_NUMBER
ERROR@1178: expected command, found ERROR
ERROR@1179: expected command, found IDENT
ERROR@1248: expected SEMICOLON
ERROR@1249: expected command, found ERROR
ERROR@1250: expected command, found IDENT
ERROR@1255: expected command, found INT_NUMBER
ERROR@1257: expected command, found ERROR
ERROR@1258: expected command, found IDENT
ERROR@1260: expected command, found ERROR
ERROR@1261: expected command, found IDENT
ERROR@1266: expected command, found INT_NUMBER
ERROR@1268: expected command, found ERROR
ERROR@1269: expected command, found IDENT
ERROR@1307: expected SEMICOLON
ERROR@1308: expected command, found ERROR
ERROR@1309: expected command, found IDENT
ERROR@1314: expected command, found ERROR
ERROR@1315: expected command, found IDENT
ERROR@1339: expected SEMICOLON
ERROR@1340: expected command, found ERROR
ERROR@1351: expected SEMICOLON
ERROR@1352: expected command, found ERROR
ERROR@1353: expected command, found IDENT
ERROR@1358: expected command, found ERROR
ERROR@1359: expected command, found IDENT
ERROR@1388: expected SEMICOLON
ERROR@1389: expected command, found ERROR
ERROR@1390: expected command, found IDENT
ERROR@1395: expected command, found STRING
ERROR@1401: expected command, found ERROR
ERROR@1402: expected command, found IDENT
ERROR@1486: expected command, found IDENT
ERROR@1553: expected SEMICOLON
ERROR@1590: expected command, found IDENT
ERROR@1665: expected command, found IDENT
ERROR@1673: expected command, found ERROR
ERROR@1674: expected command, found ERROR
ERROR@1676: expected command, found ERROR
ERROR@1677: expected command, found IDENT
ERROR@1682: expected command, found COLON
ERROR@1683: expected command, found IDENT
ERROR@1716: expected command, found IDENT
ERROR@1724: expected command, found ERROR
ERROR@1725: expected command, found IDENT
ERROR@1730: expected command, found COLON
ERROR@1731: expected command, found IDENT
ERROR@1740: expected command, found ERROR
ERROR@1741: expected command, found IDENT
ERROR@1746: expected command, found COLON
ERROR@1747: expected command, found IDENT
ERROR@1780: expected command, found IDENT
ERROR@1788: expected command, found ERROR
ERROR@1789: expected command, found ERROR
ERROR@1791: expected command, found ERROR
ERROR@1792: expected command, found IDENT
ERROR@1794: expected command, found ERROR
ERROR@1795: expected command, found IDENT
ERROR@1800: expected command, found COLON
ERROR@1801: expected command, found IDENT
ERROR@1810: expected command, found COLON
ERROR@1811: expected command, found IDENT
ERROR@1841: expected SEMICOLON
ERROR@1842: expected command, found ERROR
ERROR@1843: expected command, found IDENT
ERROR@1847: expected command, found IDENT
ERROR@1855: expected command, found ERROR
ERROR@1856: expected command, found IDENT
ERROR@1861: expected command, found COLON
ERROR@1862: expected command, found IDENT
ERROR@1871: expected command, found COLON
ERROR@1872: expected command, found IDENT
ERROR@2262: expected command, found IDENT
ERROR@2270: expected command, found ERROR
ERROR@2271: expected command, found ERROR
ERROR@2273: expected command, found ERROR
ERROR@2274: expected command, found IDENT
ERROR@2279: expected command, found COLON
ERROR@2280: expected command, found IDENT
ERROR@2313: expected command, found IDENT
ERROR@2321: expected command, found ERROR
ERROR@2322: expected command, found IDENT
ERROR@2327: expected command, found COLON
ERROR@2328: expected command, found IDENT
ERROR@2337: expected command, found ERROR
ERROR@2338: expected command, found IDENT
ERROR@2343: expected command, found COLON
ERROR@2344: expected command, found IDENT
ERROR@2657: missing comma
ERROR@2734: expected SEMICOLON
ERROR@2735: expected command, found AS_KW
ERROR@2782: expected SEMICOLON
ERROR@2783: expected command, found ERROR
ERROR@2784: expected command, found IDENT
ERROR@2810: expected SEMICOLON
ERROR@2811: expected command, found ERROR
ERROR@2812: expected command, found IDENT
ERROR@2868: expected an expression, found ERROR
ERROR@2874: expected SEMICOLON
ERROR@2919: expected SEMICOLON
ERROR@2920: expected command, found ERROR
ERROR@2921: expected command, found IDENT
ERROR@2953: expected SEMICOLON
ERROR@2954: expected command, found ERROR
ERROR@2955: expected command, found IDENT
ERROR@3122: expected SEMICOLON
ERROR@3195: expected SEMICOLON
ERROR@3196: expected command, found ERROR
ERROR@3197: expected command, found IDENT
ERROR@3203: expected command, found ERROR
ERROR@3204: expected command, found IDENT
ERROR@3315: expected command, found IDENT
ERROR@3558: expected SEMICOLON
ERROR@4169: missing comma
ERROR@4181: missing comma
ERROR@6039: expected NONE or role_name
ERROR@6039: expected SEMICOLON
ERROR@6040: expected command, found TO_KW
ERROR@6043: expected command, found IDENT
ERROR@7151: missing comma
ERROR@8879: expected command, found NOT_KW
ERROR@8883: expected command, found IDENT
ERROR@8891: expected command, found IDENT
ERROR@8897: expected command, found NOT_KW
ERROR@8901: expected command, found IDENT
ERROR@9021: expected SEMICOLON
ERROR@9024: expected command, found ERROR
ERROR@9025: expected command, found IF_KW
ERROR@9028: expected command, found TRUE_KW
ERROR@9037: expected command, found INT_NUMBER
ERROR@9042: expected command, found ERROR
ERROR@9043: expected command, found ELSE_KW
ERROR@9052: expected command, found L_PAREN
ERROR@9053: expected command, found IDENT
ERROR@9061: expected command, found ERROR
ERROR@9062: expected command, found IDENT
ERROR@9070: expected command, found IDENT
ERROR@9088: expected SEMICOLON
ERROR@9089: expected command, found ERROR
ERROR@9090: expected command, found IF_KW
ERROR@9093: expected command, found FALSE_KW
ERROR@9099: expected command, found ERROR
ERROR@9100: expected command, found ERROR
ERROR@9102: expected command, found L_PAREN
ERROR@9103: expected command, found IDENT
ERROR@9109: expected command, found ERROR
ERROR@9110: expected command, found ELSE_KW
ERROR@9115: expected command, found ERROR
ERROR@9116: expected command, found ERROR
ERROR@9118: expected command, found INT_NUMBER
ERROR@9121: expected command, found ERROR
ERROR@9122: expected command, found IDENT
ERROR@9128: expected command, found ERROR
ERROR@9129: expected command, found ERROR
ERROR@9131: expected command, found IDENT
ERROR@9206: expected command, found ERROR
ERROR@9207: expected command, found IF_KW
ERROR@9210: expected command, found INT_NUMBER
ERROR@9214: expected command, found ERROR
ERROR@9215: expected command, found IF_KW
ERROR@9218: expected command, found YES_KW
ERROR@9225: expected command, found ERROR
ERROR@9226: expected command, found IF_KW
ERROR@9229: expected command, found ON_KW
ERROR@9236: expected command, found ERROR
ERROR@9237: expected command, found IDENT
ERROR@9242: expected command, found STRING
ERROR@9256: expected command, found ERROR
ERROR@9257: expected command, found ELSE_KW
ERROR@9266: expected command, found ERROR
ERROR@9267: expected command, found IDENT
ERROR@9272: expected command, found STRING
ERROR@9299: expected command, found ERROR
ERROR@9300: expected command, found IDENT
ERROR@9308: expected command, found ERROR
ERROR@9309: expected command, found ELSE_KW
ERROR@9317: expected command, found ERROR
ERROR@9318: expected command, found IDENT
ERROR@9323: expected command, found STRING
ERROR@9349: expected command, found ERROR
ERROR@9350: expected command, found IDENT
ERROR@9357: expected command, found ERROR
ERROR@9358: expected command, found ELSE_KW
ERROR@9365: expected command, found ERROR
ERROR@9366: expected command, found IDENT
ERROR@9371: expected command, found STRING
ERROR@9396: expected command, found ERROR
ERROR@9397: expected command, found IDENT
ERROR@9404: expected command, found ERROR
ERROR@9405: expected command, found IDENT
ERROR@9410: expected command, found STRING
ERROR@9504: expected command, found ERROR
ERROR@9505: expected command, found IDENT
ERROR@9510: expected command, found STRING
ERROR@9535: expected command, found ERROR
ERROR@9536: expected command, found IDENT
ERROR@9541: expected command, found STRING
ERROR@9566: expected command, found ERROR
ERROR@9567: expected command, found IDENT
ERROR@9572: expected command, found STRING
ERROR@9597: expected command, found ERROR
ERROR@9598: expected command, found IDENT
ERROR@9603: expected command, found STRING
ERROR@9628: expected command, found ERROR
ERROR@9629: expected command, found IDENT
ERROR@9634: expected command, found STRING
ERROR@9698: expected command, found ERROR
ERROR@9699: expected command, found IDENT
ERROR@9704: expected command, found STRING
ERROR@9725: expected command, found ERROR
ERROR@9726: expected command, found IDENT
ERROR@9731: expected command, found STRING
ERROR@9756: expected command, found ERROR
ERROR@9757: expected command, found IDENT
ERROR@9762: expected command, found STRING
ERROR@9787: expected command, found ERROR
ERROR@9788: expected command, found IDENT
ERROR@9793: expected command, found STRING
ERROR@9849: expected command, found ERROR
ERROR@9850: expected command, found IDENT
ERROR@9855: expected command, found STRING
ERROR@9875: expected command, found ERROR
ERROR@9876: expected command, found IDENT
ERROR@9881: expected command, found STRING
ERROR@9938: expected command, found ERROR
ERROR@9939: expected command, found IDENT
ERROR@9944: expected command, found STRING
ERROR@9969: expected command, found ERROR
ERROR@9970: expected command, found IDENT
ERROR@9975: expected command, found STRING
ERROR@9996: expected command, found ERROR
ERROR@9997: expected command, found IDENT
ERROR@10002: expected command, found STRING
ERROR@10069: expected command, found ERROR
ERROR@10070: expected command, found IDENT
ERROR@10075: expected command, found STRING
ERROR@10098: expected command, found ERROR
ERROR@10099: expected command, found IDENT
ERROR@10104: expected command, found STRING
ERROR@10308: expected command, found ERROR
ERROR@10309: expected command, found IF_KW
ERROR@10312: expected command, found FALSE_KW
ERROR@10326: expected command, found ERROR
ERROR@10327: expected command, found IDENT
ERROR@10332: expected command, found STRING
ERROR@10360: expected command, found ERROR
ERROR@10361: expected command, found ELSE_KW
ERROR@10374: expected command, found ERROR
ERROR@10375: expected command, found IDENT
ERROR@10380: expected command, found STRING
ERROR@10408: expected command, found ERROR
ERROR@10409: expected command, found IDENT
ERROR@10419: expected command, found ERROR
ERROR@10420: expected command, found IDENT
ERROR@10425: expected command, found STRING
ERROR@10453: expected command, found ERROR
ERROR@10454: expected command, found IDENT
ERROR@10459: expected command, found STRING
ERROR@10659: expected command, found COLON
ERROR@10660: expected command, found IDENT
ERROR@10673: expected command, found ERROR
ERROR@10674: expected command, found IDENT
ERROR@10679: expected command, found BACKTICK
ERROR@10680: expected command, found IDENT
ERROR@10693: expected command, found BACKTICK
ERROR@10695: expected command, found COLON
ERROR@10696: expected command, found IDENT
ERROR@10700: expected command, found COLON
ERROR@10701: expected command, found STRING
ERROR@10707: expected command, found COLON
ERROR@10708: expected command, found IDENT
ERROR@10715: expected command, found ERROR
ERROR@10716: expected command, found IDENT
ERROR@10721: expected command, found IDENT
ERROR@10730: expected command, found PIPE
ERROR@10732: expected command, found BACKTICK
ERROR@10733: expected command, found IDENT
ERROR@10746: expected command, found BACKTICK
ERROR@10748: expected command, found COLON
ERROR@10749: expected command, found IDENT
ERROR@10753: expected command, found COLON
ERROR@10754: expected command, found STRING
ERROR@10760: expected command, found COLON
ERROR@10761: expected command, found IDENT
ERROR@10768: expected command, found ERROR
ERROR@10769: expected command, found IDENT
ERROR@10781: expected SEMICOLON
ERROR@10782: expected command, found ERROR
ERROR@10783: expected command, found IDENT
ERROR@10788: expected command, found INT_NUMBER
ERROR@10790: expected command, found ERROR
ERROR@10791: expected command, found IDENT
ERROR@10794: expected command, found ERROR
ERROR@10795: expected command, found IDENT
ERROR@10806: expected command, found IDENT
ERROR@10812: expected command, found INT_NUMBER
ERROR@10814: expected command, found INT_NUMBER
ERROR@10816: expected command, found ERROR
ERROR@10817: expected command, found IDENT
ERROR@10820: expected command, found ERROR
ERROR@10821: expected command, found IDENT
ERROR@10823: expected command, found IDENT
ERROR@10829: expected command, found ERROR
ERROR@10830: expected command, found IDENT
ERROR@10832: expected command, found IDENT
ERROR@10837: expected command, found IDENT
ERROR@10842: expected command, found IDENT
ERROR@10847: expected command, found IDENT
ERROR@10853: expected command, found ERROR
ERROR@10854: expected command, found IDENT
ERROR@10857: expected command, found IDENT
ERROR@10863: expected command, found ERROR
ERROR@10875: expected SEMICOLON
ERROR@10877: expected command, found ERROR
ERROR@10878: expected command, found IDENT
ERROR@10888: expected command, found ERROR
ERROR@10898: expected SEMICOLON
ERROR@10899: expected command, found IDENT
ERROR@10904: expected command, found IDENT
ERROR@10909: expected command, found IDENT
ERROR@10914: expected command, found IDENT
ERROR@10919: expected command, found IDENT
ERROR@10925: expected command, found ERROR
ERROR@10926: expected command, found IDENT
ERROR@10958: expected SEMICOLON
ERROR@10959: expected command, found ERROR
ERROR@10960: expected command, found IDENT
ERROR@10974: expected command, found ERROR
ERROR@10975: expected command, found IDENT
ERROR@10978: expected command, found IDENT
ERROR@10984: expected command, found ERROR
ERROR@10985: expected command, found IDENT
ERROR@10987: expected command, found IDENT
ERROR@10992: expected command, found IDENT
ERROR@10998: expected command, found ERROR
ERROR@10999: expected command, found IDENT
ERROR@11002: expected command, found IDENT
ERROR@11014: expected command, found ERROR
ERROR@11015: expected command, found IDENT
ERROR@11018: expected command, found IDENT
ERROR@11030: expected command, found ERROR
ERROR@11031: expected command, found IDENT
ERROR@11036: expected command, found IDENT
ERROR@11041: expected command, found IDENT
ERROR@11046: expected command, found IDENT
ERROR@11051: expected command, found IDENT
ERROR@11056: expected command, found IDENT
ERROR@11062: expected command, found ERROR
ERROR@11063: expected command, found IDENT
ERROR@11068: expected command, found IDENT
ERROR@11074: expected command, found ERROR
ERROR@11075: expected command, found ENCODING_KW
ERROR@11084: expected command, found IDENT
ERROR@11090: expected command, found ERROR
ERROR@11091: expected command, found IDENT
ERROR@11104: expected command, found ERROR
ERROR@11105: expected command, found IDENT
ERROR@11117: expected command, found ERROR
ERROR@11118: expected command, found IDENT
ERROR@11120: expected command, found IDENT
ERROR@11126: expected command, found ERROR
ERROR@11127: expected command, found IDENT
ERROR@11134: expected command, found ERROR
ERROR@11135: expected command, found IDENT
ERROR@11149: expected command, found ERROR
ERROR@11150: expected command, found IDENT
ERROR@11152: expected command, found IDENT
ERROR@11158: expected command, found ERROR
ERROR@11159: expected command, found IDENT
ERROR@11162: expected command, found IDENT
ERROR@11168: expected command, found ERROR
ERROR@11169: expected command, found IDENT
ERROR@11176: expected command, found ERROR
ERROR@11177: expected command, found IDENT
ERROR@11208: expected command, found ERROR
ERROR@11209: expected command, found IDENT
ERROR@11212: expected command, found ERROR
ERROR@11213: expected command, found QUESTION
ERROR@11216: expected command, found ERROR
ERROR@11217: expected command, found IDENT
ERROR@11223: expected command, found ERROR
ERROR@11224: expected command, found IDENT
ERROR@11226: expected command, found IDENT
ERROR@11232: expected command, found ERROR
ERROR@11233: expected command, found IDENT
ERROR@11236: expected command, found IDENT
ERROR@11242: expected command, found ERROR
ERROR@11243: expected command, found IDENT
ERROR@11245: expected command, found IDENT
ERROR@11251: expected command, found ERROR
ERROR@11252: expected command, found IDENT
ERROR@11255: expected command, found IDENT
ERROR@11260: expected command, found IDENT
ERROR@11266: expected command, found ERROR
ERROR@11267: expected command, found IDENT
ERROR@11276: expected command, found ERROR
ERROR@11277: expected command, found IDENT
ERROR@11279: expected command, found IDENT
ERROR@11285: expected command, found ERROR
ERROR@11286: expected command, found IDENT
ERROR@11297: expected SEMICOLON
ERROR@11298: expected command, found ERROR
ERROR@11299: expected command, found IDENT
ERROR@11306: expected command, found ERROR
ERROR@11307: expected command, found PASSWORD_KW
ERROR@11316: expected command, found IDENT
ERROR@11322: expected command, found ERROR
ERROR@11323: expected command, found IDENT
ERROR@11330: expected command, found IDENT
ERROR@11335: expected command, found IDENT
ERROR@11341: expected command, found ERROR
ERROR@11342: expected command, found IDENT
ERROR@11347: expected command, found IDENT
ERROR@11352: expected command, found IDENT
ERROR@11358: expected command, found ERROR
ERROR@11359: expected command, found IDENT
ERROR@11362: expected command, found ERROR
ERROR@11368: expected name
ERROR@11368: expected SEMICOLON
ERROR@11370: expected command, found ERROR
ERROR@11371: expected command, found IDENT
ERROR@11373: expected command, found IDENT
ERROR@11379: expected command, found ERROR
ERROR@11380: expected command, found IDENT
ERROR@11394: expected command, found ERROR
ERROR@11403: expected EQ
ERROR@11408: expected SEMICOLON
ERROR@11409: expected command, found IDENT
ERROR@11414: expected command, found IDENT
ERROR@11419: expected command, found IDENT
ERROR@11424: expected command, found IDENT
ERROR@11429: expected command, found IDENT
ERROR@11435: expected command, found ERROR
ERROR@11436: expected command, found IDENT
ERROR@11443: expected command, found IDENT
ERROR@11448: expected command, found IDENT
ERROR@11454: expected command, found ERROR
ERROR@11455: expected command, found IDENT
ERROR@11458: expected command, found IDENT
ERROR@11470: expected command, found ERROR
ERROR@11471: expected command, found IDENT
ERROR@11474: expected command, found IDENT
ERROR@11486: expected command, found ERROR
ERROR@11487: expected command, found IDENT
ERROR@11502: expected command, found ERROR
ERROR@11503: expected command, found IDENT
ERROR@11517: expected command, found ERROR
ERROR@11518: expected command, found IDENT
ERROR@11520: expected command, found IDENT
ERROR@11526: expected command, found ERROR
ERROR@11527: expected command, found IDENT
ERROR@11529: expected command, found IDENT
ERROR@11535: expected command, found ERROR
ERROR@11536: expected command, found IDENT
ERROR@11543: expected command, found IDENT
ERROR@11549: expected command, found ERROR
ERROR@11550: expected command, found IDENT
ERROR@11556: expected command, found IDENT
ERROR@11562: expected command, found ERROR
ERROR@11563: expected command, found IDENT
ERROR@11565: expected command, found IDENT
ERROR@11571: expected command, found ERROR
ERROR@11572: expected command, found IDENT
ERROR@11578: expected command, found IDENT
ERROR@11583: expected command, found IDENT
ERROR@11589: expected command, found ERROR
ERROR@11590: expected command, found IDENT
ERROR@11592: expected command, found IDENT
ERROR@11654: expected command, found ERROR
ERROR@11655: expected command, found IDENT
ERROR@11657: expected command, found PIPE
ERROR@11658: expected command, found SLASH
ERROR@11659: expected command, found NO_KW
ERROR@11661: expected command, found SLASH
ERROR@11662: expected command, found IDENT
ERROR@11666: expected command, found SLASH
ERROR@11667: expected command, found IDENT
ERROR@11672: expected command, found ERROR
ERROR@11673: expected command, found ELSE_KW
ERROR@11735: expected command, found ERROR
ERROR@11736: expected command, found BANG
ERROR@11738: expected command, found IDENT
ERROR@11749: expected command, found ERROR
ERROR@11750: expected command, found IDENT
ERROR@11757: expected command, found ERROR
ERROR@11758: expected command, found IDENT
ERROR@11761: expected command, found ERROR
ERROR@11762: expected command, found IDENT
ERROR@11767: expected command, found STRING
ERROR@11823: expected command, found ERROR
ERROR@11824: expected command, found IDENT
ERROR@11829: expected command, found STRING
ERROR@11864: expected command, found ERROR
ERROR@11865: expected command, found IDENT
ERROR@11870: expected command, found STRING
ERROR@11897: expected command, found ERROR
ERROR@11898: expected command, found IDENT
ERROR@11903: expected command, found STRING
ERROR@11930: expected command, found ERROR
ERROR@11931: expected command, found IDENT
ERROR@11936: expected command, found STRING
ERROR@11996: expected SEMICOLON
ERROR@11997: expected command, found COLON
ERROR@11998: expected command, found ERROR
ERROR@11999: expected command, found QUESTION
ERROR@12000: expected command, found IDENT
ERROR@12001: expected command, found ERROR
ERROR@12003: expected command, found AS_KW
ERROR@12006: expected command, found IDENT
ERROR@12032: expected an expression, found COLON
ERROR@12033: expected SEMICOLON
ERROR@12033: expected command, found ERROR
ERROR@12034: expected command, found QUESTION
ERROR@12035: expected command, found IDENT
ERROR@12046: expected command, found ERROR
ERROR@12048: expected command, found AS_KW
ERROR@12051: expected command, found IDENT
ERROR@12366: expected SEMICOLON
ERROR@12367: expected command, found ERROR
ERROR@12368: expected command, found IDENT
ERROR@12378: expected SEMICOLON
ERROR@12379: expected command, found ERROR
ERROR@12380: expected command, found IDENT
ERROR@12382: expected command, found UNION_KW
ERROR@12396: expected SEMICOLON
ERROR@12397: expected command, found ERROR
ERROR@12398: expected command, found IDENT
ERROR@12400: expected command, found UNION_KW
ERROR@12566: expected start of a select statement
ERROR@12774: expected start of a select statement
ERROR@12837: expected SEMICOLON
ERROR@12838: expected command, found ERROR
ERROR@12839: expected command, found IDENT
ERROR@12882: expected column label, got ERROR
ERROR@12883: missing comma
ERROR@12948: missing comma
ERROR@13384: expected NONE or role_name
ERROR@13384: expected SEMICOLON
ERROR@13385: expected command, found TO_KW
ERROR@13388: expected command, found IDENT
ERROR@14981: expected NONE or role_name
ERROR@14981: expected SEMICOLON
ERROR@14982: expected command, found TO_KW
ERROR@14985: expected command, found DEFAULT_KW
ERROR@16952: expected SEMICOLON
ERROR@16953: expected command, found ERROR
ERROR@16974: expected SEMICOLON
ERROR@16975: expected command, found ERROR
ERROR@17045: expected SEMICOLON
ERROR@17046: expected command, found ERROR
ERROR@17067: expected SEMICOLON
ERROR@17068: expected command, found ERROR
ERROR@17135: expected SEMICOLON
ERROR@17136: expected command, found ERROR
ERROR@17150: expected an expression, found ERROR
ERROR@17171: expected SEMICOLON
ERROR@17172: expected command, found ERROR
ERROR@17240: expected SEMICOLON
ERROR@17241: expected command, found ERROR
ERROR@17261: expected SEMICOLON
ERROR@17262: expected command, found ERROR
ERROR@17283: expected SEMICOLON
ERROR@17284: expected command, found ERROR
ERROR@17295: expected SEMICOLON
ERROR@17296: expected command, found ERROR
ERROR@17501: expected SEMICOLON
ERROR@17502: expected command, found ERROR
ERROR@17537: expected SEMICOLON
ERROR@17538: expected command, found ERROR
ERROR@17594: expected SEMICOLON
ERROR@17595: expected command, found ERROR
ERROR@17614: expected SEMICOLON
ERROR@17615: expected command, found ERROR
ERROR@17636: expected SEMICOLON
ERROR@17637: expected command, found ERROR
ERROR@17828: expected SEMICOLON
ERROR@17829: expected command, found ERROR
ERROR@17830: expected command, found IDENT
ERROR@17832: expected command, found COLON
ERROR@17833: expected command, found IDENT
ERROR@17873: expected string literal
ERROR@17873: expected SEMICOLON
ERROR@17874: expected command, found COLON
ERROR@17875: expected command, found STRING
ERROR@17902: expected SEMICOLON
ERROR@17902: expected command, found ERROR
ERROR@17918: expected SEMICOLON
ERROR@17918: expected command, found ERROR
ERROR@17934: expected SEMICOLON
ERROR@17935: expected command, found ERROR
ERROR@17936: expected command, found IDENT
ERROR@17938: expected command, found COLON
ERROR@17939: expected command, found IDENT
ERROR@17979: expected string literal
ERROR@17979: expected SEMICOLON
ERROR@17980: expected command, found COLON
ERROR@17981: expected command, found STRING
ERROR@18024: expected SEMICOLON
ERROR@18025: expected command, found ERROR
ERROR@18057: expected SEMICOLON
ERROR@18058: expected command, found ERROR
ERROR@18059: expected command, found IDENT
ERROR@18061: expected command, found COLON
ERROR@18062: expected command, found IDENT
ERROR@18102: expected string literal
ERROR@18102: expected SEMICOLON
ERROR@18103: expected command, found COLON
ERROR@18104: expected command, found STRING
ERROR@18265: expected SEMICOLON
ERROR@18265: expected command, found ERROR
ERROR@18281: expected SEMICOLON
ERROR@18281: expected command, found ERROR
ERROR@18438: expected string literal
ERROR@18438: expected SEMICOLON
ERROR@18439: expected command, found COLON
ERROR@18440: expected command, found STRING
ERROR@18599: expected string literal
ERROR@18599: expected SEMICOLON
ERROR@18600: expected command, found COLON
ERROR@18601: expected command, found STRING
ERROR@18722: expected string literal
ERROR@18722: expected SEMICOLON
ERROR@18723: expected command, found COLON
ERROR@18724: expected command, found STRING
ERROR@18949: expected SEMICOLON
ERROR@18950: expected command, found ERROR
ERROR@19076: expected SEMICOLON
ERROR@19077: expected command, found ERROR
ERROR@19110: expected SEMICOLON
ERROR@19111: expected command, found ERROR
ERROR@19112: expected command, found IDENT
ERROR@19114: expected command, found COLON
ERROR@19115: expected command, found IDENT
ERROR@19202: expected string literal
ERROR@19202: expected SEMICOLON
ERROR@19203: expected command, found COLON
ERROR@19204: expected command, found STRING
ERROR@19325: expected string literal
ERROR@19325: expected SEMICOLON
ERROR@19326: expected command, found COLON
ERROR@19327: expected command, found STRING
ERROR@19508: expected SEMICOLON
ERROR@19509: expected command, found ERROR
ERROR@19547: expected SEMICOLON
ERROR@19548: expected command, found ERROR
ERROR@19597: expected SEMICOLON
ERROR@19598: expected command, found ERROR
ERROR@19624: expected SEMICOLON
ERROR@19625: expected command, found ERROR
ERROR@19695: expected SEMICOLON
ERROR@19696: expected command, found ERROR
ERROR@19713: expected SEMICOLON
ERROR@19714: expected command, found ERROR
ERROR@19787: expected SEMICOLON
ERROR@19788: expected command, found ERROR
ERROR@19815: expected SEMICOLON
ERROR@19816: expected command, found ERROR
ERROR@19865: expected SEMICOLON
ERROR@19866: expected command, found ERROR
ERROR@19883: expected SEMICOLON
ERROR@19884: expected command, found ERROR
ERROR@19901: expected SEMICOLON
ERROR@19902: expected command, found ERROR
ERROR@19913: expected SEMICOLON
ERROR@19914: expected command, found ERROR
ERROR@19971: expected SEMICOLON
ERROR@19972: expected command, found ERROR
ERROR@20570: expected SEMICOLON
ERROR@20571: expected command, found ERROR
ERROR@20624: expected SEMICOLON
ERROR@20625: expected command, found ERROR
ERROR@20692: expected SEMICOLON
ERROR@20693: expected command, found ERROR
ERROR@20821: expected SEMICOLON
ERROR@20822: expected command, found ERROR
ERROR@21172: expected SEMICOLON
ERROR@21173: expected command, found ERROR
ERROR@21251: expected SEMICOLON
ERROR@21252: expected command, found ERROR
ERROR@21422: expected SEMICOLON
ERROR@21423: expected command, found ERROR
ERROR@22232: expected SEMICOLON
ERROR@22232: expected command, found COMMA
ERROR@22235: expected command, found INHERIT_KW
ERROR@22243: expected command, found TRUE_KW
ERROR@22247: expected command, found COMMA
ERROR@22253: expected name
ERROR@22253: expected EQ
ERROR@22258: expected SEMICOLON
ERROR@22260: expected command, found GRANTED_KW
ERROR@22268: expected command, found BY_KW
ERROR@22271: expected command, found IDENT
ERROR@22347: expected SEMICOLON
ERROR@22347: expected command, found COMMA
ERROR@22350: expected command, found INHERIT_KW
ERROR@22358: expected command, found FALSE_KW
ERROR@22363: expected command, found COMMA
ERROR@22368: expected name
ERROR@22368: expected EQ
ERROR@22374: expected SEMICOLON
ERROR@22375: expected command, found GRANTED_KW
ERROR@22383: expected command, found BY_KW
ERROR@22386: expected command, found IDENT
ERROR@22462: expected SEMICOLON
ERROR@22463: expected command, found COMMA
ERROR@22465: expected command, found INHERIT_KW
ERROR@22473: expected command, found FALSE_KW
ERROR@22478: expected command, found COMMA
ERROR@22483: expected name
ERROR@22483: expected EQ
ERROR@22488: expected SEMICOLON
ERROR@22490: expected command, found GRANTED_KW
ERROR@22498: expected command, found BY_KW
ERROR@22501: expected command, found IDENT
ERROR@22578: expected SEMICOLON
ERROR@22578: expected command, found COMMA
ERROR@22580: expected command, found INHERIT_KW
ERROR@22588: expected command, found TRUE_KW
ERROR@22592: expected command, found COMMA
ERROR@22598: expected name
ERROR@22598: expected EQ
ERROR@22604: expected SEMICOLON
ERROR@22605: expected command, found GRANTED_KW
ERROR@22613: expected command, found BY_KW
ERROR@22616: expected command, found IDENT
ERROR@22693: expected SEMICOLON
ERROR@22693: expected command, found COMMA
ERROR@22695: expected command, found INHERIT_KW
ERROR@22703: expected command, found TRUE_KW
ERROR@22708: expected command, found COMMA
ERROR@22713: expected name
ERROR@22713: expected EQ
ERROR@22718: expected SEMICOLON
ERROR@22720: expected command, found GRANTED_KW
ERROR@22728: expected command, found BY_KW
ERROR@22731: expected command, found IDENT
ERROR@22808: expected SEMICOLON
ERROR@22808: expected command, found COMMA
ERROR@22810: expected command, found INHERIT_KW
ERROR@22818: expected command, found FALSE_KW
ERROR@22823: expected command, found COMMA
ERROR@22828: expected name
ERROR@22828: expected EQ
ERROR@22833: expected SEMICOLON
ERROR@22835: expected command, found GRANTED_KW
ERROR@22843: expected command, found BY_KW
ERROR@22846: expected command, found IDENT
ERROR@22923: expected SEMICOLON
ERROR@22923: expected command, found COMMA
ERROR@22925: expected command, found INHERIT_KW
ERROR@22933: expected command, found FALSE_KW
ERROR@22938: expected command, found COMMA
ERROR@22943: expected name
ERROR@22943: expected EQ
ERROR@22949: expected SEMICOLON
ERROR@22950: expected command, found GRANTED_KW
ERROR@22958: expected command, found BY_KW
ERROR@22961: expected command, found IDENT

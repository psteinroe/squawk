---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/rangefuncs.sql
---
SOURCE_FILE
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfunc2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "rngfuncid"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rngfunc2"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "11"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rngfunc2"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "22"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rngfunc2"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "111"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfunct"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "rngfunc2"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT * FROM rngfunc2 WHERE rngfuncid = $1 ORDER BY f2;'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- function with ORDINALITY"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunct"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "with"
      WHITESPACE " "
      ORDINALITY_KW "ordinality"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "z"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          COLUMN
            NAME
              IDENT "b"
          COMMA ","
          COLUMN
            NAME
              IDENT "ord"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunct"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "with"
      WHITESPACE " "
      ORDINALITY_KW "ordinality"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "z"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          COLUMN
            NAME
              IDENT "b"
          COMMA ","
          COLUMN
            NAME
              IDENT "ord"
          R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "100"
  SEMICOLON ";"
  WHITESPACE "   "
  COMMENT "-- ordinal 2, not 1"
  WHITESPACE "\n"
  COMMENT "-- ordinality vs. column names and types"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "b"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "ord"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunct"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "with"
      WHITESPACE " "
      ORDINALITY_KW "ordinality"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "z"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          COLUMN
            NAME
              IDENT "b"
          COMMA ","
          COLUMN
            NAME
              IDENT "ord"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "ord"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "unnest"
        ARG_LIST
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              STRING "'a'"
            COMMA ","
            LITERAL
              STRING "'b'"
            R_BRACK "]"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "with"
      WHITESPACE " "
      ORDINALITY_KW "ordinality"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "z"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          COLUMN
            NAME
              IDENT "ord"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "unnest"
        ARG_LIST
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              STRING "'a'"
            COMMA ","
            LITERAL
              STRING "'b'"
            R_BRACK "]"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "with"
      WHITESPACE " "
      ORDINALITY_KW "ordinality"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "z"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          COLUMN
            NAME
              IDENT "ord"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "ord"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "unnest"
        ARG_LIST
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            CAST_EXPR
              LITERAL
                FLOAT_NUMBER "1.0"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "float8"
            R_BRACK "]"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "with"
      WHITESPACE " "
      ORDINALITY_KW "ordinality"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "z"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          COLUMN
            NAME
              IDENT "ord"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "unnest"
        ARG_LIST
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            CAST_EXPR
              LITERAL
                FLOAT_NUMBER "1.0"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "float8"
            R_BRACK "]"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "with"
      WHITESPACE " "
      ORDINALITY_KW "ordinality"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "z"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          COLUMN
            NAME
              IDENT "ord"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "row_to_json"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "s"
                DOT "."
                STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "11"
          COMMA ","
          LITERAL
            INT_NUMBER "14"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "with"
      WHITESPACE " "
      ORDINALITY_KW "ordinality"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ordinality vs. views"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TEMPORARY_KW "temporary"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vw_ord"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            VALUES_KW "values"
            WHITESPACE " "
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "v"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "n"
            R_PAREN ")"
        WHITESPACE " "
        JOIN
          JOIN_KW "join"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "rngfunct"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
          WHITESPACE " "
          WITH_KW "with"
          WHITESPACE " "
          ORDINALITY_KW "ordinality"
          WHITESPACE " "
          ALIAS
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "z"
            COLUMN_LIST
              L_PAREN "("
              COLUMN
                NAME
                  IDENT "a"
              COMMA ","
              COLUMN
                NAME
                  IDENT "b"
              COMMA ","
              COLUMN
                NAME
                  IDENT "ord"
              R_PAREN ")"
          WHITESPACE " "
          ON_KW "on"
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              NAME_REF
                IDENT "n"
              EQ "="
              NAME_REF
                IDENT "ord"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "vw_ord"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "definition"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_views"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "viewname"
        EQ "="
        LITERAL
          STRING "'vw_ord'"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "drop"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vw_ord"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- multiple functions"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      ROWS_KW "rows"
      WHITESPACE " "
      FROM_KW "from"
      L_PAREN "("
      CALL_EXPR
        NAME_REF
          IDENT "rngfunct"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      COMMA ","
      CALL_EXPR
        NAME_REF
          IDENT "rngfunct"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  WITH_CLAUSE
    WITH_KW "with"
    WHITESPACE " "
    WITH_TABLE
      NAME
        ORDINALITY_KW "ordinality"
      WHITESPACE " "
      AS_KW "as"
  WHITESPACE " "
  ERROR
    IDENT "z"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    IDENT "c"
  ERROR
    COMMA ","
  ERROR
    IDENT "d"
  ERROR
    COMMA ","
  ERROR
    IDENT "ord"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TEMPORARY_KW "temporary"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vw_ord"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            VALUES_KW "values"
            WHITESPACE " "
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "v"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "n"
            R_PAREN ")"
        WHITESPACE " "
        JOIN
          JOIN_KW "join"
          WHITESPACE " "
          ROWS_KW "rows"
          WHITESPACE " "
          FROM_KW "from"
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              IDENT "rngfunct"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
          USING_CLAUSE
        COMMA ","
        CALL_EXPR
          NAME_REF
            IDENT "rngfunct"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "2"
            R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  WITH_CLAUSE
    WITH_KW "with"
    WHITESPACE " "
    WITH_TABLE
      NAME
        ORDINALITY_KW "ordinality"
      WHITESPACE " "
      AS_KW "as"
  WHITESPACE " "
  ERROR
    IDENT "z"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    IDENT "c"
  ERROR
    COMMA ","
  ERROR
    IDENT "d"
  ERROR
    COMMA ","
  ERROR
    IDENT "ord"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    ON_KW "on"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "n"
  ERROR
    EQ "="
  ERROR
    IDENT "ord"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "vw_ord"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "definition"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_views"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "viewname"
        EQ "="
        LITERAL
          STRING "'vw_ord'"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "drop"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vw_ord"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- expansions of unnest()"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "unnest"
        ARG_LIST
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              INT_NUMBER "10"
            COMMA ","
            LITERAL
              INT_NUMBER "20"
            R_BRACK "]"
          COMMA ","
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              STRING "'foo'"
            COMMA ","
            LITERAL
              STRING "'bar'"
            R_BRACK "]"
          COMMA ","
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              FLOAT_NUMBER "1.0"
            R_BRACK "]"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "unnest"
        ARG_LIST
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              INT_NUMBER "10"
            COMMA ","
            LITERAL
              INT_NUMBER "20"
            R_BRACK "]"
          COMMA ","
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              STRING "'foo'"
            COMMA ","
            LITERAL
              STRING "'bar'"
            R_BRACK "]"
          COMMA ","
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              FLOAT_NUMBER "1.0"
            R_BRACK "]"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "with"
      WHITESPACE " "
      ORDINALITY_KW "ordinality"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "z"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          COLUMN
            NAME
              IDENT "b"
          COMMA ","
          COLUMN
            NAME
              IDENT "c"
          COMMA ","
          COLUMN
            NAME
              IDENT "ord"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      ROWS_KW "rows"
      WHITESPACE " "
      FROM_KW "from"
      L_PAREN "("
      CALL_EXPR
        NAME_REF
          IDENT "unnest"
        ARG_LIST
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              INT_NUMBER "10"
            COMMA ","
            LITERAL
              INT_NUMBER "20"
            R_BRACK "]"
          COMMA ","
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              STRING "'foo'"
            COMMA ","
            LITERAL
              STRING "'bar'"
            R_BRACK "]"
          COMMA ","
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              FLOAT_NUMBER "1.0"
            R_BRACK "]"
          R_PAREN ")"
      R_PAREN ")"
      WHITESPACE " "
      WITH_KW "with"
      WHITESPACE " "
      ORDINALITY_KW "ordinality"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "z"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          COLUMN
            NAME
              IDENT "b"
          COMMA ","
          COLUMN
            NAME
              IDENT "c"
          COMMA ","
          COLUMN
            NAME
              IDENT "ord"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      ROWS_KW "rows"
      WHITESPACE " "
      FROM_KW "from"
      L_PAREN "("
      CALL_EXPR
        NAME_REF
          IDENT "unnest"
        ARG_LIST
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              INT_NUMBER "10"
            COMMA ","
            LITERAL
              INT_NUMBER "20"
            R_BRACK "]"
          COMMA ","
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              STRING "'foo'"
            COMMA ","
            LITERAL
              STRING "'bar'"
            R_BRACK "]"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "101"
          COMMA ","
          LITERAL
            INT_NUMBER "102"
          R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  WITH_CLAUSE
    WITH_KW "with"
    WHITESPACE " "
    WITH_TABLE
      NAME
        ORDINALITY_KW "ordinality"
      WHITESPACE " "
      AS_KW "as"
  WHITESPACE " "
  ERROR
    IDENT "z"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    IDENT "c"
  ERROR
    COMMA ","
  ERROR
    IDENT "ord"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TEMPORARY_KW "temporary"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vw_ord"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "unnest"
          ARG_LIST
            L_PAREN "("
            ARRAY_EXPR
              ARRAY_KW "array"
              L_BRACK "["
              LITERAL
                INT_NUMBER "10"
              COMMA ","
              LITERAL
                INT_NUMBER "20"
              R_BRACK "]"
            COMMA ","
            ARRAY_EXPR
              ARRAY_KW "array"
              L_BRACK "["
              LITERAL
                STRING "'foo'"
              COMMA ","
              LITERAL
                STRING "'bar'"
              R_BRACK "]"
            COMMA ","
            ARRAY_EXPR
              ARRAY_KW "array"
              L_BRACK "["
              LITERAL
                FLOAT_NUMBER "1.0"
              R_BRACK "]"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "z"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "a"
            COMMA ","
            COLUMN
              NAME
                IDENT "b"
            COMMA ","
            COLUMN
              NAME
                IDENT "c"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "vw_ord"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "definition"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_views"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "viewname"
        EQ "="
        LITERAL
          STRING "'vw_ord'"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "drop"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vw_ord"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TEMPORARY_KW "temporary"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vw_ord"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        ROWS_KW "rows"
        WHITESPACE " "
        FROM_KW "from"
        L_PAREN "("
        CALL_EXPR
          NAME_REF
            IDENT "unnest"
          ARG_LIST
            L_PAREN "("
            ARRAY_EXPR
              ARRAY_KW "array"
              L_BRACK "["
              LITERAL
                INT_NUMBER "10"
              COMMA ","
              LITERAL
                INT_NUMBER "20"
              R_BRACK "]"
            COMMA ","
            ARRAY_EXPR
              ARRAY_KW "array"
              L_BRACK "["
              LITERAL
                STRING "'foo'"
              COMMA ","
              LITERAL
                STRING "'bar'"
              R_BRACK "]"
            COMMA ","
            ARRAY_EXPR
              ARRAY_KW "array"
              L_BRACK "["
              LITERAL
                FLOAT_NUMBER "1.0"
              R_BRACK "]"
            R_PAREN ")"
        R_PAREN ")"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "z"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "a"
            COMMA ","
            COLUMN
              NAME
                IDENT "b"
            COMMA ","
            COLUMN
              NAME
                IDENT "c"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "vw_ord"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "definition"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_views"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "viewname"
        EQ "="
        LITERAL
          STRING "'vw_ord'"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "drop"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vw_ord"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TEMPORARY_KW "temporary"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vw_ord"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        ROWS_KW "rows"
        WHITESPACE " "
        FROM_KW "from"
        L_PAREN "("
        CALL_EXPR
          NAME_REF
            IDENT "unnest"
          ARG_LIST
            L_PAREN "("
            ARRAY_EXPR
              ARRAY_KW "array"
              L_BRACK "["
              LITERAL
                INT_NUMBER "10"
              COMMA ","
              LITERAL
                INT_NUMBER "20"
              R_BRACK "]"
            COMMA ","
            ARRAY_EXPR
              ARRAY_KW "array"
              L_BRACK "["
              LITERAL
                STRING "'foo'"
              COMMA ","
              LITERAL
                STRING "'bar'"
              R_BRACK "]"
            R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "2"
            R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    AS_KW "as"
  WHITESPACE " "
  ERROR
    IDENT "z"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    IDENT "c"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "vw_ord"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "definition"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_views"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "viewname"
        EQ "="
        LITERAL
          STRING "'vw_ord'"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "drop"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vw_ord"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ordinality and multiple functions vs. rewind and reverse scan"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  DECLARE_STMT
    DECLARE_KW "declare"
    WHITESPACE " "
    NAME
      IDENT "rf_cur"
    WHITESPACE " "
    SCROLL_KW "scroll"
    WHITESPACE " "
    CURSOR_KW "cursor"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        ROWS_KW "rows"
        WHITESPACE " "
        FROM_KW "from"
        L_PAREN "("
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "5"
            R_PAREN ")"
        COMMA ","
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "2"
            R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  WITH_CLAUSE
    WITH_KW "with"
    WHITESPACE " "
    WITH_TABLE
      NAME
        ORDINALITY_KW "ordinality"
      WHITESPACE " "
      AS_KW "as"
  WHITESPACE " "
  ERROR
    IDENT "g"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "i"
  ERROR
    COMMA ","
  ERROR
    IDENT "j"
  ERROR
    COMMA ","
  ERROR
    IDENT "o"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  FETCH_STMT
    FETCH_KW "fetch"
    WHITESPACE " "
    ALL_KW "all"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    NAME
      IDENT "rf_cur"
  SEMICOLON ";"
  WHITESPACE "\n"
  FETCH_STMT
    FETCH_KW "fetch"
    WHITESPACE " "
    BACKWARD_KW "backward"
    WHITESPACE " "
    ALL_KW "all"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    NAME
      IDENT "rf_cur"
  SEMICOLON ";"
  WHITESPACE "\n"
  FETCH_STMT
    FETCH_KW "fetch"
    WHITESPACE " "
    ALL_KW "all"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    NAME
      IDENT "rf_cur"
  SEMICOLON ";"
  WHITESPACE "\n"
  FETCH_STMT
    FETCH_KW "fetch"
    WHITESPACE " "
    NEXT_KW "next"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    NAME
      IDENT "rf_cur"
  SEMICOLON ";"
  WHITESPACE "\n"
  FETCH_STMT
    FETCH_KW "fetch"
    WHITESPACE " "
    NEXT_KW "next"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    NAME
      IDENT "rf_cur"
  SEMICOLON ";"
  WHITESPACE "\n"
  FETCH_STMT
    FETCH_KW "fetch"
    WHITESPACE " "
    PRIOR_KW "prior"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    NAME
      IDENT "rf_cur"
  SEMICOLON ";"
  WHITESPACE "\n"
  FETCH_STMT
    FETCH_KW "fetch"
    WHITESPACE " "
    ABSOLUTE_KW "absolute"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    NAME
      IDENT "rf_cur"
  SEMICOLON ";"
  WHITESPACE "\n"
  FETCH_STMT
    FETCH_KW "fetch"
    WHITESPACE " "
    NEXT_KW "next"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    NAME
      IDENT "rf_cur"
  SEMICOLON ";"
  WHITESPACE "\n"
  FETCH_STMT
    FETCH_KW "fetch"
    WHITESPACE " "
    NEXT_KW "next"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    NAME
      IDENT "rf_cur"
  SEMICOLON ";"
  WHITESPACE "\n"
  FETCH_STMT
    FETCH_KW "fetch"
    WHITESPACE " "
    NEXT_KW "next"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    NAME
      IDENT "rf_cur"
  SEMICOLON ";"
  WHITESPACE "\n"
  FETCH_STMT
    FETCH_KW "fetch"
    WHITESPACE " "
    PRIOR_KW "prior"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    NAME
      IDENT "rf_cur"
  SEMICOLON ";"
  WHITESPACE "\n"
  FETCH_STMT
    FETCH_KW "fetch"
    WHITESPACE " "
    PRIOR_KW "prior"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    NAME
      IDENT "rf_cur"
  SEMICOLON ";"
  WHITESPACE "\n"
  FETCH_STMT
    FETCH_KW "fetch"
    WHITESPACE " "
    PRIOR_KW "prior"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    NAME
      IDENT "rf_cur"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "commit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- function with implicit LATERAL"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "rngfunc2"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunct"
        ARG_LIST
          L_PAREN "("
          FIELD_EXPR
            NAME_REF
              IDENT "rngfunc2"
            DOT "."
            NAME_REF
              IDENT "rngfuncid"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "z"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "rngfunc2"
          DOT "."
          NAME_REF
            IDENT "f2"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "z"
          DOT "."
          NAME_REF
            IDENT "f2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- function with implicit LATERAL and explicit ORDINALITY"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "rngfunc2"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunct"
        ARG_LIST
          L_PAREN "("
          FIELD_EXPR
            NAME_REF
              IDENT "rngfunc2"
            DOT "."
            NAME_REF
              IDENT "rngfuncid"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "with"
      WHITESPACE " "
      ORDINALITY_KW "ordinality"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "z"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "rngfuncid"
          COMMA ","
          COLUMN
            NAME
              IDENT "f2"
          COMMA ","
          COLUMN
            NAME
              IDENT "ord"
          R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "rngfunc2"
          DOT "."
          NAME_REF
            IDENT "f2"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "z"
          DOT "."
          NAME_REF
            IDENT "f2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- function in subselect"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "rngfunc2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "f2"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "rngfunct"
                ARG_LIST
                  L_PAREN "("
                  FIELD_EXPR
                    NAME_REF
                      IDENT "rngfunc2"
                    DOT "."
                    NAME_REF
                      IDENT "rngfuncid"
                  R_PAREN ")"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "z"
            WHITESPACE " "
            WHERE_CLAUSE
              WHERE_KW "where"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "z"
                  DOT "."
                  NAME_REF
                    IDENT "rngfuncid"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "rngfunc2"
                  DOT "."
                  NAME_REF
                    IDENT "rngfuncid"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- function in subselect"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "rngfunc2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "f2"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "rngfunct"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    INT_NUMBER "1"
                  R_PAREN ")"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "z"
            WHITESPACE " "
            WHERE_CLAUSE
              WHERE_KW "where"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "z"
                  DOT "."
                  NAME_REF
                    IDENT "rngfuncid"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "rngfunc2"
                  DOT "."
                  NAME_REF
                    IDENT "rngfuncid"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- function in subselect"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "rngfunc2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "f2"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "rngfunct"
                ARG_LIST
                  L_PAREN "("
                  FIELD_EXPR
                    NAME_REF
                      IDENT "rngfunc2"
                    DOT "."
                    NAME_REF
                      IDENT "rngfuncid"
                  R_PAREN ")"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "z"
            WHITESPACE " "
            WHERE_CLAUSE
              WHERE_KW "where"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "z"
                  DOT "."
                  NAME_REF
                    IDENT "rngfuncid"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "1"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- nested functions"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "rngfunct"
            DOT "."
            NAME_REF
              IDENT "rngfuncid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "rngfunct"
            DOT "."
            NAME_REF
              IDENT "f2"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunct"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "sin"
              ARG_LIST
                L_PAREN "("
                BIN_EXPR
                  CALL_EXPR
                    NAME_REF
                      IDENT "pi"
                    ARG_LIST
                      L_PAREN "("
                      R_PAREN ")"
                  SLASH "/"
                  LITERAL
                    INT_NUMBER "2"
                R_PAREN ")"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfunc"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "rngfuncid"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "rngfuncsubid"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "rngfuncname"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "rngfuncid"
          COMMA ","
          COLUMN
            NAME_REF
              IDENT "rngfuncsubid"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rngfunc"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        STRING "'Joe'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rngfunc"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      LITERAL
        STRING "'Ed'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rngfunc"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        STRING "'Mary'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- sql, proretset = f, prorettype = b"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "getrngfunc1"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT $1;'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc1"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc1"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      ORDINALITY_KW "ORDINALITY"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "v"
          COMMA ","
          COLUMN
            NAME
              IDENT "o"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vw_getrngfunc"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "getrngfunc1"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vw_getrngfunc"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "getrngfunc1"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
        WHITESPACE " "
        WITH_KW "WITH"
        WHITESPACE " "
        ORDINALITY_KW "ORDINALITY"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "t1"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "v"
            COMMA ","
            COLUMN
              NAME
                IDENT "o"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- sql, proretset = t, prorettype = b"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "getrngfunc2"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT rngfuncid FROM rngfunc WHERE rngfuncid = $1;'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc2"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc2"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      ORDINALITY_KW "ORDINALITY"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "v"
          COMMA ","
          COLUMN
            NAME
              IDENT "o"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vw_getrngfunc"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "getrngfunc2"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vw_getrngfunc"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "getrngfunc2"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
        WHITESPACE " "
        WITH_KW "WITH"
        WHITESPACE " "
        ORDINALITY_KW "ORDINALITY"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "t1"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "v"
            COMMA ","
            COLUMN
              NAME
                IDENT "o"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- sql, proretset = t, prorettype = b"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "getrngfunc3"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TEXT_KW "text"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT rngfuncname FROM rngfunc WHERE rngfuncid = $1;'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc3"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc3"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      ORDINALITY_KW "ORDINALITY"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "v"
          COMMA ","
          COLUMN
            NAME
              IDENT "o"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vw_getrngfunc"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "getrngfunc3"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vw_getrngfunc"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "getrngfunc3"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
        WHITESPACE " "
        WITH_KW "WITH"
        WHITESPACE " "
        ORDINALITY_KW "ORDINALITY"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "t1"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "v"
            COMMA ","
            COLUMN
              NAME
                IDENT "o"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- sql, proretset = f, prorettype = c"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "getrngfunc4"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "rngfunc"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT * FROM rngfunc WHERE rngfuncid = $1;'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc4"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc4"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      ORDINALITY_KW "ORDINALITY"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          COLUMN
            NAME
              IDENT "b"
          COMMA ","
          COLUMN
            NAME
              IDENT "c"
          COMMA ","
          COLUMN
            NAME
              IDENT "o"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vw_getrngfunc"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "getrngfunc4"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vw_getrngfunc"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "getrngfunc4"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
        WHITESPACE " "
        WITH_KW "WITH"
        WHITESPACE " "
        ORDINALITY_KW "ORDINALITY"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "t1"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "a"
            COMMA ","
            COLUMN
              NAME
                IDENT "b"
            COMMA ","
            COLUMN
              NAME
                IDENT "c"
            COMMA ","
            COLUMN
              NAME
                IDENT "o"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- sql, proretset = t, prorettype = c"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "getrngfunc5"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "rngfunc"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT * FROM rngfunc WHERE rngfuncid = $1;'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc5"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc5"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      ORDINALITY_KW "ORDINALITY"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          COLUMN
            NAME
              IDENT "b"
          COMMA ","
          COLUMN
            NAME
              IDENT "c"
          COMMA ","
          COLUMN
            NAME
              IDENT "o"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vw_getrngfunc"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "getrngfunc5"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vw_getrngfunc"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "getrngfunc5"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
        WHITESPACE " "
        WITH_KW "WITH"
        WHITESPACE " "
        ORDINALITY_KW "ORDINALITY"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "t1"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "a"
            COMMA ","
            COLUMN
              NAME
                IDENT "b"
            COMMA ","
            COLUMN
              NAME
                IDENT "c"
            COMMA ","
            COLUMN
              NAME
                IDENT "o"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- sql, proretset = f, prorettype = record"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "getrngfunc6"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "RECORD"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT * FROM rngfunc WHERE rngfuncid = $1;'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc6"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "rngfuncid"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "rngfuncsubid"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "rngfuncname"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ROWS_KW "ROWS"
      WHITESPACE " "
      FROM_KW "FROM"
      L_PAREN "("
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc6"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "rngfuncid"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "rngfuncsubid"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "rngfuncname"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          R_PAREN ")"
      WHITESPACE " "
      R_PAREN ")"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      ORDINALITY_KW "ORDINALITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vw_getrngfunc"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "getrngfunc6"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE "\n"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "rngfuncid"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      INT_KW "int"
            COMMA ","
            WHITESPACE " "
            COLUMN
              NAME
                IDENT "rngfuncsubid"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      INT_KW "int"
            COMMA ","
            WHITESPACE " "
            COLUMN
              NAME
                IDENT "rngfuncname"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vw_getrngfunc"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        ROWS_KW "ROWS"
        WHITESPACE " "
        FROM_KW "FROM"
        L_PAREN "("
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "getrngfunc6"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "rngfuncid"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      INT_KW "int"
            COMMA ","
            WHITESPACE " "
            COLUMN
              NAME
                IDENT "rngfuncsubid"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      INT_KW "int"
            COMMA ","
            WHITESPACE " "
            COLUMN
              NAME
                IDENT "rngfuncname"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
            R_PAREN ")"
        WHITESPACE " "
        R_PAREN ")"
        WHITESPACE "\n                "
        WITH_KW "WITH"
        WHITESPACE " "
        ORDINALITY_KW "ORDINALITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- sql, proretset = t, prorettype = record"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "getrngfunc7"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "record"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT * FROM rngfunc WHERE rngfuncid = $1;'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc7"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "rngfuncid"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "rngfuncsubid"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "rngfuncname"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ROWS_KW "ROWS"
      WHITESPACE " "
      FROM_KW "FROM"
      L_PAREN "("
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc7"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "rngfuncid"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "rngfuncsubid"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "rngfuncname"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          R_PAREN ")"
      WHITESPACE " "
      R_PAREN ")"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      ORDINALITY_KW "ORDINALITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vw_getrngfunc"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "getrngfunc7"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE "\n"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "rngfuncid"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      INT_KW "int"
            COMMA ","
            WHITESPACE " "
            COLUMN
              NAME
                IDENT "rngfuncsubid"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      INT_KW "int"
            COMMA ","
            WHITESPACE " "
            COLUMN
              NAME
                IDENT "rngfuncname"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vw_getrngfunc"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        ROWS_KW "ROWS"
        WHITESPACE " "
        FROM_KW "FROM"
        L_PAREN "("
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "getrngfunc7"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "rngfuncid"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      INT_KW "int"
            COMMA ","
            WHITESPACE " "
            COLUMN
              NAME
                IDENT "rngfuncsubid"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      INT_KW "int"
            COMMA ","
            WHITESPACE " "
            COLUMN
              NAME
                IDENT "rngfuncname"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
            R_PAREN ")"
        WHITESPACE " "
        R_PAREN ")"
        WHITESPACE "\n                "
        WITH_KW "WITH"
        WHITESPACE " "
        ORDINALITY_KW "ORDINALITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- plpgsql, proretset = f, prorettype = b"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "getrngfunc8"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'DECLARE rngfuncint int; BEGIN SELECT rngfuncid into rngfuncint FROM rngfunc WHERE rngfuncid = $1; RETURN rngfuncint; END;'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc8"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc8"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      ORDINALITY_KW "ORDINALITY"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "v"
          COMMA ","
          COLUMN
            NAME
              IDENT "o"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vw_getrngfunc"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "getrngfunc8"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vw_getrngfunc"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "getrngfunc8"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
        WHITESPACE " "
        WITH_KW "WITH"
        WHITESPACE " "
        ORDINALITY_KW "ORDINALITY"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "t1"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "v"
            COMMA ","
            COLUMN
              NAME
                IDENT "o"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- plpgsql, proretset = f, prorettype = c"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "getrngfunc9"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "rngfunc"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'DECLARE rngfunctup rngfunc%ROWTYPE; BEGIN SELECT * into rngfunctup FROM rngfunc WHERE rngfuncid = $1; RETURN rngfunctup; END;'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc9"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc9"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      ORDINALITY_KW "ORDINALITY"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          COLUMN
            NAME
              IDENT "b"
          COMMA ","
          COLUMN
            NAME
              IDENT "c"
          COMMA ","
          COLUMN
            NAME
              IDENT "o"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vw_getrngfunc"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "getrngfunc9"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vw_getrngfunc"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "getrngfunc9"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
        WHITESPACE " "
        WITH_KW "WITH"
        WHITESPACE " "
        ORDINALITY_KW "ORDINALITY"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "t1"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "a"
            COMMA ","
            COLUMN
              NAME
                IDENT "b"
            COMMA ","
            COLUMN
              NAME
                IDENT "c"
            COMMA ","
            COLUMN
              NAME
                IDENT "o"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vw_getrngfunc"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- mix 'n match kinds, to exercise expandRTE and related logic"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      ROWS_KW "rows"
      WHITESPACE " "
      FROM_KW "from"
      L_PAREN "("
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc1"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      COMMA ","
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc2"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      COMMA ","
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc3"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      COMMA ","
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc4"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      COMMA ","
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc5"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      COMMA ","
      WHITESPACE "\n                    "
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc6"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "rngfuncid"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "rngfuncsubid"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "rngfuncname"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          R_PAREN ")"
      COMMA ","
      WHITESPACE "\n                    "
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc7"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "rngfuncid"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "rngfuncsubid"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "rngfuncname"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          R_PAREN ")"
      COMMA ","
      WHITESPACE "\n                    "
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc8"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      COMMA ","
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc9"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n              "
  WITH_CLAUSE
    WITH_KW "with"
    WHITESPACE " "
    WITH_TABLE
      NAME
        ORDINALITY_KW "ordinality"
      WHITESPACE " "
      AS_KW "as"
  WHITESPACE " "
  ERROR
    IDENT "t1"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    IDENT "c"
  ERROR
    COMMA ","
  ERROR
    IDENT "d"
  ERROR
    COMMA ","
  ERROR
    IDENT "e"
  ERROR
    COMMA ","
  ERROR
    IDENT "f"
  ERROR
    COMMA ","
  ERROR
    IDENT "g"
  ERROR
    COMMA ","
  ERROR
    IDENT "h"
  ERROR
    COMMA ","
  ERROR
    IDENT "i"
  ERROR
    COMMA ","
  ERROR
    IDENT "j"
  ERROR
    COMMA ","
  ERROR
    IDENT "k"
  ERROR
    COMMA ","
  ERROR
    IDENT "l"
  ERROR
    COMMA ","
  ERROR
    IDENT "m"
  ERROR
    COMMA ","
  ERROR
    IDENT "o"
  ERROR
    COMMA ","
  ERROR
    IDENT "p"
  ERROR
    COMMA ","
  ERROR
    IDENT "q"
  ERROR
    COMMA ","
  ERROR
    IDENT "r"
  ERROR
    COMMA ","
  ERROR
    IDENT "s"
  ERROR
    COMMA ","
  ERROR
    IDENT "t"
  ERROR
    COMMA ","
  ERROR
    IDENT "u"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      ROWS_KW "rows"
      WHITESPACE " "
      FROM_KW "from"
      L_PAREN "("
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc9"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      COMMA ","
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc8"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      COMMA ","
      WHITESPACE "\n                    "
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc7"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "rngfuncid"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "rngfuncsubid"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "rngfuncname"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          R_PAREN ")"
      COMMA ","
      WHITESPACE "\n                    "
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc6"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "rngfuncid"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "rngfuncsubid"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "rngfuncname"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          R_PAREN ")"
      COMMA ","
      WHITESPACE "\n                    "
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc5"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      COMMA ","
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc4"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      COMMA ","
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc3"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      COMMA ","
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc2"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      COMMA ","
      CALL_EXPR
        NAME_REF
          IDENT "getrngfunc1"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n              "
  WITH_CLAUSE
    WITH_KW "with"
    WHITESPACE " "
    WITH_TABLE
      NAME
        ORDINALITY_KW "ordinality"
      WHITESPACE " "
      AS_KW "as"
  WHITESPACE " "
  ERROR
    IDENT "t1"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    IDENT "c"
  ERROR
    COMMA ","
  ERROR
    IDENT "d"
  ERROR
    COMMA ","
  ERROR
    IDENT "e"
  ERROR
    COMMA ","
  ERROR
    IDENT "f"
  ERROR
    COMMA ","
  ERROR
    IDENT "g"
  ERROR
    COMMA ","
  ERROR
    IDENT "h"
  ERROR
    COMMA ","
  ERROR
    IDENT "i"
  ERROR
    COMMA ","
  ERROR
    IDENT "j"
  ERROR
    COMMA ","
  ERROR
    IDENT "k"
  ERROR
    COMMA ","
  ERROR
    IDENT "l"
  ERROR
    COMMA ","
  ERROR
    IDENT "m"
  ERROR
    COMMA ","
  ERROR
    IDENT "o"
  ERROR
    COMMA ","
  ERROR
    IDENT "p"
  ERROR
    COMMA ","
  ERROR
    IDENT "q"
  ERROR
    COMMA ","
  ERROR
    IDENT "r"
  ERROR
    COMMA ","
  ERROR
    IDENT "s"
  ERROR
    COMMA ","
  ERROR
    IDENT "t"
  ERROR
    COMMA ","
  ERROR
    IDENT "u"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TEMPORARY_KW "temporary"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vw_rngfunc"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        ROWS_KW "rows"
        WHITESPACE " "
        FROM_KW "from"
        L_PAREN "("
        CALL_EXPR
          NAME_REF
            IDENT "getrngfunc9"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
        COMMA ","
        WHITESPACE "\n                      "
        CALL_EXPR
          NAME_REF
            IDENT "getrngfunc7"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "rngfuncid"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      INT_KW "int"
            COMMA ","
            WHITESPACE " "
            COLUMN
              NAME
                IDENT "rngfuncsubid"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      INT_KW "int"
            COMMA ","
            WHITESPACE " "
            COLUMN
              NAME
                IDENT "rngfuncname"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
            R_PAREN ")"
        COMMA ","
        WHITESPACE "\n                      "
        CALL_EXPR
          NAME_REF
            IDENT "getrngfunc1"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n                "
  WITH_CLAUSE
    WITH_KW "with"
    WHITESPACE " "
    WITH_TABLE
      NAME
        ORDINALITY_KW "ordinality"
      WHITESPACE " "
      AS_KW "as"
  WHITESPACE " "
  ERROR
    IDENT "t1"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    IDENT "c"
  ERROR
    COMMA ","
  ERROR
    IDENT "d"
  ERROR
    COMMA ","
  ERROR
    IDENT "e"
  ERROR
    COMMA ","
  ERROR
    IDENT "f"
  ERROR
    COMMA ","
  ERROR
    IDENT "g"
  ERROR
    COMMA ","
  ERROR
    IDENT "n"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "vw_rngfunc"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_viewdef"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'vw_rngfunc'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "drop"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vw_rngfunc"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "getrngfunc1"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "getrngfunc2"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "getrngfunc3"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "getrngfunc4"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "getrngfunc5"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "getrngfunc6"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "getrngfunc7"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "getrngfunc8"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "getrngfunc9"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rngfunct"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rngfunc2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rngfunc"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Rescan tests --"
  WHITESPACE "\n"
  CREATE_SEQUENCE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMPORARY_KW "TEMPORARY"
    WHITESPACE " "
    SEQUENCE_KW "SEQUENCE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfunc_rescan_seq1"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_SEQUENCE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMPORARY_KW "TEMPORARY"
    WHITESPACE " "
    SEQUENCE_KW "SEQUENCE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfunc_rescan_seq2"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TYPE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfunc_rescan_t"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "i"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INTEGER_KW "integer"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "s"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BIGINT_KW "bigint"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfunc_sql"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "rngfunc_rescan_t"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT i, nextval(''rngfunc_rescan_seq1'') FROM generate_series($1,$2) i;'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- plpgsql functions use materialize mode"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfunc_mat"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "rngfunc_rescan_t"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'begin for i in $1..$2 loop return next (i, nextval(''rngfunc_rescan_seq2'')); end loop; end;'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--invokes ExecReScanFunctionScan - all these cases should materialize the function only once"
  WHITESPACE "\n"
  COMMENT "-- LEFT JOIN on a condition that the planner can't prove to be true is used to ensure the function"
  WHITESPACE "\n"
  COMMENT "-- is on the inner path of a nestloop join"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq1'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq2'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r"
          R_PAREN ")"
      WHITESPACE " "
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "rngfunc_sql"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "11"
            COMMA ","
            LITERAL
              INT_NUMBER "13"
            R_PAREN ")"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              NAME_REF
                IDENT "r"
              PLUS "+"
              NAME_REF
                IDENT "i"
            R_PAREN ")"
          L_ANGLE "<"
          LITERAL
            INT_NUMBER "100"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq1'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq2'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r"
          R_PAREN ")"
      WHITESPACE " "
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "rngfunc_sql"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "11"
            COMMA ","
            LITERAL
              INT_NUMBER "13"
            R_PAREN ")"
        WHITESPACE " "
        WITH_KW "WITH"
        WHITESPACE " "
        ORDINALITY_KW "ORDINALITY"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "f"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "i"
            COMMA ","
            COLUMN
              NAME
                IDENT "s"
            COMMA ","
            COLUMN
              NAME
                IDENT "o"
            R_PAREN ")"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              NAME_REF
                IDENT "r"
              PLUS "+"
              NAME_REF
                IDENT "i"
            R_PAREN ")"
          L_ANGLE "<"
          LITERAL
            INT_NUMBER "100"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq1'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq2'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r"
          R_PAREN ")"
      WHITESPACE " "
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "rngfunc_mat"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "11"
            COMMA ","
            LITERAL
              INT_NUMBER "13"
            R_PAREN ")"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              NAME_REF
                IDENT "r"
              PLUS "+"
              NAME_REF
                IDENT "i"
            R_PAREN ")"
          L_ANGLE "<"
          LITERAL
            INT_NUMBER "100"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq1'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq2'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r"
          R_PAREN ")"
      WHITESPACE " "
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "rngfunc_mat"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "11"
            COMMA ","
            LITERAL
              INT_NUMBER "13"
            R_PAREN ")"
        WHITESPACE " "
        WITH_KW "WITH"
        WHITESPACE " "
        ORDINALITY_KW "ORDINALITY"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "f"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "i"
            COMMA ","
            COLUMN
              NAME
                IDENT "s"
            COMMA ","
            COLUMN
              NAME
                IDENT "o"
            R_PAREN ")"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              NAME_REF
                IDENT "r"
              PLUS "+"
              NAME_REF
                IDENT "i"
            R_PAREN ")"
          L_ANGLE "<"
          LITERAL
            INT_NUMBER "100"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq1'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq2'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r"
          R_PAREN ")"
      WHITESPACE " "
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        ROWS_KW "ROWS"
        WHITESPACE " "
        FROM_KW "FROM"
        L_PAREN "("
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "rngfunc_sql"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "11"
            COMMA ","
            LITERAL
              INT_NUMBER "13"
            R_PAREN ")"
        USING_CLAUSE
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc_mat"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "11"
          COMMA ","
          LITERAL
            INT_NUMBER "13"
          R_PAREN ")"
  WHITESPACE " "
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  WITH_CLAUSE
    WITH_KW "WITH"
    WHITESPACE " "
    WITH_TABLE
      NAME
        ORDINALITY_KW "ORDINALITY"
      WHITESPACE " "
      AS_KW "AS"
  WHITESPACE " "
  ERROR
    IDENT "f"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "i1"
  ERROR
    COMMA ","
  ERROR
    IDENT "s1"
  ERROR
    COMMA ","
  ERROR
    IDENT "i2"
  ERROR
    COMMA ","
  ERROR
    IDENT "s2"
  ERROR
    COMMA ","
  ERROR
    IDENT "o"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "r"
  ERROR
    PLUS "+"
  ERROR
    IDENT "i1"
  ERROR
    PLUS "+"
  ERROR
    IDENT "i2"
  ERROR
    R_PAREN ")"
  ERROR
    L_ANGLE "<"
  ERROR
    INT_NUMBER "100"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r"
          R_PAREN ")"
      WHITESPACE " "
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "11"
            COMMA ","
            LITERAL
              INT_NUMBER "13"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "f"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "i"
            R_PAREN ")"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              NAME_REF
                IDENT "r"
              PLUS "+"
              NAME_REF
                IDENT "i"
            R_PAREN ")"
          L_ANGLE "<"
          LITERAL
            INT_NUMBER "100"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r"
          R_PAREN ")"
      WHITESPACE " "
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "11"
            COMMA ","
            LITERAL
              INT_NUMBER "13"
            R_PAREN ")"
        WHITESPACE " "
        WITH_KW "WITH"
        WHITESPACE " "
        ORDINALITY_KW "ORDINALITY"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "f"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "i"
            COMMA ","
            COLUMN
              NAME
                IDENT "o"
            R_PAREN ")"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              NAME_REF
                IDENT "r"
              PLUS "+"
              NAME_REF
                IDENT "i"
            R_PAREN ")"
          L_ANGLE "<"
          LITERAL
            INT_NUMBER "100"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r"
          R_PAREN ")"
      WHITESPACE " "
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "unnest"
          ARG_LIST
            L_PAREN "("
            ARRAY_EXPR
              ARRAY_KW "array"
              L_BRACK "["
              LITERAL
                INT_NUMBER "10"
              COMMA ","
              LITERAL
                INT_NUMBER "20"
              COMMA ","
              LITERAL
                INT_NUMBER "30"
              R_BRACK "]"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "f"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "i"
            R_PAREN ")"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              NAME_REF
                IDENT "r"
              PLUS "+"
              NAME_REF
                IDENT "i"
            R_PAREN ")"
          L_ANGLE "<"
          LITERAL
            INT_NUMBER "100"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r"
          R_PAREN ")"
      WHITESPACE " "
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "unnest"
          ARG_LIST
            L_PAREN "("
            ARRAY_EXPR
              ARRAY_KW "array"
              L_BRACK "["
              LITERAL
                INT_NUMBER "10"
              COMMA ","
              LITERAL
                INT_NUMBER "20"
              COMMA ","
              LITERAL
                INT_NUMBER "30"
              R_BRACK "]"
            R_PAREN ")"
        WHITESPACE " "
        WITH_KW "WITH"
        WHITESPACE " "
        ORDINALITY_KW "ORDINALITY"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "f"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "i"
            COMMA ","
            COLUMN
              NAME
                IDENT "o"
            R_PAREN ")"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              NAME_REF
                IDENT "r"
              PLUS "+"
              NAME_REF
                IDENT "i"
            R_PAREN ")"
          L_ANGLE "<"
          LITERAL
            INT_NUMBER "100"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--invokes ExecReScanFunctionScan with chgParam != NULL (using implied LATERAL)"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq1'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq2'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc_sql"
        ARG_LIST
          L_PAREN "("
          BIN_EXPR
            LITERAL
              INT_NUMBER "10"
            PLUS "+"
            NAME_REF
              IDENT "r"
          COMMA ","
          LITERAL
            INT_NUMBER "13"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq1'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq2'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc_sql"
        ARG_LIST
          L_PAREN "("
          BIN_EXPR
            LITERAL
              INT_NUMBER "10"
            PLUS "+"
            NAME_REF
              IDENT "r"
          COMMA ","
          LITERAL
            INT_NUMBER "13"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      ORDINALITY_KW "ORDINALITY"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "f"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "i"
          COMMA ","
          COLUMN
            NAME
              IDENT "s"
          COMMA ","
          COLUMN
            NAME
              IDENT "o"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq1'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq2'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc_sql"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "11"
          COMMA ","
          BIN_EXPR
            LITERAL
              INT_NUMBER "10"
            PLUS "+"
            NAME_REF
              IDENT "r"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq1'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq2'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc_sql"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "11"
          COMMA ","
          BIN_EXPR
            LITERAL
              INT_NUMBER "10"
            PLUS "+"
            NAME_REF
              IDENT "r"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      ORDINALITY_KW "ORDINALITY"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "f"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "i"
          COMMA ","
          COLUMN
            NAME
              IDENT "s"
          COMMA ","
          COLUMN
            NAME
              IDENT "o"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq1'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq2'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "11"
          COMMA ","
          LITERAL
            INT_NUMBER "12"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "13"
          COMMA ","
          LITERAL
            INT_NUMBER "15"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "16"
          COMMA ","
          LITERAL
            INT_NUMBER "20"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r1"
          COMMA ","
          COLUMN
            NAME
              IDENT "r2"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc_sql"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "r1"
          COMMA ","
          NAME_REF
            IDENT "r2"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq1'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq2'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "11"
          COMMA ","
          LITERAL
            INT_NUMBER "12"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "13"
          COMMA ","
          LITERAL
            INT_NUMBER "15"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "16"
          COMMA ","
          LITERAL
            INT_NUMBER "20"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r1"
          COMMA ","
          COLUMN
            NAME
              IDENT "r2"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc_sql"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "r1"
          COMMA ","
          NAME_REF
            IDENT "r2"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      ORDINALITY_KW "ORDINALITY"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "f"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "i"
          COMMA ","
          COLUMN
            NAME
              IDENT "s"
          COMMA ","
          COLUMN
            NAME
              IDENT "o"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq1'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq2'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc_mat"
        ARG_LIST
          L_PAREN "("
          BIN_EXPR
            LITERAL
              INT_NUMBER "10"
            PLUS "+"
            NAME_REF
              IDENT "r"
          COMMA ","
          LITERAL
            INT_NUMBER "13"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq1'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq2'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc_mat"
        ARG_LIST
          L_PAREN "("
          BIN_EXPR
            LITERAL
              INT_NUMBER "10"
            PLUS "+"
            NAME_REF
              IDENT "r"
          COMMA ","
          LITERAL
            INT_NUMBER "13"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      ORDINALITY_KW "ORDINALITY"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "f"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "i"
          COMMA ","
          COLUMN
            NAME
              IDENT "s"
          COMMA ","
          COLUMN
            NAME
              IDENT "o"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq1'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq2'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc_mat"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "11"
          COMMA ","
          BIN_EXPR
            LITERAL
              INT_NUMBER "10"
            PLUS "+"
            NAME_REF
              IDENT "r"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq1'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq2'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc_mat"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "11"
          COMMA ","
          BIN_EXPR
            LITERAL
              INT_NUMBER "10"
            PLUS "+"
            NAME_REF
              IDENT "r"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      ORDINALITY_KW "ORDINALITY"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "f"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "i"
          COMMA ","
          COLUMN
            NAME
              IDENT "s"
          COMMA ","
          COLUMN
            NAME
              IDENT "o"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq1'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq2'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "11"
          COMMA ","
          LITERAL
            INT_NUMBER "12"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "13"
          COMMA ","
          LITERAL
            INT_NUMBER "15"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "16"
          COMMA ","
          LITERAL
            INT_NUMBER "20"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r1"
          COMMA ","
          COLUMN
            NAME
              IDENT "r2"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc_mat"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "r1"
          COMMA ","
          NAME_REF
            IDENT "r2"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq1'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq2'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "11"
          COMMA ","
          LITERAL
            INT_NUMBER "12"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "13"
          COMMA ","
          LITERAL
            INT_NUMBER "15"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "16"
          COMMA ","
          LITERAL
            INT_NUMBER "20"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r1"
          COMMA ","
          COLUMN
            NAME
              IDENT "r2"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc_mat"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "r1"
          COMMA ","
          NAME_REF
            IDENT "r2"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      ORDINALITY_KW "ORDINALITY"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "f"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "i"
          COMMA ","
          COLUMN
            NAME
              IDENT "s"
          COMMA ","
          COLUMN
            NAME
              IDENT "o"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- selective rescan of multiple functions:"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq1'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq2'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      ROWS_KW "ROWS"
      WHITESPACE " "
      FROM_KW "FROM"
      L_PAREN "("
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc_sql"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "11"
          COMMA ","
          LITERAL
            INT_NUMBER "11"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc_mat"
        ARG_LIST
          L_PAREN "("
          BIN_EXPR
            LITERAL
              INT_NUMBER "10"
            PLUS "+"
            NAME_REF
              IDENT "r"
          COMMA ","
          LITERAL
            INT_NUMBER "13"
          R_PAREN ")"
  WHITESPACE " "
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq1'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq2'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      ROWS_KW "ROWS"
      WHITESPACE " "
      FROM_KW "FROM"
      L_PAREN "("
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc_sql"
        ARG_LIST
          L_PAREN "("
          BIN_EXPR
            LITERAL
              INT_NUMBER "10"
            PLUS "+"
            NAME_REF
              IDENT "r"
          COMMA ","
          LITERAL
            INT_NUMBER "13"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc_mat"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "11"
          COMMA ","
          LITERAL
            INT_NUMBER "11"
          R_PAREN ")"
  WHITESPACE " "
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq1'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq2'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      ROWS_KW "ROWS"
      WHITESPACE " "
      FROM_KW "FROM"
      L_PAREN "("
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc_sql"
        ARG_LIST
          L_PAREN "("
          BIN_EXPR
            LITERAL
              INT_NUMBER "10"
            PLUS "+"
            NAME_REF
              IDENT "r"
          COMMA ","
          LITERAL
            INT_NUMBER "13"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc_mat"
        ARG_LIST
          L_PAREN "("
          BIN_EXPR
            LITERAL
              INT_NUMBER "10"
            PLUS "+"
            NAME_REF
              IDENT "r"
          COMMA ","
          LITERAL
            INT_NUMBER "13"
          R_PAREN ")"
  WHITESPACE " "
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq1'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "setval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rngfunc_rescan_seq2'"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "r1"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "r1"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "r2"
      COMMA ","
      WHITESPACE " "
      ROWS_KW "ROWS"
      WHITESPACE " "
      FROM_KW "FROM"
      L_PAREN "("
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc_sql"
        ARG_LIST
          L_PAREN "("
          BIN_EXPR
            LITERAL
              INT_NUMBER "10"
            PLUS "+"
            NAME_REF
              IDENT "r1"
          COMMA ","
          LITERAL
            INT_NUMBER "13"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc_mat"
        ARG_LIST
          L_PAREN "("
          BIN_EXPR
            LITERAL
              INT_NUMBER "10"
            PLUS "+"
            NAME_REF
              IDENT "r2"
          COMMA ","
          LITERAL
            INT_NUMBER "13"
          R_PAREN ")"
  WHITESPACE " "
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          BIN_EXPR
            LITERAL
              INT_NUMBER "10"
            PLUS "+"
            NAME_REF
              IDENT "r"
          COMMA ","
          BIN_EXPR
            LITERAL
              INT_NUMBER "20"
            MINUS "-"
            NAME_REF
              IDENT "r"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "f"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "i"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          BIN_EXPR
            LITERAL
              INT_NUMBER "10"
            PLUS "+"
            NAME_REF
              IDENT "r"
          COMMA ","
          BIN_EXPR
            LITERAL
              INT_NUMBER "20"
            MINUS "-"
            NAME_REF
              IDENT "r"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      ORDINALITY_KW "ORDINALITY"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "f"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "i"
          COMMA ","
          COLUMN
            NAME
              IDENT "o"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "unnest"
        ARG_LIST
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            BIN_EXPR
              NAME_REF
                IDENT "r"
              STAR "*"
              LITERAL
                INT_NUMBER "10"
            COMMA ","
            BIN_EXPR
              NAME_REF
                IDENT "r"
              STAR "*"
              LITERAL
                INT_NUMBER "20"
            COMMA ","
            BIN_EXPR
              NAME_REF
                IDENT "r"
              STAR "*"
              LITERAL
                INT_NUMBER "30"
            R_BRACK "]"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "f"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "i"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "unnest"
        ARG_LIST
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            BIN_EXPR
              NAME_REF
                IDENT "r"
              STAR "*"
              LITERAL
                INT_NUMBER "10"
            COMMA ","
            BIN_EXPR
              NAME_REF
                IDENT "r"
              STAR "*"
              LITERAL
                INT_NUMBER "20"
            COMMA ","
            BIN_EXPR
              NAME_REF
                IDENT "r"
              STAR "*"
              LITERAL
                INT_NUMBER "30"
            R_BRACK "]"
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      ORDINALITY_KW "ORDINALITY"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "f"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "i"
          COMMA ","
          COLUMN
            NAME
              IDENT "o"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- deep nesting"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v1"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r1"
          R_PAREN ")"
      COMMA ","
      WHITESPACE "\n              "
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "r1"
              COMMA ","
              WHITESPACE " "
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            PAREN_EXPR
              L_PAREN "("
              SELECT
                VALUES_KW "VALUES"
                WHITESPACE " "
                L_PAREN "("
                LITERAL
                  INT_NUMBER "10"
                R_PAREN ")"
                COMMA ","
                L_PAREN "("
                LITERAL
                  INT_NUMBER "20"
                R_PAREN ")"
                COMMA ","
                L_PAREN "("
                LITERAL
                  INT_NUMBER "30"
                R_PAREN ")"
              R_PAREN ")"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "v2"
              COLUMN_LIST
                L_PAREN "("
                COLUMN
                  NAME
                    IDENT "r2"
                R_PAREN ")"
            WHITESPACE "\n                                         "
            JOIN
              LEFT_KW "LEFT"
              WHITESPACE " "
              JOIN_KW "JOIN"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "generate_series"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    INT_NUMBER "21"
                  COMMA ","
                  LITERAL
                    INT_NUMBER "23"
                  R_PAREN ")"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "f"
                COLUMN_LIST
                  L_PAREN "("
                  COLUMN
                    NAME
                      IDENT "i"
                  R_PAREN ")"
              WHITESPACE " "
              ON_KW "ON"
              WHITESPACE " "
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  PAREN_EXPR
                    L_PAREN "("
                    BIN_EXPR
                      NAME_REF
                        IDENT "r2"
                      PLUS "+"
                      NAME_REF
                        IDENT "i"
                    R_PAREN ")"
                  L_ANGLE "<"
                  LITERAL
                    INT_NUMBER "100"
                R_PAREN ")"
          WHITESPACE " "
          OFFSET_CLAUSE
            OFFSET_KW "OFFSET"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v1"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r1"
          R_PAREN ")"
      COMMA ","
      WHITESPACE "\n              "
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "r1"
              COMMA ","
              WHITESPACE " "
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            PAREN_EXPR
              L_PAREN "("
              SELECT
                VALUES_KW "VALUES"
                WHITESPACE " "
                L_PAREN "("
                LITERAL
                  INT_NUMBER "10"
                R_PAREN ")"
                COMMA ","
                L_PAREN "("
                LITERAL
                  INT_NUMBER "20"
                R_PAREN ")"
                COMMA ","
                L_PAREN "("
                LITERAL
                  INT_NUMBER "30"
                R_PAREN ")"
              R_PAREN ")"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "v2"
              COLUMN_LIST
                L_PAREN "("
                COLUMN
                  NAME
                    IDENT "r2"
                R_PAREN ")"
            WHITESPACE "\n                                         "
            JOIN
              LEFT_KW "LEFT"
              WHITESPACE " "
              JOIN_KW "JOIN"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "generate_series"
                ARG_LIST
                  L_PAREN "("
                  BIN_EXPR
                    LITERAL
                      INT_NUMBER "20"
                    PLUS "+"
                    NAME_REF
                      IDENT "r1"
                  COMMA ","
                  LITERAL
                    INT_NUMBER "23"
                  R_PAREN ")"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "f"
                COLUMN_LIST
                  L_PAREN "("
                  COLUMN
                    NAME
                      IDENT "i"
                  R_PAREN ")"
              WHITESPACE " "
              ON_KW "ON"
              WHITESPACE " "
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  PAREN_EXPR
                    L_PAREN "("
                    BIN_EXPR
                      NAME_REF
                        IDENT "r2"
                      PLUS "+"
                      NAME_REF
                        IDENT "i"
                    R_PAREN ")"
                  L_ANGLE "<"
                  LITERAL
                    INT_NUMBER "100"
                R_PAREN ")"
          WHITESPACE " "
          OFFSET_CLAUSE
            OFFSET_KW "OFFSET"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v1"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r1"
          R_PAREN ")"
      COMMA ","
      WHITESPACE "\n              "
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "r1"
              COMMA ","
              WHITESPACE " "
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            PAREN_EXPR
              L_PAREN "("
              SELECT
                VALUES_KW "VALUES"
                WHITESPACE " "
                L_PAREN "("
                LITERAL
                  INT_NUMBER "10"
                R_PAREN ")"
                COMMA ","
                L_PAREN "("
                LITERAL
                  INT_NUMBER "20"
                R_PAREN ")"
                COMMA ","
                L_PAREN "("
                LITERAL
                  INT_NUMBER "30"
                R_PAREN ")"
              R_PAREN ")"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "v2"
              COLUMN_LIST
                L_PAREN "("
                COLUMN
                  NAME
                    IDENT "r2"
                R_PAREN ")"
            WHITESPACE "\n                                         "
            JOIN
              LEFT_KW "LEFT"
              WHITESPACE " "
              JOIN_KW "JOIN"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "generate_series"
                ARG_LIST
                  L_PAREN "("
                  NAME_REF
                    IDENT "r2"
                  COMMA ","
                  BIN_EXPR
                    NAME_REF
                      IDENT "r2"
                    PLUS "+"
                    LITERAL
                      INT_NUMBER "3"
                  R_PAREN ")"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "f"
                COLUMN_LIST
                  L_PAREN "("
                  COLUMN
                    NAME
                      IDENT "i"
                  R_PAREN ")"
              WHITESPACE " "
              ON_KW "ON"
              WHITESPACE " "
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  PAREN_EXPR
                    L_PAREN "("
                    BIN_EXPR
                      NAME_REF
                        IDENT "r2"
                      PLUS "+"
                      NAME_REF
                        IDENT "i"
                    R_PAREN ")"
                  L_ANGLE "<"
                  LITERAL
                    INT_NUMBER "100"
                R_PAREN ")"
          WHITESPACE " "
          OFFSET_CLAUSE
            OFFSET_KW "OFFSET"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v1"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r1"
          R_PAREN ")"
      COMMA ","
      WHITESPACE "\n              "
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "r1"
              COMMA ","
              WHITESPACE " "
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            PAREN_EXPR
              L_PAREN "("
              SELECT
                VALUES_KW "VALUES"
                WHITESPACE " "
                L_PAREN "("
                LITERAL
                  INT_NUMBER "10"
                R_PAREN ")"
                COMMA ","
                L_PAREN "("
                LITERAL
                  INT_NUMBER "20"
                R_PAREN ")"
                COMMA ","
                L_PAREN "("
                LITERAL
                  INT_NUMBER "30"
                R_PAREN ")"
              R_PAREN ")"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "v2"
              COLUMN_LIST
                L_PAREN "("
                COLUMN
                  NAME
                    IDENT "r2"
                R_PAREN ")"
            WHITESPACE "\n                                         "
            JOIN
              LEFT_KW "LEFT"
              WHITESPACE " "
              JOIN_KW "JOIN"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "generate_series"
                ARG_LIST
                  L_PAREN "("
                  NAME_REF
                    IDENT "r1"
                  COMMA ","
                  BIN_EXPR
                    LITERAL
                      INT_NUMBER "2"
                    PLUS "+"
                    BIN_EXPR
                      NAME_REF
                        IDENT "r2"
                      SLASH "/"
                      LITERAL
                        INT_NUMBER "5"
                  R_PAREN ")"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "f"
                COLUMN_LIST
                  L_PAREN "("
                  COLUMN
                    NAME
                      IDENT "i"
                  R_PAREN ")"
              WHITESPACE " "
              ON_KW "ON"
              WHITESPACE " "
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  PAREN_EXPR
                    L_PAREN "("
                    BIN_EXPR
                      NAME_REF
                        IDENT "r2"
                      PLUS "+"
                      NAME_REF
                        IDENT "i"
                    R_PAREN ")"
                  L_ANGLE "<"
                  LITERAL
                    INT_NUMBER "100"
                R_PAREN ")"
          WHITESPACE " "
          OFFSET_CLAUSE
            OFFSET_KW "OFFSET"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check handling of FULL JOIN with multiple lateral references (bug #15741)"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v1"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "r1"
          R_PAREN ")"
      WHITESPACE "\n    "
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        LATERAL_KW "LATERAL"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          WHITESPACE "\n        "
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  STAR "*"
            WHITESPACE "\n        "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "generate_series"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    INT_NUMBER "1"
                  COMMA ","
                  WHITESPACE " "
                  FIELD_EXPR
                    NAME_REF
                      IDENT "v1"
                    DOT "."
                    NAME_REF
                      IDENT "r1"
                  R_PAREN ")"
              WHITESPACE " "
              ALIAS
                AS_KW "AS"
                WHITESPACE " "
                NAME
                  IDENT "gs1"
              WHITESPACE "\n        "
              JOIN
                LEFT_KW "LEFT"
                WHITESPACE " "
                JOIN_KW "JOIN"
                WHITESPACE " "
                LATERAL_KW "LATERAL"
                WHITESPACE " "
                PAREN_EXPR
                  L_PAREN "("
                  WHITESPACE "\n            "
                  SELECT
                    SELECT_CLAUSE
                      SELECT_KW "SELECT"
                      WHITESPACE " "
                      TARGET_LIST
                        TARGET
                          STAR "*"
                    WHITESPACE "\n            "
                    FROM_CLAUSE
                      FROM_KW "FROM"
                      WHITESPACE " "
                      CALL_EXPR
                        NAME_REF
                          IDENT "generate_series"
                        ARG_LIST
                          L_PAREN "("
                          LITERAL
                            INT_NUMBER "1"
                          COMMA ","
                          WHITESPACE " "
                          NAME_REF
                            IDENT "gs1"
                          R_PAREN ")"
                      WHITESPACE " "
                      ALIAS
                        AS_KW "AS"
                        WHITESPACE " "
                        NAME
                          IDENT "gs2"
                      WHITESPACE "\n            "
                      JOIN
                        LEFT_KW "LEFT"
                        WHITESPACE " "
                        JOIN_KW "JOIN"
                        WHITESPACE " "
                        CALL_EXPR
                          NAME_REF
                            IDENT "generate_series"
                          ARG_LIST
                            L_PAREN "("
                            LITERAL
                              INT_NUMBER "1"
                            COMMA ","
                            WHITESPACE " "
                            NAME_REF
                              IDENT "gs2"
                            R_PAREN ")"
                        WHITESPACE " "
                        ALIAS
                          AS_KW "AS"
                          WHITESPACE " "
                          NAME
                            IDENT "gs3"
                        WHITESPACE " "
                        ON_KW "ON"
                        WHITESPACE " "
                        LITERAL
                          TRUE_KW "TRUE"
                  WHITESPACE "\n        "
                  R_PAREN ")"
                WHITESPACE " "
                ALIAS
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "ss1"
                WHITESPACE " "
                ON_KW "ON"
                WHITESPACE " "
                LITERAL
                  TRUE_KW "TRUE"
              WHITESPACE "\n        "
              JOIN
                FULL_KW "FULL"
                WHITESPACE " "
                JOIN_KW "JOIN"
                WHITESPACE " "
                CALL_EXPR
                  NAME_REF
                    IDENT "generate_series"
                  ARG_LIST
                    L_PAREN "("
                    LITERAL
                      INT_NUMBER "1"
                    COMMA ","
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "v1"
                      DOT "."
                      NAME_REF
                        IDENT "r1"
                    R_PAREN ")"
                WHITESPACE " "
                ALIAS
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "gs4"
                WHITESPACE " "
                ON_KW "ON"
                WHITESPACE " "
                LITERAL
                  FALSE_KW "FALSE"
          WHITESPACE "\n    "
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "ss0"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        LITERAL
          TRUE_KW "TRUE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rngfunc_sql"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rngfunc_mat"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_SEQUENCE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    SEQUENCE_KW "SEQUENCE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rngfunc_rescan_seq1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_SEQUENCE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    SEQUENCE_KW "SEQUENCE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rngfunc_rescan_seq2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test cases involving OUT parameters"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfunc"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PARAM_IN
          IN_KW "in"
        WHITESPACE " "
        NAME
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        NAME
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'select $1+1'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "rngfunc"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "42"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "42"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "42"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- explicit spec of return type is OK"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "OR"
      WHITESPACE " "
      REPLACE_KW "REPLACE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfunc"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PARAM_IN
          IN_KW "in"
        WHITESPACE " "
        NAME
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        NAME
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'select $1+1'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- error, wrong result type"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "OR"
      WHITESPACE " "
      REPLACE_KW "REPLACE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfunc"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PARAM_IN
          IN_KW "in"
        WHITESPACE " "
        NAME
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        NAME
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              FLOAT_KW "float"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'select $1+1'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- with multiple OUT params you must get a RECORD result"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "OR"
      WHITESPACE " "
      REPLACE_KW "REPLACE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfunc"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PARAM_IN
          IN_KW "in"
        WHITESPACE " "
        NAME
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        NAME
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        NAME
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'select $1+1'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "OR"
      WHITESPACE " "
      REPLACE_KW "REPLACE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfunc"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PARAM_IN
          IN_KW "in"
        WHITESPACE " "
        NAME
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        NAME
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        NAME
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE "\n"
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "record"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'select $1+1'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "OR"
      WHITESPACE " "
      REPLACE_KW "REPLACE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfuncr"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PARAM_IN
          IN_KW "in"
        WHITESPACE " "
        NAME
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        NAME
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        PATH_TYPE
          TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$select $1-1, $1::text || 'z'$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "f1"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "rngfuncr"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "f1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "int4_tbl"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfuncr"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "42"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfuncr"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "42"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          COLUMN
            NAME
              IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "OR"
      WHITESPACE " "
      REPLACE_KW "REPLACE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfuncb"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PARAM_IN
          IN_KW "in"
        WHITESPACE " "
        NAME
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_INOUT
          INOUT_KW "inout"
        WHITESPACE " "
        NAME
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        PATH_TYPE
          TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$select $2-1, $1::text || 'z'$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "f1"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "rngfuncb"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "f1"
              COMMA ","
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "f1"
                SLASH "/"
                LITERAL
                  INT_NUMBER "2"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "int4_tbl"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfuncb"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "42"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "99"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfuncb"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "42"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "99"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          COLUMN
            NAME
              IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Can reference function with or without OUT params for DROP, etc"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rngfunc"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rngfuncr"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PARAM_IN
          IN_KW "in"
        WHITESPACE " "
        NAME
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        NAME
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        PATH_TYPE
          TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rngfuncb"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PARAM_IN
          IN_KW "in"
        WHITESPACE " "
        NAME
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_INOUT
          INOUT_KW "inout"
        WHITESPACE " "
        NAME
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- For my next trick, polymorphic OUT parameters"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dup"
    WHITESPACE " "
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anyelement"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "f2"
        WHITESPACE " "
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anyelement"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "f3"
        WHITESPACE " "
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anyarray"
      R_PAREN ")"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'select $1, array[$1,$1]'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "dup"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "22"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "dup"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'xyz'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\t"
  COMMENT "-- fails"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "dup"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'xyz'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        TEXT_KW "text"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "dup"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'xyz'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fails, as we are attempting to rename first argument"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "OR"
      WHITESPACE " "
      REPLACE_KW "REPLACE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dup"
    WHITESPACE " "
    PARAM_LIST
      L_PAREN "("
      PARAM
        PARAM_INOUT
          INOUT_KW "inout"
        WHITESPACE " "
        NAME
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anyelement"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        NAME
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anyarray"
      R_PAREN ")"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'select $1, array[$1,$1]'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dup"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "anyelement"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- equivalent behavior, though different name exposed for input arg"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "OR"
      WHITESPACE " "
      REPLACE_KW "REPLACE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dup"
    WHITESPACE " "
    PARAM_LIST
      L_PAREN "("
      PARAM
        PARAM_INOUT
          INOUT_KW "inout"
        WHITESPACE " "
        NAME
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anyelement"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        NAME
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anyarray"
      R_PAREN ")"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'select $1, array[$1,$1]'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "dup"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "22"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dup"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "anyelement"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fails, no way to deduce outputs"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bad"
    WHITESPACE " "
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        NAME
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anyelement"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        NAME
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anyarray"
      R_PAREN ")"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'select $1, array[$1,$1]'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dup"
    WHITESPACE " "
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anycompatible"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anycompatiblearray"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "f3"
        WHITESPACE " "
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anycompatible"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "f4"
        WHITESPACE " "
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anycompatiblearray"
      R_PAREN ")"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'select $1, $2'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "dup"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "22"
              COMMA ","
              WHITESPACE " "
              ARRAY_EXPR
                ARRAY_KW "array"
                L_BRACK "["
                LITERAL
                  INT_NUMBER "44"
                R_BRACK "]"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "dup"
            ARG_LIST
              L_PAREN "("
              LITERAL
                FLOAT_NUMBER "4.5"
              COMMA ","
              WHITESPACE " "
              ARRAY_EXPR
                ARRAY_KW "array"
                L_BRACK "["
                LITERAL
                  INT_NUMBER "44"
                R_BRACK "]"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "dup"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "22"
              COMMA ","
              WHITESPACE " "
              ARRAY_EXPR
                ARRAY_KW "array"
                L_BRACK "["
                CAST_EXPR
                  LITERAL
                    INT_NUMBER "44"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          BIGINT_KW "bigint"
                R_BRACK "]"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_typeof"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "f3"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_typeof"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "f4"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "dup"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "22"
          COMMA ","
          WHITESPACE " "
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            CAST_EXPR
              LITERAL
                INT_NUMBER "44"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      BIGINT_KW "bigint"
            R_BRACK "]"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dup"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anycompatible"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anycompatiblearray"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dup"
    WHITESPACE " "
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anycompatiblerange"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "f2"
        WHITESPACE " "
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anycompatible"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "f3"
        WHITESPACE " "
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anycompatiblearray"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "f4"
        WHITESPACE " "
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anycompatiblerange"
      R_PAREN ")"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'select lower($1), array[lower($1), upper($1)], $1'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "dup"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  IDENT "int4range"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    INT_NUMBER "4"
                  COMMA ","
                  LITERAL
                    INT_NUMBER "7"
                  R_PAREN ")"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "dup"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  IDENT "numrange"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    INT_NUMBER "4"
                  COMMA ","
                  LITERAL
                    INT_NUMBER "7"
                  R_PAREN ")"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "dup"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  IDENT "textrange"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    STRING "'aaa'"
                  COMMA ","
                  WHITESPACE " "
                  LITERAL
                    STRING "'bbb'"
                  R_PAREN ")"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dup"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anycompatiblerange"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fails, no way to deduce outputs"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bad"
    WHITESPACE " "
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anyarray"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        NAME
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anycompatible"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        NAME
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anycompatiblearray"
      R_PAREN ")"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'select $1, array[$1,$1]'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- table functions"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "OR"
      WHITESPACE " "
      REPLACE_KW "REPLACE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfunc"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE "\n"
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      TABLE_KW "TABLE"
      L_PAREN "("
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
      R_PAREN ")"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$ SELECT a FROM generate_series(1,5) a(a) $$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rngfunc"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "OR"
      WHITESPACE " "
      REPLACE_KW "REPLACE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfunc"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE "\n"
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      TABLE_KW "TABLE"
      L_PAREN "("
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
      R_PAREN ")"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$ SELECT a, b\n         FROM generate_series(1,$1) a(a),\n              generate_series(1,$1) b(b) $$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rngfunc"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- case that causes change of typmod knowledge during inlining"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "OR"
      WHITESPACE " "
      REPLACE_KW "REPLACE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfunc"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE "\n"
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      TABLE_KW "TABLE"
      L_PAREN "("
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      CHAR_TYPE
        VARCHAR_KW "varchar"
        L_PAREN "("
        ARG_LIST
          ARG
            LITERAL
              INT_NUMBER "5"
          R_PAREN ")"
      R_PAREN ")"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$ SELECT 'hello'::varchar(5) $$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        STABLE_KW "STABLE"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rngfunc"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- some tests on SQL functions with RETURNING"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tt"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "serial"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          DATA_KW "data"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "insert_tt"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$ insert into tt(data) values($1) returning f1 $$"
      WHITESPACE "\n"
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "insert_tt"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'foo'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "insert_tt"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'bar'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tt"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- insert will execute to completion even if function needs just 1 row"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "insert_tt"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$ insert into tt(data) values($1),($1||$1) returning f1 $$"
      WHITESPACE "\n"
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "insert_tt"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'fool'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tt"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- setof does what's expected"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "insert_tt2"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          TEXT_KW "text"
      COMMA ","
      PARAM
        PATH_TYPE
          TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$ insert into tt(data) values($1),($2) returning f1 $$"
      WHITESPACE "\n"
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "insert_tt2"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'foolish'"
              COMMA ","
              LITERAL
                STRING "'barrish'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "insert_tt2"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'baz'"
          COMMA ","
          LITERAL
            STRING "'quux'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tt"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- limit doesn't prevent execution to completion"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "insert_tt2"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'foolish'"
              COMMA ","
              LITERAL
                STRING "'barrish'"
              R_PAREN ")"
    WHITESPACE " "
    LIMIT_CLAUSE
      LIMIT_KW "limit"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tt"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- triggers will fire, too"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "noticetrigger"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TRIGGER_KW "trigger"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nbegin\n  raise notice 'noticetrigger % %', new.f1, new.data;\n  return null;\nend $$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TRIGGER_KW "trigger"
    WHITESPACE " "
    NAME
      IDENT "tnoticetrigger"
    WHITESPACE " "
    AFTER_KW "after"
    WHITESPACE " "
    INSERT_KW "insert"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    EACH_KW "each"
    WHITESPACE " "
    ROW_KW "row"
    WHITESPACE "\n"
    EXECUTE_KW "execute"
    WHITESPACE " "
    PROCEDURE_KW "procedure"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "noticetrigger"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "insert_tt2"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'foolme'"
              COMMA ","
              LITERAL
                STRING "'barme'"
              R_PAREN ")"
    WHITESPACE " "
    LIMIT_CLAUSE
      LIMIT_KW "limit"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tt"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- and rules work"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tt_log"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          DATA_KW "data"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_RULE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    RULE_KW "rule"
    WHITESPACE " "
    NAME
      IDENT "insert_tt_rule"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    INSERT_KW "insert"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    ALSO_KW "also"
    WHITESPACE "\n  "
    INSERT_STMT
      INSERT_KW "insert"
      WHITESPACE " "
      INTO_KW "into"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "tt_log"
      WHITESPACE " "
      SELECT
        VALUES_KW "values"
        L_PAREN "("
        FIELD_EXPR
          NAME_REF
            NEW_KW "new"
          DOT "."
          STAR "*"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "insert_tt2"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'foollog'"
              COMMA ","
              LITERAL
                STRING "'barlog'"
              R_PAREN ")"
    WHITESPACE " "
    LIMIT_CLAUSE
      LIMIT_KW "limit"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tt"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- note that nextval() gets executed a second time in the rule expansion,"
  WHITESPACE "\n"
  COMMENT "-- which is expected."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tt_log"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test case for a whole-row-variable bug"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfunc1"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "n"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        NAME
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        NAME
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE "\n  "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "record"
    WHITESPACE "\n  "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE "\n  "
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$ select 'foo ' || i, 'bar ' || i from generate_series(1,$1) i $$"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "work_mem"
    EQ "="
    LITERAL
      STRING "'64kB'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t"
            DOT "."
            NAME_REF
              IDENT "a"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "t"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t"
            DOT "."
            NAME_REF
              IDENT "a"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc1"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "10000"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t"
    WHITESPACE " "
    LIMIT_CLAUSE
      LIMIT_KW "limit"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "work_mem"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t"
            DOT "."
            NAME_REF
              IDENT "a"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "t"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t"
            DOT "."
            NAME_REF
              IDENT "a"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfunc1"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "10000"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t"
    WHITESPACE " "
    LIMIT_CLAUSE
      LIMIT_KW "limit"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_FUNCTION_STMT
    DROP_KW "drop"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rngfunc1"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "n"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test use of SQL functions returning record"
  WHITESPACE "\n"
  COMMENT "-- this is supported in some cases where the query doesn't specify"
  WHITESPACE "\n"
  COMMENT "-- the actual record type ..."
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "array_to_set"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "anyarray"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "record"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\n  select i AS \"index\", $1[i] AS \"value\" from generate_subscripts($1, 1) i\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE " "
      STRICT_FUNC_OPTION
        STRICT_KW "strict"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "immutable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_to_set"
            ARG_LIST
              L_PAREN "("
              ARRAY_EXPR
                ARRAY_KW "array"
                L_BRACK "["
                LITERAL
                  STRING "'one'"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  STRING "'two'"
                R_BRACK "]"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "array_to_set"
        ARG_LIST
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              STRING "'one'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'two'"
            R_BRACK "]"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "f1"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          COLUMN
            NAME
              IDENT "f2"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "array_to_set"
        ARG_LIST
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              STRING "'one'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'two'"
            R_BRACK "]"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n"
  COMMENT "-- after-the-fact coercion of the columns is now possible, too"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "array_to_set"
        ARG_LIST
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              STRING "'one'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'two'"
            R_BRACK "]"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "f1"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    NUMERIC_KW "numeric"
              L_PAREN "("
              ARG_LIST
                ARG
                  LITERAL
                    INT_NUMBER "4"
                COMMA ","
                ARG
                  LITERAL
                    INT_NUMBER "2"
                R_PAREN ")"
          COMMA ","
          COLUMN
            NAME
              IDENT "f2"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- and if it doesn't work, you get a compile-time not run-time error"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "array_to_set"
        ARG_LIST
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              STRING "'one'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'two'"
            R_BRACK "]"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "f1"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "point"
          COMMA ","
          COLUMN
            NAME
              IDENT "f2"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- with \"strict\", this function can't be inlined in FROM"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "array_to_set"
        ARG_LIST
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              STRING "'one'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'two'"
            R_BRACK "]"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "f1"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    NUMERIC_KW "numeric"
              L_PAREN "("
              ARG_LIST
                ARG
                  LITERAL
                    INT_NUMBER "4"
                COMMA ","
                ARG
                  LITERAL
                    INT_NUMBER "2"
                R_PAREN ")"
          COMMA ","
          COLUMN
            NAME
              IDENT "f2"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- but without, it can be:"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "array_to_set"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "anyarray"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "record"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\n  select i AS \"index\", $1[i] AS \"value\" from generate_subscripts($1, 1) i\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "immutable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_to_set"
            ARG_LIST
              L_PAREN "("
              ARRAY_EXPR
                ARRAY_KW "array"
                L_BRACK "["
                LITERAL
                  STRING "'one'"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  STRING "'two'"
                R_BRACK "]"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "array_to_set"
        ARG_LIST
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              STRING "'one'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'two'"
            R_BRACK "]"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "f1"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          COLUMN
            NAME
              IDENT "f2"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "array_to_set"
        ARG_LIST
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              STRING "'one'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'two'"
            R_BRACK "]"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "f1"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    NUMERIC_KW "numeric"
              L_PAREN "("
              ARG_LIST
                ARG
                  LITERAL
                    INT_NUMBER "4"
                COMMA ","
                ARG
                  LITERAL
                    INT_NUMBER "2"
                R_PAREN ")"
          COMMA ","
          COLUMN
            NAME
              IDENT "f2"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "array_to_set"
        ARG_LIST
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              STRING "'one'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'two'"
            R_BRACK "]"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "f1"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "point"
          COMMA ","
          COLUMN
            NAME
              IDENT "f2"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "array_to_set"
        ARG_LIST
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              STRING "'one'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'two'"
            R_BRACK "]"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "f1"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    NUMERIC_KW "numeric"
              L_PAREN "("
              ARG_LIST
                ARG
                  LITERAL
                    INT_NUMBER "4"
                COMMA ","
                ARG
                  LITERAL
                    INT_NUMBER "2"
                R_PAREN ")"
          COMMA ","
          COLUMN
            NAME
              IDENT "f2"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfunc"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int8"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int8"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "testrngfunc"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "record"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\n  insert into rngfunc values (1,2) returning *;\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "testrngfunc"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "testrngfunc"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "f1"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "int8"
          COMMA ","
          COLUMN
            NAME
              IDENT "f2"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "int8"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "testrngfunc"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n\n"
  DROP_FUNCTION_STMT
    DROP_KW "drop"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "testrngfunc"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "testrngfunc"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "record"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\n  insert into rngfunc values (1,2), (3,4) returning *;\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "testrngfunc"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "testrngfunc"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "f1"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "int8"
          COMMA ","
          COLUMN
            NAME
              IDENT "f2"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "int8"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "testrngfunc"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n\n"
  DROP_FUNCTION_STMT
    DROP_KW "drop"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "testrngfunc"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that typmod imposed by a composite type is honored"
  WHITESPACE "\n"
  CREATE_TYPE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfunc_type"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "f1"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            NUMERIC_KW "numeric"
      L_PAREN "("
      ARG_LIST
        ARG
          LITERAL
            INT_NUMBER "35"
        COMMA ","
        ARG
          LITERAL
            INT_NUMBER "6"
        R_PAREN ")"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "f2"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            NUMERIC_KW "numeric"
      L_PAREN "("
      ARG_LIST
        ARG
          LITERAL
            INT_NUMBER "35"
        COMMA ","
        ARG
          LITERAL
            INT_NUMBER "2"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "testrngfunc"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "rngfunc_type"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\n  select 7.136178319899999964, 7.136178319899999964;\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "immutable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "testrngfunc"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "testrngfunc"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "testrngfunc"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "testrngfunc"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "testrngfunc"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "rngfunc_type"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\n  select 7.136178319899999964, 7.136178319899999964;\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        VOLATILE_KW "volatile"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "testrngfunc"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "testrngfunc"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "testrngfunc"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "testrngfunc"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_FUNCTION_STMT
    DROP_KW "drop"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "testrngfunc"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "testrngfunc"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "rngfunc_type"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\n  select 7.136178319899999964, 7.136178319899999964;\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "immutable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "testrngfunc"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "testrngfunc"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "testrngfunc"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "testrngfunc"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "testrngfunc"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "rngfunc_type"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\n  select 7.136178319899999964, 7.136178319899999964;\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        VOLATILE_KW "volatile"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "testrngfunc"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "testrngfunc"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "testrngfunc"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "testrngfunc"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "testrngfunc"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "rngfunc_type"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\n  select 1, 2 union select 3, 4 order by 1;\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "immutable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "testrngfunc"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "testrngfunc"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "testrngfunc"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "testrngfunc"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check a couple of error cases while we're here"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "testrngfunc"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "f1"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "int8"
          COMMA ","
          COLUMN
            NAME
              IDENT "f2"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "int8"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail, composite result"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "pg_get_keywords"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "f1"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "int8"
          COMMA ","
          COLUMN
            NAME
              IDENT "f2"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "int8"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail, OUT params"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "sin"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "f1"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "int8"
          COMMA ","
          COLUMN
            NAME
              IDENT "f2"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "int8"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail, scalar result type"
  WHITESPACE "\n\n"
  DROP_TYPE_STMT
    DROP_KW "drop"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rngfunc_type"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Check some cases involving added/dropped columns in a rowtype result"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "users"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "userid"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "seq"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "email"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "todrop"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "bool"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "moredrop"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "enabled"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "bool"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "users"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'id'"
      COMMA ","
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        STRING "'email'"
      COMMA ","
      LITERAL
        TRUE_KW "true"
      COMMA ","
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      LITERAL
        TRUE_KW "true"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "users"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'id2'"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      LITERAL
        STRING "'email2'"
      COMMA ","
      LITERAL
        TRUE_KW "true"
      COMMA ","
      LITERAL
        INT_NUMBER "12"
      COMMA ","
      LITERAL
        TRUE_KW "true"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "users"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "todrop"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "get_first_user"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "users"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$ SELECT * FROM users ORDER BY userid LIMIT 1; $$"
      WHITESPACE "\n"
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        STABLE_KW "stable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "get_first_user"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "get_first_user"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "get_users"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "users"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$ SELECT * FROM users ORDER BY userid; $$"
      WHITESPACE "\n"
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        STABLE_KW "stable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "get_users"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "get_users"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "get_users"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      ORDINALITY_KW "ORDINALITY"
  SEMICOLON ";"
  WHITESPACE "   "
  COMMENT "-- make sure ordinality copes"
  WHITESPACE "\n\n"
  COMMENT "-- multiple functions vs. dropped columns"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ROWS_KW "ROWS"
      WHITESPACE " "
      FROM_KW "FROM"
      L_PAREN "("
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "10"
          COMMA ","
          LITERAL
            INT_NUMBER "11"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "get_users"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  WITH_CLAUSE
    WITH_KW "WITH"
    WHITESPACE " "
    WITH_TABLE
      NAME
        ORDINALITY_KW "ORDINALITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ROWS_KW "ROWS"
      WHITESPACE " "
      FROM_KW "FROM"
      L_PAREN "("
      CALL_EXPR
        NAME_REF
          IDENT "get_users"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "10"
          COMMA ","
          LITERAL
            INT_NUMBER "11"
          R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  WITH_CLAUSE
    WITH_KW "WITH"
    WHITESPACE " "
    WITH_TABLE
      NAME
        ORDINALITY_KW "ORDINALITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check that we can cope with post-parsing changes in rowtypes"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "usersview"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        ROWS_KW "ROWS"
        WHITESPACE " "
        FROM_KW "FROM"
        L_PAREN "("
        CALL_EXPR
          NAME_REF
            IDENT "get_users"
          ARG_LIST
            L_PAREN "("
            R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "10"
            COMMA ","
            LITERAL
              INT_NUMBER "11"
            R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  WITH_CLAUSE
    WITH_KW "WITH"
    WHITESPACE " "
    WITH_TABLE
      NAME
        ORDINALITY_KW "ORDINALITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "usersview"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "users"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "junk"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "usersview"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "users"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "moredrop"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail, view has reference"
  WHITESPACE "\n\n"
  COMMENT "-- We used to have a bug that would allow the above to succeed, posing"
  WHITESPACE "\n"
  COMMENT "-- hazards for later execution of the view.  Check that the internal"
  WHITESPACE "\n"
  COMMENT "-- defenses for those hazards haven't bit-rotted, in case some other"
  WHITESPACE "\n"
  COMMENT "-- bug with similar symptoms emerges."
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- destroy the dependency entry that prevents the DROP:"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "delete"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pg_depend"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE "\n  "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "objid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "select"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    NAME_REF
                      IDENT "oid"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "from"
                WHITESPACE " "
                NAME_REF
                  IDENT "pg_rewrite"
              WHITESPACE "\n           "
              WHERE_CLAUSE
                WHERE_KW "where"
                WHITESPACE " "
                BIN_EXPR
                  BIN_EXPR
                    NAME_REF
                      IDENT "ev_class"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    CAST_EXPR
                      LITERAL
                        STRING "'usersview'"
                      COLON2 "::"
                      PATH_TYPE
                        PATH
                          PATH_SEGMENT
                            NAME_REF
                              IDENT "regclass"
                  WHITESPACE " "
                  AND_KW "and"
                  WHITESPACE " "
                  BIN_EXPR
                    NAME_REF
                      IDENT "rulename"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    LITERAL
                      STRING "'_RETURN'"
            R_PAREN ")"
        WHITESPACE "\n  "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "refobjsubid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "5"
    WHITESPACE "\n"
    RETURNING_KW "returning"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "pg_describe_object"
      ARG_LIST
        L_PAREN "("
        NAME_REF
          IDENT "classid"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "objid"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "objsubid"
        R_PAREN ")"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    IDENT "obj"
    COMMA ","
    WHITESPACE "\n          "
    CALL_EXPR
      NAME_REF
        IDENT "pg_describe_object"
      ARG_LIST
        L_PAREN "("
        NAME_REF
          IDENT "refclassid"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "refobjid"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "refobjsubid"
        R_PAREN ")"
    WHITESPACE " "
    AS_KW "as"
  WHITESPACE " "
  ERROR
    REF_KW "ref"
  ERROR
    COMMA ","
  WHITESPACE "\n          "
  ERROR
    IDENT "deptype"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "users"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "moredrop"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "usersview"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- expect clean failure"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "rollback"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "users"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "seq"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail, view has reference"
  WHITESPACE "\n\n"
  COMMENT "-- likewise, check we don't crash if the dependency goes wrong"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- destroy the dependency entry that prevents the ALTER:"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "delete"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pg_depend"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE "\n  "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "objid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "select"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    NAME_REF
                      IDENT "oid"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "from"
                WHITESPACE " "
                NAME_REF
                  IDENT "pg_rewrite"
              WHITESPACE "\n           "
              WHERE_CLAUSE
                WHERE_KW "where"
                WHITESPACE " "
                BIN_EXPR
                  BIN_EXPR
                    NAME_REF
                      IDENT "ev_class"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    CAST_EXPR
                      LITERAL
                        STRING "'usersview'"
                      COLON2 "::"
                      PATH_TYPE
                        PATH
                          PATH_SEGMENT
                            NAME_REF
                              IDENT "regclass"
                  WHITESPACE " "
                  AND_KW "and"
                  WHITESPACE " "
                  BIN_EXPR
                    NAME_REF
                      IDENT "rulename"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    LITERAL
                      STRING "'_RETURN'"
            R_PAREN ")"
        WHITESPACE "\n  "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "refobjsubid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "2"
    WHITESPACE "\n"
    RETURNING_KW "returning"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "pg_describe_object"
      ARG_LIST
        L_PAREN "("
        NAME_REF
          IDENT "classid"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "objid"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "objsubid"
        R_PAREN ")"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    IDENT "obj"
    COMMA ","
    WHITESPACE "\n          "
    CALL_EXPR
      NAME_REF
        IDENT "pg_describe_object"
      ARG_LIST
        L_PAREN "("
        NAME_REF
          IDENT "refclassid"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "refobjid"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "refobjsubid"
        R_PAREN ")"
    WHITESPACE " "
    AS_KW "as"
  WHITESPACE " "
  ERROR
    REF_KW "ref"
  ERROR
    COMMA ","
  WHITESPACE "\n          "
  ERROR
    IDENT "deptype"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "users"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "seq"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "usersview"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- expect clean failure"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "rollback"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_VIEW_STMT
    DROP_KW "drop"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "usersview"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "drop"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "get_first_user"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "drop"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "get_users"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "users"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check behavior with type coercion required for a set-op"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfuncbar"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TEXT_KW "text"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$ select 'foo'::varchar union all select 'bar'::varchar ; $$"
      WHITESPACE "\n"
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        STABLE_KW "stable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "rngfuncbar"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfuncbar"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- this function is now inlinable, too:"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfuncbar"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_FUNCTION_STMT
    DROP_KW "drop"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rngfuncbar"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check handling of a SQL function with multiple OUT params (bug #5777)"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfuncbar"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
      R_PAREN ")"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$ select (1, 2.1) $$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfuncbar"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfuncbar"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
      R_PAREN ")"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$ select (1, 2) $$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfuncbar"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfuncbar"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
      R_PAREN ")"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$ select (1, 2.1, 3) $$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "rngfuncbar"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n\n"
  DROP_FUNCTION_STMT
    DROP_KW "drop"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rngfuncbar"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check whole-row-Var handling in nested lateral functions (bug #11703)"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "extractq2"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "t"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int8_tbl"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "int8"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\n  select t.q2\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "immutable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "x"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "int8_tbl"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "extractq2"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "int8_tbl"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "f"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "x"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "int8_tbl"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "extractq2"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "int8_tbl"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "f"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "extractq2_2"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "t"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int8_tbl"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      TABLE_KW "table"
      L_PAREN "("
      NAME_REF
        IDENT "ret1"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "int8"
      R_PAREN ")"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\n  select extractq2(t) offset 0\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "immutable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "x"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "int8_tbl"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "extractq2_2"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "int8_tbl"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "f"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "x"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "int8_tbl"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "extractq2_2"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "int8_tbl"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "f"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- without the \"offset 0\", this function gets optimized quite differently"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "extractq2_2_opt"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "t"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int8_tbl"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      TABLE_KW "table"
      L_PAREN "("
      NAME_REF
        IDENT "ret1"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "int8"
      R_PAREN ")"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\n  select extractq2(t)\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "immutable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "x"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "int8_tbl"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "extractq2_2_opt"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "int8_tbl"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "f"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "x"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "int8_tbl"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "extractq2_2_opt"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "int8_tbl"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "f"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check handling of nulls in SRF results (bug #7808)"
  WHITESPACE "\n\n"
  CREATE_TYPE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rngfunc2"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INTEGER_KW "integer"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            TEXT_KW "text"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "row_to_json"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "u"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "unnest"
        ARG_LIST
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            CAST_EXPR
              TUPLE_EXPR
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                LITERAL
                  STRING "'foo'"
                R_PAREN ")"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "rngfunc2"
            COMMA ","
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                NULL_KW "null"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "rngfunc2"
            R_BRACK "]"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "u"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "row_to_json"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "u"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "unnest"
        ARG_LIST
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            CAST_EXPR
              LITERAL
                NULL_KW "null"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "rngfunc2"
            COMMA ","
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                NULL_KW "null"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "rngfunc2"
            R_BRACK "]"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "u"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "row_to_json"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "u"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "unnest"
        ARG_LIST
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            CAST_EXPR
              LITERAL
                NULL_KW "null"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "rngfunc2"
            COMMA ","
            WHITESPACE " "
            CAST_EXPR
              TUPLE_EXPR
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                LITERAL
                  STRING "'foo'"
                R_PAREN ")"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "rngfunc2"
            COMMA ","
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                NULL_KW "null"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "rngfunc2"
            R_BRACK "]"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "u"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "row_to_json"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "u"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "unnest"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            ARRAY_EXPR
              ARRAY_KW "array"
              L_BRACK "["
              R_BRACK "]"
            COLON2 "::"
            ARRAY_TYPE
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "rngfunc2"
              L_BRACK "["
              R_BRACK "]"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "u"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TYPE_STMT
    DROP_KW "drop"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rngfunc2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check handling of functions pulled up into function RTEs (bug #17227)"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE "\n  "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                CALL_EXPR
                  NAME_REF
                    IDENT "jsonb_path_query_array"
                  ARG_LIST
                    L_PAREN "("
                    BIN_EXPR
                      NAME_REF
                        IDENT "module"
                      CUSTOM_OP
                        MINUS "-"
                        R_ANGLE ">"
                      LITERAL
                        STRING "'lectures'"
                    COMMA ","
                    WHITESPACE " "
                    LITERAL
                      STRING "'$[*]'"
                    R_PAREN ")"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "lecture"
          WHITESPACE "\n   "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "unnest"
              ARG_LIST
                L_PAREN "("
                ARRAY_EXPR
                  ARRAY_KW "array"
                  L_BRACK "["
                  CAST_EXPR
                    LITERAL
                      STRING "'{\"lectures\": [{\"id\": \"1\"}]}'"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "jsonb"
                  R_BRACK "]"
                R_PAREN ")"
            WHITESPACE "\n        "
            ALIAS
              AS_KW "as"
              WHITESPACE " "
              NAME
                IDENT "unnested_modules"
              COLUMN_LIST
                L_PAREN "("
                COLUMN
                  NAME
                    IDENT "module"
                R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "ss"
      COMMA ","
      WHITESPACE "\n  "
      CALL_EXPR
        NAME_REF
          IDENT "jsonb_to_recordset"
        ARG_LIST
          L_PAREN "("
          FIELD_EXPR
            NAME_REF
              IDENT "ss"
            DOT "."
            NAME_REF
              IDENT "lecture"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "j"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "id"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE "\n  "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                CALL_EXPR
                  NAME_REF
                    IDENT "jsonb_path_query_array"
                  ARG_LIST
                    L_PAREN "("
                    BIN_EXPR
                      NAME_REF
                        IDENT "module"
                      CUSTOM_OP
                        MINUS "-"
                        R_ANGLE ">"
                      LITERAL
                        STRING "'lectures'"
                    COMMA ","
                    WHITESPACE " "
                    LITERAL
                      STRING "'$[*]'"
                    R_PAREN ")"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "lecture"
          WHITESPACE "\n   "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "unnest"
              ARG_LIST
                L_PAREN "("
                ARRAY_EXPR
                  ARRAY_KW "array"
                  L_BRACK "["
                  CAST_EXPR
                    LITERAL
                      STRING "'{\"lectures\": [{\"id\": \"1\"}]}'"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "jsonb"
                  R_BRACK "]"
                R_PAREN ")"
            WHITESPACE "\n        "
            ALIAS
              AS_KW "as"
              WHITESPACE " "
              NAME
                IDENT "unnested_modules"
              COLUMN_LIST
                L_PAREN "("
                COLUMN
                  NAME
                    IDENT "module"
                R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "ss"
      COMMA ","
      WHITESPACE "\n  "
      CALL_EXPR
        NAME_REF
          IDENT "jsonb_to_recordset"
        ARG_LIST
          L_PAREN "("
          FIELD_EXPR
            NAME_REF
              IDENT "ss"
            DOT "."
            NAME_REF
              IDENT "lecture"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "j"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "id"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check detection of mismatching record types with a const-folded expression"
  WHITESPACE "\n\n"
  SELECT
    WITH_CLAUSE
      WITH_KW "with"
      WHITESPACE " "
      WITH_TABLE
        NAME
          IDENT "a"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "b"
          R_PAREN ")"
        WHITESPACE " "
        AS_KW "as"
        WHITESPACE " "
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              ROW_KW "row"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "2"
              COMMA ","
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
          R_PAREN ")"
        R_PAREN ")"
    WHITESPACE "\n"
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          COALESCE_KW "coalesce"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "c"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "d"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "e"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  SELECT
    WITH_CLAUSE
      WITH_KW "with"
      WHITESPACE " "
      WITH_TABLE
        NAME
          IDENT "a"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "b"
          R_PAREN ")"
        WHITESPACE " "
        AS_KW "as"
        WHITESPACE " "
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              ROW_KW "row"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "2"
              COMMA ","
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
          R_PAREN ")"
        R_PAREN ")"
    WHITESPACE "\n"
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          COALESCE_KW "coalesce"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "c"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "d"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "e"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "f"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "g"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  SELECT
    WITH_CLAUSE
      WITH_KW "with"
      WHITESPACE " "
      WITH_TABLE
        NAME
          IDENT "a"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "b"
          R_PAREN ")"
        WHITESPACE " "
        AS_KW "as"
        WHITESPACE " "
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              ROW_KW "row"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "2"
              COMMA ","
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
          R_PAREN ")"
        R_PAREN ")"
    WHITESPACE "\n"
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          COALESCE_KW "coalesce"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "c"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "d"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "e"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "f"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    FLOAT_KW "float"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "int8_tbl"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          COALESCE_KW "coalesce"
        ARG_LIST
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              ROW_KW "row"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "b"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    INT_KW "int"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
---
ERROR@1221: expected R_PAREN
ERROR@1233: expected SEMICOLON
ERROR@1233: expected command, found R_PAREN
ERROR@1253: expected L_PAREN
ERROR@1253: expected DELETE, SELECT, TABLE, VALUES, INSERT, WITH, or UPDATE, got: IDENT
ERROR@1253: expected R_PAREN
ERROR@1253: expected DELETE, SELECT, TABLE, UPDATE, or MERGE, got: IDENT
ERROR@1254: expected command, found IDENT
ERROR@1255: expected command, found L_PAREN
ERROR@1256: expected command, found IDENT
ERROR@1257: expected command, found COMMA
ERROR@1258: expected command, found IDENT
ERROR@1259: expected command, found COMMA
ERROR@1260: expected command, found IDENT
ERROR@1261: expected command, found COMMA
ERROR@1262: expected command, found IDENT
ERROR@1263: expected command, found COMMA
ERROR@1264: expected command, found IDENT
ERROR@1267: expected command, found R_PAREN
ERROR@1360: expected R_PAREN
ERROR@1360: expected USING_KW
ERROR@1360: expected L_PAREN
ERROR@1372: expected SEMICOLON
ERROR@1372: expected command, found R_PAREN
ERROR@1392: expected L_PAREN
ERROR@1392: expected DELETE, SELECT, TABLE, VALUES, INSERT, WITH, or UPDATE, got: IDENT
ERROR@1392: expected R_PAREN
ERROR@1392: expected DELETE, SELECT, TABLE, UPDATE, or MERGE, got: IDENT
ERROR@1393: expected command, found IDENT
ERROR@1394: expected command, found L_PAREN
ERROR@1395: expected command, found IDENT
ERROR@1396: expected command, found COMMA
ERROR@1397: expected command, found IDENT
ERROR@1398: expected command, found COMMA
ERROR@1399: expected command, found IDENT
ERROR@1400: expected command, found COMMA
ERROR@1401: expected command, found IDENT
ERROR@1402: expected command, found COMMA
ERROR@1403: expected command, found IDENT
ERROR@1406: expected command, found R_PAREN
ERROR@1408: expected command, found ON_KW
ERROR@1411: expected command, found L_PAREN
ERROR@1412: expected command, found IDENT
ERROR@1413: expected command, found EQ
ERROR@1414: expected command, found IDENT
ERROR@1417: expected command, found R_PAREN
ERROR@1880: expected R_PAREN
ERROR@1906: expected SEMICOLON
ERROR@1906: expected command, found R_PAREN
ERROR@1926: expected L_PAREN
ERROR@1926: expected DELETE, SELECT, TABLE, VALUES, INSERT, WITH, or UPDATE, got: IDENT
ERROR@1926: expected R_PAREN
ERROR@1926: expected DELETE, SELECT, TABLE, UPDATE, or MERGE, got: IDENT
ERROR@1927: expected command, found IDENT
ERROR@1928: expected command, found L_PAREN
ERROR@1929: expected command, found IDENT
ERROR@1930: expected command, found COMMA
ERROR@1931: expected command, found IDENT
ERROR@1932: expected command, found COMMA
ERROR@1933: expected command, found IDENT
ERROR@1934: expected command, found COMMA
ERROR@1935: expected command, found IDENT
ERROR@1938: expected command, found R_PAREN
ERROR@2461: expected R_PAREN
ERROR@2483: expected SEMICOLON
ERROR@2483: expected command, found R_PAREN
ERROR@2485: expected command, found AS_KW
ERROR@2488: expected command, found IDENT
ERROR@2489: expected command, found L_PAREN
ERROR@2490: expected command, found IDENT
ERROR@2491: expected command, found COMMA
ERROR@2492: expected command, found IDENT
ERROR@2493: expected command, found COMMA
ERROR@2494: expected command, found IDENT
ERROR@2495: expected command, found R_PAREN
ERROR@2745: expected R_PAREN
ERROR@2766: expected SEMICOLON
ERROR@2766: expected command, found R_PAREN
ERROR@2786: expected L_PAREN
ERROR@2786: expected DELETE, SELECT, TABLE, VALUES, INSERT, WITH, or UPDATE, got: IDENT
ERROR@2786: expected R_PAREN
ERROR@2786: expected DELETE, SELECT, TABLE, UPDATE, or MERGE, got: IDENT
ERROR@2787: expected command, found IDENT
ERROR@2788: expected command, found L_PAREN
ERROR@2789: expected command, found IDENT
ERROR@2790: expected command, found COMMA
ERROR@2791: expected command, found IDENT
ERROR@2792: expected command, found COMMA
ERROR@2793: expected command, found IDENT
ERROR@2794: expected command, found R_PAREN
ERROR@9467: expected R_PAREN
ERROR@9760: expected SEMICOLON
ERROR@9760: expected command, found R_PAREN
ERROR@9794: expected L_PAREN
ERROR@9794: expected DELETE, SELECT, TABLE, VALUES, INSERT, WITH, or UPDATE, got: IDENT
ERROR@9794: expected R_PAREN
ERROR@9794: expected DELETE, SELECT, TABLE, UPDATE, or MERGE, got: IDENT
ERROR@9795: expected command, found IDENT
ERROR@9797: expected command, found L_PAREN
ERROR@9798: expected command, found IDENT
ERROR@9799: expected command, found COMMA
ERROR@9800: expected command, found IDENT
ERROR@9801: expected command, found COMMA
ERROR@9802: expected command, found IDENT
ERROR@9803: expected command, found COMMA
ERROR@9804: expected command, found IDENT
ERROR@9805: expected command, found COMMA
ERROR@9806: expected command, found IDENT
ERROR@9807: expected command, found COMMA
ERROR@9808: expected command, found IDENT
ERROR@9809: expected command, found COMMA
ERROR@9810: expected command, found IDENT
ERROR@9811: expected command, found COMMA
ERROR@9812: expected command, found IDENT
ERROR@9813: expected command, found COMMA
ERROR@9814: expected command, found IDENT
ERROR@9815: expected command, found COMMA
ERROR@9816: expected command, found IDENT
ERROR@9817: expected command, found COMMA
ERROR@9818: expected command, found IDENT
ERROR@9819: expected command, found COMMA
ERROR@9820: expected command, found IDENT
ERROR@9821: expected command, found COMMA
ERROR@9822: expected command, found IDENT
ERROR@9823: expected command, found COMMA
ERROR@9824: expected command, found IDENT
ERROR@9825: expected command, found COMMA
ERROR@9826: expected command, found IDENT
ERROR@9827: expected command, found COMMA
ERROR@9828: expected command, found IDENT
ERROR@9829: expected command, found COMMA
ERROR@9830: expected command, found IDENT
ERROR@9831: expected command, found COMMA
ERROR@9832: expected command, found IDENT
ERROR@9833: expected command, found COMMA
ERROR@9834: expected command, found IDENT
ERROR@9835: expected command, found COMMA
ERROR@9836: expected command, found IDENT
ERROR@9837: expected command, found R_PAREN
ERROR@9878: expected R_PAREN
ERROR@10171: expected SEMICOLON
ERROR@10171: expected command, found R_PAREN
ERROR@10205: expected L_PAREN
ERROR@10205: expected DELETE, SELECT, TABLE, VALUES, INSERT, WITH, or UPDATE, got: IDENT
ERROR@10205: expected R_PAREN
ERROR@10205: expected DELETE, SELECT, TABLE, UPDATE, or MERGE, got: IDENT
ERROR@10206: expected command, found IDENT
ERROR@10208: expected command, found L_PAREN
ERROR@10209: expected command, found IDENT
ERROR@10210: expected command, found COMMA
ERROR@10211: expected command, found IDENT
ERROR@10212: expected command, found COMMA
ERROR@10213: expected command, found IDENT
ERROR@10214: expected command, found COMMA
ERROR@10215: expected command, found IDENT
ERROR@10216: expected command, found COMMA
ERROR@10217: expected command, found IDENT
ERROR@10218: expected command, found COMMA
ERROR@10219: expected command, found IDENT
ERROR@10220: expected command, found COMMA
ERROR@10221: expected command, found IDENT
ERROR@10222: expected command, found COMMA
ERROR@10223: expected command, found IDENT
ERROR@10224: expected command, found COMMA
ERROR@10225: expected command, found IDENT
ERROR@10226: expected command, found COMMA
ERROR@10227: expected command, found IDENT
ERROR@10228: expected command, found COMMA
ERROR@10229: expected command, found IDENT
ERROR@10230: expected command, found COMMA
ERROR@10231: expected command, found IDENT
ERROR@10232: expected command, found COMMA
ERROR@10233: expected command, found IDENT
ERROR@10234: expected command, found COMMA
ERROR@10235: expected command, found IDENT
ERROR@10236: expected command, found COMMA
ERROR@10237: expected command, found IDENT
ERROR@10238: expected command, found COMMA
ERROR@10239: expected command, found IDENT
ERROR@10240: expected command, found COMMA
ERROR@10241: expected command, found IDENT
ERROR@10242: expected command, found COMMA
ERROR@10243: expected command, found IDENT
ERROR@10244: expected command, found COMMA
ERROR@10245: expected command, found IDENT
ERROR@10246: expected command, found COMMA
ERROR@10247: expected command, found IDENT
ERROR@10248: expected command, found R_PAREN
ERROR@10328: expected R_PAREN
ERROR@10459: expected SEMICOLON
ERROR@10459: expected command, found R_PAREN
ERROR@10495: expected L_PAREN
ERROR@10495: expected DELETE, SELECT, TABLE, VALUES, INSERT, WITH, or UPDATE, got: IDENT
ERROR@10495: expected R_PAREN
ERROR@10495: expected DELETE, SELECT, TABLE, UPDATE, or MERGE, got: IDENT
ERROR@10496: expected command, found IDENT
ERROR@10498: expected command, found L_PAREN
ERROR@10499: expected command, found IDENT
ERROR@10500: expected command, found COMMA
ERROR@10501: expected command, found IDENT
ERROR@10502: expected command, found COMMA
ERROR@10503: expected command, found IDENT
ERROR@10504: expected command, found COMMA
ERROR@10505: expected command, found IDENT
ERROR@10506: expected command, found COMMA
ERROR@10507: expected command, found IDENT
ERROR@10508: expected command, found COMMA
ERROR@10509: expected command, found IDENT
ERROR@10510: expected command, found COMMA
ERROR@10511: expected command, found IDENT
ERROR@10512: expected command, found COMMA
ERROR@10513: expected command, found IDENT
ERROR@10514: expected command, found R_PAREN
ERROR@12643: expected R_PAREN
ERROR@12643: expected USING_KW
ERROR@12643: expected L_PAREN
ERROR@12663: expected SEMICOLON
ERROR@12664: expected command, found R_PAREN
ERROR@12684: expected L_PAREN
ERROR@12684: expected DELETE, SELECT, TABLE, VALUES, INSERT, WITH, or UPDATE, got: IDENT
ERROR@12684: expected R_PAREN
ERROR@12684: expected DELETE, SELECT, TABLE, UPDATE, or MERGE, got: IDENT
ERROR@12685: expected command, found IDENT
ERROR@12686: expected command, found L_PAREN
ERROR@12687: expected command, found IDENT
ERROR@12689: expected command, found COMMA
ERROR@12690: expected command, found IDENT
ERROR@12692: expected command, found COMMA
ERROR@12693: expected command, found IDENT
ERROR@12695: expected command, found COMMA
ERROR@12696: expected command, found IDENT
ERROR@12698: expected command, found COMMA
ERROR@12699: expected command, found IDENT
ERROR@12700: expected command, found R_PAREN
ERROR@12702: expected command, found ON_KW
ERROR@12705: expected command, found L_PAREN
ERROR@12706: expected command, found IDENT
ERROR@12707: expected command, found PLUS
ERROR@12708: expected command, found IDENT
ERROR@12710: expected command, found PLUS
ERROR@12711: expected command, found IDENT
ERROR@12713: expected command, found R_PAREN
ERROR@12714: expected command, found L_ANGLE
ERROR@12715: expected command, found INT_NUMBER
ERROR@15403: expected R_PAREN
ERROR@15425: expected SEMICOLON
ERROR@15426: expected command, found R_PAREN
ERROR@15585: expected R_PAREN
ERROR@15605: expected SEMICOLON
ERROR@15606: expected command, found R_PAREN
ERROR@15765: expected R_PAREN
ERROR@15787: expected SEMICOLON
ERROR@15788: expected command, found R_PAREN
ERROR@15973: expected R_PAREN
ERROR@15996: expected SEMICOLON
ERROR@15997: expected command, found R_PAREN
ERROR@24545: expected R_PAREN
ERROR@24546: expected command, found OFF_KW
ERROR@24549: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@24549: expected SEMICOLON
ERROR@24549: expected command, found R_PAREN
ERROR@25126: expected R_PAREN
ERROR@25127: expected command, found OFF_KW
ERROR@25130: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@25130: expected SEMICOLON
ERROR@25130: expected command, found R_PAREN
ERROR@26077: expected R_PAREN
ERROR@26078: expected command, found OFF_KW
ERROR@26081: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@26081: expected SEMICOLON
ERROR@26081: expected command, found R_PAREN
ERROR@26150: expected R_PAREN
ERROR@26151: expected command, found OFF_KW
ERROR@26154: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@26154: expected SEMICOLON
ERROR@26154: expected command, found R_PAREN
ERROR@26386: expected R_PAREN
ERROR@26387: expected command, found OFF_KW
ERROR@26390: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@26390: expected SEMICOLON
ERROR@26390: expected command, found R_PAREN
ERROR@26459: expected R_PAREN
ERROR@26460: expected command, found OFF_KW
ERROR@26463: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@26463: expected SEMICOLON
ERROR@26463: expected command, found R_PAREN
ERROR@26721: expected R_PAREN
ERROR@26722: expected command, found OFF_KW
ERROR@26725: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@26725: expected SEMICOLON
ERROR@26725: expected command, found R_PAREN
ERROR@26794: expected R_PAREN
ERROR@26795: expected command, found OFF_KW
ERROR@26798: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@26798: expected SEMICOLON
ERROR@26798: expected command, found R_PAREN
ERROR@27036: expected R_PAREN
ERROR@27037: expected command, found OFF_KW
ERROR@27040: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@27040: expected SEMICOLON
ERROR@27040: expected command, found R_PAREN
ERROR@27109: expected R_PAREN
ERROR@27110: expected command, found OFF_KW
ERROR@27113: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@27113: expected SEMICOLON
ERROR@27113: expected command, found R_PAREN
ERROR@27343: expected R_PAREN
ERROR@27344: expected command, found OFF_KW
ERROR@27347: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@27347: expected SEMICOLON
ERROR@27347: expected command, found R_PAREN
ERROR@27416: expected R_PAREN
ERROR@27417: expected command, found OFF_KW
ERROR@27420: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@27420: expected SEMICOLON
ERROR@27420: expected command, found R_PAREN
ERROR@28655: expected R_PAREN
ERROR@28668: expected SEMICOLON
ERROR@28668: expected command, found R_PAREN
ERROR@28685: expected AS_KW
ERROR@28685: expected L_PAREN
ERROR@28685: expected DELETE, SELECT, TABLE, VALUES, INSERT, WITH, or UPDATE, got: SEMICOLON
ERROR@28685: expected R_PAREN
ERROR@28685: expected DELETE, SELECT, TABLE, UPDATE, or MERGE, got: SEMICOLON
ERROR@28722: expected R_PAREN
ERROR@28746: expected SEMICOLON
ERROR@28746: expected command, found R_PAREN
ERROR@28763: expected AS_KW
ERROR@28763: expected L_PAREN
ERROR@28763: expected DELETE, SELECT, TABLE, VALUES, INSERT, WITH, or UPDATE, got: SEMICOLON
ERROR@28763: expected R_PAREN
ERROR@28763: expected DELETE, SELECT, TABLE, UPDATE, or MERGE, got: SEMICOLON
ERROR@28895: expected R_PAREN
ERROR@28919: expected SEMICOLON
ERROR@28919: expected command, found R_PAREN
ERROR@28936: expected AS_KW
ERROR@28936: expected L_PAREN
ERROR@28936: expected DELETE, SELECT, TABLE, VALUES, INSERT, WITH, or UPDATE, got: SEMICOLON
ERROR@28936: expected R_PAREN
ERROR@28936: expected DELETE, SELECT, TABLE, UPDATE, or MERGE, got: SEMICOLON
ERROR@29704: expected IDENT
ERROR@29704: expected SEMICOLON
ERROR@29705: expected command, found REF_KW
ERROR@29708: expected command, found COMMA
ERROR@29720: expected command, found IDENT
ERROR@30331: expected IDENT
ERROR@30331: expected SEMICOLON
ERROR@30332: expected command, found REF_KW
ERROR@30335: expected command, found COMMA
ERROR@30347: expected command, found IDENT
ERROR@30884: expected R_PAREN
ERROR@30885: expected command, found OFF_KW
ERROR@30888: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@30888: expected SEMICOLON
ERROR@30888: expected command, found R_PAREN
ERROR@31665: expected R_PAREN
ERROR@31666: expected command, found OFF_KW
ERROR@31669: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@31669: expected SEMICOLON
ERROR@31669: expected command, found R_PAREN
ERROR@31926: expected R_PAREN
ERROR@31927: expected command, found OFF_KW
ERROR@31930: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@31930: expected SEMICOLON
ERROR@31930: expected command, found R_PAREN
ERROR@32261: expected R_PAREN
ERROR@32262: expected command, found OFF_KW
ERROR@32265: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@32265: expected SEMICOLON
ERROR@32265: expected command, found R_PAREN
ERROR@32925: expected R_PAREN
ERROR@32926: expected command, found OFF_KW
ERROR@32929: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@32929: expected SEMICOLON
ERROR@32929: expected command, found R_PAREN

---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/tsdicts.sql
---
SOURCE_FILE
  COMMENT "--Test text search dictionaries and configurations"
  WHITESPACE "\n\n"
  COMMENT "-- Test ISpell dictionary with ispell affix file"
  WHITESPACE "\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    DICTIONARY_KW "DICTIONARY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "ispell"
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n                        "
    NAME
      TEMPLATE_KW "Template"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "ispell"
    COMMA ","
    WHITESPACE "\n                        "
    NAME
      IDENT "DictFile"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "ispell_sample"
    COMMA ","
    WHITESPACE "\n                        "
    NAME
      IDENT "AffFile"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "ispell_sample"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'ispell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'skies'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'ispell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'bookings'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'ispell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'booking'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'ispell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'foot'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'ispell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'foots'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'ispell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'rebookings'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'ispell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'rebooking'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'ispell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'rebook'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'ispell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'unbookings'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'ispell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'unbooking'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'ispell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'unbook'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'ispell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'footklubber'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'ispell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'footballklubber'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'ispell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'ballyklubber'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'ispell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'footballyklubber'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test ISpell dictionary with hunspell affix file"
  WHITESPACE "\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    DICTIONARY_KW "DICTIONARY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "hunspell"
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n                        "
    NAME
      TEMPLATE_KW "Template"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "ispell"
    COMMA ","
    WHITESPACE "\n                        "
    NAME
      IDENT "DictFile"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "ispell_sample"
    COMMA ","
    WHITESPACE "\n                        "
    NAME
      IDENT "AffFile"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "hunspell_sample"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'skies'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'bookings'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'booking'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'foot'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'foots'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'rebookings'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'rebooking'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'rebook'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'unbookings'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'unbooking'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'unbook'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'footklubber'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'footballklubber'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'ballyklubber'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'footballyklubber'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test ISpell dictionary with hunspell affix file with FLAG long parameter"
  WHITESPACE "\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    DICTIONARY_KW "DICTIONARY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "hunspell_long"
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n                        "
    NAME
      TEMPLATE_KW "Template"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "ispell"
    COMMA ","
    WHITESPACE "\n                        "
    NAME
      IDENT "DictFile"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "hunspell_sample_long"
    COMMA ","
    WHITESPACE "\n                        "
    NAME
      IDENT "AffFile"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "hunspell_sample_long"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_long'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'skies'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_long'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'bookings'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_long'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'booking'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_long'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'foot'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_long'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'foots'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_long'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'rebookings'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_long'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'rebooking'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_long'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'rebook'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_long'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'unbookings'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_long'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'unbooking'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_long'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'unbook'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_long'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'booked'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_long'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'footklubber'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_long'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'footballklubber'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_long'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'ballyklubber'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_long'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'ballsklubber'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_long'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'footballyklubber'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_long'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'ex-machina'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test ISpell dictionary with hunspell affix file with FLAG num parameter"
  WHITESPACE "\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    DICTIONARY_KW "DICTIONARY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "hunspell_num"
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n                        "
    NAME
      TEMPLATE_KW "Template"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "ispell"
    COMMA ","
    WHITESPACE "\n                        "
    NAME
      IDENT "DictFile"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "hunspell_sample_num"
    COMMA ","
    WHITESPACE "\n                        "
    NAME
      IDENT "AffFile"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "hunspell_sample_num"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_num'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'skies'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_num'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'sk'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_num'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'bookings'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_num'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'booking'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_num'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'foot'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_num'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'foots'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_num'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'rebookings'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_num'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'rebooking'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_num'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'rebook'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_num'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'unbookings'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_num'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'unbooking'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_num'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'unbook'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_num'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'booked'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_num'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'footklubber'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_num'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'footballklubber'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_num'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'ballyklubber'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_num'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'footballyklubber'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test suitability of affix and dict files"
  WHITESPACE "\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    DICTIONARY_KW "DICTIONARY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "hunspell_err"
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      TEMPLATE_KW "Template"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "ispell"
    COMMA ","
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      IDENT "DictFile"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "ispell_sample"
    COMMA ","
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      IDENT "AffFile"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "hunspell_sample_long"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    DICTIONARY_KW "DICTIONARY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "hunspell_err"
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      TEMPLATE_KW "Template"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "ispell"
    COMMA ","
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      IDENT "DictFile"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "ispell_sample"
    COMMA ","
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      IDENT "AffFile"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "hunspell_sample_num"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    DICTIONARY_KW "DICTIONARY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "hunspell_invalid_1"
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      TEMPLATE_KW "Template"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "ispell"
    COMMA ","
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      IDENT "DictFile"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "hunspell_sample_long"
    COMMA ","
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      IDENT "AffFile"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "ispell_sample"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    DICTIONARY_KW "DICTIONARY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "hunspell_invalid_2"
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      TEMPLATE_KW "Template"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "ispell"
    COMMA ","
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      IDENT "DictFile"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "hunspell_sample_long"
    COMMA ","
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      IDENT "AffFile"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "hunspell_sample_num"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    DICTIONARY_KW "DICTIONARY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "hunspell_invalid_3"
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      TEMPLATE_KW "Template"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "ispell"
    COMMA ","
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      IDENT "DictFile"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "hunspell_sample_num"
    COMMA ","
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      IDENT "AffFile"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "ispell_sample"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    DICTIONARY_KW "DICTIONARY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "hunspell_err"
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      TEMPLATE_KW "Template"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "ispell"
    COMMA ","
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      IDENT "DictFile"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "hunspell_sample_num"
    COMMA ","
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      IDENT "AffFile"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "hunspell_sample_long"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Synonym dictionary"
  WHITESPACE "\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    DICTIONARY_KW "DICTIONARY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "synonym"
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      TEMPLATE_KW "Template"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "synonym"
    COMMA ","
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      IDENT "Synonyms"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "synonym_sample"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'synonym'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'PoStGrEs'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'synonym'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'Gogle'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'synonym'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'indices'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test altering boolean parameters"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "dictinitoption"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_ts_dict"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "dictname"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'synonym'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TEXT_SEARCH_DICTIONARY_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    DICTIONARY_KW "DICTIONARY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "synonym"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "CaseSensitive"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'synonym'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'PoStGrEs'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "dictinitoption"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_ts_dict"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "dictname"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'synonym'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TEXT_SEARCH_DICTIONARY_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    DICTIONARY_KW "DICTIONARY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "synonym"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "CaseSensitive"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n\n"
  ALTER_TEXT_SEARCH_DICTIONARY_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    DICTIONARY_KW "DICTIONARY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "synonym"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "CaseSensitive"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            OFF_KW "off"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'synonym'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'PoStGrEs'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "dictinitoption"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_ts_dict"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "dictname"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'synonym'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Create and simple test thesaurus dictionary"
  WHITESPACE "\n"
  COMMENT "-- More tests in configuration checks because ts_lexize()"
  WHITESPACE "\n"
  COMMENT "-- cannot pass more than one word to thesaurus."
  WHITESPACE "\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    DICTIONARY_KW "DICTIONARY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "thesaurus"
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n                        "
    NAME
      TEMPLATE_KW "Template"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "thesaurus"
    COMMA ","
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      IDENT "DictFile"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "thesaurus_sample"
    COMMA ","
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      DICTIONARY_KW "Dictionary"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "english_stem"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "ts_lexize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'thesaurus'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'one'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test ispell dictionary in configuration"
  WHITESPACE "\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    CONFIGURATION_KW "CONFIGURATION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "ispell_tst"
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      COPY_KW "COPY"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "english"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TEXT_SEARCH_CONFIGURATION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    CONFIGURATION_KW "CONFIGURATION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ispell_tst"
    WHITESPACE " "
    ALTER_KW "ALTER"
    WHITESPACE " "
    MAPPING_KW "MAPPING"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE "\n\t"
    NAME_REF
      IDENT "word"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "numword"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "asciiword"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "hword"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "numhword"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "asciihword"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "hword_part"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "hword_numpart"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "hword_asciipart"
    WHITESPACE "\n\t"
    WITH_KW "WITH"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ispell"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "english_stem"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "to_tsvector"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'ispell_tst'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'Booking the skies after rebookings for footballklubber from a foot'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "to_tsquery"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'ispell_tst'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'footballklubber'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "to_tsquery"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'ispell_tst'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'footballyklubber:b & rebookings:A & sky'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test ispell dictionary with hunspell affix in configuration"
  WHITESPACE "\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    CONFIGURATION_KW "CONFIGURATION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "hunspell_tst"
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      COPY_KW "COPY"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "ispell_tst"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TEXT_SEARCH_CONFIGURATION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    CONFIGURATION_KW "CONFIGURATION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hunspell_tst"
    WHITESPACE " "
    ALTER_KW "ALTER"
    WHITESPACE " "
    MAPPING_KW "MAPPING"
    WHITESPACE "\n\t"
    REPLACE_KW "REPLACE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ispell"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hunspell"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "to_tsvector"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_tst'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'Booking the skies after rebookings for footballklubber from a foot'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "to_tsquery"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_tst'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'footballklubber'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "to_tsquery"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_tst'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'footballyklubber:b & rebookings:A & sky'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "to_tsquery"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_tst'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'footballyklubber:b <-> sky'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "phraseto_tsquery"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_tst'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'footballyklubber sky'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test ispell dictionary with hunspell affix with FLAG long in configuration"
  WHITESPACE "\n"
  ALTER_TEXT_SEARCH_CONFIGURATION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    CONFIGURATION_KW "CONFIGURATION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hunspell_tst"
    WHITESPACE " "
    ALTER_KW "ALTER"
    WHITESPACE " "
    MAPPING_KW "MAPPING"
    WHITESPACE "\n\t"
    REPLACE_KW "REPLACE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hunspell"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hunspell_long"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "to_tsvector"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_tst'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'Booking the skies after rebookings for footballklubber from a foot'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "to_tsquery"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_tst'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'footballklubber'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "to_tsquery"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_tst'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'footballyklubber:b & rebookings:A & sky'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test ispell dictionary with hunspell affix with FLAG num in configuration"
  WHITESPACE "\n"
  ALTER_TEXT_SEARCH_CONFIGURATION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    CONFIGURATION_KW "CONFIGURATION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hunspell_tst"
    WHITESPACE " "
    ALTER_KW "ALTER"
    WHITESPACE " "
    MAPPING_KW "MAPPING"
    WHITESPACE "\n\t"
    REPLACE_KW "REPLACE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hunspell_long"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hunspell_num"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "to_tsvector"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_tst'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'Booking the skies after rebookings for footballklubber from a foot'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "to_tsquery"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_tst'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'footballklubber'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "to_tsquery"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hunspell_tst'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'footballyklubber:b & rebookings:A & sky'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test synonym dictionary in configuration"
  WHITESPACE "\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    CONFIGURATION_KW "CONFIGURATION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "synonym_tst"
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      COPY_KW "COPY"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "english"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TEXT_SEARCH_CONFIGURATION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    CONFIGURATION_KW "CONFIGURATION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "synonym_tst"
    WHITESPACE " "
    ALTER_KW "ALTER"
    WHITESPACE " "
    MAPPING_KW "MAPPING"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE "\n\t"
    NAME_REF
      IDENT "asciiword"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "hword_asciipart"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "asciihword"
    WHITESPACE "\n\t"
    WITH_KW "WITH"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "synonym"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "english_stem"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "to_tsvector"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'synonym_tst'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'Postgresql is often called as postgres or pgsql and pronounced as postgre'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "to_tsvector"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'synonym_tst'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'Most common mistake is to write Gogle instead of Google'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "to_tsvector"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'synonym_tst'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'Indexes or indices - Which is right plural form of index?'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "to_tsquery"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'synonym_tst'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'Index & indices'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test thesaurus in configuration"
  WHITESPACE "\n"
  COMMENT "-- see thesaurus_sample.ths to understand 'odd' resulting tsvector"
  WHITESPACE "\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    CONFIGURATION_KW "CONFIGURATION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "thesaurus_tst"
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n\t\t\t\t\t\t"
    NAME
      COPY_KW "COPY"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "synonym_tst"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TEXT_SEARCH_CONFIGURATION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    CONFIGURATION_KW "CONFIGURATION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "thesaurus_tst"
    WHITESPACE " "
    ALTER_KW "ALTER"
    WHITESPACE " "
    MAPPING_KW "MAPPING"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE "\n\t"
    NAME_REF
      IDENT "asciiword"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "hword_asciipart"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "asciihword"
    WHITESPACE "\n\t"
    WITH_KW "WITH"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "synonym"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "thesaurus"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "english_stem"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "to_tsvector"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'thesaurus_tst'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'one postgres one two one two three one'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "to_tsvector"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'thesaurus_tst'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'Supernovae star is very new star and usually called supernovae (abbreviation SN)'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "to_tsvector"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'thesaurus_tst'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'Booking tickets is looking like a booking a tickets'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- invalid: non-lowercase quoted identifiers"
  WHITESPACE "\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    DICTIONARY_KW "DICTIONARY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tsdict_case"
    WHITESPACE "\n"
    L_PAREN "("
    WHITESPACE "\n\t"
    NAME
      TEMPLATE_KW "Template"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "ispell"
    COMMA ","
    WHITESPACE "\n\t"
    NAME
      IDENT "\"DictFile\""
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "ispell_sample"
    COMMA ","
    WHITESPACE "\n\t"
    NAME
      IDENT "\"AffFile\""
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "ispell_sample"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test grammar for configurations"
  WHITESPACE "\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    CONFIGURATION_KW "CONFIGURATION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dummy_tst"
    WHITESPACE " "
    L_PAREN "("
    NAME
      COPY_KW "COPY"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "english"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Overridden mapping change with duplicated tokens."
  WHITESPACE "\n"
  ALTER_TEXT_SEARCH_CONFIGURATION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    CONFIGURATION_KW "CONFIGURATION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dummy_tst"
    WHITESPACE "\n  "
    ALTER_KW "ALTER"
    WHITESPACE " "
    MAPPING_KW "MAPPING"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    NAME_REF
      IDENT "word"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "word"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ispell"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Not a token supported by the configuration's parser, fails."
  WHITESPACE "\n"
  ALTER_TEXT_SEARCH_CONFIGURATION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    CONFIGURATION_KW "CONFIGURATION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dummy_tst"
    WHITESPACE "\n  "
    DROP_KW "DROP"
    WHITESPACE " "
    MAPPING_KW "MAPPING"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    NAME_REF
      IDENT "not_a_token"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "not_a_token"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Not a token supported by the configuration's parser, fails even"
  WHITESPACE "\n"
  COMMENT "-- with IF EXISTS."
  WHITESPACE "\n"
  ALTER_TEXT_SEARCH_CONFIGURATION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    CONFIGURATION_KW "CONFIGURATION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dummy_tst"
    WHITESPACE "\n  "
    DROP_KW "DROP"
    WHITESPACE " "
    MAPPING_KW "MAPPING"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    NAME_REF
      IDENT "not_a_token"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "not_a_token"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Token supported by the configuration's parser, succeeds."
  WHITESPACE "\n"
  ALTER_TEXT_SEARCH_CONFIGURATION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    CONFIGURATION_KW "CONFIGURATION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dummy_tst"
    WHITESPACE "\n  "
    DROP_KW "DROP"
    WHITESPACE " "
    MAPPING_KW "MAPPING"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    NAME_REF
      IDENT "word"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "word"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- No mapping for token supported by the configuration's parser, fails."
  WHITESPACE "\n"
  ALTER_TEXT_SEARCH_CONFIGURATION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    CONFIGURATION_KW "CONFIGURATION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dummy_tst"
    WHITESPACE "\n  "
    DROP_KW "DROP"
    WHITESPACE " "
    MAPPING_KW "MAPPING"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    NAME_REF
      IDENT "word"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Token supported by the configuration's parser, cannot be found,"
  WHITESPACE "\n"
  COMMENT "-- succeeds with IF EXISTS."
  WHITESPACE "\n"
  ALTER_TEXT_SEARCH_CONFIGURATION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    CONFIGURATION_KW "CONFIGURATION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dummy_tst"
    WHITESPACE "\n  "
    DROP_KW "DROP"
    WHITESPACE " "
    MAPPING_KW "MAPPING"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    NAME_REF
      IDENT "word"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "word"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Re-add mapping, with duplicated tokens supported by the parser."
  WHITESPACE "\n"
  ALTER_TEXT_SEARCH_CONFIGURATION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    CONFIGURATION_KW "CONFIGURATION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dummy_tst"
    WHITESPACE "\n  "
    ADD_KW "ADD"
    WHITESPACE " "
    MAPPING_KW "MAPPING"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    NAME_REF
      IDENT "word"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "word"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ispell"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Not a token supported by the configuration's parser, fails."
  WHITESPACE "\n"
  ALTER_TEXT_SEARCH_CONFIGURATION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    CONFIGURATION_KW "CONFIGURATION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dummy_tst"
    WHITESPACE "\n  "
    ADD_KW "ADD"
    WHITESPACE " "
    MAPPING_KW "MAPPING"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    NAME_REF
      IDENT "not_a_token"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ispell"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TEXT_SEARCH_CONFIG_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    CONFIGURATION_KW "CONFIGURATION"
    WHITESPACE " "
    NAME_REF
      IDENT "dummy_tst"
  SEMICOLON ";"
  WHITESPACE "\n"

---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/expressions.sql
---
SOURCE_FILE
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- expression evaluation tests that don't fit into a more specific file"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Tests for SQLValueFunction"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n\n"
  COMMENT "-- current_date  (always matches because of transactional behaviour)"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CAST_EXPR
              CALL_EXPR
                NAME_REF
                  IDENT "date"
                ARG_LIST
                  L_PAREN "("
                  CALL_EXPR
                    NAME_REF
                      IDENT "now"
                    ARG_LIST
                      L_PAREN "("
                      R_PAREN ")"
                  R_PAREN ")"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CAST_EXPR
              NAME_REF
                CURRENT_DATE_KW "current_date"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- current_time / localtime"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CAST_EXPR
              CAST_EXPR
                CALL_EXPR
                  NAME_REF
                    IDENT "now"
                  ARG_LIST
                    L_PAREN "("
                    R_PAREN ")"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "timetz"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CAST_EXPR
              NAME_REF
                CURRENT_TIME_KW "current_time"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CAST_EXPR
              CAST_EXPR
                CALL_EXPR
                  NAME_REF
                    IDENT "now"
                  ARG_LIST
                    L_PAREN "("
                    R_PAREN ")"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "timetz"
                  L_PAREN "("
                  ARG_LIST
                    ARG
                      LITERAL
                        INT_NUMBER "4"
                    R_PAREN ")"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CAST_EXPR
              CALL_EXPR
                NAME_REF
                  CURRENT_TIME_KW "current_time"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    INT_NUMBER "4"
                  R_PAREN ")"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CAST_EXPR
              CAST_EXPR
                CALL_EXPR
                  NAME_REF
                    IDENT "now"
                  ARG_LIST
                    L_PAREN "("
                    R_PAREN ")"
                COLON2 "::"
                TIME_TYPE
                  NAME_REF
                    TIME_KW "time"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CAST_EXPR
              NAME_REF
                LOCALTIME_KW "localtime"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CAST_EXPR
              CAST_EXPR
                CALL_EXPR
                  NAME_REF
                    IDENT "now"
                  ARG_LIST
                    L_PAREN "("
                    R_PAREN ")"
                COLON2 "::"
                TIME_TYPE
                  NAME_REF
                    TIME_KW "time"
                  L_PAREN "("
                  LITERAL
                    INT_NUMBER "3"
                  R_PAREN ")"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CAST_EXPR
              CALL_EXPR
                NAME_REF
                  LOCALTIME_KW "localtime"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    INT_NUMBER "3"
                  R_PAREN ")"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- current_time[stamp]/ localtime[stamp] (always matches because of transactional behaviour)"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              CURRENT_TIMESTAMP_KW "current_timestamp"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "NOW"
              ARG_LIST
                L_PAREN "("
                R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- precision"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "length"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  NAME_REF
                    CURRENT_TIMESTAMP_KW "current_timestamp"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          TEXT_KW "text"
                R_PAREN ")"
            WHITESPACE " "
            GTEQ ">="
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "length"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  CALL_EXPR
                    NAME_REF
                      CURRENT_TIMESTAMP_KW "current_timestamp"
                    ARG_LIST
                      L_PAREN "("
                      LITERAL
                        INT_NUMBER "0"
                      R_PAREN ")"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          TEXT_KW "text"
                R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- localtimestamp"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CAST_EXPR
              CAST_EXPR
                CALL_EXPR
                  NAME_REF
                    IDENT "now"
                  ARG_LIST
                    L_PAREN "("
                    R_PAREN ")"
                COLON2 "::"
                TIME_TYPE
                  NAME_REF
                    TIMESTAMP_KW "timestamp"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CAST_EXPR
              NAME_REF
                LOCALTIMESTAMP_KW "localtimestamp"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- precision overflow"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              CURRENT_TIME_KW "current_time"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                CURRENT_TIME_KW "current_time"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "7"
                R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              CURRENT_TIMESTAMP_KW "current_timestamp"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                CURRENT_TIMESTAMP_KW "current_timestamp"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "7"
                R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              LOCALTIME_KW "localtime"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                LOCALTIME_KW "localtime"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "7"
                R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              LOCALTIMESTAMP_KW "localtimestamp"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                LOCALTIMESTAMP_KW "localtimestamp"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "7"
                R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- current_role/user/user is tested in rolenames.sql"
  WHITESPACE "\n\n"
  COMMENT "-- current database / catalog"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              CURRENT_CATALOG_KW "current_catalog"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "current_database"
              ARG_LIST
                L_PAREN "("
                R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- current_schema"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            CURRENT_SCHEMA_KW "current_schema"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "search_path"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'notme'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            CURRENT_SCHEMA_KW "current_schema"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "search_path"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'pg_catalog'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            CURRENT_SCHEMA_KW "current_schema"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "search_path"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test parsing of a no-op cast to a type with unspecified typmod"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "numeric_tbl"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "18"
            COMMA ","
            ARG
              LITERAL
                INT_NUMBER "3"
            R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "numeric_view"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE "\n    "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "f1"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              NAME_REF
                IDENT "f1"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      NUMERIC_KW "numeric"
                L_PAREN "("
                ARG_LIST
                  ARG
                    LITERAL
                      INT_NUMBER "16"
                  COMMA ","
                  ARG
                    LITERAL
                      INT_NUMBER "4"
                  R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "f1164"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              NAME_REF
                IDENT "f1"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      NUMERIC_KW "numeric"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "f1n"
          COMMA ","
          WHITESPACE "\n    "
          TARGET
            NAME_REF
              IDENT "f2"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              NAME_REF
                IDENT "f2"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      NUMERIC_KW "numeric"
                L_PAREN "("
                ARG_LIST
                  ARG
                    LITERAL
                      INT_NUMBER "16"
                  COMMA ","
                  ARG
                    LITERAL
                      INT_NUMBER "4"
                  R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "f2164"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              NAME_REF
                IDENT "f2"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      NUMERIC_KW "numeric"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "f2n"
      WHITESPACE "\n  "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "numeric_tbl"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "numeric_view"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- bpchar, lacking planner support for its length coercion function,"
  WHITESPACE "\n"
  COMMENT "-- could behave differently"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bpchar_tbl"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        CHAR_TYPE
          CHARACTER_KW "character"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "16"
            R_PAREN ")"
        WHITESPACE " "
        UNIQUE_CONSTRAINT
          UNIQUE_KW "unique"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "bpchar"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bpchar_view"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE "\n    "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "f1"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              NAME_REF
                IDENT "f1"
              COLON2 "::"
              CHAR_TYPE
                CHARACTER_KW "character"
                L_PAREN "("
                ARG_LIST
                  ARG
                    LITERAL
                      INT_NUMBER "14"
                  R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "f114"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              NAME_REF
                IDENT "f1"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "bpchar"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "f1n"
          COMMA ","
          WHITESPACE "\n    "
          TARGET
            NAME_REF
              IDENT "f2"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              NAME_REF
                IDENT "f2"
              COLON2 "::"
              CHAR_TYPE
                CHARACTER_KW "character"
                L_PAREN "("
                ARG_LIST
                  ARG
                    LITERAL
                      INT_NUMBER "14"
                  R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "f214"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              NAME_REF
                IDENT "f2"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "bpchar"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "f2n"
      WHITESPACE "\n  "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "bpchar_tbl"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "bpchar_view"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        CAST_EXPR
          NAME_REF
            IDENT "f1"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "bpchar"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'foo'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ROLLBACK_STMT
    ROLLBACK_KW "rollback"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Ordinarily, IN/NOT IN can be converted to a ScalarArrayOpExpr"
  WHITESPACE "\n"
  COMMENT "-- with a suitably-chosen array type."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "random"
              ARG_LIST
                L_PAREN "("
                R_PAREN ")"
            WHITESPACE " "
            IN_KW "IN"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "4"
              COMMA ","
              WHITESPACE " "
              LITERAL
                FLOAT_NUMBER "8.0"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CAST_EXPR
              CALL_EXPR
                NAME_REF
                  IDENT "random"
                ARG_LIST
                  L_PAREN "("
                  R_PAREN ")"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      INT_KW "int"
            WHITESPACE " "
            IN_KW "IN"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "4"
              COMMA ","
              WHITESPACE " "
              LITERAL
                FLOAT_NUMBER "8.0"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- However, if there's not a common supertype for the IN elements,"
  WHITESPACE "\n"
  COMMENT "-- we should instead try to produce \"x = v1 OR x = v2 OR ...\"."
  WHITESPACE "\n"
  COMMENT "-- In most cases that'll fail for lack of all the requisite = operators,"
  WHITESPACE "\n"
  COMMENT "-- but it can succeed sometimes.  So this should complain about lack of"
  WHITESPACE "\n"
  COMMENT "-- an = operator, not about cast failure."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CAST_EXPR
              LITERAL
                STRING "'(0,0)'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "point"
            WHITESPACE " "
            IN_KW "in"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'(0,0,0,0)'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "box"
              COMMA ","
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "point"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    INT_NUMBER "0"
                  COMMA ","
                  LITERAL
                    INT_NUMBER "0"
                  R_PAREN ")"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Tests for ScalarArrayOpExpr with a hashfn"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  COMMENT "-- create a stable function so that the tests below are not"
  WHITESPACE "\n"
  COMMENT "-- evaluated using the planner's constant folding."
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "return_int_input"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nbegin\n\treturn $1;\nend;\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        STABLE_KW "stable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "return_text_input"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TEXT_KW "text"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nbegin\n\treturn $1;\nend;\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        STABLE_KW "stable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "return_int_input"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                R_PAREN ")"
            WHITESPACE " "
            IN_KW "in"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                INT_NUMBER "10"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "9"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "8"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "7"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "4"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "6"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "5"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "return_int_input"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                R_PAREN ")"
            WHITESPACE " "
            IN_KW "in"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                INT_NUMBER "10"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "9"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "8"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "7"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "4"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "6"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "5"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "return_int_input"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                R_PAREN ")"
            WHITESPACE " "
            IN_KW "in"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                NULL_KW "null"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "return_int_input"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                R_PAREN ")"
            WHITESPACE " "
            IN_KW "in"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                INT_NUMBER "10"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "9"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "8"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "7"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "4"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "6"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "5"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "return_int_input"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  LITERAL
                    NULL_KW "null"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          INT_KW "int"
                R_PAREN ")"
            WHITESPACE " "
            IN_KW "in"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                INT_NUMBER "10"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "9"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "8"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "7"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "4"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "6"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "5"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "return_int_input"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  LITERAL
                    NULL_KW "null"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          INT_KW "int"
                R_PAREN ")"
            WHITESPACE " "
            IN_KW "in"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                INT_NUMBER "10"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "9"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "8"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "7"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "4"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "6"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "5"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "return_text_input"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  STRING "'a'"
                R_PAREN ")"
            WHITESPACE " "
            IN_KW "in"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                STRING "'a'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'b'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'c'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'d'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'e'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'f'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'g'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'h'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'i'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'j'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- NOT IN"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "return_int_input"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                R_PAREN ")"
            WHITESPACE " "
            NOT_IN
              NOT_KW "not"
              WHITESPACE " "
              IN_KW "in"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                INT_NUMBER "10"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "9"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "8"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "7"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "4"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "6"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "5"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "return_int_input"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                R_PAREN ")"
            WHITESPACE " "
            NOT_IN
              NOT_KW "not"
              WHITESPACE " "
              IN_KW "in"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                INT_NUMBER "10"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "9"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "8"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "7"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "4"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "6"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "5"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "return_int_input"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                R_PAREN ")"
            WHITESPACE " "
            NOT_IN
              NOT_KW "not"
              WHITESPACE " "
              IN_KW "in"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                INT_NUMBER "10"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "9"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "8"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "7"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "4"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "6"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "5"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "return_int_input"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                R_PAREN ")"
            WHITESPACE " "
            NOT_IN
              NOT_KW "not"
              WHITESPACE " "
              IN_KW "in"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                INT_NUMBER "10"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "9"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "8"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "7"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "4"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "6"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "5"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "return_int_input"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                R_PAREN ")"
            WHITESPACE " "
            NOT_IN
              NOT_KW "not"
              WHITESPACE " "
              IN_KW "in"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                NULL_KW "null"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "return_int_input"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  LITERAL
                    NULL_KW "null"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          INT_KW "int"
                R_PAREN ")"
            WHITESPACE " "
            NOT_IN
              NOT_KW "not"
              WHITESPACE " "
              IN_KW "in"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                INT_NUMBER "10"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "9"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "8"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "7"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "4"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "6"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "5"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "return_int_input"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  LITERAL
                    NULL_KW "null"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          INT_KW "int"
                R_PAREN ")"
            WHITESPACE " "
            NOT_IN
              NOT_KW "not"
              WHITESPACE " "
              IN_KW "in"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                INT_NUMBER "10"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "9"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "8"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "7"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "4"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "6"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "5"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "return_text_input"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  STRING "'a'"
                R_PAREN ")"
            WHITESPACE " "
            NOT_IN
              NOT_KW "not"
              WHITESPACE " "
              IN_KW "in"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                STRING "'a'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'b'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'c'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'d'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'e'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'f'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'g'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'h'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'i'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'j'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ROLLBACK_STMT
    ROLLBACK_KW "rollback"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test with non-strict equality function."
  WHITESPACE "\n"
  COMMENT "-- We need to create our own type for this."
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TYPE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "myint"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "myintin"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "cstring"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "myint"
    WHITESPACE " "
    FUNC_OPTION_LIST
      STRICT_FUNC_OPTION
        STRICT_KW "strict"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "immutable"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE "\n  "
        IDENT "internal"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          STRING "'int4in'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "myintout"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "myint"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "cstring"
    WHITESPACE " "
    FUNC_OPTION_LIST
      STRICT_FUNC_OPTION
        STRICT_KW "strict"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "immutable"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE "\n  "
        IDENT "internal"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          STRING "'int4out'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "myinthash"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "myint"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INTEGER_KW "integer"
    WHITESPACE " "
    FUNC_OPTION_LIST
      STRICT_FUNC_OPTION
        STRICT_KW "strict"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "immutable"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE "\n  "
        IDENT "internal"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          STRING "'hashint4'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TYPE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "myint"
    WHITESPACE " "
    L_PAREN "("
    NAME
      INPUT_KW "input"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "myintin"
    COMMA ","
    WHITESPACE " "
    NAME
      IDENT "output"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "myintout"
    COMMA ","
    WHITESPACE " "
    NAME
      LIKE_KW "like"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_CAST_STMT
    CREATE_KW "create"
    WHITESPACE " "
    CAST_KW "cast"
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "myint"
    R_PAREN ")"
    WHITESPACE " "
    WITHOUT_KW "without"
    WHITESPACE " "
    FUNCTION_KW "function"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_CAST_STMT
    CREATE_KW "create"
    WHITESPACE " "
    CAST_KW "cast"
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "myint"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    R_PAREN ")"
    WHITESPACE " "
    WITHOUT_KW "without"
    WHITESPACE " "
    FUNCTION_KW "function"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "myinteq"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "myint"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          IDENT "myint"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "bool"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nbegin\n  if $1 is null and $2 is null then\n    return true;\n  else\n    return $1::int = $2::int;\n  end if;\nend;\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "immutable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "myintne"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "myint"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          IDENT "myint"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "bool"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nbegin\n  return not myinteq($1, $2);\nend;\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "immutable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_OPERATOR_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OPERATOR_KW "operator"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n  "
    NAME
      IDENT "leftarg"
    WHITESPACE "    "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "myint"
    COMMA ","
    WHITESPACE "\n  "
    NAME
      IDENT "rightarg"
    WHITESPACE "   "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "myint"
    COMMA ","
    WHITESPACE "\n  "
    NAME
      IDENT "commutator"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    EQ "="
    COMMA ","
    WHITESPACE "\n  "
    NAME
      IDENT "negator"
    WHITESPACE "    "
    EQ "="
    WHITESPACE " "
    NEQB "<>"
    COMMA ","
    WHITESPACE "\n  "
    NAME
      PROCEDURE_KW "procedure"
    WHITESPACE "  "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "myinteq"
    COMMA ","
    WHITESPACE "\n  "
    NAME
      RESTRICT_KW "restrict"
    WHITESPACE "   "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "eqsel"
    COMMA ","
    WHITESPACE "\n  "
    NAME
      JOIN_KW "join"
    WHITESPACE "       "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "eqjoinsel"
    COMMA ","
    WHITESPACE "\n  "
    NAME
      IDENT "merges"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_OPERATOR_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OPERATOR_KW "operator"
    WHITESPACE " "
    NEQB "<>"
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n  "
    NAME
      IDENT "leftarg"
    WHITESPACE "    "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "myint"
    COMMA ","
    WHITESPACE "\n  "
    NAME
      IDENT "rightarg"
    WHITESPACE "   "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "myint"
    COMMA ","
    WHITESPACE "\n  "
    NAME
      IDENT "commutator"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NEQB "<>"
    COMMA ","
    WHITESPACE "\n  "
    NAME
      IDENT "negator"
    WHITESPACE "    "
    EQ "="
    WHITESPACE " "
    EQ "="
    COMMA ","
    WHITESPACE "\n  "
    NAME
      PROCEDURE_KW "procedure"
    WHITESPACE "  "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "myintne"
    COMMA ","
    WHITESPACE "\n  "
    NAME
      RESTRICT_KW "restrict"
    WHITESPACE "   "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "eqsel"
    COMMA ","
    WHITESPACE "\n  "
    NAME
      JOIN_KW "join"
    WHITESPACE "       "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "eqjoinsel"
    COMMA ","
    WHITESPACE "\n  "
    NAME
      IDENT "merges"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_OPERATOR_CLASS_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OPERATOR_KW "operator"
    WHITESPACE " "
    CLASS_KW "class"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "myint_ops"
    WHITESPACE "\n"
    DEFAULT_KW "default"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "myint"
    WHITESPACE " "
    USING_KW "using"
    WHITESPACE " "
    NAME_REF
      IDENT "hash"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n  "
    OPERATOR_KW "operator"
    WHITESPACE "    "
    LITERAL
      INT_NUMBER "1"
    WHITESPACE "   "
    EQ "="
    WHITESPACE "  "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "myint"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "myint"
    R_PAREN ")"
    COMMA ","
    WHITESPACE "\n  "
    FUNCTION_KW "function"
    WHITESPACE "    "
    LITERAL
      INT_NUMBER "1"
    WHITESPACE "   "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "myinthash"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "myint"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inttest"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "myint"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      CAST_EXPR
        LITERAL
          INT_NUMBER "1"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "myint"
      R_PAREN ")"
      COMMA ","
      L_PAREN "("
      LITERAL
        NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- try an array with enough elements to cause hashing"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "inttest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          CAST_EXPR
            LITERAL
              INT_NUMBER "1"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "2"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "3"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "4"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "5"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "6"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "7"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "8"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "9"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          WHITESPACE " "
          LITERAL
            NULL_KW "null"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "inttest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        NOT_IN
          NOT_KW "not"
          WHITESPACE " "
          IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          CAST_EXPR
            LITERAL
              INT_NUMBER "1"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "2"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "3"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "4"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "5"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "6"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "7"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "8"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "9"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          WHITESPACE " "
          LITERAL
            NULL_KW "null"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "inttest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        NOT_IN
          NOT_KW "not"
          WHITESPACE " "
          IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          CAST_EXPR
            LITERAL
              INT_NUMBER "0"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "2"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "3"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "4"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "5"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "6"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "7"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "8"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "9"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          WHITESPACE " "
          LITERAL
            NULL_KW "null"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ensure the result matched with the non-hashed version.  We simply remove"
  WHITESPACE "\n"
  COMMENT "-- some array elements so that we don't reach the hashing threshold."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "inttest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          CAST_EXPR
            LITERAL
              INT_NUMBER "1"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "2"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "3"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "4"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "5"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          WHITESPACE " "
          LITERAL
            NULL_KW "null"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "inttest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        NOT_IN
          NOT_KW "not"
          WHITESPACE " "
          IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          CAST_EXPR
            LITERAL
              INT_NUMBER "1"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "2"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "3"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "4"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "5"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          WHITESPACE " "
          LITERAL
            NULL_KW "null"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "inttest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        NOT_IN
          NOT_KW "not"
          WHITESPACE " "
          IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          CAST_EXPR
            LITERAL
              INT_NUMBER "0"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "2"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "3"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "4"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          CAST_EXPR
            LITERAL
              INT_NUMBER "5"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "myint"
          COMMA ","
          WHITESPACE " "
          LITERAL
            NULL_KW "null"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ROLLBACK_STMT
    ROLLBACK_KW "rollback"
  SEMICOLON ";"
  WHITESPACE "\n"
---
ERROR@1567: expected R_PAREN
ERROR@1568: expected command, found OFF_KW
ERROR@1571: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@1571: expected SEMICOLON
ERROR@1571: expected command, found R_PAREN
ERROR@1950: expected R_PAREN
ERROR@1951: expected command, found OFF_KW
ERROR@1954: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@1954: expected SEMICOLON
ERROR@1954: expected command, found R_PAREN
ERROR@2155: expected R_PAREN
ERROR@2156: expected command, found OFF_KW
ERROR@2159: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@2159: expected SEMICOLON
ERROR@2159: expected command, found R_PAREN
ERROR@2216: expected R_PAREN
ERROR@2217: expected command, found OFF_KW
ERROR@2220: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@2220: expected SEMICOLON
ERROR@2220: expected command, found R_PAREN

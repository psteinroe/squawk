---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/enum.sql
---
SOURCE_FILE
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Enum tests"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_TYPE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rainbow"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    ENUM_KW "ENUM"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'red'"
    COMMA ","
    WHITESPACE " "
    LITERAL
      STRING "'orange'"
    COMMA ","
    WHITESPACE " "
    LITERAL
      STRING "'yellow'"
    COMMA ","
    WHITESPACE " "
    LITERAL
      STRING "'green'"
    COMMA ","
    WHITESPACE " "
    LITERAL
      STRING "'blue'"
    COMMA ","
    WHITESPACE " "
    LITERAL
      STRING "'purple'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Did it create the right number of rows?"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_enum"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "enumtypid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'rainbow'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regtype"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- I/O functions"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'red'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "rainbow"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'mauve'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "rainbow"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Also try it with non-error-throwing API"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_input_is_valid"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'red'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'rainbow'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_input_is_valid"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'mauve'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'rainbow'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "pg_input_error_info"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'mauve'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'rainbow'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "pg_input_error_info"
        ARG_LIST
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              IDENT "repeat"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'too_long'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "32"
              R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'rainbow'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- adding new values"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_TYPE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "planets"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    ENUM_KW "ENUM"
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE " "
    LITERAL
      STRING "'venus'"
    COMMA ","
    WHITESPACE " "
    LITERAL
      STRING "'earth'"
    COMMA ","
    WHITESPACE " "
    LITERAL
      STRING "'mars'"
    WHITESPACE " "
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "enumlabel"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "enumsortorder"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_enum"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "enumtypid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'planets'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regtype"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "planets"
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    VALUE_KW "VALUE"
    WHITESPACE " "
    LITERAL
      STRING "'uranus'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "enumlabel"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "enumsortorder"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_enum"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "enumtypid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'planets'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regtype"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "planets"
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    VALUE_KW "VALUE"
    WHITESPACE " "
    LITERAL
      STRING "'mercury'"
    WHITESPACE " "
    BEFORE_KW "BEFORE"
    WHITESPACE " "
    LITERAL
      STRING "'venus'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "planets"
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    VALUE_KW "VALUE"
    WHITESPACE " "
    LITERAL
      STRING "'saturn'"
    WHITESPACE " "
    BEFORE_KW "BEFORE"
    WHITESPACE " "
    LITERAL
      STRING "'uranus'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "planets"
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    VALUE_KW "VALUE"
    WHITESPACE " "
    LITERAL
      STRING "'jupiter'"
    WHITESPACE " "
    AFTER_KW "AFTER"
    WHITESPACE " "
    LITERAL
      STRING "'mars'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "planets"
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    VALUE_KW "VALUE"
    WHITESPACE " "
    LITERAL
      STRING "'neptune'"
    WHITESPACE " "
    AFTER_KW "AFTER"
    WHITESPACE " "
    LITERAL
      STRING "'uranus'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "enumlabel"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "enumsortorder"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_enum"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "enumtypid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'planets'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regtype"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "enumlabel"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "enumsortorder"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_enum"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "enumtypid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'planets'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regtype"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      CAST_EXPR
        NAME_REF
          IDENT "enumlabel"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "planets"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- errors for adding labels"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "planets"
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    VALUE_KW "VALUE"
    WHITESPACE "\n  "
    LITERAL
      STRING "'plutoplutoplutoplutoplutoplutoplutoplutoplutoplutoplutoplutoplutopluto'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "planets"
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    VALUE_KW "VALUE"
    WHITESPACE " "
    LITERAL
      STRING "'pluto'"
    WHITESPACE " "
    AFTER_KW "AFTER"
    WHITESPACE " "
    LITERAL
      STRING "'zeus'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- if not exists tests"
  WHITESPACE "\n\n"
  COMMENT "--  existing value gives error"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "planets"
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    VALUE_KW "VALUE"
    WHITESPACE " "
    LITERAL
      STRING "'mercury'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- unless IF NOT EXISTS is specified"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "planets"
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    VALUE_KW "VALUE"
    WHITESPACE " "
    IF_NOT_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      NOT_KW "NOT"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    LITERAL
      STRING "'mercury'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- should be neptune, not mercury"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "enum_last"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  NULL_KW "NULL"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "planets"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "planets"
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    VALUE_KW "VALUE"
    WHITESPACE " "
    IF_NOT_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      NOT_KW "NOT"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    LITERAL
      STRING "'pluto'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- should be pluto, i.e. the new value"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "enum_last"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  NULL_KW "NULL"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "planets"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test inserting so many values that we have to renumber"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_TYPE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "insenum"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    ENUM_KW "enum"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'L1'"
    COMMA ","
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i1'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i2'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i3'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i4'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i5'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i6'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i7'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i8'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i9'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i10'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i11'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i12'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i13'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i14'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i15'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i16'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i17'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i18'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i19'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i20'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i21'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i22'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i23'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i24'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i25'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i26'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i27'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i28'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i29'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insenum"
    WHITESPACE " "
    ADD_KW "add"
    WHITESPACE " "
    VALUE_KW "value"
    WHITESPACE " "
    LITERAL
      STRING "'i30'"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    LITERAL
      STRING "'L2'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- The exact values of enumsortorder will now depend on the local properties"
  WHITESPACE "\n"
  COMMENT "-- of float4, but in any reasonable implementation we should get at least"
  WHITESPACE "\n"
  COMMENT "-- 20 splits before having to renumber; so only hide values > 20."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "enumlabel"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CASE_EXPR
            CASE_KW "case"
            WHITESPACE " "
            WHEN_CLAUSE
              WHEN_KW "when"
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "enumsortorder"
                WHITESPACE " "
                R_ANGLE ">"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "20"
              WHITESPACE " "
              THEN_KW "then"
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
            WHITESPACE " "
            ELSE_KW "else"
            WHITESPACE " "
            NAME_REF
              IDENT "enumsortorder"
            WHITESPACE " "
            END_KW "end"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "so"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_enum"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "enumtypid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'insenum'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regtype"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "enumsortorder"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- Basic table creation, row selection"
    WHITESPACE "\n"
    COMMENT "--"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "enumtest"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "rainbow"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "enumtest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'red'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'orange'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'yellow'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'green'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "enumtest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Operators, no index"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "enumtest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'orange'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "enumtest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        NEQB "<>"
        WHITESPACE " "
        LITERAL
          STRING "'orange'"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "col"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "enumtest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          STRING "'yellow'"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "col"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "enumtest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        GTEQ ">="
        WHITESPACE " "
        LITERAL
          STRING "'yellow'"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "col"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "enumtest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          STRING "'green'"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "col"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "enumtest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        LTEQ "<="
        WHITESPACE " "
        LITERAL
          STRING "'green'"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "col"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Cast to/from text"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CAST_EXPR
              CAST_EXPR
                LITERAL
                  STRING "'red'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "rainbow"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
            WHITESPACE " "
            CUSTOM_OP
              PIPE "|"
              PIPE "|"
            WHITESPACE " "
            LITERAL
              STRING "'hithere'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CAST_EXPR
              CAST_EXPR
                LITERAL
                  STRING "'red'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        TEXT_KW "text"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "rainbow"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                STRING "'red'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "rainbow"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Aggregates"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "col"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "enumtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "col"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "enumtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "col"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "enumtest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          STRING "'green'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Index tests, force use of index"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_bitmapscan"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Btree index / opclass with the various operators"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    UNIQUE_KW "UNIQUE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "enumtest_btree"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "enumtest"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    NAME_REF
      IDENT "btree"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "col"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "enumtest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'orange'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "enumtest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        NEQB "<>"
        WHITESPACE " "
        LITERAL
          STRING "'orange'"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "col"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "enumtest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          STRING "'yellow'"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "col"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "enumtest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        GTEQ ">="
        WHITESPACE " "
        LITERAL
          STRING "'yellow'"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "col"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "enumtest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          STRING "'green'"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "col"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "enumtest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        LTEQ "<="
        WHITESPACE " "
        LITERAL
          STRING "'green'"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "col"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "col"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "enumtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "col"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "enumtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "col"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "enumtest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          STRING "'green'"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_INDEX_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "enumtest_btree"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Hash index / opclass with the = operator"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "enumtest_hash"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "enumtest"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    NAME_REF
      IDENT "hash"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "col"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "enumtest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'orange'"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_INDEX_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "enumtest_hash"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- End index tests"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_bitmapscan"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Domains over enums"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    DOMAIN_KW "DOMAIN"
    WHITESPACE " "
    NAME
      IDENT "rgb"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "rainbow"
    WHITESPACE " "
    CHECK_CONSTRAINT
      CHECK_KW "CHECK"
      WHITESPACE " "
      L_PAREN "("
      BIN_EXPR
        NAME_REF
          VALUE_KW "VALUE"
        WHITESPACE " "
        IN_KW "IN"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            STRING "'red'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'green'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'blue'"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'red'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "rgb"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'purple'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "rgb"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              LITERAL
                STRING "'purple'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "rainbow"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "rgb"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    DOMAIN_KW "DOMAIN"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rgb"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Arrays"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'{red,green,blue}'"
            COLON2 "::"
            ARRAY_TYPE
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "rainbow"
              L_BRACK "["
              R_BRACK "]"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          INDEX_EXPR
            PAREN_EXPR
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'{red,green,blue}'"
                COLON2 "::"
                ARRAY_TYPE
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "rainbow"
                  L_BRACK "["
                  R_BRACK "]"
              R_PAREN ")"
            L_BRACK "["
            LITERAL
              INT_NUMBER "2"
            R_BRACK "]"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            LITERAL
              STRING "'red'"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                ANY_KW "ANY"
              WHITESPACE " "
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'{red,green,blue}'"
                COLON2 "::"
                ARRAY_TYPE
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "rainbow"
                  L_BRACK "["
                  R_BRACK "]"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            LITERAL
              STRING "'yellow'"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                ANY_KW "ANY"
              WHITESPACE " "
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'{red,green,blue}'"
                COLON2 "::"
                ARRAY_TYPE
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "rainbow"
                  L_BRACK "["
                  R_BRACK "]"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            LITERAL
              STRING "'red'"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                ALL_KW "ALL"
              WHITESPACE " "
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'{red,green,blue}'"
                COLON2 "::"
                ARRAY_TYPE
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "rainbow"
                  L_BRACK "["
                  R_BRACK "]"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            LITERAL
              STRING "'red'"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                ALL_KW "ALL"
              WHITESPACE " "
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'{red,red}'"
                COLON2 "::"
                ARRAY_TYPE
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "rainbow"
                  L_BRACK "["
                  R_BRACK "]"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Support functions"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "enum_first"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  NULL_KW "NULL"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "rainbow"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "enum_last"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'green'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "rainbow"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "enum_range"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  NULL_KW "NULL"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "rainbow"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "enum_range"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'orange'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "rainbow"
              COMMA ","
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'green'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "rainbow"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "enum_range"
            ARG_LIST
              L_PAREN "("
              LITERAL
                NULL_KW "NULL"
              COMMA ","
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'green'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "rainbow"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "enum_range"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'orange'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "rainbow"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "NULL"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "enum_range"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  NULL_KW "NULL"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "rainbow"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "NULL"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- User functions, can't test perl/python etc here since may not be compiled."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "echo_me"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "anyenum"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TEXT_KW "text"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nBEGIN\nRETURN $1::text || 'omg';\nEND\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "echo_me"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'red'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "rainbow"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Concrete function should override generic one"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "echo_me"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "rainbow"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TEXT_KW "text"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nBEGIN\nRETURN $1::text || 'wtf';\nEND\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "echo_me"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'red'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "rainbow"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- If we drop the original generic one, we don't have to qualify the type"
  WHITESPACE "\n"
  COMMENT "-- anymore, since there's only one match"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "echo_me"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "anyenum"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "echo_me"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'red'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "echo_me"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "rainbow"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- RI triggers on enum types"
    WHITESPACE "\n"
    COMMENT "--"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "enumtest_parent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "rainbow"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "enumtest_child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "parent"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "rainbow"
        WHITESPACE " "
        REFERENCES_CONSTRAINT
          REFERENCES_KW "REFERENCES"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "enumtest_parent"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "enumtest_parent"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'red'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "enumtest_child"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'red'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "enumtest_child"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'blue'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "enumtest_parent"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- cross-type RI should fail"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_TYPE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bogus"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    ENUM_KW "ENUM"
    L_PAREN "("
    LITERAL
      STRING "'good'"
    COMMA ","
    WHITESPACE " "
    LITERAL
      STRING "'bad'"
    COMMA ","
    WHITESPACE " "
    LITERAL
      STRING "'ugly'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "enumtest_bogus_child"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "parent"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "bogus"
        WHITESPACE " "
        REFERENCES_CONSTRAINT
          REFERENCES_KW "REFERENCES"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "enumtest_parent"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TYPE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bogus"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check renaming a value"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rainbow"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    VALUE_KW "VALUE"
    WHITESPACE " "
    LITERAL
      STRING "'red'"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    LITERAL
      STRING "'crimson'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "enumlabel"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "enumsortorder"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_enum"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "enumtypid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'rainbow'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regtype"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- check that renaming a non-existent value fails"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rainbow"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    VALUE_KW "VALUE"
    WHITESPACE " "
    LITERAL
      STRING "'red'"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    LITERAL
      STRING "'crimson'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- check that renaming to an existent value fails"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rainbow"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    VALUE_KW "VALUE"
    WHITESPACE " "
    LITERAL
      STRING "'blue'"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    LITERAL
      STRING "'green'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- check transactional behaviour of ALTER TYPE ... ADD VALUE"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_TYPE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bogus"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    ENUM_KW "ENUM"
    L_PAREN "("
    LITERAL
      STRING "'good'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check that we can add new values to existing enums in a transaction"
  WHITESPACE "\n"
  COMMENT "-- but we can't use them"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bogus"
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    VALUE_KW "VALUE"
    WHITESPACE " "
    LITERAL
      STRING "'new'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SAVEPOINT_STMT
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'new'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "bogus"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- unsafe"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    NAME_REF
      IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "enum_first"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  NULL_KW "null"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "bogus"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- safe"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "enum_last"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  NULL_KW "null"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "bogus"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- unsafe"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    NAME_REF
      IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "enum_range"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  NULL_KW "null"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "bogus"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- unsafe"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    NAME_REF
      IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'new'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "bogus"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- now safe"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "enumlabel"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "enumsortorder"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_enum"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "enumtypid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'bogus'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regtype"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check that we recognize the case where the enum already existed but was"
  WHITESPACE "\n"
  COMMENT "-- modified in the current txn; this should not be considered safe"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bogus"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    NAME
      IDENT "bogon"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bogon"
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    VALUE_KW "VALUE"
    WHITESPACE " "
    LITERAL
      STRING "'bad'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'bad'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "bogon"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- but a renamed value is safe to use later in same transaction"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bogus"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    VALUE_KW "VALUE"
    WHITESPACE " "
    LITERAL
      STRING "'good'"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    LITERAL
      STRING "'bad'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'bad'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "bogus"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TYPE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bogus"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check that values created during CREATE TYPE can be used in any case"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TYPE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bogus"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    ENUM_KW "ENUM"
    L_PAREN "("
    LITERAL
      STRING "'good'"
    COMMA ","
    LITERAL
      STRING "'bad'"
    COMMA ","
    LITERAL
      STRING "'ugly'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bogus"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    NAME
      IDENT "bogon"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "enum_range"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  NULL_KW "null"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "bogon"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- we must allow this usage to support pg_dump in binary upgrade mode"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TYPE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bogus"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    ENUM_KW "ENUM"
    L_PAREN "("
    LITERAL
      STRING "'good'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bogus"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    NAME
      IDENT "bogon"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bogon"
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    VALUE_KW "VALUE"
    WHITESPACE " "
    LITERAL
      STRING "'bad'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bogon"
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    VALUE_KW "VALUE"
    WHITESPACE " "
    LITERAL
      STRING "'ugly'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "enum_range"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  NULL_KW "null"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "bogon"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Cleanup"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "enumtest_child"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "enumtest_parent"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "enumtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TYPE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rainbow"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Verify properly cleaned up"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "typname"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'rainbow'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_enum"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      PREFIX_EXPR
        NOT_KW "NOT"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            EXISTS_KW "EXISTS"
          WHITESPACE "\n  "
          ARG_LIST
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    LITERAL
                      INT_NUMBER "1"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                NAME_REF
                  IDENT "pg_type"
              WHITESPACE " "
              WHERE_CLAUSE
                WHERE_KW "WHERE"
                WHITESPACE " "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "pg_type"
                    DOT "."
                    NAME_REF
                      IDENT "oid"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  NAME_REF
                    IDENT "enumtypid"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"

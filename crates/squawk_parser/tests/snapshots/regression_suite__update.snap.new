---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/update.sql
---
SOURCE_FILE
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- UPDATE syntax tests"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "update_test"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE "   "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "INT"
        WHITESPACE " "
        DEFAULT_CONSTRAINT
          DEFAULT_KW "DEFAULT"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
      COMMA ","
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE "   "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "INT"
      COMMA ","
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE "   "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "upsert_test"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE "   "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "INT"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      COMMA ","
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE "   "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "update_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'foo'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "update_test"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "a"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "15"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "update_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "update_test"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "update_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- aliases for the UPDATE target table"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "update_test"
    WHITESPACE " "
    ALIAS
      AS_KW "AS"
      WHITESPACE " "
      NAME
        IDENT "t"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "10"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "t"
          DOT "."
          NAME_REF
            IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "update_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "update_test"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "t"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      FIELD_EXPR
        NAME_REF
          IDENT "t"
        DOT "."
        NAME_REF
          IDENT "b"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "t"
          DOT "."
          NAME_REF
            IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "update_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- error, you're not supposed to qualify the target column"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "update_test"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "t"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "t"
    ERROR
      DOT "."
  ERROR
    IDENT "b"
  WHITESPACE " "
  ERROR
    EQ "="
  WHITESPACE " "
  ERROR
    IDENT "t"
  ERROR
    DOT "."
  ERROR
    IDENT "b"
  WHITESPACE " "
  ERROR
    PLUS "+"
  WHITESPACE " "
  ERROR
    INT_NUMBER "10"
  WHITESPACE " "
  ERROR
    WHERE_KW "WHERE"
  WHITESPACE " "
  ERROR
    IDENT "t"
  ERROR
    DOT "."
  ERROR
    IDENT "a"
  WHITESPACE " "
  ERROR
    EQ "="
  WHITESPACE " "
  ERROR
    INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test VALUES in FROM"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "update_test"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    EQ "="
    FIELD_EXPR
      NAME_REF
        IDENT "v"
      DOT "."
      NAME_REF
        IDENT "i"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          L_PAREN "("
          LITERAL
            INT_NUMBER "100"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "20"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "i"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "j"
          R_PAREN ")"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "update_test"
          DOT "."
          NAME_REF
            IDENT "b"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "v"
          DOT "."
          NAME_REF
            IDENT "j"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "update_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail, wrong data type:"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "update_test"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "v"
      DOT "."
      STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          L_PAREN "("
          LITERAL
            INT_NUMBER "100"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "20"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "i"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "j"
          R_PAREN ")"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "update_test"
          DOT "."
          NAME_REF
            IDENT "b"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "v"
          DOT "."
          NAME_REF
            IDENT "j"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test multiple-set-clause syntax"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "update_test"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "a"
          COMMA ","
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "b"
              PLUS "+"
              LITERAL
                INT_NUMBER "1"
          COMMA ","
          TARGET
            NAME_REF
              IDENT "c"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "update_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "update_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "update_test"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "c"
    COMMA ","
    NAME_REF
      IDENT "b"
    COMMA ","
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'bugle'"
    COMMA ","
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "b"
      PLUS "+"
      LITERAL
        INT_NUMBER "11"
    COMMA ","
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'foo'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "update_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "update_test"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "c"
    COMMA ","
    NAME_REF
      IDENT "b"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'car'"
    COMMA ","
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "a"
      PLUS "+"
      NAME_REF
        IDENT "b"
    R_PAREN ")"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "update_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- fail, multi assignment to same column:"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "update_test"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "c"
    COMMA ","
    NAME_REF
      IDENT "b"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'car'"
    COMMA ","
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "a"
      PLUS "+"
      NAME_REF
        IDENT "b"
    R_PAREN ")"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- uncorrelated sub-select:"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "update_test"
    WHITESPACE "\n  "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    COMMA ","
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "a"
          COMMA ","
          TARGET
            NAME_REF
              IDENT "b"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "update_test"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "where"
        WHITESPACE " "
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "b"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "41"
          WHITESPACE " "
          AND_KW "and"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "c"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'car'"
    R_PAREN ")"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "100"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "20"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "update_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- correlated sub-select:"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "update_test"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "o"
    WHITESPACE "\n  "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    COMMA ","
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "a"
              PLUS "+"
              LITERAL
                INT_NUMBER "1"
          COMMA ","
          TARGET
            NAME_REF
              IDENT "b"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "update_test"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "i"
      WHITESPACE "\n               "
      WHERE_CLAUSE
        WHERE_KW "where"
        WHITESPACE " "
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "i"
                DOT "."
                NAME_REF
                  IDENT "a"
              EQ "="
              FIELD_EXPR
                NAME_REF
                  IDENT "o"
                DOT "."
                NAME_REF
                  IDENT "a"
            WHITESPACE " "
            AND_KW "and"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "i"
                DOT "."
                NAME_REF
                  IDENT "b"
              EQ "="
              FIELD_EXPR
                NAME_REF
                  IDENT "o"
                DOT "."
                NAME_REF
                  IDENT "b"
          WHITESPACE " "
          AND_KW "and"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "i"
              DOT "."
              NAME_REF
                IDENT "c"
            WHITESPACE " "
            IS_NOT_DISTINCT_FROM
              IS_KW "is"
              WHITESPACE " "
              NOT_KW "not"
              WHITESPACE " "
              DISTINCT_KW "distinct"
              WHITESPACE " "
              FROM_KW "from"
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "o"
              DOT "."
              NAME_REF
                IDENT "c"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "update_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- fail, multiple rows supplied:"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "update_test"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    COMMA ","
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "a"
              PLUS "+"
              LITERAL
                INT_NUMBER "1"
          COMMA ","
          TARGET
            NAME_REF
              IDENT "b"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "update_test"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- set to null if no rows supplied:"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "update_test"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    COMMA ","
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "a"
              PLUS "+"
              LITERAL
                INT_NUMBER "1"
          COMMA ","
          TARGET
            NAME_REF
              IDENT "b"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "update_test"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "where"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1000"
    R_PAREN ")"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "11"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "update_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- *-expansion should work in this context:"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "update_test"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    COMMA ","
    NAME_REF
      IDENT "b"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    ROW_KW "ROW"
    L_PAREN "("
    FIELD_EXPR
      NAME_REF
        IDENT "v"
      DOT "."
      STAR "*"
    R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          L_PAREN "("
          LITERAL
            INT_NUMBER "21"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "100"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "i"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "j"
          R_PAREN ")"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "update_test"
          DOT "."
          NAME_REF
            IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "v"
          DOT "."
          NAME_REF
            IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- you might expect this to work, but syntactically it's not a RowExpr:"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "update_test"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    COMMA ","
    NAME_REF
      IDENT "b"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    FIELD_EXPR
      NAME_REF
        IDENT "v"
      DOT "."
      STAR "*"
    R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          L_PAREN "("
          LITERAL
            INT_NUMBER "21"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "101"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "i"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "j"
          R_PAREN ")"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "update_test"
          DOT "."
          NAME_REF
            IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "v"
          DOT "."
          NAME_REF
            IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- if an alias for the target table is specified, don't allow references"
  WHITESPACE "\n"
  COMMENT "-- to the original table name"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "update_test"
    WHITESPACE " "
    ALIAS
      AS_KW "AS"
      WHITESPACE " "
      NAME
        IDENT "t"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      FIELD_EXPR
        NAME_REF
          IDENT "update_test"
        DOT "."
        NAME_REF
          IDENT "b"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "t"
          DOT "."
          NAME_REF
            IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Make sure that we can update to a TOASTed value."
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "update_test"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "repeat"
      ARG_LIST
        L_PAREN "("
        LITERAL
          STRING "'x'"
        COMMA ","
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10000"
        R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'car'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "b"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "char_length"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "c"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "update_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check multi-assignment with a Result node to handle a one-time filter."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "VERBOSE"
    COMMA ","
    WHITESPACE " "
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "update_test"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "t"
    WHITESPACE "\n  "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "b"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "a"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "update_test"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "s"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "s"
            DOT "."
            NAME_REF
              IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "t"
            DOT "."
            NAME_REF
              IDENT "a"
    R_PAREN ")"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          CURRENT_USER_KW "CURRENT_USER"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        NAME_REF
          SESSION_USER_KW "SESSION_USER"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "update_test"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "t"
    WHITESPACE "\n  "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "b"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "a"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "update_test"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "s"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "s"
            DOT "."
            NAME_REF
              IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "t"
            DOT "."
            NAME_REF
              IDENT "a"
    R_PAREN ")"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          CURRENT_USER_KW "CURRENT_USER"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        NAME_REF
          SESSION_USER_KW "SESSION_USER"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "b"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "char_length"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "c"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "update_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test ON CONFLICT DO UPDATE"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "upsert_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Boo'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Zoo'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- uncorrelated  sub-select:"
  WHITESPACE "\n"
  INSERT_STMT
    WITH_CLAUSE
      WITH_KW "WITH"
      WHITESPACE " "
      WITH_TABLE
        NAME
          IDENT "aaa"
        WHITESPACE " "
        AS_KW "AS"
        WHITESPACE " "
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  INT_NUMBER "1"
                WHITESPACE " "
                AS_KW "AS"
                WHITESPACE " "
                NAME
                  IDENT "a"
              COMMA ","
              WHITESPACE " "
              TARGET
                LITERAL
                  STRING "'Foo'"
                WHITESPACE " "
                AS_KW "AS"
                WHITESPACE " "
                NAME
                  IDENT "b"
        R_PAREN ")"
    WHITESPACE " "
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "upsert_test"
    WHITESPACE "\n  "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Bar'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    CONFLICT_KW "CONFLICT"
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE "\n  "
    DO_KW "DO"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "b"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "a"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "aaa"
    R_PAREN ")"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- correlated sub-select:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "upsert_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Baz'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Zaz'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    CONFLICT_KW "CONFLICT"
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE "\n  "
    DO_KW "DO"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "b"
              WHITESPACE " "
              CUSTOM_OP
                PIPE "|"
                PIPE "|"
              WHITESPACE " "
              LITERAL
                STRING "', Correlated'"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "a"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "upsert_test"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "i"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "i"
            DOT "."
            NAME_REF
              IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "upsert_test"
            DOT "."
            NAME_REF
              IDENT "a"
    R_PAREN ")"
    WHITESPACE "\n  "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- correlated sub-select (EXCLUDED.* alias):"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "upsert_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Bat'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Zot'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    CONFLICT_KW "CONFLICT"
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE "\n  "
    DO_KW "DO"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "b"
              WHITESPACE " "
              CUSTOM_OP
                PIPE "|"
                PIPE "|"
              WHITESPACE " "
              LITERAL
                STRING "', Excluded'"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "a"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "upsert_test"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "i"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "i"
            DOT "."
            NAME_REF
              IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "excluded"
            DOT "."
            NAME_REF
              IDENT "a"
    R_PAREN ")"
    WHITESPACE "\n  "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ON CONFLICT using system attributes in RETURNING, testing both the"
  WHITESPACE "\n"
  COMMENT "-- inserting and updating paths. See bug report at:"
  WHITESPACE "\n"
  COMMENT "-- https://www.postgresql.org/message-id/73436355-6432-49B1-92ED-1FE4F7E7E100%40finefun.com.au"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "upsert_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Beeble'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    CONFLICT_KW "CONFLICT"
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE "\n  "
    DO_KW "DO"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "b"
              WHITESPACE " "
              CUSTOM_OP
                PIPE "|"
                PIPE "|"
              WHITESPACE " "
              LITERAL
                STRING "', Excluded'"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "a"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "upsert_test"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "i"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "i"
            DOT "."
            NAME_REF
              IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "excluded"
            DOT "."
            NAME_REF
              IDENT "a"
    R_PAREN ")"
    WHITESPACE "\n  "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    CAST_EXPR
      NAME_REF
        IDENT "tableoid"
      COLON2 "::"
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "regclass"
    COMMA ","
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "xmin"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      CAST_EXPR
        CALL_EXPR
          NAME_REF
            IDENT "pg_current_xact_id"
          ARG_LIST
            L_PAREN "("
            R_PAREN ")"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "xid"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    IDENT "xmin_correct"
    COMMA ","
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "xmax"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    IDENT "xmax_correct"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- currently xmax is set after a conflict - that's probably not good,"
  WHITESPACE "\n"
  COMMENT "-- but it seems worthwhile to have to be explicit if that changes."
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "upsert_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Brox'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    CONFLICT_KW "CONFLICT"
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE "\n  "
    DO_KW "DO"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "b"
              WHITESPACE " "
              CUSTOM_OP
                PIPE "|"
                PIPE "|"
              WHITESPACE " "
              LITERAL
                STRING "', Excluded'"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "a"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "upsert_test"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "i"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "i"
            DOT "."
            NAME_REF
              IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "excluded"
            DOT "."
            NAME_REF
              IDENT "a"
    R_PAREN ")"
    WHITESPACE "\n  "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    CAST_EXPR
      NAME_REF
        IDENT "tableoid"
      COLON2 "::"
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "regclass"
    COMMA ","
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "xmin"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      CAST_EXPR
        CALL_EXPR
          NAME_REF
            IDENT "pg_current_xact_id"
          ARG_LIST
            L_PAREN "("
            R_PAREN ")"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "xid"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    IDENT "xmin_correct"
    COMMA ","
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "xmax"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      CAST_EXPR
        CALL_EXPR
          NAME_REF
            IDENT "pg_current_xact_id"
          ARG_LIST
            L_PAREN "("
            R_PAREN ")"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "xid"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    IDENT "xmax_correct"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "update_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "upsert_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test ON CONFLICT DO UPDATE with partitioned table and non-identical children"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "upsert_test"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE "   "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "INT"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      COMMA ","
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE "   "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "LIST"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "upsert_test_1"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "upsert_test"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    IN_KW "IN"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "upsert_test_2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "INT"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "upsert_test"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "upsert_test_2"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "upsert_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Boo'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Zoo'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- uncorrelated sub-select:"
  WHITESPACE "\n"
  INSERT_STMT
    WITH_CLAUSE
      WITH_KW "WITH"
      WHITESPACE " "
      WITH_TABLE
        NAME
          IDENT "aaa"
        WHITESPACE " "
        AS_KW "AS"
        WHITESPACE " "
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  INT_NUMBER "1"
                WHITESPACE " "
                AS_KW "AS"
                WHITESPACE " "
                NAME
                  IDENT "a"
              COMMA ","
              WHITESPACE " "
              TARGET
                LITERAL
                  STRING "'Foo'"
                WHITESPACE " "
                AS_KW "AS"
                WHITESPACE " "
                NAME
                  IDENT "b"
        R_PAREN ")"
    WHITESPACE " "
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "upsert_test"
    WHITESPACE "\n  "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Bar'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    CONFLICT_KW "CONFLICT"
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE "\n  "
    DO_KW "DO"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "b"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "a"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "aaa"
    R_PAREN ")"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- correlated sub-select:"
  WHITESPACE "\n"
  INSERT_STMT
    WITH_CLAUSE
      WITH_KW "WITH"
      WHITESPACE " "
      WITH_TABLE
        NAME
          IDENT "aaa"
        WHITESPACE " "
        AS_KW "AS"
        WHITESPACE " "
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  INT_NUMBER "1"
                WHITESPACE " "
                AS_KW "AS"
                WHITESPACE " "
                NAME
                  IDENT "ctea"
              COMMA ","
              WHITESPACE " "
              TARGET
                LITERAL
                  STRING "' Foo'"
                WHITESPACE " "
                AS_KW "AS"
                WHITESPACE " "
                NAME
                  IDENT "cteb"
        R_PAREN ")"
    WHITESPACE " "
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "upsert_test"
    WHITESPACE "\n  "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Bar'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Baz'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    CONFLICT_KW "CONFLICT"
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE "\n  "
    DO_KW "DO"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "upsert_test"
                DOT "."
                NAME_REF
                  IDENT "b"
              CUSTOM_OP
                PIPE "|"
                PIPE "|"
              NAME_REF
                IDENT "cteb"
          COMMA ","
          WHITESPACE " "
          TARGET
            FIELD_EXPR
              NAME_REF
                IDENT "upsert_test"
              DOT "."
              NAME_REF
                IDENT "a"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "aaa"
    R_PAREN ")"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "upsert_test"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "---------------------------"
  WHITESPACE "\n"
  COMMENT "-- UPDATE with row movement"
  WHITESPACE "\n"
  COMMENT "---------------------------"
  WHITESPACE "\n\n"
  COMMENT "-- When a partitioned table receives an UPDATE to the partitioned key and the"
  WHITESPACE "\n"
  COMMENT "-- new values no longer meet the partition's bound, the row must be moved to"
  WHITESPACE "\n"
  COMMENT "-- the correct partition for the new partition key (if one exists). We must"
  WHITESPACE "\n"
  COMMENT "-- also ensure that updatable views on partitioned tables properly enforce any"
  WHITESPACE "\n"
  COMMENT "-- WITH CHECK OPTION that is defined. The situation with triggers in this case"
  WHITESPACE "\n"
  COMMENT "-- also requires thorough testing as partition key updates causing row"
  WHITESPACE "\n"
  COMMENT "-- movement convert UPDATEs into DELETE+INSERT."
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "range_parted"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "d"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "e"
        WHITESPACE " "
        CHAR_TYPE
          VARCHAR_KW "varchar"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    RANGE_KW "RANGE"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Create partitions intentionally in descending bound order, so as to test"
    WHITESPACE "\n"
    COMMENT "-- that update-row-movement works with the leaf partitions not in bound order."
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_b_20_b_30"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "e"
        WHITESPACE " "
        CHAR_TYPE
          VARCHAR_KW "varchar"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "d"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_b_20_b_30"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      FROM_KW "FROM"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'b'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "20"
      R_PAREN ")"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'b'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "30"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_b_10_b_20"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "e"
        WHITESPACE " "
        CHAR_TYPE
          VARCHAR_KW "varchar"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "d"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    RANGE_KW "RANGE"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "c"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_b_1_b_10"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'b'"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'b'"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "10"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_b_10_b_20"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      FROM_KW "FROM"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'b'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'b'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "20"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_a_10_a_20"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'a'"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "10"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'a'"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "20"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_a_1_a_10"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'a'"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'a'"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "10"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that partition-key UPDATE works sanely on a partitioned table that"
  WHITESPACE "\n"
  COMMENT "-- does not have any child partitions."
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_b_10_b_20"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      MINUS "-"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "6"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Create some more partitions following the above pattern of descending bound"
    WHITESPACE "\n"
    COMMENT "-- order, but let's make the situation a bit more complex by having the"
    WHITESPACE "\n"
    COMMENT "-- attribute numbers of the columns vary from their parent partition."
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_c_100_200"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "e"
        WHITESPACE " "
        CHAR_TYPE
          VARCHAR_KW "varchar"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "d"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    RANGE_KW "range"
    WHITESPACE " "
    L_PAREN "("
    CALL_EXPR
      NAME_REF
        IDENT "abs"
      ARG_LIST
        L_PAREN "("
        NAME_REF
          IDENT "d"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_c_100_200"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "DROP"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "e"
    COMMA ","
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "DROP"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
    COMMA ","
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "DROP"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_c_100_200"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              NUMERIC_KW "numeric"
    COMMA ","
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "e"
      WHITESPACE " "
      CHAR_TYPE
        VARCHAR_KW "varchar"
    COMMA ","
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_c_100_200"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "DROP"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_c_100_200"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              BIGINT_KW "bigint"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_d_1_15"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_c_100_200"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "15"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_d_15_20"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_c_100_200"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "15"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "20"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_b_10_b_20"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_c_100_200"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      FROM_KW "FROM"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "100"
      R_PAREN ")"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "200"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_c_1_100"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "e"
        WHITESPACE " "
        CHAR_TYPE
          VARCHAR_KW "varchar"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "d"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_b_10_b_20"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_c_1_100"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      FROM_KW "FROM"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "100"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "init_range_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "show_data"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- The order of subplans should be in bound order"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      MINUS "-"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "50"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "97"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail, row movement happens only within the partition subtree."
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_c_100_200"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      MINUS "-"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "20"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "d"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "105"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- fail, no partition key update, so no attempt to move tuple,"
  WHITESPACE "\n"
  COMMENT "-- but \"a = 'a'\" violates partition constraint enforced by root partition)"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_b_10_b_20"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'a'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ok, partition key update, no constraint violation"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "d"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "d"
      WHITESPACE " "
      MINUS "-"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "d"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ok, no partition key update, no constraint violation"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "e"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NAME_REF
      IDENT "d"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- No row found"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_c_1_100"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "20"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "98"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ok, row movement"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_b_10_b_20"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "20"
    WHITESPACE " "
    RETURNING_KW "returning"
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "show_data"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail, row movement happens only within the partition subtree."
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_b_10_b_20"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      MINUS "-"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "6"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "116"
    WHITESPACE " "
    RETURNING_KW "returning"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ok, row movement, with subset of rows moved into different partition."
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      MINUS "-"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "6"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "116"
    WHITESPACE " "
    RETURNING_KW "returning"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    COMMA ","
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "show_data"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Common table needed for multiple test scenarios."
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mintab"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mintab"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "120"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- update partition key using updatable view."
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "upview"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "range_parted"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  BIN_EXPR
                    NAME_REF
                      IDENT "c"
                    WHITESPACE " "
                    R_ANGLE ">"
                    WHITESPACE " "
                    NAME_REF
                      IDENT "c1"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "mintab"
          R_PAREN ")"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    CHECK_KW "CHECK"
    WHITESPACE " "
    OPTION_KW "OPTION"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ok"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "upview"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "199"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "4"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- fail, check option violation"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "upview"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "120"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "4"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- fail, row movement with check option violation"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "upview"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'b'"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "15"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "120"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "4"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ok, row movement, check option passes"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "upview"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'b'"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "15"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "4"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "show_data"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- cleanup"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "upview"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- RETURNING having whole-row vars."
  WHITESPACE "\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "init_range_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "95"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'b'"
          WHITESPACE " "
          AND_KW "and"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "b"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "10"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "100"
    WHITESPACE " "
    RETURNING_KW "returning"
    WHITESPACE " "
    PAREN_EXPR
      L_PAREN "("
      NAME_REF
        IDENT "range_parted"
      R_PAREN ")"
    COMMA ","
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "show_data"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- Transition tables with update row movement"
  WHITESPACE "\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "init_range_parted"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "trans_updatetrigfunc"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TRIGGER_KW "trigger"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$\n  begin\n    raise notice 'trigger = %, old table = %, new table = %',\n                 TG_NAME,\n                 (select string_agg(old_table::text, ', ' ORDER BY a) FROM old_table),\n                 (select string_agg(new_table::text, ', ' ORDER BY a) FROM new_table);\n    return null;\n  end;\n$$"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    NAME
      IDENT "trans_updatetrig"
    WHITESPACE "\n  "
    AFTER_KW "AFTER"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    REFERENCING_KW "REFERENCING"
    WHITESPACE " "
    OLD_KW "OLD"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    NAME_REF
      IDENT "old_table"
    WHITESPACE " "
    NEW_KW "NEW"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    NAME_REF
      IDENT "new_table"
    WHITESPACE "\n  "
    FOR_KW "FOR"
    WHITESPACE " "
    EACH_KW "EACH"
    WHITESPACE " "
    STATEMENT_KW "STATEMENT"
    WHITESPACE " "
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    PROCEDURE_KW "PROCEDURE"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "trans_updatetrigfunc"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PAREN_EXPR
      L_PAREN "("
      CASE_EXPR
        CASE_KW "case"
        WHITESPACE " "
        WHEN_CLAUSE
          WHEN_KW "when"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "c"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "96"
          WHITESPACE " "
          THEN_KW "then"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "110"
        WHITESPACE " "
        ELSE_KW "else"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          PLUS "+"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1"
        WHITESPACE " "
        END_KW "end"
      WHITESPACE " "
      R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'b'"
          WHITESPACE " "
          AND_KW "and"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "b"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "10"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          GTEQ ">="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "96"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "show_data"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "init_range_parted"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Enabling OLD TABLE capture for both DELETE as well as UPDATE stmt triggers"
  WHITESPACE "\n"
  COMMENT "-- should not cause DELETEd rows to be captured twice. Similar thing for"
  WHITESPACE "\n"
  COMMENT "-- INSERT triggers and inserted rows."
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    NAME
      IDENT "trans_deletetrig"
    WHITESPACE "\n  "
    AFTER_KW "AFTER"
    WHITESPACE " "
    DELETE_KW "DELETE"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    REFERENCING_KW "REFERENCING"
    WHITESPACE " "
    OLD_KW "OLD"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    NAME_REF
      IDENT "old_table"
    WHITESPACE "\n  "
    FOR_KW "FOR"
    WHITESPACE " "
    EACH_KW "EACH"
    WHITESPACE " "
    STATEMENT_KW "STATEMENT"
    WHITESPACE " "
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    PROCEDURE_KW "PROCEDURE"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "trans_updatetrigfunc"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    NAME
      IDENT "trans_inserttrig"
    WHITESPACE "\n  "
    AFTER_KW "AFTER"
    WHITESPACE " "
    INSERT_KW "INSERT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    REFERENCING_KW "REFERENCING"
    WHITESPACE " "
    NEW_KW "NEW"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    NAME_REF
      IDENT "new_table"
    WHITESPACE "\n  "
    FOR_KW "FOR"
    WHITESPACE " "
    EACH_KW "EACH"
    WHITESPACE " "
    STATEMENT_KW "STATEMENT"
    WHITESPACE " "
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    PROCEDURE_KW "PROCEDURE"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "trans_updatetrigfunc"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "50"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'b'"
          WHITESPACE " "
          AND_KW "and"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "b"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "10"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          GTEQ ">="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "96"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "show_data"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TRIGGER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trans_deletetrig"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TRIGGER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trans_inserttrig"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Don't drop trans_updatetrig yet. It is required below."
  WHITESPACE "\n\n"
  COMMENT "-- Test with transition tuple conversion happening for rows moved into the"
  WHITESPACE "\n"
  COMMENT "-- new partition. This requires a trigger that references transition table"
  WHITESPACE "\n"
  COMMENT "-- (we already have trans_updatetrig). For inserted rows, the conversion"
  WHITESPACE "\n"
  COMMENT "-- is not usually needed, because the original tuple is already compatible with"
  WHITESPACE "\n"
  COMMENT "-- the desired transition tuple format. But conversion happens when there is a"
  WHITESPACE "\n"
  COMMENT "-- BR trigger because the trigger can change the inserted row. So install a"
  WHITESPACE "\n"
  COMMENT "-- BR triggers on those child partitions where the rows will be moved."
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "func_parted_mod_b"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TRIGGER_KW "trigger"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nBEGIN\n   NEW.b = NEW.b + 1;\n   return NEW;\nEND $$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    NAME
      IDENT "trig_c1_100"
    WHITESPACE " "
    BEFORE_KW "BEFORE"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    OR_KW "OR"
    WHITESPACE " "
    INSERT_KW "INSERT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_c_1_100"
    WHITESPACE "\n   "
    FOR_KW "FOR"
    WHITESPACE " "
    EACH_KW "EACH"
    WHITESPACE " "
    ROW_KW "ROW"
    WHITESPACE " "
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    PROCEDURE_KW "PROCEDURE"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "func_parted_mod_b"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    NAME
      IDENT "trig_d1_15"
    WHITESPACE " "
    BEFORE_KW "BEFORE"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    OR_KW "OR"
    WHITESPACE " "
    INSERT_KW "INSERT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_d_1_15"
    WHITESPACE "\n   "
    FOR_KW "FOR"
    WHITESPACE " "
    EACH_KW "EACH"
    WHITESPACE " "
    ROW_KW "ROW"
    WHITESPACE " "
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    PROCEDURE_KW "PROCEDURE"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "func_parted_mod_b"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    NAME
      IDENT "trig_d15_20"
    WHITESPACE " "
    BEFORE_KW "BEFORE"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    OR_KW "OR"
    WHITESPACE " "
    INSERT_KW "INSERT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_d_15_20"
    WHITESPACE "\n   "
    FOR_KW "FOR"
    WHITESPACE " "
    EACH_KW "EACH"
    WHITESPACE " "
    ROW_KW "ROW"
    WHITESPACE " "
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    PROCEDURE_KW "PROCEDURE"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "func_parted_mod_b"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "init_range_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PAREN_EXPR
      L_PAREN "("
      CASE_EXPR
        CASE_KW "case"
        WHITESPACE " "
        WHEN_CLAUSE
          WHEN_KW "when"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "c"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "96"
          WHITESPACE " "
          THEN_KW "then"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "110"
        WHITESPACE " "
        ELSE_KW "else"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          PLUS "+"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1"
        WHITESPACE " "
        END_KW "end"
      R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'b'"
          WHITESPACE " "
          AND_KW "and"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "b"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "10"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          GTEQ ">="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "96"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "show_data"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "init_range_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "50"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'b'"
          WHITESPACE " "
          AND_KW "and"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "b"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "10"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          GTEQ ">="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "96"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "show_data"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Case where per-partition tuple conversion map array is allocated, but the"
  WHITESPACE "\n"
  COMMENT "-- map is not required for the particular tuple that is routed, thanks to"
  WHITESPACE "\n"
  COMMENT "-- matching table attributes of the partition and the target table."
  WHITESPACE "\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "init_range_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "15"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "show_data"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TRIGGER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trans_updatetrig"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TRIGGER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trig_c1_100"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_c_1_100"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TRIGGER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trig_d1_15"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_d_1_15"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TRIGGER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trig_d15_20"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_d_15_20"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "func_parted_mod_b"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- RLS policies with update-row-movement"
  WHITESPACE "\n"
  COMMENT "-----------------------------------------"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_USER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    NAME
      IDENT "regress_range_parted_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mintab"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_range_parted_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "seeall"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    IDENT "PERMISSIVE"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "policy_range_parted"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    CHECK_KW "CHECK"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      BIN_EXPR
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PERCENT "%"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "init_range_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_range_parted_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- This should fail with RLS violation error while moving row from"
  WHITESPACE "\n"
  COMMENT "-- part_a_10_a_20 to part_d_1_15, because we are setting 'c' to an odd number."
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'b'"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "151"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'a'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "200"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Create a trigger on part_d_1_15"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "func_d_1_15"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TRIGGER_KW "trigger"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nBEGIN\n   NEW.c = NEW.c + 1; -- Make even numbers odd, or vice versa\n   return NEW;\nEND $$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    NAME
      IDENT "trig_d_1_15"
    WHITESPACE " "
    BEFORE_KW "BEFORE"
    WHITESPACE " "
    INSERT_KW "INSERT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_d_1_15"
    WHITESPACE "\n   "
    FOR_KW "FOR"
    WHITESPACE " "
    EACH_KW "EACH"
    WHITESPACE " "
    ROW_KW "ROW"
    WHITESPACE " "
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    PROCEDURE_KW "PROCEDURE"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "func_d_1_15"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "init_range_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_range_parted_user"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Here, RLS checks should succeed while moving row from part_a_10_a_20 to"
  WHITESPACE "\n"
  COMMENT "-- part_d_1_15. Even though the UPDATE is setting 'c' to an odd number, the"
  WHITESPACE "\n"
  COMMENT "-- trigger at the destination partition again makes it an even number."
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'b'"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "151"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'a'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "200"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "init_range_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_range_parted_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- This should fail with RLS violation error. Even though the UPDATE is setting"
  WHITESPACE "\n"
  COMMENT "-- 'c' to an even number, the trigger at the destination partition again makes"
  WHITESPACE "\n"
  COMMENT "-- it an odd number."
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'b'"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "150"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'a'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "200"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Cleanup"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TRIGGER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trig_d_1_15"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_d_1_15"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "func_d_1_15"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Policy expression contains SubPlan"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "init_range_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "policy_range_parted_subplan"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE "\n    "
    AS_KW "AS"
    WHITESPACE " "
    IDENT "RESTRICTIVE"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
    WHITESPACE "\n    "
    WITH_KW "WITH"
    WHITESPACE " "
    CHECK_KW "CHECK"
    WHITESPACE " "
    L_PAREN "("
    PAREN_EXPR
      L_PAREN "("
      SELECT
        SELECT_CLAUSE
          SELECT_KW "SELECT"
          WHITESPACE " "
          TARGET_LIST
            TARGET
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "range_parted"
                  DOT "."
                  NAME_REF
                    IDENT "c"
                WHITESPACE " "
                LTEQ "<="
                WHITESPACE " "
                NAME_REF
                  IDENT "c1"
        WHITESPACE " "
        FROM_CLAUSE
          FROM_KW "FROM"
          WHITESPACE " "
          NAME_REF
            IDENT "mintab"
      R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_range_parted_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- fail, mintab has row with c1 = 120"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'b'"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "122"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'a'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "200"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ok"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'b'"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "120"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'a'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "200"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- RLS policy expression contains whole row."
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "init_range_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "policy_range_parted_wholerow"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    IDENT "RESTRICTIVE"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
    WHITESPACE "\n   "
    WITH_KW "WITH"
    WHITESPACE " "
    CHECK_KW "CHECK"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "range_parted"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      CAST_EXPR
        CALL_EXPR
          NAME_REF
            ROW_KW "row"
          ARG_LIST
            L_PAREN "("
            LITERAL
              STRING "'b'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "10"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "112"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
            R_PAREN ")"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "range_parted"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_range_parted_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ok, should pass the RLS check"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'b'"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "112"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'a'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "200"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "init_range_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_range_parted_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- fail, the whole row RLS check should fail"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'b'"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "116"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'a'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "200"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Cleanup"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_POLICY_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "policy_range_parted"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_POLICY_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "policy_range_parted_subplan"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_POLICY_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "policy_range_parted_wholerow"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  REVOKE_STMT
    REVOKE_KW "REVOKE"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mintab"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    IDENT "regress_range_parted_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_USER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_range_parted_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mintab"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- statement triggers with update row movement"
  WHITESPACE "\n"
  COMMENT "---------------------------------------------------"
  WHITESPACE "\n\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "init_range_parted"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "trigfunc"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TRIGGER_KW "trigger"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$\n  begin\n    raise notice 'trigger = % fired on table % during %',\n                 TG_NAME, TG_TABLE_NAME, TG_OP;\n    return null;\n  end;\n$$"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Triggers on root partition"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    NAME
      IDENT "parent_delete_trig"
    WHITESPACE "\n  "
    AFTER_KW "AFTER"
    WHITESPACE " "
    DELETE_KW "DELETE"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    EACH_KW "each"
    WHITESPACE " "
    STATEMENT_KW "statement"
    WHITESPACE " "
    EXECUTE_KW "execute"
    WHITESPACE " "
    PROCEDURE_KW "procedure"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "trigfunc"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    NAME
      IDENT "parent_update_trig"
    WHITESPACE "\n  "
    AFTER_KW "AFTER"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    EACH_KW "each"
    WHITESPACE " "
    STATEMENT_KW "statement"
    WHITESPACE " "
    EXECUTE_KW "execute"
    WHITESPACE " "
    PROCEDURE_KW "procedure"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "trigfunc"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    NAME
      IDENT "parent_insert_trig"
    WHITESPACE "\n  "
    AFTER_KW "AFTER"
    WHITESPACE " "
    INSERT_KW "INSERT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    EACH_KW "each"
    WHITESPACE " "
    STATEMENT_KW "statement"
    WHITESPACE " "
    EXECUTE_KW "execute"
    WHITESPACE " "
    PROCEDURE_KW "procedure"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "trigfunc"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Triggers on leaf partition part_c_1_100"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    NAME
      IDENT "c1_delete_trig"
    WHITESPACE "\n  "
    AFTER_KW "AFTER"
    WHITESPACE " "
    DELETE_KW "DELETE"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_c_1_100"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    EACH_KW "each"
    WHITESPACE " "
    STATEMENT_KW "statement"
    WHITESPACE " "
    EXECUTE_KW "execute"
    WHITESPACE " "
    PROCEDURE_KW "procedure"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "trigfunc"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    NAME
      IDENT "c1_update_trig"
    WHITESPACE "\n  "
    AFTER_KW "AFTER"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_c_1_100"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    EACH_KW "each"
    WHITESPACE " "
    STATEMENT_KW "statement"
    WHITESPACE " "
    EXECUTE_KW "execute"
    WHITESPACE " "
    PROCEDURE_KW "procedure"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "trigfunc"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    NAME
      IDENT "c1_insert_trig"
    WHITESPACE "\n  "
    AFTER_KW "AFTER"
    WHITESPACE " "
    INSERT_KW "INSERT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_c_1_100"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    EACH_KW "each"
    WHITESPACE " "
    STATEMENT_KW "statement"
    WHITESPACE " "
    EXECUTE_KW "execute"
    WHITESPACE " "
    PROCEDURE_KW "procedure"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "trigfunc"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Triggers on leaf partition part_d_1_15"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    NAME
      IDENT "d1_delete_trig"
    WHITESPACE "\n  "
    AFTER_KW "AFTER"
    WHITESPACE " "
    DELETE_KW "DELETE"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_d_1_15"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    EACH_KW "each"
    WHITESPACE " "
    STATEMENT_KW "statement"
    WHITESPACE " "
    EXECUTE_KW "execute"
    WHITESPACE " "
    PROCEDURE_KW "procedure"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "trigfunc"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    NAME
      IDENT "d1_update_trig"
    WHITESPACE "\n  "
    AFTER_KW "AFTER"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_d_1_15"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    EACH_KW "each"
    WHITESPACE " "
    STATEMENT_KW "statement"
    WHITESPACE " "
    EXECUTE_KW "execute"
    WHITESPACE " "
    PROCEDURE_KW "procedure"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "trigfunc"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    NAME
      IDENT "d1_insert_trig"
    WHITESPACE "\n  "
    AFTER_KW "AFTER"
    WHITESPACE " "
    INSERT_KW "INSERT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_d_1_15"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    EACH_KW "each"
    WHITESPACE " "
    STATEMENT_KW "statement"
    WHITESPACE " "
    EXECUTE_KW "execute"
    WHITESPACE " "
    PROCEDURE_KW "procedure"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "trigfunc"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Triggers on leaf partition part_d_15_20"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    NAME
      IDENT "d15_delete_trig"
    WHITESPACE "\n  "
    AFTER_KW "AFTER"
    WHITESPACE " "
    DELETE_KW "DELETE"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_d_15_20"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    EACH_KW "each"
    WHITESPACE " "
    STATEMENT_KW "statement"
    WHITESPACE " "
    EXECUTE_KW "execute"
    WHITESPACE " "
    PROCEDURE_KW "procedure"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "trigfunc"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    NAME
      IDENT "d15_update_trig"
    WHITESPACE "\n  "
    AFTER_KW "AFTER"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_d_15_20"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    EACH_KW "each"
    WHITESPACE " "
    STATEMENT_KW "statement"
    WHITESPACE " "
    EXECUTE_KW "execute"
    WHITESPACE " "
    PROCEDURE_KW "procedure"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "trigfunc"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    NAME
      IDENT "d15_insert_trig"
    WHITESPACE "\n  "
    AFTER_KW "AFTER"
    WHITESPACE " "
    INSERT_KW "INSERT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_d_15_20"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    EACH_KW "each"
    WHITESPACE " "
    STATEMENT_KW "statement"
    WHITESPACE " "
    EXECUTE_KW "execute"
    WHITESPACE " "
    PROCEDURE_KW "procedure"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "trigfunc"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Move all rows from part_c_100_200 to part_c_1_100. None of the delete or"
  WHITESPACE "\n"
  COMMENT "-- insert statement triggers should be fired."
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      MINUS "-"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "50"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "97"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "show_data"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TRIGGER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent_delete_trig"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TRIGGER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent_update_trig"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TRIGGER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent_insert_trig"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TRIGGER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c1_delete_trig"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_c_1_100"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TRIGGER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c1_update_trig"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_c_1_100"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TRIGGER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c1_insert_trig"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_c_1_100"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TRIGGER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "d1_delete_trig"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_d_1_15"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TRIGGER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "d1_update_trig"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_d_1_15"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TRIGGER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "d1_insert_trig"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_d_1_15"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TRIGGER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "d15_delete_trig"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_d_15_20"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TRIGGER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "d15_update_trig"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_d_15_20"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TRIGGER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "d15_insert_trig"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_d_15_20"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- Creating default partition for range"
  WHITESPACE "\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "init_range_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_def"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'c'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "9"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ok"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_def"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'d'"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'c'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- fail"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_def"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'a'"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'d'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "show_data"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Update row movement from non-default to default partition."
  WHITESPACE "\n"
  COMMENT "-- fail, default partition is not under part_a_10_a_20;"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_a_10_a_20"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'ad'"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'a'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ok"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'ad'"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'a'"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'bd'"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'b'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "show_data"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Update row movement from default to non-default partitions."
  WHITESPACE "\n"
  COMMENT "-- ok"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'a'"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'ad'"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'b'"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'bd'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    COLON ":"
  ERROR
    IDENT "show_data"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Cleanup: range_parted no longer needed."
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "list_parted"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "list_part1"
    WHITESPACE "  "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'a'"
    COMMA ","
    WHITESPACE " "
    LITERAL
      STRING "'b'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "list_default"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_part1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'a'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_default"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'d'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_default"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'a'"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'d'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ok"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_default"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'x'"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'d'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test retrieval of system columns with non-consistent partition row types."
  WHITESPACE "\n"
  COMMENT "-- This is only partially supported, as seen in the results."
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "utrtest"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "utr1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CHECK_KW "check"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            IN_KW "in"
            WHITESPACE " "
            PAREN_EXPR
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "q"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "utr2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CHECK_KW "check"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            IN_KW "in"
            WHITESPACE " "
            PAREN_EXPR
              L_PAREN "("
              LITERAL
                INT_NUMBER "2"
              R_PAREN ")"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "utr1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "utrtest"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "attach"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "utr1"
      WHITESPACE " "
      FOR_KW "for"
      WHITESPACE " "
      VALUES_KW "values"
      WHITESPACE " "
      IN_KW "in"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "utrtest"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "attach"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "utr2"
      WHITESPACE " "
      FOR_KW "for"
      WHITESPACE " "
      VALUES_KW "values"
      WHITESPACE " "
      IN_KW "in"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "utrtest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'foo'"
      R_PAREN ")"
    WHITESPACE "\n  "
    RETURNING_KW "returning"
    WHITESPACE " "
    STAR "*"
    COMMA ","
    WHITESPACE " "
    CAST_EXPR
      NAME_REF
        IDENT "tableoid"
      COLON2 "::"
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "regclass"
    COMMA ","
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "xmin"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      CAST_EXPR
        CALL_EXPR
          NAME_REF
            IDENT "pg_current_xact_id"
          ARG_LIST
            L_PAREN "("
            R_PAREN ")"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "xid"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    IDENT "xmin_ok"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "utrtest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'bar'"
      R_PAREN ")"
    WHITESPACE "\n  "
    RETURNING_KW "returning"
    WHITESPACE " "
    STAR "*"
    COMMA ","
    WHITESPACE " "
    CAST_EXPR
      NAME_REF
        IDENT "tableoid"
      COLON2 "::"
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "regclass"
    COMMA ","
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "xmin"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      CAST_EXPR
        CALL_EXPR
          NAME_REF
            IDENT "pg_current_xact_id"
          ARG_LIST
            L_PAREN "("
            R_PAREN ")"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "xid"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    IDENT "xmin_ok"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fails"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "utrtest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'bar'"
      R_PAREN ")"
    WHITESPACE "\n  "
    RETURNING_KW "returning"
    WHITESPACE " "
    STAR "*"
    COMMA ","
    WHITESPACE " "
    CAST_EXPR
      NAME_REF
        IDENT "tableoid"
      COLON2 "::"
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "regclass"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "utrtest"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "s"
          DOT "."
          NAME_REF
            IDENT "x"
    WHITESPACE "\n  "
    RETURNING_KW "returning"
    WHITESPACE " "
    STAR "*"
    COMMA ","
    WHITESPACE " "
    CAST_EXPR
      NAME_REF
        IDENT "tableoid"
      COLON2 "::"
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "regclass"
    COMMA ","
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "xmin"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      CAST_EXPR
        CALL_EXPR
          NAME_REF
            IDENT "pg_current_xact_id"
          ARG_LIST
            L_PAREN "("
            R_PAREN ")"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "xid"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    IDENT "xmin_ok"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "utrtest"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      LITERAL
        INT_NUMBER "3"
      WHITESPACE " "
      MINUS "-"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "s"
          DOT "."
          NAME_REF
            IDENT "x"
    WHITESPACE "\n  "
    RETURNING_KW "returning"
    WHITESPACE " "
    STAR "*"
    COMMA ","
    WHITESPACE " "
    CAST_EXPR
      NAME_REF
        IDENT "tableoid"
      COLON2 "::"
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "regclass"
    COMMA ","
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "xmin"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      CAST_EXPR
        CALL_EXPR
          NAME_REF
            IDENT "pg_current_xact_id"
          ARG_LIST
            L_PAREN "("
            R_PAREN ")"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "xid"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    IDENT "xmin_ok"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fails"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "utrtest"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      LITERAL
        INT_NUMBER "3"
      WHITESPACE " "
      MINUS "-"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "s"
          DOT "."
          NAME_REF
            IDENT "x"
    WHITESPACE "\n  "
    RETURNING_KW "returning"
    WHITESPACE " "
    STAR "*"
    COMMA ","
    WHITESPACE " "
    CAST_EXPR
      NAME_REF
        IDENT "tableoid"
      COLON2 "::"
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "regclass"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DELETE_STMT
    DELETE_KW "delete"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "utrtest"
    WHITESPACE "\n  "
    RETURNING_KW "returning"
    WHITESPACE " "
    STAR "*"
    COMMA ","
    WHITESPACE " "
    CAST_EXPR
      NAME_REF
        IDENT "tableoid"
      COLON2 "::"
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "regclass"
    COMMA ","
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "xmax"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      CAST_EXPR
        CALL_EXPR
          NAME_REF
            IDENT "pg_current_xact_id"
          ARG_LIST
            L_PAREN "("
            R_PAREN ")"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "xid"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    IDENT "xmax_ok"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "utrtest"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "--------------"
  WHITESPACE "\n"
  COMMENT "-- Some more update-partition-key test scenarios below. This time use list"
  WHITESPACE "\n"
  COMMENT "-- partitions."
  WHITESPACE "\n"
  COMMENT "--------------"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Setup for list partitions"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "list_parted"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int8"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "sub_parted"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "sub_part1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int8"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "sub_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "sub_part1"
      WHITESPACE " "
      FOR_KW "for"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "in"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "sub_part2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int8"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "sub_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "sub_part2"
      WHITESPACE " "
      FOR_KW "for"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "in"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "list_part1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int8"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "list_part1"
      WHITESPACE " "
      FOR_KW "for"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "in"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      LITERAL
        INT_NUMBER "50"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      LITERAL
        INT_NUMBER "6"
      COMMA ","
      LITERAL
        INT_NUMBER "60"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "sub_parted"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "60"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "sub_parted"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test partition constraint violation when intermediate ancestor is used and"
  WHITESPACE "\n"
  COMMENT "-- constraint is inherited from upper root."
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "sub_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test update-partition-key, where the unpruned partitions do not have their"
  WHITESPACE "\n"
  COMMENT "-- partition keys updated."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "tableoid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
        COMMA ","
        WHITESPACE " "
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "list_parted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "tableoid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
        COMMA ","
        WHITESPACE " "
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "list_parted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- Test the case where BR UPDATE triggers change the partition key."
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "func_parted_mod_b"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TRIGGER_KW "trigger"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nBEGIN\n   NEW.b = 2; -- This is changing partition key column.\n   return NEW;\nEND $$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    NAME
      IDENT "parted_mod_b"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "sub_part1"
    WHITESPACE "\n   "
    FOR_KW "for"
    WHITESPACE " "
    EACH_KW "each"
    WHITESPACE " "
    ROW_KW "row"
    WHITESPACE " "
    EXECUTE_KW "execute"
    WHITESPACE " "
    PROCEDURE_KW "procedure"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "func_parted_mod_b"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "tableoid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
        COMMA ","
        WHITESPACE " "
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "list_parted"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "4"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- This should do the tuple routing even though there is no explicit"
  WHITESPACE "\n"
  COMMENT "-- partition-key update, because there is a trigger on sub_part1."
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "70"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "b"
        WHITESPACE "  "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "tableoid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
        COMMA ","
        WHITESPACE " "
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "list_parted"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "4"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TRIGGER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_mod_b"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "sub_part1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- If BR DELETE trigger prevented DELETE from happening, we should also skip"
  WHITESPACE "\n"
  COMMENT "-- the INSERT if that delete is part of UPDATE=>DELETE+INSERT."
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "OR"
      WHITESPACE " "
      REPLACE_KW "REPLACE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "func_parted_mod_b"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TRIGGER_KW "trigger"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nBEGIN\n   raise notice 'Trigger: Got OLD row %, but returning NULL', OLD;\n   return NULL;\nEND $$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    NAME
      IDENT "trig_skip_delete"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    DELETE_KW "delete"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "sub_part2"
    WHITESPACE "\n   "
    FOR_KW "for"
    WHITESPACE " "
    EACH_KW "each"
    WHITESPACE " "
    ROW_KW "row"
    WHITESPACE " "
    EXECUTE_KW "execute"
    WHITESPACE " "
    PROCEDURE_KW "procedure"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "func_parted_mod_b"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "70"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "tableoid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
        COMMA ","
        WHITESPACE " "
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "list_parted"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "4"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Drop the trigger. Now the row should be moved."
  WHITESPACE "\n"
  DROP_TRIGGER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trig_skip_delete"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "sub_part2"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "70"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "tableoid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
        COMMA ","
        WHITESPACE " "
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "list_parted"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "4"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "func_parted_mod_b"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- UPDATE partition-key with FROM clause. If join produces multiple output"
    WHITESPACE "\n"
    COMMENT "-- rows for the same row to be modified, we should tuple-route the row only"
    WHITESPACE "\n"
    COMMENT "-- once. There should not be any rows inserted."
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "non_parted"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "non_parted"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "t1"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "2"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "non_parted"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "id"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "tableoid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
        COMMA ","
        WHITESPACE " "
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "list_parted"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "4"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "non_parted"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Cleanup: list_parted no longer needed."
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- create custom operator class and hash function, for the same reason"
  WHITESPACE "\n"
  COMMENT "-- explained in alter_table.sql"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dummy_hashint4"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "seed"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int8"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "int8"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$ begin return (a + seed); end; $$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        LITERAL
          STRING "'plpgsql'"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "immutable"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_OPERATOR_CLASS_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OPERATOR_KW "operator"
    WHITESPACE " "
    CLASS_KW "class"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "custom_opclass"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    WHITESPACE " "
    USING_KW "using"
    WHITESPACE " "
    NAME_REF
      IDENT "hash"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n"
    OPERATOR_KW "operator"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    COMMA ","
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "2"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dummy_hashint4"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "int4"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          IDENT "int8"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "hash_parted"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "hash"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    IDENT "custom_opclass"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    IDENT "custom_opclass"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "hpart1"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hash_parted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    WITH_KW "with"
    WHITESPACE " "
    L_PAREN "("
    IDENT "modulus"
    WHITESPACE " "
    INT_NUMBER "2"
    COMMA ","
    WHITESPACE " "
    IDENT "remainder"
    WHITESPACE " "
    INT_NUMBER "1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "hpart2"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hash_parted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    WITH_KW "with"
    WHITESPACE " "
    L_PAREN "("
    IDENT "modulus"
    WHITESPACE " "
    INT_NUMBER "4"
    COMMA ","
    WHITESPACE " "
    IDENT "remainder"
    WHITESPACE " "
    INT_NUMBER "2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "hpart3"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hash_parted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    WITH_KW "with"
    WHITESPACE " "
    L_PAREN "("
    IDENT "modulus"
    WHITESPACE " "
    INT_NUMBER "8"
    COMMA ","
    WHITESPACE " "
    IDENT "remainder"
    WHITESPACE " "
    INT_NUMBER "0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "hpart4"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hash_parted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    WITH_KW "with"
    WHITESPACE " "
    L_PAREN "("
    IDENT "modulus"
    WHITESPACE " "
    INT_NUMBER "8"
    COMMA ","
    WHITESPACE " "
    IDENT "remainder"
    WHITESPACE " "
    INT_NUMBER "4"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hpart1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hpart2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "5"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hpart4"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hpart1"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    EQ "="
    LITERAL
      INT_NUMBER "4"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ok, row movement"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hash_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      MINUS "-"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ok"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hash_parted"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "8"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- cleanup"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hash_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_OPERATOR_CLASS_STMT
    DROP_KW "drop"
    WHITESPACE " "
    OPERATOR_KW "operator"
    WHITESPACE " "
    CLASS_KW "class"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "custom_opclass"
    WHITESPACE " "
    USING_KW "using"
    WHITESPACE " "
    NAME_REF
      IDENT "hash"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "drop"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dummy_hashint4"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "seed"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int8"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
---
ERROR@668: expected EQ
ERROR@668: expected an expression, found DOT
ERROR@669: expected expression
ERROR@669: expected SEMICOLON
ERROR@669: expected command, found IDENT
ERROR@671: expected command, found EQ
ERROR@673: expected command, found IDENT
ERROR@674: expected command, found DOT
ERROR@675: expected command, found IDENT
ERROR@677: expected command, found PLUS
ERROR@679: expected command, found INT_NUMBER
ERROR@682: expected command, found WHERE_KW
ERROR@688: expected command, found IDENT
ERROR@689: expected command, found DOT
ERROR@690: expected command, found IDENT
ERROR@692: expected command, found EQ
ERROR@694: expected command, found INT_NUMBER
ERROR@2782: expected R_PAREN
ERROR@2783: expected command, found OFF_KW
ERROR@2786: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@2786: expected SEMICOLON
ERROR@2786: expected command, found R_PAREN
ERROR@8287: expected command, found COLON
ERROR@8288: expected command, found IDENT
ERROR@8307: expected command, found COLON
ERROR@8308: expected command, found IDENT
ERROR@8384: expected R_PAREN
ERROR@8385: expected command, found OFF_KW
ERROR@8388: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@8388: expected SEMICOLON
ERROR@8388: expected command, found R_PAREN
ERROR@9067: expected command, found COLON
ERROR@9068: expected command, found IDENT
ERROR@9350: expected command, found COLON
ERROR@9351: expected command, found IDENT
ERROR@9937: expected command, found COLON
ERROR@9938: expected command, found IDENT
ERROR@10016: expected command, found COLON
ERROR@10017: expected command, found IDENT
ERROR@10133: expected command, found COLON
ERROR@10134: expected command, found IDENT
ERROR@10193: expected command, found COLON
ERROR@10194: expected command, found IDENT
ERROR@10886: expected command, found COLON
ERROR@10887: expected command, found IDENT
ERROR@10898: expected command, found COLON
ERROR@10899: expected command, found IDENT
ERROR@11503: expected command, found COLON
ERROR@11504: expected command, found IDENT
ERROR@12687: expected command, found COLON
ERROR@12688: expected command, found IDENT
ERROR@12816: expected command, found COLON
ERROR@12817: expected command, found IDENT
ERROR@12828: expected command, found COLON
ERROR@12829: expected command, found IDENT
ERROR@12921: expected command, found COLON
ERROR@12922: expected command, found IDENT
ERROR@13153: expected command, found COLON
ERROR@13154: expected command, found IDENT
ERROR@13217: expected command, found COLON
ERROR@13218: expected command, found IDENT
ERROR@13851: expected command, found COLON
ERROR@13852: expected command, found IDENT
ERROR@14469: expected command, found COLON
ERROR@14470: expected command, found IDENT
ERROR@14863: expected command, found COLON
ERROR@14864: expected command, found IDENT
ERROR@15363: expected command, found COLON
ERROR@15364: expected command, found IDENT
ERROR@15853: expected command, found COLON
ERROR@15854: expected command, found IDENT
ERROR@16227: expected command, found COLON
ERROR@16228: expected command, found IDENT
ERROR@16843: expected command, found COLON
ERROR@16844: expected command, found IDENT
ERROR@18736: expected command, found COLON
ERROR@18737: expected command, found IDENT
ERROR@19343: expected command, found COLON
ERROR@19344: expected command, found IDENT
ERROR@19563: expected command, found COLON
ERROR@19564: expected command, found IDENT
ERROR@19846: expected command, found COLON
ERROR@19847: expected command, found IDENT
ERROR@20023: expected command, found COLON
ERROR@20024: expected command, found IDENT

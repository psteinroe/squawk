---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/matview.sql
---
SOURCE_FILE
  CREATE_TABLE
    COMMENT "-- create a table to use as a basis for views and materialized views in various combinations"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_t"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "NOT"
          WHITESPACE " "
          NULL_KW "NULL"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "NOT"
          WHITESPACE " "
          NULL_KW "NULL"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "amt"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "NOT"
          WHITESPACE " "
          NULL_KW "NULL"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_t"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE "\n  "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'x'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n  "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'x'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n  "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'y'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "5"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n  "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'y'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "7"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n  "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'z'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "11"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- we want a view based on the table, too, since views present additional challenges"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_tv"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              TYPE_KW "type"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "sum"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "amt"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "totamt"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_t"
      WHITESPACE " "
      GROUP_BY_CLAUSE
        GROUP_KW "GROUP"
        WHITESPACE " "
        BY_KW "BY"
        WHITESPACE " "
        NAME_REF
          TYPE_KW "type"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_tv"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        TYPE_KW "type"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- create a materialized view with no data, and confirm correct behavior"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_tm"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              TYPE_KW "type"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "sum"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "amt"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "totamt"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_t"
      WHITESPACE " "
      GROUP_BY_CLAUSE
        GROUP_KW "GROUP"
        WHITESPACE " "
        BY_KW "BY"
        WHITESPACE " "
        NAME_REF
          TYPE_KW "type"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NO_KW "NO"
    WHITESPACE " "
    DATA_KW "DATA"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_tm"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              TYPE_KW "type"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "sum"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "amt"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "totamt"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_t"
      WHITESPACE " "
      GROUP_BY_CLAUSE
        GROUP_KW "GROUP"
        WHITESPACE " "
        BY_KW "BY"
        WHITESPACE " "
        NAME_REF
          TYPE_KW "type"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NO_KW "NO"
    WHITESPACE " "
    DATA_KW "DATA"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relispopulated"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "oid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'mvtest_tm'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_tm"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        TYPE_KW "type"
  SEMICOLON ";"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_tm"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relispopulated"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "oid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'mvtest_tm'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    UNIQUE_KW "UNIQUE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "mvtest_tm_type"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_tm"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        TYPE_KW "type"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_tm"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        TYPE_KW "type"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- create various views"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_tvm"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_tv"
      WHITESPACE " "
      ORDER_BY_CLAUSE
        ORDER_KW "ORDER"
        WHITESPACE " "
        BY_KW "BY"
        WHITESPACE " "
        NAME_REF
          TYPE_KW "type"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_tvm"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_tv"
      WHITESPACE " "
      ORDER_BY_CLAUSE
        ORDER_KW "ORDER"
        WHITESPACE " "
        BY_KW "BY"
        WHITESPACE " "
        NAME_REF
          TYPE_KW "type"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_tvm"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_tmm"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "sum"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "totamt"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "grandtot"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_tm"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_tvmm"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "sum"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "totamt"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "grandtot"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_tvm"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    UNIQUE_KW "UNIQUE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "mvtest_tvmm_expr"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_tvmm"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      PAREN_EXPR
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "grandtot"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    UNIQUE_KW "UNIQUE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "mvtest_tvmm_pred"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_tvmm"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "grandtot"
      R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "grandtot"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_tvv"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "sum"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "totamt"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "grandtot"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_tv"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_tvvm"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_tvv"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_tvvm"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_tvv"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_tvvmv"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_tvvm"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_bb"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_tvvmv"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "mvtest_aa"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_bb"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "grandtot"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check that plans seem reasonable"
  WHITESPACE "\n\n"
  COMMENT "-- test schema behavior"
  WHITESPACE "\n"
  CREATE_SCHEMA_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SCHEMA_KW "SCHEMA"
    WHITESPACE " "
    NAME
      IDENT "mvtest_mvschema"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_MATERIALIZED_VIEW_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_tvm"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    SCHEMA_KW "SCHEMA"
    WHITESPACE " "
    NAME_REF
      IDENT "mvtest_mvschema"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "search_path"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    IDENT "mvtest_mvschema"
    COMMA ","
    WHITESPACE " "
    IDENT "public"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- modify the underlying table data"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_t"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "6"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'z'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "13"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- confirm pre- and post-refresh contents of fairly simple materialized views"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_tm"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        TYPE_KW "type"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_tvm"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        TYPE_KW "type"
  SEMICOLON ";"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    CONCURRENTLY_KW "CONCURRENTLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_tm"
  SEMICOLON ";"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_tvm"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_tm"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        TYPE_KW "type"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_tvm"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        TYPE_KW "type"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "search_path"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- confirm pre- and post-refresh contents of nested materialized views"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_tmm"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_tvmm"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_tvvm"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_tmm"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_tvmm"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_tvvm"
  SEMICOLON ";"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_tmm"
  SEMICOLON ";"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    CONCURRENTLY_KW "CONCURRENTLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_tvmm"
  SEMICOLON ";"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_tvmm"
  SEMICOLON ";"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_tvvm"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_tmm"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_tvmm"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_tvvm"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_tmm"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_tvmm"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_tvvm"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test diemv when the mv does not exist"
  WHITESPACE "\n"
  DROP_MATERIALIZED_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "no_such_mv"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- make sure invalid combination of options is prohibited"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    CONCURRENTLY_KW "CONCURRENTLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_tvmm"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NO_KW "NO"
    WHITESPACE " "
    DATA_KW "DATA"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- no tuple locks on materialized views"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_tvvm"
    WHITESPACE " "
    LOCKING_CLAUSE
      FOR_KW "FOR"
      WHITESPACE " "
      SHARE_KW "SHARE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test join of mv and view"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            TYPE_KW "type"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "m"
            DOT "."
            NAME_REF
              IDENT "totamt"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "mtot"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "v"
            DOT "."
            NAME_REF
              IDENT "totamt"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "vtot"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_tm"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "m"
      WHITESPACE " "
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_tv"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "v"
        WHITESPACE " "
        USING_CLAUSE
          USING_KW "USING"
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            NAME_REF
              TYPE_KW "type"
            R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        TYPE_KW "type"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- make sure that dependencies are reported properly when they block the drop"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_t"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- make sure dependencies are dropped and reported"
  WHITESPACE "\n"
  COMMENT "-- and make sure that transactional behavior is correct on rollback"
  WHITESPACE "\n"
  COMMENT "-- incidentally leaving some interesting materialized views for pg_dump testing"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_t"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- some additional tests not using base tables"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_vt1"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              INT_NUMBER "1"
            WHITESPACE " "
            NAME
              IDENT "moo"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_vt2"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    COMPOUND_SELECT
      SELECT
        SELECT_CLAUSE
          SELECT_KW "SELECT"
          WHITESPACE " "
          TARGET_LIST
            TARGET
              NAME_REF
                IDENT "moo"
            COMMA ","
            WHITESPACE " "
            TARGET
              BIN_EXPR
                LITERAL
                  INT_NUMBER "2"
                STAR "*"
                NAME_REF
                  IDENT "moo"
        WHITESPACE " "
        FROM_CLAUSE
          FROM_KW "FROM"
          WHITESPACE " "
          NAME_REF
            IDENT "mvtest_vt1"
      WHITESPACE " "
      UNION_KW "UNION"
      WHITESPACE " "
      ALL_KW "ALL"
      WHITESPACE " "
      SELECT
        SELECT_CLAUSE
          SELECT_KW "SELECT"
          WHITESPACE " "
          TARGET_LIST
            TARGET
              NAME_REF
                IDENT "moo"
            COMMA ","
            WHITESPACE " "
            TARGET
              BIN_EXPR
                LITERAL
                  INT_NUMBER "3"
                STAR "*"
                NAME_REF
                  IDENT "moo"
        WHITESPACE " "
        FROM_CLAUSE
          FROM_KW "FROM"
          WHITESPACE " "
          NAME_REF
            IDENT "mvtest_vt1"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mv_test2"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    COMPOUND_SELECT
      SELECT
        SELECT_CLAUSE
          SELECT_KW "SELECT"
          WHITESPACE " "
          TARGET_LIST
            TARGET
              NAME_REF
                IDENT "moo"
            COMMA ","
            WHITESPACE " "
            TARGET
              BIN_EXPR
                LITERAL
                  INT_NUMBER "2"
                STAR "*"
                NAME_REF
                  IDENT "moo"
        WHITESPACE " "
        FROM_CLAUSE
          FROM_KW "FROM"
          WHITESPACE " "
          NAME_REF
            IDENT "mvtest_vt2"
      WHITESPACE " "
      UNION_KW "UNION"
      WHITESPACE " "
      ALL_KW "ALL"
      WHITESPACE " "
      SELECT
        SELECT_CLAUSE
          SELECT_KW "SELECT"
          WHITESPACE " "
          TARGET_LIST
            TARGET
              NAME_REF
                IDENT "moo"
            COMMA ","
            WHITESPACE " "
            TARGET
              BIN_EXPR
                LITERAL
                  INT_NUMBER "3"
                STAR "*"
                NAME_REF
                  IDENT "moo"
        WHITESPACE " "
        FROM_CLAUSE
          FROM_KW "FROM"
          WHITESPACE " "
          NAME_REF
            IDENT "mvtest_vt2"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mv_test3"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mv_test2"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "moo"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "12345"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relispopulated"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "oid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'mv_test3'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_vt1"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test that duplicate values on unique index prevent refresh"
  WHITESPACE "\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_foo"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_mv"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_foo"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    UNIQUE_KW "UNIQUE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_mv"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_foo"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_foo"
  SEMICOLON ";"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_mv"
  SEMICOLON ";"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    CONCURRENTLY_KW "CONCURRENTLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_mv"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_foo"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- make sure that all columns covered by unique indexes works"
  WHITESPACE "\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_foo"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_mv"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_foo"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    UNIQUE_KW "UNIQUE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_mv"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    UNIQUE_KW "UNIQUE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_mv"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "b"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    UNIQUE_KW "UNIQUE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_mv"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "c"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_foo"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_foo"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "5"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_mv"
  SEMICOLON ";"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    CONCURRENTLY_KW "CONCURRENTLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_mv"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_foo"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- allow subquery to reference unpopulated matview if WITH NO DATA is specified"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_mv1"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              INT_NUMBER "1"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "col1"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NO_KW "NO"
    WHITESPACE " "
    DATA_KW "DATA"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_mv2"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_mv1"
      WHITESPACE "\n  "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "col1"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    CALL_EXPR
                      NAME_REF
                        LEAST_KW "LEAST"
                      ARG_LIST
                        L_PAREN "("
                        NAME_REF
                          IDENT "col1"
                        R_PAREN ")"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                NAME_REF
                  IDENT "mvtest_mv1"
            R_PAREN ")"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NO_KW "NO"
    WHITESPACE " "
    DATA_KW "DATA"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_MATERIALIZED_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_mv1"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- make sure that types with unusual equality tests work"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_boxes"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "serial"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "box"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_boxes"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE "\n  "
      L_PAREN "("
      LITERAL
        STRING "'(32,32),(31,31)'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n  "
      L_PAREN "("
      LITERAL
        STRING "'(2.0000004,2.0000004),(1,1)'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n  "
      L_PAREN "("
      LITERAL
        STRING "'(1.9999996,1.9999996),(1,1)'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_boxmv"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_boxes"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    UNIQUE_KW "UNIQUE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "mvtest_boxmv_id"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_boxmv"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "id"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_boxes"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'(2,2),(1,1)'"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    CONCURRENTLY_KW "CONCURRENTLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_boxmv"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_boxmv"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "id"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_boxes"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- make sure that column names are handled correctly"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_v"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "i"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "j"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_mv_v"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME
          IDENT "ii"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME
          IDENT "jj"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME
          IDENT "kk"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "i"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "j"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_v"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- error"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_mv_v"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME
          IDENT "ii"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME
          IDENT "jj"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "i"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "j"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_v"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- ok"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_mv_v_2"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME
          IDENT "ii"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "i"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "j"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_v"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- ok"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_mv_v_3"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME
          IDENT "ii"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME
          IDENT "jj"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME
          IDENT "kk"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "i"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "j"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_v"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NO_KW "NO"
    WHITESPACE " "
    DATA_KW "DATA"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- error"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_mv_v_3"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME
          IDENT "ii"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME
          IDENT "jj"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "i"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "j"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_v"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NO_KW "NO"
    WHITESPACE " "
    DATA_KW "DATA"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- ok"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_mv_v_4"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME
          IDENT "ii"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "i"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "j"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_v"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NO_KW "NO"
    WHITESPACE " "
    DATA_KW "DATA"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- ok"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_v"
    WHITESPACE " "
    RENAME_COLUMN
      RENAME_KW "RENAME"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "i"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_v"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    UNIQUE_KW "UNIQUE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "mvtest_mv_v_ii"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_mv_v"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "ii"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_mv_v"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_v"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "j"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "3"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    CONCURRENTLY_KW "CONCURRENTLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_mv_v"
  SEMICOLON ";"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_mv_v_2"
  SEMICOLON ";"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_mv_v_3"
  SEMICOLON ";"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_mv_v_4"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_v"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_mv_v"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_mv_v_2"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_mv_v_3"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_mv_v_4"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_v"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that unknown literals are converted to \"text\" in CREATE MATVIEW,"
  WHITESPACE "\n"
  COMMENT "-- so that we don't end up with unknown-type columns."
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mv_unspecified_types"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              INT_NUMBER "42"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "i"
          COMMA ","
          WHITESPACE " "
          TARGET
            LITERAL
              FLOAT_NUMBER "42.5"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "num"
          COMMA ","
          WHITESPACE " "
          TARGET
            LITERAL
              STRING "'foo'"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "u"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'foo'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      UNKNOWN_KW "unknown"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "u2"
          COMMA ","
          WHITESPACE " "
          TARGET
            LITERAL
              NULL_KW "null"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "n"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mv_unspecified_types"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_MATERIALIZED_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mv_unspecified_types"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- make sure that create WITH NO DATA does not plan the query (bug #13907)"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    MATERIALIZED_KW "materialized"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_error"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              LITERAL
                INT_NUMBER "1"
              SLASH "/"
              LITERAL
                INT_NUMBER "0"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "x"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    MATERIALIZED_KW "materialized"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_error"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              LITERAL
                INT_NUMBER "1"
              SLASH "/"
              LITERAL
                INT_NUMBER "0"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "x"
    WHITESPACE " "
    WITH_KW "with"
    WHITESPACE " "
    NO_KW "no"
    WHITESPACE " "
    DATA_KW "data"
  SEMICOLON ";"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "refresh"
    WHITESPACE " "
    MATERIALIZED_KW "materialized"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_error"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail here"
  WHITESPACE "\n"
  DROP_MATERIALIZED_VIEW_STMT
    DROP_KW "drop"
    WHITESPACE " "
    MATERIALIZED_KW "materialized"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_error"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- make sure that matview rows can be referenced as source rows (bug #9398)"
  WHITESPACE "\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_v"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "generate_series"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                LITERAL
                  INT_NUMBER "10"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_mv_v"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "a"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_v"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          LTEQ "<="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "5"
  SEMICOLON ";"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_v"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          EXISTS_KW "EXISTS"
        WHITESPACE " "
        ARG_LIST
          L_PAREN "("
          WHITESPACE " "
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  STAR "*"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "mvtest_mv_v"
            WHITESPACE " "
            WHERE_CLAUSE
              WHERE_KW "WHERE"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "mvtest_mv_v"
                  DOT "."
                  NAME_REF
                    IDENT "a"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "mvtest_v"
                  DOT "."
                  NAME_REF
                    IDENT "a"
          WHITESPACE " "
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_v"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest_mv_v"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_v"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- make sure running as superuser works when MV owned by another role (bug #11208)"
  WHITESPACE "\n"
  CREATE_ROLE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME
      IDENT "regress_user_mvtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_ROLE_STMT
    SET_KW "SET"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    IDENT "regress_user_mvtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- this test case also checks for ambiguity in the queries issued by"
  WHITESPACE "\n"
  COMMENT "-- refresh_by_match_merge(), by choosing column names that intentionally"
  WHITESPACE "\n"
  COMMENT "-- duplicate all the aliases used in those queries"
  WHITESPACE "\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_foo_data"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "i"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "i"
              PLUS "+"
              LITERAL
                INT_NUMBER "1"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "tid"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "fipshash"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  CALL_EXPR
                    NAME_REF
                      IDENT "random"
                    ARG_LIST
                      L_PAREN "("
                      R_PAREN ")"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          TEXT_KW "text"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "mv"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "fipshash"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  CALL_EXPR
                    NAME_REF
                      IDENT "random"
                    ARG_LIST
                      L_PAREN "("
                      R_PAREN ")"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          TEXT_KW "text"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "newdata"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "fipshash"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  CALL_EXPR
                    NAME_REF
                      IDENT "random"
                    ARG_LIST
                      L_PAREN "("
                      R_PAREN ")"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          TEXT_KW "text"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "newdata2"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "fipshash"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  CALL_EXPR
                    NAME_REF
                      IDENT "random"
                    ARG_LIST
                      L_PAREN "("
                      R_PAREN ")"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          TEXT_KW "text"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "diff"
      WHITESPACE "\n  "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "10"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_mv_foo"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_foo_data"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_mv_foo"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_foo_data"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    IF_NOT_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      NOT_KW "NOT"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_mv_foo"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "mvtest_foo_data"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    UNIQUE_KW "UNIQUE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_mv_foo"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "i"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_ROLE_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    ROLE_KW "ROLE"
  SEMICOLON ";"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_mv_foo"
  SEMICOLON ";"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    CONCURRENTLY_KW "CONCURRENTLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mvtest_mv_foo"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_OWNED_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    OWNED_KW "OWNED"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "regress_user_mvtest"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_user_mvtest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Concurrent refresh requires a unique index on the materialized"
  WHITESPACE "\n"
  COMMENT "-- view. Test what happens if it's dropped during the refresh."
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "search_path"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    IDENT "mvtest_mvschema"
    COMMA ","
    WHITESPACE " "
    IDENT "public"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "OR"
      WHITESPACE " "
      REPLACE_KW "REPLACE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_drop_the_index"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE "\n  "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "bool"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nBEGIN\n  EXECUTE 'DROP INDEX IF EXISTS mvtest_mvschema.mvtest_drop_idx';\n  RETURN true;\nEND;\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "drop_idx_matview"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              INT_NUMBER "1"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "i"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "mvtest_drop_the_index"
          ARG_LIST
            L_PAREN "("
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    UNIQUE_KW "UNIQUE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "mvtest_drop_idx"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "drop_idx_matview"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "i"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    CONCURRENTLY_KW "CONCURRENTLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "drop_idx_matview"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_MATERIALIZED_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "drop_idx_matview"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- clean up"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "search_path"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- make sure that create WITH NO DATA works via SPI"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mvtest_func"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE "\n  "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "void"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nBEGIN\n  CREATE MATERIALIZED VIEW mvtest1 AS SELECT 1 AS x;\n  CREATE MATERIALIZED VIEW mvtest2 AS SELECT 1 AS x WITH NO DATA;\nEND;\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "mvtest_func"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "mvtest2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- INSERT privileges if relation owner is not allowed to insert."
  WHITESPACE "\n"
  CREATE_SCHEMA_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SCHEMA_KW "SCHEMA"
    WHITESPACE " "
    NAME
      IDENT "matview_schema"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_USER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    NAME
      IDENT "regress_matview_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DEFAULT_PRIVILEGES_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    PRIVILEGES_KW "PRIVILEGES"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    IDENT "regress_matview_user"
    WHITESPACE "\n  "
    REVOKE_KW "REVOKE"
    WHITESPACE " "
    INSERT_KW "INSERT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    TABLES_KW "TABLES"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    IDENT "regress_matview_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    SCHEMA_KW "SCHEMA"
    WHITESPACE " "
    NAME_REF
      IDENT "matview_schema"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "public"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_matview_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "matview_schema"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "mv_withdata1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME
          IDENT "a"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "generate_series"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "10"
                R_PAREN ")"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    DATA_KW "DATA"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    ANALYZE_KW "ANALYZE"
    COMMA ","
    WHITESPACE " "
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "SUMMARY"
  WHITESPACE " "
  ERROR
    OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "TIMING"
  WHITESPACE " "
  ERROR
    OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "BUFFERS"
  WHITESPACE " "
  ERROR
    OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "matview_schema"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "mv_withdata2"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME
          IDENT "a"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "generate_series"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "10"
                R_PAREN ")"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    DATA_KW "DATA"
  SEMICOLON ";"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "matview_schema"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "mv_withdata2"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "matview_schema"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "mv_nodata1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME
          IDENT "a"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "generate_series"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "10"
                R_PAREN ")"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NO_KW "NO"
    WHITESPACE " "
    DATA_KW "DATA"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    ANALYZE_KW "ANALYZE"
    COMMA ","
    WHITESPACE " "
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "SUMMARY"
  WHITESPACE " "
  ERROR
    OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "TIMING"
  WHITESPACE " "
  ERROR
    OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "BUFFERS"
  WHITESPACE " "
  ERROR
    OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "matview_schema"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "mv_nodata2"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME
          IDENT "a"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "generate_series"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "10"
                R_PAREN ")"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NO_KW "NO"
    WHITESPACE " "
    DATA_KW "DATA"
  SEMICOLON ";"
  WHITESPACE "\n"
  REFRESH_STMT
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "matview_schema"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "mv_nodata2"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_DEFAULT_PRIVILEGES_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    PRIVILEGES_KW "PRIVILEGES"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    IDENT "regress_matview_user"
    WHITESPACE "\n  "
    GRANT_KW "GRANT"
    WHITESPACE " "
    INSERT_KW "INSERT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    TABLES_KW "TABLES"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_matview_user"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_SCHEMA_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    SCHEMA_KW "SCHEMA"
    WHITESPACE " "
    NAME
      IDENT "matview_schema"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_USER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_matview_user"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- CREATE MATERIALIZED VIEW ... IF NOT EXISTS"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "matview_ine_tab"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "matview_ine_tab"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              LITERAL
                INT_NUMBER "1"
              WHITESPACE " "
              SLASH "/"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- error"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    IF_NOT_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      NOT_KW "NOT"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "matview_ine_tab"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              LITERAL
                INT_NUMBER "1"
              WHITESPACE " "
              SLASH "/"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- ok"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "matview_ine_tab"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              LITERAL
                INT_NUMBER "1"
              WHITESPACE " "
              SLASH "/"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NO_KW "NO"
    WHITESPACE " "
    DATA_KW "DATA"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- error"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    IF_NOT_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      NOT_KW "NOT"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "matview_ine_tab"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              LITERAL
                INT_NUMBER "1"
              WHITESPACE " "
              SLASH "/"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NO_KW "NO"
    WHITESPACE " "
    DATA_KW "DATA"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- ok"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    ANALYZE_KW "ANALYZE"
    COMMA ","
    WHITESPACE " "
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "SUMMARY"
  WHITESPACE " "
  ERROR
    OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "TIMING"
  WHITESPACE " "
  ERROR
    OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "BUFFERS"
  WHITESPACE " "
  ERROR
    OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "matview_ine_tab"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n    "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              LITERAL
                INT_NUMBER "1"
              WHITESPACE " "
              SLASH "/"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- error"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    ANALYZE_KW "ANALYZE"
    COMMA ","
    WHITESPACE " "
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "SUMMARY"
  WHITESPACE " "
  ERROR
    OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "TIMING"
  WHITESPACE " "
  ERROR
    OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "BUFFERS"
  WHITESPACE " "
  ERROR
    OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    IF_NOT_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      NOT_KW "NOT"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "matview_ine_tab"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n    "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              LITERAL
                INT_NUMBER "1"
              WHITESPACE " "
              SLASH "/"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- ok"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    ANALYZE_KW "ANALYZE"
    COMMA ","
    WHITESPACE " "
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "SUMMARY"
  WHITESPACE " "
  ERROR
    OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "TIMING"
  WHITESPACE " "
  ERROR
    OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "BUFFERS"
  WHITESPACE " "
  ERROR
    OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "matview_ine_tab"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n    "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              LITERAL
                INT_NUMBER "1"
              WHITESPACE " "
              SLASH "/"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NO_KW "NO"
    WHITESPACE " "
    DATA_KW "DATA"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- error"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    ANALYZE_KW "ANALYZE"
    COMMA ","
    WHITESPACE " "
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "SUMMARY"
  WHITESPACE " "
  ERROR
    OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "TIMING"
  WHITESPACE " "
  ERROR
    OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "BUFFERS"
  WHITESPACE " "
  ERROR
    OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    IF_NOT_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      NOT_KW "NOT"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "matview_ine_tab"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n    "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              LITERAL
                INT_NUMBER "1"
              WHITESPACE " "
              SLASH "/"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NO_KW "NO"
    WHITESPACE " "
    DATA_KW "DATA"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- ok"
  WHITESPACE "\n"
  DROP_MATERIALIZED_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "matview_ine_tab"
  SEMICOLON ";"
  WHITESPACE "\n"
---
ERROR@591: expected R_PAREN
ERROR@592: expected command, found OFF_KW
ERROR@595: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@595: expected SEMICOLON
ERROR@595: expected command, found R_PAREN
ERROR@1175: expected R_PAREN
ERROR@1176: expected command, found OFF_KW
ERROR@1179: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@1179: expected SEMICOLON
ERROR@1179: expected command, found R_PAREN
ERROR@1779: expected R_PAREN
ERROR@1780: expected command, found OFF_KW
ERROR@1783: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@1783: expected SEMICOLON
ERROR@1783: expected command, found R_PAREN
ERROR@2796: expected R_PAREN
ERROR@2797: expected command, found OFF_KW
ERROR@2800: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@2800: expected SEMICOLON
ERROR@2800: expected command, found R_PAREN
ERROR@2844: expected R_PAREN
ERROR@2845: expected command, found OFF_KW
ERROR@2848: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@2848: expected SEMICOLON
ERROR@2848: expected command, found R_PAREN
ERROR@2893: expected R_PAREN
ERROR@2894: expected command, found OFF_KW
ERROR@2897: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@2897: expected SEMICOLON
ERROR@2897: expected command, found R_PAREN
ERROR@3190: expected R_PAREN
ERROR@3191: expected command, found OFF_KW
ERROR@3194: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@3194: expected SEMICOLON
ERROR@3194: expected command, found R_PAREN
ERROR@3238: expected R_PAREN
ERROR@3239: expected command, found OFF_KW
ERROR@3242: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@3242: expected SEMICOLON
ERROR@3242: expected command, found R_PAREN
ERROR@3287: expected R_PAREN
ERROR@3288: expected command, found OFF_KW
ERROR@3291: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@3291: expected SEMICOLON
ERROR@3291: expected command, found R_PAREN
ERROR@4488: expected SELECT, TABLE, or VALUES statement, got COMPOUND_SELECT
ERROR@4758: expected type name
ERROR@4761: expected type name
ERROR@5137: expected type name
ERROR@5140: expected type name
ERROR@5143: expected type name
ERROR@11117: expected R_PAREN
ERROR@11118: expected command, found OFF_KW
ERROR@11121: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@11121: expected SEMICOLON
ERROR@11121: expected command, found COMMA
ERROR@11123: expected command, found IDENT
ERROR@11131: expected command, found OFF_KW
ERROR@11134: expected command, found COMMA
ERROR@11136: expected command, found IDENT
ERROR@11143: expected command, found OFF_KW
ERROR@11146: expected command, found COMMA
ERROR@11148: expected command, found IDENT
ERROR@11156: expected command, found OFF_KW
ERROR@11159: expected command, found R_PAREN
ERROR@11448: expected R_PAREN
ERROR@11449: expected command, found OFF_KW
ERROR@11452: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@11452: expected SEMICOLON
ERROR@11452: expected command, found COMMA
ERROR@11454: expected command, found IDENT
ERROR@11462: expected command, found OFF_KW
ERROR@11465: expected command, found COMMA
ERROR@11467: expected command, found IDENT
ERROR@11474: expected command, found OFF_KW
ERROR@11477: expected command, found COMMA
ERROR@11479: expected command, found IDENT
ERROR@11487: expected command, found OFF_KW
ERROR@11490: expected command, found R_PAREN
ERROR@12301: expected R_PAREN
ERROR@12302: expected command, found OFF_KW
ERROR@12305: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@12305: expected SEMICOLON
ERROR@12305: expected command, found COMMA
ERROR@12307: expected command, found IDENT
ERROR@12315: expected command, found OFF_KW
ERROR@12318: expected command, found COMMA
ERROR@12320: expected command, found IDENT
ERROR@12327: expected command, found OFF_KW
ERROR@12330: expected command, found COMMA
ERROR@12332: expected command, found IDENT
ERROR@12340: expected command, found OFF_KW
ERROR@12343: expected command, found R_PAREN
ERROR@12441: expected R_PAREN
ERROR@12442: expected command, found OFF_KW
ERROR@12445: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@12445: expected SEMICOLON
ERROR@12445: expected command, found COMMA
ERROR@12447: expected command, found IDENT
ERROR@12455: expected command, found OFF_KW
ERROR@12458: expected command, found COMMA
ERROR@12460: expected command, found IDENT
ERROR@12467: expected command, found OFF_KW
ERROR@12470: expected command, found COMMA
ERROR@12472: expected command, found IDENT
ERROR@12480: expected command, found OFF_KW
ERROR@12483: expected command, found R_PAREN
ERROR@12592: expected R_PAREN
ERROR@12593: expected command, found OFF_KW
ERROR@12596: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@12596: expected SEMICOLON
ERROR@12596: expected command, found COMMA
ERROR@12598: expected command, found IDENT
ERROR@12606: expected command, found OFF_KW
ERROR@12609: expected command, found COMMA
ERROR@12611: expected command, found IDENT
ERROR@12618: expected command, found OFF_KW
ERROR@12621: expected command, found COMMA
ERROR@12623: expected command, found IDENT
ERROR@12631: expected command, found OFF_KW
ERROR@12634: expected command, found R_PAREN
ERROR@12745: expected R_PAREN
ERROR@12746: expected command, found OFF_KW
ERROR@12749: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@12749: expected SEMICOLON
ERROR@12749: expected command, found COMMA
ERROR@12751: expected command, found IDENT
ERROR@12759: expected command, found OFF_KW
ERROR@12762: expected command, found COMMA
ERROR@12764: expected command, found IDENT
ERROR@12771: expected command, found OFF_KW
ERROR@12774: expected command, found COMMA
ERROR@12776: expected command, found IDENT
ERROR@12784: expected command, found OFF_KW
ERROR@12787: expected command, found R_PAREN

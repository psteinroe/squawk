---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/insert_conflict.sql
---
SOURCE_FILE
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- insert...on conflict do unique index inference"
    WHITESPACE "\n"
    COMMENT "--"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "insertconflicttest"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          KEY_KW "key"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "fruit"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- These things should work through a view, as well"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "insertconflictview"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "insertconflicttest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test unique index inference with operator class specifications and"
  WHITESPACE "\n"
  COMMENT "-- named collations"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "op_index_key"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "fruit"
      WHITESPACE " "
      IDENT "text_pattern_ops"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "collation_index_key"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "fruit"
        WHITESPACE " "
        COLLATE_KW "collate"
        WHITESPACE " "
        NAME_REF
          IDENT "\"C\""
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "both_index_key"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "fruit"
        WHITESPACE " "
        COLLATE_KW "collate"
        WHITESPACE " "
        NAME_REF
          IDENT "\"C\""
      WHITESPACE " "
      IDENT "text_pattern_ops"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "both_index_expr_key"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      BIN_EXPR
        CALL_EXPR
          NAME_REF
            IDENT "lower"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "fruit"
            R_PAREN ")"
        WHITESPACE " "
        COLLATE_KW "collate"
        WHITESPACE " "
        NAME_REF
          IDENT "\"C\""
      WHITESPACE " "
      IDENT "text_pattern_ops"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fails"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Crowberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Crowberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "fruit"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- succeeds"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Crowberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Crowberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "fruit"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      KEY_KW "key"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Crowberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "lower"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "fruit"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    KEY_KW "key"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "lower"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "fruit"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    KEY_KW "key"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  DO_STMT
    DO_KW "do"
  WHITESPACE " "
  ERROR
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflictview"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Crowberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "lower"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "fruit"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    KEY_KW "key"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "lower"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "fruit"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    KEY_KW "key"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  DO_STMT
    DO_KW "do"
  WHITESPACE " "
  ERROR
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Crowberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          EXISTS_KW "exists"
        WHITESPACE " "
        ARG_LIST
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  LITERAL
                    INT_NUMBER "1"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "insertconflicttest"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "ii"
            WHITESPACE " "
            WHERE_CLAUSE
              WHERE_KW "where"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "ii"
                  DOT "."
                  NAME_REF
                    KEY_KW "key"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "excluded"
                  DOT "."
                  NAME_REF
                    KEY_KW "key"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Neither collation nor operator class specifications are required --"
  WHITESPACE "\n"
  COMMENT "-- supplying them merely *limits* matches to indexes with matching opclasses"
  WHITESPACE "\n"
  COMMENT "-- used for relevant indexes"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Crowberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    IDENT "text_pattern_ops"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Okay, arbitrates using both index where text_pattern_ops opclass does and"
  WHITESPACE "\n"
  COMMENT "-- does not appear."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Crowberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    COLLATE
      COLLATE_KW "collate"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "\"C\""
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Okay, but only accepts the single index where both opclass and collation are"
  WHITESPACE "\n"
  COMMENT "-- specified"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Crowberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    COLLATE
      COLLATE_KW "collate"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "\"C\""
    WHITESPACE " "
    IDENT "text_pattern_ops"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Okay, but only accepts the single index where both opclass and collation are"
  WHITESPACE "\n"
  COMMENT "-- specified (plus expression variant)"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Crowberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "lower"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "fruit"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    COLLATE_KW "collate"
  WHITESPACE " "
  ERROR
    IDENT "\"C\""
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    KEY_KW "key"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    KEY_KW "key"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  DO_STMT
    DO_KW "do"
  WHITESPACE " "
  ERROR
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Attribute appears twice, while not all attributes/expressions on attributes"
  WHITESPACE "\n"
  COMMENT "-- appearing within index definition match in terms of both opclass and"
  WHITESPACE "\n"
  COMMENT "-- collation."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Works because every attribute in inference specification needs to be"
  WHITESPACE "\n"
  COMMENT "-- satisfied once or more by cataloged index attribute, and as always when an"
  WHITESPACE "\n"
  COMMENT "-- attribute in the cataloged definition has a non-default opclass/collation,"
  WHITESPACE "\n"
  COMMENT "-- it still satisfied some inference attribute lacking any particular"
  WHITESPACE "\n"
  COMMENT "-- opclass/collation specification."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- The implementation is liberal in accepting inference specifications on the"
  WHITESPACE "\n"
  COMMENT "-- assumption that multiple inferred unique indexes will prevent problematic"
  WHITESPACE "\n"
  COMMENT "-- cases.  It rolls with unique indexes where attributes redundantly appear"
  WHITESPACE "\n"
  COMMENT "-- multiple times, too (which is not tested here)."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Crowberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "fruit"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      KEY_KW "key"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    IDENT "text_pattern_ops"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Crowberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "lower"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "fruit"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    COLLATE_KW "collate"
  WHITESPACE " "
  ERROR
    IDENT "\"C\""
  WHITESPACE " "
  ERROR
    IDENT "text_pattern_ops"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    KEY_KW "key"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    KEY_KW "key"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  DO_STMT
    DO_KW "do"
  WHITESPACE " "
  ERROR
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_INDEX_STMT
    DROP_KW "drop"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "op_index_key"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_INDEX_STMT
    DROP_KW "drop"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "collation_index_key"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_INDEX_STMT
    DROP_KW "drop"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "both_index_key"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_INDEX_STMT
    DROP_KW "drop"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "both_index_expr_key"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Make sure that cross matching of attribute opclass/collation does not occur"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "cross_match"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    INDEX_PARAMS
      L_PAREN "("
      BIN_EXPR
        CALL_EXPR
          NAME_REF
            IDENT "lower"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "fruit"
            R_PAREN ")"
        WHITESPACE " "
        COLLATE_KW "collate"
        WHITESPACE " "
        NAME_REF
          IDENT "\"C\""
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "upper"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "fruit"
          R_PAREN ")"
      WHITESPACE " "
      IDENT "text_pattern_ops"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fails:"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Crowberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "lower"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "fruit"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "text_pattern_ops"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "upper"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "fruit"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    COLLATE_KW "collate"
  WHITESPACE " "
  ERROR
    IDENT "\"C\""
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  DO_STMT
    DO_KW "do"
  WHITESPACE " "
  ERROR
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- works:"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Crowberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "lower"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "fruit"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    COLLATE_KW "collate"
  WHITESPACE " "
  ERROR
    IDENT "\"C\""
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "upper"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "fruit"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "text_pattern_ops"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  DO_STMT
    DO_KW "do"
  WHITESPACE " "
  ERROR
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_INDEX_STMT
    DROP_KW "drop"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cross_match"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Single key tests"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "key_index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        KEY_KW "key"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Explain tests"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Bilberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Should display qual actually attributable to internal sequential scan:"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Bilberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "insertconflicttest"
          DOT "."
          NAME_REF
            IDENT "fruit"
        WHITESPACE " "
        NEQ "!="
        WHITESPACE " "
        LITERAL
          STRING "'Cawesh'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- With EXCLUDED.* expression in scan node:"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Crowberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "excluded"
          DOT "."
          NAME_REF
            IDENT "fruit"
        WHITESPACE " "
        NEQ "!="
        WHITESPACE " "
        LITERAL
          STRING "'Elderberry'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Does the same, but JSON format shows \"Conflict Arbiter Index\" as JSON array:"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    FORMAT_KW "format"
  WHITESPACE " "
  ERROR
    JSON_KW "json"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Bilberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "insertconflicttest"
          DOT "."
          NAME_REF
            IDENT "fruit"
        WHITESPACE " "
        NEQ "!="
        WHITESPACE " "
        LITERAL
          STRING "'Lime'"
    WHITESPACE " "
    RETURNING_KW "returning"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Fails (no unique index inference specification, required for do update variant):"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Apple'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- inference succeeds:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Apple'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Orange'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      KEY_KW "key"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Succeed, since multi-assignment does not involve subquery:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE "\n"
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Apple'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Orange'"
      R_PAREN ")"
    WHITESPACE "\n"
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "fruit"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
    COMMA ","
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        KEY_KW "key"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Give good diagnostic message when EXCLUDED.* spuriously referenced from"
  WHITESPACE "\n"
  COMMENT "-- RETURNING:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Apple'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Only suggest <table>.* column when inference element misspelled:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Apple'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "keyy"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Have useful HINT for EXCLUDED.* RTE within UPDATE:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Apple'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruitt"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- inference fails:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Kiwi'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Mango'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "fruit"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Lemon'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "fruit"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "6"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Passionfruit'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "lower"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "fruit"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  DO_STMT
    DO_KW "do"
  WHITESPACE " "
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          SET_KW "set"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check the target relation can be aliased"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    ALIAS
      AS_KW "AS"
      WHITESPACE " "
      NAME
        IDENT "ict"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "6"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Passionfruit'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- ok, no reference to target table"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    ALIAS
      AS_KW "AS"
      WHITESPACE " "
      NAME
        IDENT "ict"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "6"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Passionfruit'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "ict"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- ok, alias"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    ALIAS
      AS_KW "AS"
      WHITESPACE " "
      NAME
        IDENT "ict"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "6"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Passionfruit'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "insertconflicttest"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- error, references aliased away name"
  WHITESPACE "\n\n"
  COMMENT "-- Check helpful hint when qualifying set column with target table"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Kiwi'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "insertconflicttest"
    ERROR
      DOT "."
  ERROR
    IDENT "fruit"
  WHITESPACE " "
  ERROR
    EQ "="
  WHITESPACE " "
  ERROR
    STRING "'Mango'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_INDEX_STMT
    DROP_KW "drop"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "key_index"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Composite key tests"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "comp_key_index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "fruit"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- inference succeeds:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "7"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Raspberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "8"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Lime'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "fruit"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- inference fails:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "9"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Banana'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Blueberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      KEY_KW "key"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Cherry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "lower"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "fruit"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  DO_STMT
    DO_KW "do"
  WHITESPACE " "
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          SET_KW "set"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "12"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Date'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "lower"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "fruit"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    KEY_KW "key"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  DO_STMT
    DO_KW "do"
  WHITESPACE " "
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          SET_KW "set"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_INDEX_STMT
    DROP_KW "drop"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comp_key_index"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Partial index tests, no inference predicate specified"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "part_comp_key_index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "fruit"
      R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          KEY_KW "key"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "5"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "expr_part_comp_key_index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "lower"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "fruit"
          R_PAREN ")"
      R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          KEY_KW "key"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "5"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- inference fails:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "13"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Grape'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "14"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Raisin'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "fruit"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "15"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Cranberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "16"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Melon'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      KEY_KW "key"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "17"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Mulberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "lower"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "fruit"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  DO_STMT
    DO_KW "do"
  WHITESPACE " "
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          SET_KW "set"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "18"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Pineapple'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "lower"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "fruit"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    KEY_KW "key"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  DO_STMT
    DO_KW "do"
  WHITESPACE " "
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          SET_KW "set"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_INDEX_STMT
    DROP_KW "drop"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_comp_key_index"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_INDEX_STMT
    DROP_KW "drop"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "expr_part_comp_key_index"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Expression index tests"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "expr_key_index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    INDEX_PARAMS
      L_PAREN "("
      CALL_EXPR
        NAME_REF
          IDENT "lower"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "fruit"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- inference succeeds:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "20"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Quince'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "lower"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "fruit"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  DO_STMT
    DO_KW "do"
  WHITESPACE " "
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          SET_KW "set"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "21"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Pomegranate'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "lower"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "fruit"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "lower"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "fruit"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  DO_STMT
    DO_KW "do"
  WHITESPACE " "
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          SET_KW "set"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- inference fails:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "22"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Apricot'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "upper"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "fruit"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  DO_STMT
    DO_KW "do"
  WHITESPACE " "
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          SET_KW "set"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "23"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Blackberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "fruit"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_INDEX_STMT
    DROP_KW "drop"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "expr_key_index"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Expression index tests (with regular column)"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "expr_comp_key_index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "lower"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "fruit"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "tricky_expr_comp_key_index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "lower"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "fruit"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "upper"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "fruit"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- inference succeeds:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "24"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Plum'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "lower"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "fruit"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  DO_STMT
    DO_KW "do"
  WHITESPACE " "
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          SET_KW "set"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "25"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Peach'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "lower"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "fruit"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    KEY_KW "key"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  DO_STMT
    DO_KW "do"
  WHITESPACE " "
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          SET_KW "set"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Should not infer \"tricky_expr_comp_key_index\" index:"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "26"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Fig'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "lower"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "fruit"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    KEY_KW "key"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "lower"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "fruit"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    KEY_KW "key"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  DO_STMT
    DO_KW "do"
  WHITESPACE " "
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          SET_KW "set"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- inference fails:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "27"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Prune'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "upper"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "fruit"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  DO_STMT
    DO_KW "do"
  WHITESPACE " "
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          SET_KW "set"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "28"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Redcurrant'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "fruit"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "29"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Nectarine'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_INDEX_STMT
    DROP_KW "drop"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "expr_comp_key_index"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_INDEX_STMT
    DROP_KW "drop"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tricky_expr_comp_key_index"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Non-spurious duplicate violation tests"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "key_index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        KEY_KW "key"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "fruit_index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "fruit"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- succeeds, since UPDATE happens to update \"fruit\" to existing value:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "26"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Fig'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- fails, since UPDATE is to row with key value 26, and we're updating \"fruit\""
  WHITESPACE "\n"
  COMMENT "-- to a value that happens to exist in another row ('peach'):"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "26"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Peach'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- succeeds, since \"key\" isn't repeated/referenced in UPDATE, and \"fruit\""
  WHITESPACE "\n"
  COMMENT "-- arbitrates that statement updates existing \"Fig\" row:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "25"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Fig'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "fruit"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_INDEX_STMT
    DROP_KW "drop"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "key_index"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_INDEX_STMT
    DROP_KW "drop"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "fruit_index"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test partial unique index inference"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "partial_key_index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        KEY_KW "key"
      R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "fruit"
        WHITESPACE " "
        LIKE_KW "like"
        WHITESPACE " "
        LITERAL
          STRING "'%berry'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Succeeds"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "23"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Blackberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "fruit"
        WHITESPACE " "
        LIKE_KW "like"
        WHITESPACE " "
        LITERAL
          STRING "'%berry'"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    ALIAS
      AS_KW "as"
      WHITESPACE " "
      NAME
        IDENT "t"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "23"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Blackberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "fruit"
          WHITESPACE " "
          LIKE_KW "like"
          WHITESPACE " "
          LITERAL
            STRING "'%berry'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t"
            DOT "."
            NAME_REF
              IDENT "fruit"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'inconsequential'"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflictview"
    WHITESPACE " "
    ALIAS
      AS_KW "as"
      WHITESPACE " "
      NAME
        IDENT "t"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "23"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Blackberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "fruit"
          WHITESPACE " "
          LIKE_KW "like"
          WHITESPACE " "
          LITERAL
            STRING "'%berry'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t"
            DOT "."
            NAME_REF
              IDENT "fruit"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'inconsequential'"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fails"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "23"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Blackberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "23"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Blackberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "fruit"
          WHITESPACE " "
          LIKE_KW "like"
          WHITESPACE " "
          LITERAL
            STRING "'%berry'"
        WHITESPACE " "
        OR_KW "or"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "fruit"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'consequential'"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "23"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Blackberry'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "fruit"
    R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "fruit"
        WHITESPACE " "
        LIKE_KW "like"
        WHITESPACE " "
        LITERAL
          STRING "'%berry'"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_INDEX_STMT
    DROP_KW "drop"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "partial_key_index"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test that wholerow references to ON CONFLICT's EXCLUDED work"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "plain"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        KEY_KW "key"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Succeeds, updates existing row:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    ALIAS
      AS_KW "as"
      WHITESPACE " "
      NAME
        IDENT "i"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "23"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Jackfruit'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "i"
          DOT "."
          STAR "*"
        WHITESPACE " "
        NEQ "!="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "excluded"
          DOT "."
          STAR "*"
    WHITESPACE " "
    RETURNING_KW "returning"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- No update this time, though:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    ALIAS
      AS_KW "as"
      WHITESPACE " "
      NAME
        IDENT "i"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "23"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Jackfruit'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "i"
          DOT "."
          STAR "*"
        WHITESPACE " "
        NEQ "!="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "excluded"
          DOT "."
          STAR "*"
    WHITESPACE " "
    RETURNING_KW "returning"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Predicate changed to require match rather than non-match, so updates once more:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    ALIAS
      AS_KW "as"
      WHITESPACE " "
      NAME
        IDENT "i"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "23"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Jackfruit'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "i"
          DOT "."
          STAR "*"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "excluded"
          DOT "."
          STAR "*"
    WHITESPACE " "
    RETURNING_KW "returning"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Assign:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    ALIAS
      AS_KW "as"
      WHITESPACE " "
      NAME
        IDENT "i"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "23"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Avocado'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    CAST_EXPR
      FIELD_EXPR
        NAME_REF
          IDENT "excluded"
        DOT "."
        STAR "*"
      COLON2 "::"
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TEXT_KW "text"
    WHITESPACE "\n  "
    RETURNING_KW "returning"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- deparse whole row var in WHERE and SET clauses:"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    ALIAS
      AS_KW "as"
      WHITESPACE " "
      NAME
        IDENT "i"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "23"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Avocado'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "fruit"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "excluded"
          DOT "."
          STAR "*"
        WHITESPACE " "
        IS_KW "is"
        WHITESPACE " "
        LITERAL
          NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
    WHITESPACE " "
    ALIAS
      AS_KW "as"
      WHITESPACE " "
      NAME
        IDENT "i"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "23"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Avocado'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "fruit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    CAST_EXPR
      FIELD_EXPR
        NAME_REF
          IDENT "excluded"
        DOT "."
        STAR "*"
      COLON2 "::"
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_INDEX_STMT
    DROP_KW "drop"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "plain"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Cleanup"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "drop"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflictview"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflicttest"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- Verify that EXCLUDED does not allow system column references. These"
    WHITESPACE "\n"
    COMMENT "-- do not make sense because EXCLUDED isn't an already stored tuple"
    WHITESPACE "\n"
    COMMENT "-- (and thus doesn't have a ctid etc)."
    WHITESPACE "\n"
    COMMENT "--"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "syscolconflicttest"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          KEY_KW "key"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          DATA_KW "data"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "syscolconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "syscolconflicttest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      DATA_KW "data"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    CAST_EXPR
      FIELD_EXPR
        NAME_REF
          IDENT "excluded"
        DOT "."
        NAME_REF
          IDENT "ctid"
      COLON2 "::"
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "syscolconflicttest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- Previous tests all managed to not test any expressions requiring"
    WHITESPACE "\n"
    COMMENT "-- planner preprocessing ..."
    WHITESPACE "\n"
    COMMENT "--"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "insertconflict"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "insertconflicti1"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflict"
    INDEX_PARAMS
      L_PAREN "("
      CALL_EXPR
        NAME_REF
          COALESCE_KW "coalesce"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "a"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "insertconflicti2"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflict"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "b"
      R_PAREN ")"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        CALL_EXPR
          NAME_REF
            COALESCE_KW "coalesce"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "a"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflict"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
    WHITESPACE "\n"
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      COALESCE_KW "coalesce"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    INT_NUMBER "0"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  DO_STMT
    DO_KW "do"
  WHITESPACE " "
  ERROR
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflict"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
    WHITESPACE "\n"
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        CALL_EXPR
          NAME_REF
            COALESCE_KW "coalesce"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "a"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflict"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
    WHITESPACE "\n"
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        CALL_EXPR
          NAME_REF
            COALESCE_KW "coalesce"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "a"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflict"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- test insertion through view"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "insertconflict"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "insertconflictv"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "insertconflict"
    WHITESPACE " "
    WITH_KW "with"
    WHITESPACE " "
    CASCADED_KW "cascaded"
    WHITESPACE " "
    CHECK_KW "check"
    WHITESPACE " "
    OPTION_KW "option"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflictv"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        STRING "'foo'"
      R_PAREN ")"
    WHITESPACE "\n  "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "f1"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "f2"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "f2"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "insertconflict"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflictv"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        STRING "'bar'"
      R_PAREN ")"
    WHITESPACE "\n  "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "f1"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "f2"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "f2"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "insertconflict"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_VIEW_STMT
    DROP_KW "drop"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflictv"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "insertconflict"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  CREATE_TABLE
    COMMENT "-- ******************************************************************"
    WHITESPACE "\n"
    COMMENT "-- *                                                                *"
    WHITESPACE "\n"
    COMMENT "-- * Test inheritance (example taken from tutorial)                 *"
    WHITESPACE "\n"
    COMMENT "-- *                                                                *"
    WHITESPACE "\n"
    COMMENT "-- ******************************************************************"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "cities"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          NAME_KW "name"
        WHITESPACE "\t\t"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "population"
        WHITESPACE "\t"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "float8"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "altitude"
        WHITESPACE "\t"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      WHITESPACE "\t\t"
      COMMENT "-- (in ft)"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "capitals"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "state"
        WHITESPACE "\t\t"
        CHAR_TYPE
          CHAR_KW "char"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "2"
            R_PAREN ")"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cities"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Create unique indexes.  Due to a general limitation of inheritance,"
  WHITESPACE "\n"
  COMMENT "-- uniqueness is only enforced per-relation.  Unique index inference"
  WHITESPACE "\n"
  COMMENT "-- specification will do the right thing, though."
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "cities_names_unique"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cities"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        NAME_KW "name"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "capitals_names_unique"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "capitals"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        NAME_KW "name"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- prepopulate the tables."
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cities"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'San Francisco'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        FLOAT_NUMBER "7.24E+5"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "63"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cities"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Las Vegas'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        FLOAT_NUMBER "2.583E+5"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2174"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cities"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Mariposa'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1200"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1953"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "capitals"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Sacramento'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        FLOAT_NUMBER "3.694E+5"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "30"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'CA'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "capitals"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Madison'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        FLOAT_NUMBER "1.913E+5"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "845"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'WI'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Tests proper for inheritance:"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "capitals"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Succeeds:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cities"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Las Vegas'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        FLOAT_NUMBER "2.583E+5"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2174"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "capitals"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Sacramento'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        FLOAT_NUMBER "4664."
      BIN_EXPR
        NAME_REF
          IDENT "E"
        PLUS "+"
        LITERAL
          INT_NUMBER "5"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "30"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'CA'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      NAME_KW "name"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "population"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "population"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Wrong \"Sacramento\", so do nothing:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "capitals"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Sacramento'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "50"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2267"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'NE'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      NAME_KW "name"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "capitals"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cities"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Las Vegas'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        FLOAT_NUMBER "5.83E+5"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2001"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      NAME_KW "name"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "population"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "population"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "altitude"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "altitude"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "tableoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "cities"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "capitals"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Las Vegas'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        FLOAT_NUMBER "5.83E+5"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2222"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'NV'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      NAME_KW "name"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "population"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "population"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Capitals will contain new capital, Las Vegas:"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "capitals"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Cities contains two instances of \"Las Vegas\", since unique constraints don't"
  WHITESPACE "\n"
  COMMENT "-- work across inheritance:"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "tableoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "cities"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- This only affects \"cities\" version of \"Las Vegas\":"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cities"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Las Vegas'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        FLOAT_NUMBER "5.86E+5"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2223"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      NAME_KW "name"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "population"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "population"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "altitude"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "altitude"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "tableoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "cities"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- clean up"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "capitals"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cities"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  CREATE_TABLE
    COMMENT "-- Make sure a table named excluded is handled properly"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "excluded"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          KEY_KW "key"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          DATA_KW "data"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "excluded"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'1'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- error, ambiguous"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "excluded"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'2'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      DATA_KW "data"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        DATA_KW "data"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ok, aliased"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "excluded"
    WHITESPACE " "
    ALIAS
      AS_KW "AS"
      WHITESPACE " "
      NAME
        TARGET_KW "target"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'2'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      DATA_KW "data"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        DATA_KW "data"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ok, aliased"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "excluded"
    WHITESPACE " "
    ALIAS
      AS_KW "AS"
      WHITESPACE " "
      NAME
        TARGET_KW "target"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'2'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      DATA_KW "data"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        TARGET_KW "target"
      DOT "."
      NAME_REF
        DATA_KW "data"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- make sure excluded isn't a problem in returning clause"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "excluded"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'2'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      DATA_KW "data"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "3"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- clean up"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "excluded"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  CREATE_TABLE
    COMMENT "-- check that references to columns after dropped columns are handled correctly"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dropcol"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          KEY_KW "key"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "drop1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "keep1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "drop2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "keep2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                FLOAT_KW "float"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dropcol"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "drop1"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "keep1"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "drop2"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "keep2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'1'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'1'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- set using excluded"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dropcol"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "drop1"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "keep1"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "drop2"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "keep2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'2'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'2'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE "\n    "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "drop1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "drop1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "keep1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "keep1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "drop2"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "drop2"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "keep2"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "keep2"
    WHITESPACE "\n    "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "excluded"
                        DOT "."
                        NAME_REF
                          IDENT "drop1"
                      WHITESPACE " "
                      IS_NOT
                        IS_KW "is"
                        WHITESPACE " "
                        NOT_KW "not"
                      WHITESPACE " "
                      LITERAL
                        NULL_KW "null"
                    WHITESPACE " "
                    AND_KW "and"
                    WHITESPACE " "
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "excluded"
                        DOT "."
                        NAME_REF
                          IDENT "keep1"
                      WHITESPACE " "
                      IS_NOT
                        IS_KW "is"
                        WHITESPACE " "
                        NOT_KW "not"
                      WHITESPACE " "
                      LITERAL
                        NULL_KW "null"
                  WHITESPACE " "
                  AND_KW "and"
                  WHITESPACE " "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "excluded"
                      DOT "."
                      NAME_REF
                        IDENT "drop2"
                    WHITESPACE " "
                    IS_NOT
                      IS_KW "is"
                      WHITESPACE " "
                      NOT_KW "not"
                    WHITESPACE " "
                    LITERAL
                      NULL_KW "null"
                WHITESPACE " "
                AND_KW "and"
                WHITESPACE " "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "excluded"
                    DOT "."
                    NAME_REF
                      IDENT "keep2"
                  WHITESPACE " "
                  IS_NOT
                    IS_KW "is"
                    WHITESPACE " "
                    NOT_KW "not"
                  WHITESPACE " "
                  LITERAL
                    NULL_KW "null"
              WHITESPACE "\n          "
              AND_KW "and"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "dropcol"
                  DOT "."
                  NAME_REF
                    IDENT "drop1"
                WHITESPACE " "
                IS_NOT
                  IS_KW "is"
                  WHITESPACE " "
                  NOT_KW "not"
                WHITESPACE " "
                LITERAL
                  NULL_KW "null"
            WHITESPACE " "
            AND_KW "and"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "dropcol"
                DOT "."
                NAME_REF
                  IDENT "keep1"
              WHITESPACE " "
              IS_NOT
                IS_KW "is"
                WHITESPACE " "
                NOT_KW "not"
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
          WHITESPACE " "
          AND_KW "and"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "dropcol"
              DOT "."
              NAME_REF
                IDENT "drop2"
            WHITESPACE " "
            IS_NOT
              IS_KW "is"
              WHITESPACE " "
              NOT_KW "not"
            WHITESPACE " "
            LITERAL
              NULL_KW "null"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "dropcol"
            DOT "."
            NAME_REF
              IDENT "keep2"
          WHITESPACE " "
          IS_NOT
            IS_KW "is"
            WHITESPACE " "
            NOT_KW "not"
          WHITESPACE " "
          LITERAL
            NULL_KW "null"
    WHITESPACE "\n    "
    RETURNING_KW "returning"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- set using existing table"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dropcol"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "drop1"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "keep1"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "drop2"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "keep2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'3'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'3'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE "\n    "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "drop1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "dropcol"
      DOT "."
      NAME_REF
        IDENT "drop1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "keep1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "dropcol"
      DOT "."
      NAME_REF
        IDENT "keep1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "drop2"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "dropcol"
      DOT "."
      NAME_REF
        IDENT "drop2"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "keep2"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "dropcol"
      DOT "."
      NAME_REF
        IDENT "keep2"
    WHITESPACE "\n    "
    RETURNING_KW "returning"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dropcol"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "drop1"
    COMMA ","
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "drop2"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- set using excluded"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dropcol"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "keep1"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "keep2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'4'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE "\n    "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "keep1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "keep1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "keep2"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "keep2"
    WHITESPACE "\n    "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "excluded"
                DOT "."
                NAME_REF
                  IDENT "keep1"
              WHITESPACE " "
              IS_NOT
                IS_KW "is"
                WHITESPACE " "
                NOT_KW "not"
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
            WHITESPACE " "
            AND_KW "and"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "excluded"
                DOT "."
                NAME_REF
                  IDENT "keep2"
              WHITESPACE " "
              IS_NOT
                IS_KW "is"
                WHITESPACE " "
                NOT_KW "not"
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
          WHITESPACE "\n          "
          AND_KW "and"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "dropcol"
              DOT "."
              NAME_REF
                IDENT "keep1"
            WHITESPACE " "
            IS_NOT
              IS_KW "is"
              WHITESPACE " "
              NOT_KW "not"
            WHITESPACE " "
            LITERAL
              NULL_KW "null"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "dropcol"
            DOT "."
            NAME_REF
              IDENT "keep2"
          WHITESPACE " "
          IS_NOT
            IS_KW "is"
            WHITESPACE " "
            NOT_KW "not"
          WHITESPACE " "
          LITERAL
            NULL_KW "null"
    WHITESPACE "\n    "
    RETURNING_KW "returning"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- set using existing table"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dropcol"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "keep1"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "keep2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'5'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "5"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    L_PAREN "("
    NAME_REF
      KEY_KW "key"
    R_PAREN ")"
    WHITESPACE "\n    "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "keep1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "dropcol"
      DOT "."
      NAME_REF
        IDENT "keep1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "keep2"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "dropcol"
      DOT "."
      NAME_REF
        IDENT "keep2"
    WHITESPACE "\n    "
    RETURNING_KW "returning"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dropcol"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check handling of regular btree constraint along with gist constraint"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "twoconstraints"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        UNIQUE_CONSTRAINT
          UNIQUE_KW "unique"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "box"
      COMMA ","
      WHITESPACE "\n                             "
      EXCLUDE_CONSTRAINT
        EXCLUDE_KW "exclude"
        WHITESPACE " "
        CONSTRAINT_INDEX_METHOD
          USING_KW "using"
          WHITESPACE " "
          NAME_REF
            IDENT "gist"
        CONSTRAINT_EXCLUSIONS
          L_PAREN "("
          NAME_REF
            IDENT "f2"
          WHITESPACE " "
          WITH_KW "with"
          WHITESPACE " "
          CUSTOM_OP
            AMP "&"
            AMP "&"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "twoconstraints"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'((0,0),(1,1))'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "twoconstraints"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'((2,2),(3,3))'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail on f1"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "twoconstraints"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'((0,0),(1,2))'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail on f2"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "twoconstraints"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'((0,0),(1,2))'"
      R_PAREN ")"
    WHITESPACE "\n  "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONSTRAINT_KW "constraint"
    WHITESPACE " "
    NAME_REF
      IDENT "twoconstraints_f1_key"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail on f2"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "twoconstraints"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'((0,0),(1,2))'"
      R_PAREN ")"
    WHITESPACE "\n  "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONSTRAINT_KW "constraint"
    WHITESPACE " "
    NAME_REF
      IDENT "twoconstraints_f2_excl"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- do nothing"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "twoconstraints"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "twoconstraints"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check handling of self-conflicts at various isolation levels"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "selfconflict"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "begin"
    WHITESPACE " "
    TRANSACTION_KW "transaction"
    WHITESPACE " "
    ISOLATION_KW "isolation"
    WHITESPACE " "
    LEVEL_KW "level"
    WHITESPACE " "
    READ_KW "read"
    WHITESPACE " "
    COMMITTED_KW "committed"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "selfconflict"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "commit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "begin"
    WHITESPACE " "
    TRANSACTION_KW "transaction"
    WHITESPACE " "
    ISOLATION_KW "isolation"
    WHITESPACE " "
    LEVEL_KW "level"
    WHITESPACE " "
    REPEATABLE_KW "repeatable"
    WHITESPACE " "
    READ_KW "read"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "selfconflict"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "commit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "begin"
    WHITESPACE " "
    TRANSACTION_KW "transaction"
    WHITESPACE " "
    ISOLATION_KW "isolation"
    WHITESPACE " "
    LEVEL_KW "level"
    WHITESPACE " "
    SERIALIZABLE_KW "serializable"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "selfconflict"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "commit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "begin"
    WHITESPACE " "
    TRANSACTION_KW "transaction"
    WHITESPACE " "
    ISOLATION_KW "isolation"
    WHITESPACE " "
    LEVEL_KW "level"
    WHITESPACE " "
    READ_KW "read"
    WHITESPACE " "
    COMMITTED_KW "committed"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "selfconflict"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    L_PAREN "("
    NAME_REF
      IDENT "f1"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "f2"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "commit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "begin"
    WHITESPACE " "
    TRANSACTION_KW "transaction"
    WHITESPACE " "
    ISOLATION_KW "isolation"
    WHITESPACE " "
    LEVEL_KW "level"
    WHITESPACE " "
    REPEATABLE_KW "repeatable"
    WHITESPACE " "
    READ_KW "read"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "selfconflict"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    L_PAREN "("
    NAME_REF
      IDENT "f1"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "f2"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "commit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "begin"
    WHITESPACE " "
    TRANSACTION_KW "transaction"
    WHITESPACE " "
    ISOLATION_KW "isolation"
    WHITESPACE " "
    LEVEL_KW "level"
    WHITESPACE " "
    SERIALIZABLE_KW "serializable"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "selfconflict"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "6"
      COMMA ","
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "6"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    L_PAREN "("
    NAME_REF
      IDENT "f1"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "f2"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "commit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "selfconflict"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "selfconflict"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check ON CONFLICT handling with partitioned tables"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_conflict_test"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        UNIQUE_CONSTRAINT
          UNIQUE_KW "unique"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        CHAR_TYPE
          CHAR_KW "char"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_conflict_test_1"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_test"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        UNIQUE_CONSTRAINT
          UNIQUE_KW "unique"
      R_PAREN ")"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- no indexes required here"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- index on a required, which does exist in parent"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "b"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- targeting partition directly will work"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_test_1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    NOTHING_KW "nothing"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_test_1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'b'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "b"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- index on b required, which doesn't exist in parent"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'b'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- targeting partition directly will work"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_test_1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'b'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- should see (2, 'b')"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "parted_conflict_test"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- now check that DO UPDATE works correctly for target partition with"
    WHITESPACE "\n"
    COMMENT "-- different attribute numbers"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_conflict_test_2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        CHAR_TYPE
          CHAR_KW "char"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        UNIQUE_CONSTRAINT
          UNIQUE_KW "unique"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_test"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "attach"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "parted_conflict_test_2"
      WHITESPACE " "
      FOR_KW "for"
      WHITESPACE " "
      VALUES_KW "values"
      WHITESPACE " "
      IN_KW "in"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  TRUNCATE_STMT
    TRUNCATE_KW "truncate"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "parted_conflict_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "b"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'b'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "b"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- should see (3, 'b')"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "parted_conflict_test"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- case where parent will have a dropped column, but the partition won't"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_test"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
    COMMA ","
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      CHAR_TYPE
        CHAR_KW "char"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_conflict_test_3"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_test"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "4"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  TRUNCATE_STMT
    TRUNCATE_KW "truncate"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "parted_conflict_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_test"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "b"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_test"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'b'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "b"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "parted_conflict_test"
          DOT "."
          NAME_REF
            IDENT "b"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'a'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- should see (4, 'b')"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "parted_conflict_test"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- case with multi-level partitioning"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_conflict_test_4"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_test"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "5"
    R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_conflict_test_4_1"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_test_4"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "5"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  TRUNCATE_STMT
    TRUNCATE_KW "truncate"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "parted_conflict_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_test"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "b"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_test"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'b'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "b"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "parted_conflict_test"
          DOT "."
          NAME_REF
            IDENT "b"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'a'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- should see (5, 'b')"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "parted_conflict_test"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test with multiple rows"
  WHITESPACE "\n"
  TRUNCATE_STMT
    TRUNCATE_KW "truncate"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "parted_conflict_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_test"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "b"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "excluded"
          DOT "."
          NAME_REF
            IDENT "b"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'b'"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_test"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'b'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'c'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'b'"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "b"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "excluded"
          DOT "."
          NAME_REF
            IDENT "b"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'b'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- should see (1, 'b'), (2, 'a'), (4, 'b')"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "parted_conflict_test"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- test behavior of inserting a conflicting tuple into an intermediate"
    WHITESPACE "\n"
    COMMENT "-- partitioning level"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_conflict"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    RANGE_KW "range"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_conflict_1"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1000"
    R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    RANGE_KW "range"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_conflict_1_1"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_1"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "500"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "40"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'forty'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "40"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'cuarenta'"
      R_PAREN ")"
    WHITESPACE "\n  "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "b"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- same thing, but this time try to use an index that's created not in the"
    WHITESPACE "\n"
    COMMENT "-- partition"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_conflict"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    RANGE_KW "range"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_conflict_1"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1000"
    R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    RANGE_KW "range"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_conflict_1_1"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_1"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "500"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    ONLY_KW "only"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_1"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    ONLY_KW "only"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_INDEX_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_a_idx"
    WHITESPACE " "
    ATTACH_KW "attach"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_1_a_idx"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "40"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'forty'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "40"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'cuarenta'"
      R_PAREN ")"
    WHITESPACE "\n  "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      NAME_REF
        IDENT "b"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- test whole-row Vars in ON CONFLICT expressions"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_conflict"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    RANGE_KW "range"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_conflict_1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "drp"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "drp"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "attach"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "parted_conflict_1"
      WHITESPACE " "
      FOR_KW "for"
      WHITESPACE " "
      VALUES_KW "values"
      WHITESPACE " "
      FROM_KW "from"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      R_PAREN ")"
      WHITESPACE " "
      TO_KW "to"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1000"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  TRUNCATE_STMT
    TRUNCATE_KW "truncate"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "parted_conflict"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "50"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'cincuenta'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "50"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'cincuenta'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
    WHITESPACE "\n  "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    ROW_KW "row"
    L_PAREN "("
    FIELD_EXPR
      NAME_REF
        IDENT "excluded"
      DOT "."
      STAR "*"
    R_PAREN ")"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "parted_conflict"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              INT_NUMBER "50"
            COMMA ","
            WHITESPACE " "
            CAST_EXPR
              NAME_REF
                TEXT_KW "text"
              WHITESPACE " "
              LITERAL
                STRING "'cincuenta'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE "\n        "
        BIN_EXPR
          NAME_REF
            IDENT "excluded"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              INT_NUMBER "50"
            COMMA ","
            WHITESPACE " "
            CAST_EXPR
              NAME_REF
                TEXT_KW "text"
              WHITESPACE " "
              LITERAL
                STRING "'cincuenta'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "2"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- should see (50, 'cincuenta', 2)"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "parted_conflict"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test with statement level triggers"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_conflict_update_func"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TRIGGER_KW "trigger"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\ndeclare\n    r record;\nbegin\n for r in select * from inserted loop\n\traise notice 'a = %, b = %, c = %', r.a, r.b, r.c;\n end loop;\n return new;\nend;\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TRIGGER_KW "trigger"
    WHITESPACE " "
    NAME
      IDENT "parted_conflict_update"
    WHITESPACE "\n    "
    AFTER_KW "after"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict"
    WHITESPACE "\n    "
    REFERENCING_KW "referencing"
    WHITESPACE " "
    NEW_KW "new"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    NAME_REF
      IDENT "inserted"
    WHITESPACE "\n    "
    FOR_KW "for"
    WHITESPACE " "
    EACH_KW "each"
    WHITESPACE " "
    STATEMENT_KW "statement"
    WHITESPACE "\n    "
    EXECUTE_KW "execute"
    WHITESPACE " "
    PROCEDURE_KW "procedure"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "parted_conflict_update_func"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  TRUNCATE_STMT
    TRUNCATE_KW "truncate"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "parted_conflict"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'cero'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'cero'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
    WHITESPACE "\n  "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    COMMA ","
    NAME_REF
      IDENT "b"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      FIELD_EXPR
        NAME_REF
          IDENT "parted_conflict"
        DOT "."
        NAME_REF
          IDENT "c"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "drop"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_conflict_update_func"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
---
ERROR@735: expected R_PAREN
ERROR@736: expected command, found OFF_KW
ERROR@739: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@739: expected SEMICOLON
ERROR@739: expected command, found R_PAREN
ERROR@839: expected R_PAREN
ERROR@840: expected command, found OFF_KW
ERROR@843: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@843: expected SEMICOLON
ERROR@843: expected command, found R_PAREN
ERROR@958: expected R_PAREN
ERROR@959: expected command, found OFF_KW
ERROR@962: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@962: expected SEMICOLON
ERROR@962: expected command, found R_PAREN
ERROR@1069: expected R_PAREN
ERROR@1070: expected command, found OFF_KW
ERROR@1073: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@1073: expected SEMICOLON
ERROR@1073: expected command, found R_PAREN
ERROR@1192: expected R_PAREN
ERROR@1193: expected command, found OFF_KW
ERROR@1196: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@1196: expected SEMICOLON
ERROR@1196: expected command, found R_PAREN
ERROR@1270: expected R_PAREN
ERROR@1270: expected SEMICOLON
ERROR@1270: expected command, found L_PAREN
ERROR@1271: expected command, found IDENT
ERROR@1276: expected command, found R_PAREN
ERROR@1277: expected command, found COMMA
ERROR@1279: expected command, found KEY_KW
ERROR@1282: expected command, found COMMA
ERROR@1284: expected command, found IDENT
ERROR@1289: expected command, found L_PAREN
ERROR@1290: expected command, found IDENT
ERROR@1295: expected command, found R_PAREN
ERROR@1296: expected command, found COMMA
ERROR@1298: expected command, found KEY_KW
ERROR@1301: expected command, found R_PAREN
ERROR@1305: expected string literal
ERROR@1305: expected SEMICOLON
ERROR@1306: expected command, found NOTHING_KW
ERROR@1329: expected R_PAREN
ERROR@1330: expected command, found OFF_KW
ERROR@1333: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@1333: expected SEMICOLON
ERROR@1333: expected command, found R_PAREN
ERROR@1407: expected R_PAREN
ERROR@1407: expected SEMICOLON
ERROR@1407: expected command, found L_PAREN
ERROR@1408: expected command, found IDENT
ERROR@1413: expected command, found R_PAREN
ERROR@1414: expected command, found COMMA
ERROR@1416: expected command, found KEY_KW
ERROR@1419: expected command, found COMMA
ERROR@1421: expected command, found IDENT
ERROR@1426: expected command, found L_PAREN
ERROR@1427: expected command, found IDENT
ERROR@1432: expected command, found R_PAREN
ERROR@1433: expected command, found COMMA
ERROR@1435: expected command, found KEY_KW
ERROR@1438: expected command, found R_PAREN
ERROR@1442: expected string literal
ERROR@1442: expected SEMICOLON
ERROR@1443: expected command, found NOTHING_KW
ERROR@1466: expected R_PAREN
ERROR@1467: expected command, found OFF_KW
ERROR@1470: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@1470: expected SEMICOLON
ERROR@1470: expected command, found R_PAREN
ERROR@1861: expected R_PAREN
ERROR@1862: expected command, found OFF_KW
ERROR@1865: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@1865: expected SEMICOLON
ERROR@1865: expected command, found R_PAREN
ERROR@2086: expected R_PAREN
ERROR@2087: expected command, found OFF_KW
ERROR@2090: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@2090: expected SEMICOLON
ERROR@2090: expected command, found R_PAREN
ERROR@2302: expected R_PAREN
ERROR@2303: expected command, found OFF_KW
ERROR@2306: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@2306: expected SEMICOLON
ERROR@2306: expected command, found R_PAREN
ERROR@2561: expected R_PAREN
ERROR@2562: expected command, found OFF_KW
ERROR@2565: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@2565: expected SEMICOLON
ERROR@2565: expected command, found R_PAREN
ERROR@2639: expected R_PAREN
ERROR@2639: expected SEMICOLON
ERROR@2639: expected command, found L_PAREN
ERROR@2640: expected command, found IDENT
ERROR@2645: expected command, found R_PAREN
ERROR@2647: expected command, found COLLATE_KW
ERROR@2655: expected command, found IDENT
ERROR@2658: expected command, found COMMA
ERROR@2660: expected command, found KEY_KW
ERROR@2663: expected command, found COMMA
ERROR@2665: expected command, found KEY_KW
ERROR@2668: expected command, found R_PAREN
ERROR@2672: expected string literal
ERROR@2672: expected SEMICOLON
ERROR@2673: expected command, found NOTHING_KW
ERROR@3483: expected R_PAREN
ERROR@3484: expected command, found OFF_KW
ERROR@3487: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@3487: expected SEMICOLON
ERROR@3487: expected command, found R_PAREN
ERROR@3623: expected R_PAREN
ERROR@3624: expected command, found OFF_KW
ERROR@3627: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@3627: expected SEMICOLON
ERROR@3627: expected command, found R_PAREN
ERROR@3701: expected R_PAREN
ERROR@3701: expected SEMICOLON
ERROR@3701: expected command, found L_PAREN
ERROR@3702: expected command, found IDENT
ERROR@3707: expected command, found R_PAREN
ERROR@3709: expected command, found COLLATE_KW
ERROR@3717: expected command, found IDENT
ERROR@3721: expected command, found IDENT
ERROR@3737: expected command, found COMMA
ERROR@3739: expected command, found KEY_KW
ERROR@3742: expected command, found COMMA
ERROR@3744: expected command, found KEY_KW
ERROR@3747: expected command, found R_PAREN
ERROR@3751: expected string literal
ERROR@3751: expected SEMICOLON
ERROR@3752: expected command, found NOTHING_KW
ERROR@4101: expected R_PAREN
ERROR@4102: expected command, found OFF_KW
ERROR@4105: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@4105: expected SEMICOLON
ERROR@4105: expected command, found R_PAREN
ERROR@4179: expected R_PAREN
ERROR@4179: expected SEMICOLON
ERROR@4179: expected command, found L_PAREN
ERROR@4180: expected command, found IDENT
ERROR@4185: expected command, found R_PAREN
ERROR@4187: expected command, found IDENT
ERROR@4203: expected command, found COMMA
ERROR@4205: expected command, found IDENT
ERROR@4210: expected command, found L_PAREN
ERROR@4211: expected command, found IDENT
ERROR@4216: expected command, found R_PAREN
ERROR@4218: expected command, found COLLATE_KW
ERROR@4226: expected command, found IDENT
ERROR@4229: expected command, found R_PAREN
ERROR@4233: expected string literal
ERROR@4233: expected SEMICOLON
ERROR@4234: expected command, found NOTHING_KW
ERROR@4267: expected R_PAREN
ERROR@4268: expected command, found OFF_KW
ERROR@4271: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@4271: expected SEMICOLON
ERROR@4271: expected command, found R_PAREN
ERROR@4345: expected R_PAREN
ERROR@4345: expected SEMICOLON
ERROR@4345: expected command, found L_PAREN
ERROR@4346: expected command, found IDENT
ERROR@4351: expected command, found R_PAREN
ERROR@4353: expected command, found COLLATE_KW
ERROR@4361: expected command, found IDENT
ERROR@4364: expected command, found COMMA
ERROR@4366: expected command, found IDENT
ERROR@4371: expected command, found L_PAREN
ERROR@4372: expected command, found IDENT
ERROR@4377: expected command, found R_PAREN
ERROR@4379: expected command, found IDENT
ERROR@4395: expected command, found R_PAREN
ERROR@4399: expected string literal
ERROR@4399: expected SEMICOLON
ERROR@4400: expected command, found NOTHING_KW
ERROR@4557: expected R_PAREN
ERROR@4558: expected command, found OFF_KW
ERROR@4561: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@4561: expected SEMICOLON
ERROR@4561: expected command, found R_PAREN
ERROR@4761: expected R_PAREN
ERROR@4762: expected command, found OFF_KW
ERROR@4765: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@4765: expected SEMICOLON
ERROR@4765: expected command, found R_PAREN
ERROR@4978: expected R_PAREN
ERROR@4979: expected command, found OFF_KW
ERROR@4982: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@4982: expected SEMICOLON
ERROR@4982: expected command, found R_PAREN
ERROR@5225: expected R_PAREN
ERROR@5226: expected command, found OFF_KW
ERROR@5229: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@5229: expected SEMICOLON
ERROR@5229: expected command, found COMMA
ERROR@5231: expected command, found FORMAT_KW
ERROR@5238: expected command, found JSON_KW
ERROR@5242: expected command, found R_PAREN
ERROR@7045: expected R_PAREN
ERROR@7045: expected SEMICOLON
ERROR@7045: expected command, found L_PAREN
ERROR@7046: expected command, found IDENT
ERROR@7051: expected command, found R_PAREN
ERROR@7052: expected command, found R_PAREN
ERROR@7056: expected string literal
ERROR@7056: expected SEMICOLON
ERROR@7073: expected SET_KW
ERROR@7073: expected name
ERROR@7768: expected EQ
ERROR@7768: expected an expression, found DOT
ERROR@7769: expected expression
ERROR@7769: expected SEMICOLON
ERROR@7769: expected command, found IDENT
ERROR@7775: expected command, found EQ
ERROR@7777: expected command, found STRING
ERROR@8491: expected R_PAREN
ERROR@8491: expected SEMICOLON
ERROR@8491: expected command, found L_PAREN
ERROR@8492: expected command, found IDENT
ERROR@8497: expected command, found R_PAREN
ERROR@8498: expected command, found R_PAREN
ERROR@8502: expected string literal
ERROR@8502: expected SEMICOLON
ERROR@8519: expected SET_KW
ERROR@8519: expected name
ERROR@8607: expected R_PAREN
ERROR@8607: expected SEMICOLON
ERROR@8607: expected command, found L_PAREN
ERROR@8608: expected command, found IDENT
ERROR@8613: expected command, found R_PAREN
ERROR@8614: expected command, found COMMA
ERROR@8616: expected command, found KEY_KW
ERROR@8619: expected command, found R_PAREN
ERROR@8623: expected string literal
ERROR@8623: expected SEMICOLON
ERROR@8640: expected SET_KW
ERROR@8640: expected name
ERROR@9501: expected R_PAREN
ERROR@9501: expected SEMICOLON
ERROR@9501: expected command, found L_PAREN
ERROR@9502: expected command, found IDENT
ERROR@9507: expected command, found R_PAREN
ERROR@9508: expected command, found R_PAREN
ERROR@9512: expected string literal
ERROR@9512: expected SEMICOLON
ERROR@9529: expected SET_KW
ERROR@9529: expected name
ERROR@9622: expected R_PAREN
ERROR@9622: expected SEMICOLON
ERROR@9622: expected command, found L_PAREN
ERROR@9623: expected command, found IDENT
ERROR@9628: expected command, found R_PAREN
ERROR@9629: expected command, found COMMA
ERROR@9631: expected command, found KEY_KW
ERROR@9634: expected command, found R_PAREN
ERROR@9638: expected string literal
ERROR@9638: expected SEMICOLON
ERROR@9655: expected SET_KW
ERROR@9655: expected name
ERROR@9944: expected R_PAREN
ERROR@9944: expected SEMICOLON
ERROR@9944: expected command, found L_PAREN
ERROR@9945: expected command, found IDENT
ERROR@9950: expected command, found R_PAREN
ERROR@9951: expected command, found R_PAREN
ERROR@9955: expected string literal
ERROR@9955: expected SEMICOLON
ERROR@9972: expected SET_KW
ERROR@9972: expected name
ERROR@10067: expected R_PAREN
ERROR@10067: expected SEMICOLON
ERROR@10067: expected command, found L_PAREN
ERROR@10068: expected command, found IDENT
ERROR@10073: expected command, found R_PAREN
ERROR@10074: expected command, found COMMA
ERROR@10076: expected command, found IDENT
ERROR@10081: expected command, found L_PAREN
ERROR@10082: expected command, found IDENT
ERROR@10087: expected command, found R_PAREN
ERROR@10088: expected command, found R_PAREN
ERROR@10092: expected string literal
ERROR@10092: expected SEMICOLON
ERROR@10109: expected SET_KW
ERROR@10109: expected name
ERROR@10221: expected R_PAREN
ERROR@10221: expected SEMICOLON
ERROR@10221: expected command, found L_PAREN
ERROR@10222: expected command, found IDENT
ERROR@10227: expected command, found R_PAREN
ERROR@10228: expected command, found R_PAREN
ERROR@10232: expected string literal
ERROR@10232: expected SEMICOLON
ERROR@10249: expected SET_KW
ERROR@10249: expected name
ERROR@10749: expected R_PAREN
ERROR@10749: expected SEMICOLON
ERROR@10749: expected command, found L_PAREN
ERROR@10750: expected command, found IDENT
ERROR@10755: expected command, found R_PAREN
ERROR@10756: expected command, found R_PAREN
ERROR@10760: expected string literal
ERROR@10760: expected SEMICOLON
ERROR@10777: expected SET_KW
ERROR@10777: expected name
ERROR@10866: expected R_PAREN
ERROR@10866: expected SEMICOLON
ERROR@10866: expected command, found L_PAREN
ERROR@10867: expected command, found IDENT
ERROR@10872: expected command, found R_PAREN
ERROR@10873: expected command, found COMMA
ERROR@10875: expected command, found KEY_KW
ERROR@10878: expected command, found R_PAREN
ERROR@10882: expected string literal
ERROR@10882: expected SEMICOLON
ERROR@10899: expected SET_KW
ERROR@10899: expected name
ERROR@10988: expected R_PAREN
ERROR@10989: expected command, found OFF_KW
ERROR@10992: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@10992: expected SEMICOLON
ERROR@10992: expected command, found R_PAREN
ERROR@11062: expected R_PAREN
ERROR@11062: expected SEMICOLON
ERROR@11062: expected command, found L_PAREN
ERROR@11063: expected command, found IDENT
ERROR@11068: expected command, found R_PAREN
ERROR@11069: expected command, found COMMA
ERROR@11071: expected command, found KEY_KW
ERROR@11074: expected command, found COMMA
ERROR@11076: expected command, found IDENT
ERROR@11081: expected command, found L_PAREN
ERROR@11082: expected command, found IDENT
ERROR@11087: expected command, found R_PAREN
ERROR@11088: expected command, found COMMA
ERROR@11090: expected command, found KEY_KW
ERROR@11093: expected command, found R_PAREN
ERROR@11097: expected string literal
ERROR@11097: expected SEMICOLON
ERROR@11114: expected SET_KW
ERROR@11114: expected name
ERROR@11229: expected R_PAREN
ERROR@11229: expected SEMICOLON
ERROR@11229: expected command, found L_PAREN
ERROR@11230: expected command, found IDENT
ERROR@11235: expected command, found R_PAREN
ERROR@11236: expected command, found R_PAREN
ERROR@11240: expected string literal
ERROR@11240: expected SEMICOLON
ERROR@11257: expected SET_KW
ERROR@11257: expected name
ERROR@14434: expected R_PAREN
ERROR@14435: expected command, found OFF_KW
ERROR@14438: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@14438: expected SEMICOLON
ERROR@14438: expected command, found R_PAREN
ERROR@14594: expected R_PAREN
ERROR@14595: expected command, found OFF_KW
ERROR@14598: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@14598: expected SEMICOLON
ERROR@14598: expected command, found R_PAREN
ERROR@15602: expected R_PAREN
ERROR@15602: expected SEMICOLON
ERROR@15602: expected command, found L_PAREN
ERROR@15603: expected command, found IDENT
ERROR@15604: expected command, found COMMA
ERROR@15606: expected command, found INT_NUMBER
ERROR@15607: expected command, found R_PAREN
ERROR@15608: expected command, found R_PAREN
ERROR@15612: expected string literal
ERROR@15612: expected SEMICOLON
ERROR@15613: expected command, found NOTHING_KW
ERROR@17667: expected COMMA

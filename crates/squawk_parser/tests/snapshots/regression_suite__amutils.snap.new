---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/amutils.sql
---
SOURCE_FILE
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test index AM property-reporting functions"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "prop"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_indexam_has_property"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "a"
                DOT "."
                NAME_REF
                  IDENT "oid"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "prop"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "\"AM\""
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_index_has_property"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'onek_hundred'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "prop"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "\"Index\""
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_index_column_has_property"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'onek_hundred'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "prop"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "\"Column\""
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_am"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE "\n       "
      CALL_EXPR
        NAME_REF
          IDENT "unnest"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            ARRAY_EXPR
              ARRAY_KW "array"
              L_BRACK "["
              LITERAL
                STRING "'asc'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'desc'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'nulls_first'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'nulls_last'"
              COMMA ","
              WHITESPACE "\n                    "
              LITERAL
                STRING "'orderable'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'distance_orderable'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'returnable'"
              COMMA ","
              WHITESPACE "\n                    "
              LITERAL
                STRING "'search_array'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'search_nulls'"
              COMMA ","
              WHITESPACE "\n                    "
              LITERAL
                STRING "'clusterable'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'index_scan'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'bitmap_scan'"
              COMMA ","
              WHITESPACE "\n                    "
              LITERAL
                STRING "'backward_scan'"
              COMMA ","
              WHITESPACE "\n                    "
              LITERAL
                STRING "'can_order'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'can_unique'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'can_multi_col'"
              COMMA ","
              WHITESPACE "\n                    "
              LITERAL
                STRING "'can_exclude'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'can_include'"
              COMMA ","
              WHITESPACE "\n                    "
              LITERAL
                STRING "'bogus'"
              R_BRACK "]"
            COLON2 "::"
            ARRAY_TYPE
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              L_BRACK "["
              R_BRACK "]"
          R_PAREN ")"
      WHITESPACE "\n         "
      WITH_KW "with"
      WHITESPACE " "
      ORDINALITY_KW "ordinality"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "u"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "prop"
          COMMA ","
          COLUMN
            NAME
              IDENT "ord"
          R_PAREN ")"
    WHITESPACE "\n "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "a"
          DOT "."
          NAME_REF
            IDENT "amname"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'btree'"
    WHITESPACE "\n "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "ord"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "prop"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_indexam_has_property"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "a"
                DOT "."
                NAME_REF
                  IDENT "oid"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "prop"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "\"AM\""
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_index_has_property"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'gcircleind'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "prop"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "\"Index\""
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_index_column_has_property"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'gcircleind'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "prop"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "\"Column\""
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_am"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE "\n       "
      CALL_EXPR
        NAME_REF
          IDENT "unnest"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            ARRAY_EXPR
              ARRAY_KW "array"
              L_BRACK "["
              LITERAL
                STRING "'asc'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'desc'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'nulls_first'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'nulls_last'"
              COMMA ","
              WHITESPACE "\n                    "
              LITERAL
                STRING "'orderable'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'distance_orderable'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'returnable'"
              COMMA ","
              WHITESPACE "\n                    "
              LITERAL
                STRING "'search_array'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'search_nulls'"
              COMMA ","
              WHITESPACE "\n                    "
              LITERAL
                STRING "'clusterable'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'index_scan'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'bitmap_scan'"
              COMMA ","
              WHITESPACE "\n                    "
              LITERAL
                STRING "'backward_scan'"
              COMMA ","
              WHITESPACE "\n                    "
              LITERAL
                STRING "'can_order'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'can_unique'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'can_multi_col'"
              COMMA ","
              WHITESPACE "\n                    "
              LITERAL
                STRING "'can_exclude'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'can_include'"
              COMMA ","
              WHITESPACE "\n                    "
              LITERAL
                STRING "'bogus'"
              R_BRACK "]"
            COLON2 "::"
            ARRAY_TYPE
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              L_BRACK "["
              R_BRACK "]"
          R_PAREN ")"
      WHITESPACE "\n         "
      WITH_KW "with"
      WHITESPACE " "
      ORDINALITY_KW "ordinality"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "u"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "prop"
          COMMA ","
          COLUMN
            NAME
              IDENT "ord"
          R_PAREN ")"
    WHITESPACE "\n "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "a"
          DOT "."
          NAME_REF
            IDENT "amname"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'gist'"
    WHITESPACE "\n "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "ord"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "prop"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_index_column_has_property"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'onek_hundred'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "prop"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "btree"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_index_column_has_property"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'hash_i4_index'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "prop"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "hash"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_index_column_has_property"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'gcircleind'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "prop"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "gist"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_index_column_has_property"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'sp_radix_ind'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "prop"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "spgist_radix"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_index_column_has_property"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'sp_quad_ind'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "prop"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "spgist_quad"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_index_column_has_property"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'botharrayidx'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "prop"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "gin"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_index_column_has_property"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'brinidx'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "prop"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "brin"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "unnest"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            ARRAY_EXPR
              ARRAY_KW "array"
              L_BRACK "["
              LITERAL
                STRING "'asc'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'desc'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'nulls_first'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'nulls_last'"
              COMMA ","
              WHITESPACE "\n                    "
              LITERAL
                STRING "'orderable'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'distance_orderable'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'returnable'"
              COMMA ","
              WHITESPACE "\n                    "
              LITERAL
                STRING "'search_array'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'search_nulls'"
              COMMA ","
              WHITESPACE "\n                    "
              LITERAL
                STRING "'bogus'"
              R_BRACK "]"
            COLON2 "::"
            ARRAY_TYPE
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              L_BRACK "["
              R_BRACK "]"
          R_PAREN ")"
      WHITESPACE "\n         "
      WITH_KW "with"
      WHITESPACE " "
      ORDINALITY_KW "ordinality"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "u"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "prop"
          COMMA ","
          COLUMN
            NAME
              IDENT "ord"
          R_PAREN ")"
    WHITESPACE "\n "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "ord"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "prop"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_index_has_property"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'onek_hundred'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "prop"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "btree"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_index_has_property"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'hash_i4_index'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "prop"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "hash"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_index_has_property"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'gcircleind'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "prop"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "gist"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_index_has_property"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'sp_radix_ind'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "prop"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "spgist"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_index_has_property"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'botharrayidx'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "prop"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "gin"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_index_has_property"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'brinidx'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "prop"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "brin"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "unnest"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            ARRAY_EXPR
              ARRAY_KW "array"
              L_BRACK "["
              LITERAL
                STRING "'clusterable'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'index_scan'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'bitmap_scan'"
              COMMA ","
              WHITESPACE "\n                    "
              LITERAL
                STRING "'backward_scan'"
              COMMA ","
              WHITESPACE "\n                    "
              LITERAL
                STRING "'bogus'"
              R_BRACK "]"
            COLON2 "::"
            ARRAY_TYPE
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              L_BRACK "["
              R_BRACK "]"
          R_PAREN ")"
      WHITESPACE "\n         "
      WITH_KW "with"
      WHITESPACE " "
      ORDINALITY_KW "ordinality"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "u"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "prop"
          COMMA ","
          COLUMN
            NAME
              IDENT "ord"
          R_PAREN ")"
    WHITESPACE "\n "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "ord"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "amname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "prop"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_indexam_has_property"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "a"
                DOT "."
                NAME_REF
                  IDENT "oid"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "prop"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "p"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_am"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE "\n       "
      CALL_EXPR
        NAME_REF
          IDENT "unnest"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            ARRAY_EXPR
              ARRAY_KW "array"
              L_BRACK "["
              LITERAL
                STRING "'can_order'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'can_unique'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'can_multi_col'"
              COMMA ","
              WHITESPACE "\n                    "
              LITERAL
                STRING "'can_exclude'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'can_include'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'bogus'"
              R_BRACK "]"
            COLON2 "::"
            ARRAY_TYPE
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              L_BRACK "["
              R_BRACK "]"
          R_PAREN ")"
      WHITESPACE "\n         "
      WITH_KW "with"
      WHITESPACE " "
      ORDINALITY_KW "ordinality"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "u"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "prop"
          COMMA ","
          COLUMN
            NAME
              IDENT "ord"
          R_PAREN ")"
    WHITESPACE "\n "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "amtype"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'i'"
    WHITESPACE "\n "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "amname"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "ord"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- additional checks for pg_index_column_has_property"
    WHITESPACE "\n"
    COMMENT "--"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "foo"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f4"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "fooindex"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "foo"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "f1"
      WHITESPACE " "
      DESC_KW "desc"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "f2"
      WHITESPACE " "
      ASC_KW "asc"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "f3"
      WHITESPACE " "
      NULLS_KW "nulls"
      WHITESPACE " "
      FIRST_KW "first"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "f4"
      WHITESPACE " "
      NULLS_KW "nulls"
      WHITESPACE " "
      LAST_KW "last"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "col"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "prop"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_index_column_has_property"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "o"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "col"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "prop"
              R_PAREN ")"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'fooindex'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v1"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "o"
          R_PAREN ")"
      COMMA ","
      WHITESPACE "\n       "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            STRING "'orderable'"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          COMMA ","
          LITERAL
            STRING "'asc'"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          COMMA ","
          LITERAL
            STRING "'desc'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n               "
          L_PAREN "("
          LITERAL
            INT_NUMBER "4"
          COMMA ","
          LITERAL
            STRING "'nulls_first'"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "5"
          COMMA ","
          LITERAL
            STRING "'nulls_last'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n               "
          L_PAREN "("
          LITERAL
            INT_NUMBER "6"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'bogus'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v2"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "idx"
          COMMA ","
          COLUMN
            NAME
              IDENT "prop"
          R_PAREN ")"
      COMMA ","
      WHITESPACE "\n       "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "4"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "col"
    WHITESPACE "\n "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "col"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "idx"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "foocover"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "foo"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "f1"
      R_PAREN ")"
    WHITESPACE " "
    CONSTRAINT_INCLUDE_CLAUSE
      INCLUDE_KW "INCLUDE"
      WHITESPACE " "
      COLUMN_LIST
        L_PAREN "("
        COLUMN
          NAME_REF
            IDENT "f2"
        COMMA ","
        COLUMN
          NAME_REF
            IDENT "f3"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "col"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "prop"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_index_column_has_property"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "o"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "col"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "prop"
              R_PAREN ")"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'foocover'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v1"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "o"
          R_PAREN ")"
      COMMA ","
      WHITESPACE "\n       "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            STRING "'orderable'"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          COMMA ","
          LITERAL
            STRING "'asc'"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          COMMA ","
          LITERAL
            STRING "'desc'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n               "
          L_PAREN "("
          LITERAL
            INT_NUMBER "4"
          COMMA ","
          LITERAL
            STRING "'nulls_first'"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "5"
          COMMA ","
          LITERAL
            STRING "'nulls_last'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n               "
          L_PAREN "("
          LITERAL
            INT_NUMBER "6"
          COMMA ","
          LITERAL
            STRING "'distance_orderable'"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "7"
          COMMA ","
          LITERAL
            STRING "'returnable'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n               "
          L_PAREN "("
          LITERAL
            INT_NUMBER "8"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'bogus'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v2"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "idx"
          COMMA ","
          COLUMN
            NAME
              IDENT "prop"
          R_PAREN ")"
      COMMA ","
      WHITESPACE "\n       "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "col"
    WHITESPACE "\n "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "col"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "idx"
  SEMICOLON ";"
  WHITESPACE "\n"

---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/xml.sql
---
SOURCE_FILE
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "xmltest"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          DATA_KW "data"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                XML_KW "xml"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "xmltest"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'<value>one</value>'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "xmltest"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'<value>two</value>'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "xmltest"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'<wrong'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmltest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test non-throwing API, too"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_input_is_valid"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'<value>one</value>'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'xml'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_input_is_valid"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'<value>one</'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'xml'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "message"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "pg_input_error_info"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'<value>one</'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'xml'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_input_is_valid"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'<?xml version=\"1.0\" standalone=\"y\"?><foo/>'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'xml'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "message"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "pg_input_error_info"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'<?xml version=\"1.0\" standalone=\"y\"?><foo/>'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'xml'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xmlcomment"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'test'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xmlcomment"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'-test'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xmlcomment"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'test-'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xmlcomment"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'--test'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xmlcomment"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'te st'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLCONCAT_KW "xmlconcat"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  IDENT "xmlcomment"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    STRING "'hello'"
                  R_PAREN ")"
              COMMA ","
              WHITESPACE "\n                 "
              CALL_EXPR
                NAME_REF
                  XMLELEMENT_KW "xmlelement"
                ARG_LIST
                  L_PAREN "("
                  NAME_KW "NAME"
                  WHITESPACE " "
                  NAME
                    IDENT "qux"
                  COMMA ","
                  WHITESPACE " "
                  LITERAL
                    STRING "'foo'"
                  R_PAREN ")"
              COMMA ","
              WHITESPACE "\n                 "
              CALL_EXPR
                NAME_REF
                  IDENT "xmlcomment"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    STRING "'world'"
                  R_PAREN ")"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLCONCAT_KW "xmlconcat"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'hello'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'you'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLCONCAT_KW "xmlconcat"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLCONCAT_KW "xmlconcat"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'bad'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'<syntax'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLCONCAT_KW "xmlconcat"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'<foo/>'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "NULL"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'<?xml version=\"1.1\" standalone=\"no\"?><bar/>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLCONCAT_KW "xmlconcat"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'<?xml version=\"1.1\"?><foo/>'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "NULL"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'<?xml version=\"1.1\" standalone=\"no\"?><bar/>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLCONCAT_KW "xmlconcat"
            ARG_LIST
              L_PAREN "("
              LITERAL
                NULL_KW "NULL"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLCONCAT_KW "xmlconcat"
            ARG_LIST
              L_PAREN "("
              LITERAL
                NULL_KW "NULL"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "NULL"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLELEMENT_KW "xmlelement"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "element"
              COMMA ","
              WHITESPACE "\n                  "
              XMLATTRIBUTES_KW "xmlattributes"
              WHITESPACE " "
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              WHITESPACE " "
              AS_KW "as"
              WHITESPACE " "
              NAME
                IDENT "one"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'deuce'"
              WHITESPACE " "
              AS_KW "as"
              WHITESPACE " "
              NAME
                IDENT "two"
              R_PAREN ")"
              COMMA ","
              WHITESPACE "\n                  "
              LITERAL
                STRING "'content'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLELEMENT_KW "xmlelement"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "element"
              COMMA ","
              WHITESPACE "\n                  "
              XMLATTRIBUTES_KW "xmlattributes"
              WHITESPACE " "
              L_PAREN "("
              LITERAL
                STRING "'unnamed and wrong'"
              R_PAREN ")"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLELEMENT_KW "xmlelement"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "element"
              COMMA ","
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  XMLELEMENT_KW "xmlelement"
                ARG_LIST
                  L_PAREN "("
                  NAME_KW "name"
                  WHITESPACE " "
                  NAME
                    NESTED_KW "nested"
                  COMMA ","
                  WHITESPACE " "
                  LITERAL
                    STRING "'stuff'"
                  R_PAREN ")"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLELEMENT_KW "xmlelement"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "employee"
              COMMA ","
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  XMLFOREST_KW "xmlforest"
                ARG_LIST
                  L_PAREN "("
                  NAME_REF
                    NAME_KW "name"
                  COMMA ","
                  WHITESPACE " "
                  NAME_REF
                    IDENT "age"
                  COMMA ","
                  WHITESPACE " "
                  NAME_REF
                    IDENT "salary"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "pay"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    FROM_KW "FROM"
  WHITESPACE " "
  ERROR
    IDENT "emp"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLELEMENT_KW "xmlelement"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "duplicate"
              COMMA ","
              WHITESPACE " "
              XMLATTRIBUTES_KW "xmlattributes"
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              WHITESPACE " "
              AS_KW "as"
              WHITESPACE " "
              NAME
                IDENT "a"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
              WHITESPACE " "
              AS_KW "as"
              WHITESPACE " "
              NAME
                IDENT "b"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
              WHITESPACE " "
              AS_KW "as"
              WHITESPACE " "
              NAME
                IDENT "a"
              R_PAREN ")"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLELEMENT_KW "xmlelement"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "num"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "37"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLELEMENT_KW "xmlelement"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "foo"
              COMMA ","
              WHITESPACE " "
              CAST_EXPR
                NAME_REF
                  TEXT_KW "text"
                WHITESPACE " "
                LITERAL
                  STRING "'bar'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLELEMENT_KW "xmlelement"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "foo"
              COMMA ","
              WHITESPACE " "
              CAST_EXPR
                NAME_REF
                  XML_KW "xml"
                WHITESPACE " "
                LITERAL
                  STRING "'bar'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLELEMENT_KW "xmlelement"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "foo"
              COMMA ","
              WHITESPACE " "
              CAST_EXPR
                NAME_REF
                  TEXT_KW "text"
                WHITESPACE " "
                LITERAL
                  STRING "'b<a/>r'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLELEMENT_KW "xmlelement"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "foo"
              COMMA ","
              WHITESPACE " "
              CAST_EXPR
                NAME_REF
                  XML_KW "xml"
                WHITESPACE " "
                LITERAL
                  STRING "'b<a/>r'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLELEMENT_KW "xmlelement"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "foo"
              COMMA ","
              WHITESPACE " "
              ARRAY_EXPR
                ARRAY_KW "array"
                L_BRACK "["
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "2"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "3"
                R_BRACK "]"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "xmlbinary"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "base64"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLELEMENT_KW "xmlelement"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "foo"
              COMMA ","
              WHITESPACE " "
              CAST_EXPR
                NAME_REF
                  IDENT "bytea"
                WHITESPACE " "
                LITERAL
                  STRING "'bar'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "xmlbinary"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "hex"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLELEMENT_KW "xmlelement"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "foo"
              COMMA ","
              WHITESPACE " "
              CAST_EXPR
                NAME_REF
                  IDENT "bytea"
                WHITESPACE " "
                LITERAL
                  STRING "'bar'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLELEMENT_KW "xmlelement"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "foo"
              COMMA ","
              WHITESPACE " "
              XMLATTRIBUTES_KW "xmlattributes"
              L_PAREN "("
              LITERAL
                TRUE_KW "true"
              WHITESPACE " "
              AS_KW "as"
              WHITESPACE " "
              NAME
                IDENT "bar"
              R_PAREN ")"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLELEMENT_KW "xmlelement"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "foo"
              COMMA ","
              WHITESPACE " "
              XMLATTRIBUTES_KW "xmlattributes"
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'2009-04-09 00:24:37'"
                COLON2 "::"
                TIME_TYPE
                  NAME_REF
                    TIMESTAMP_KW "timestamp"
              WHITESPACE " "
              AS_KW "as"
              WHITESPACE " "
              NAME
                IDENT "bar"
              R_PAREN ")"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLELEMENT_KW "xmlelement"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "foo"
              COMMA ","
              WHITESPACE " "
              XMLATTRIBUTES_KW "xmlattributes"
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'infinity'"
                COLON2 "::"
                TIME_TYPE
                  NAME_REF
                    TIMESTAMP_KW "timestamp"
              WHITESPACE " "
              AS_KW "as"
              WHITESPACE " "
              NAME
                IDENT "bar"
              R_PAREN ")"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLELEMENT_KW "xmlelement"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "foo"
              COMMA ","
              WHITESPACE " "
              XMLATTRIBUTES_KW "xmlattributes"
              L_PAREN "("
              LITERAL
                STRING "'<>&\"'''"
              WHITESPACE " "
              AS_KW "as"
              WHITESPACE " "
              NAME
                IDENT "funny"
              COMMA ","
              WHITESPACE " "
              CAST_EXPR
                NAME_REF
                  XML_KW "xml"
                WHITESPACE " "
                LITERAL
                  STRING "'b<a/>r'"
              WHITESPACE " "
              AS_KW "as"
              WHITESPACE " "
              NAME
                IDENT "funnier"
              R_PAREN ")"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPARSE_KW "xmlparse"
            ARG_LIST
              L_PAREN "("
              CONTENT_KW "content"
              WHITESPACE " "
              LITERAL
                STRING "''"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPARSE_KW "xmlparse"
            ARG_LIST
              L_PAREN "("
              CONTENT_KW "content"
              WHITESPACE " "
              LITERAL
                STRING "'  '"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPARSE_KW "xmlparse"
            ARG_LIST
              L_PAREN "("
              CONTENT_KW "content"
              WHITESPACE " "
              LITERAL
                STRING "'abc'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPARSE_KW "xmlparse"
            ARG_LIST
              L_PAREN "("
              CONTENT_KW "content"
              WHITESPACE " "
              LITERAL
                STRING "'<abc>x</abc>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPARSE_KW "xmlparse"
            ARG_LIST
              L_PAREN "("
              CONTENT_KW "content"
              WHITESPACE " "
              LITERAL
                STRING "'<invalidentity>&</invalidentity>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPARSE_KW "xmlparse"
            ARG_LIST
              L_PAREN "("
              CONTENT_KW "content"
              WHITESPACE " "
              LITERAL
                STRING "'<undefinedentity>&idontexist;</undefinedentity>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPARSE_KW "xmlparse"
            ARG_LIST
              L_PAREN "("
              CONTENT_KW "content"
              WHITESPACE " "
              LITERAL
                STRING "'<invalidns xmlns=''&lt;''/>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPARSE_KW "xmlparse"
            ARG_LIST
              L_PAREN "("
              CONTENT_KW "content"
              WHITESPACE " "
              LITERAL
                STRING "'<relativens xmlns=''relative''/>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPARSE_KW "xmlparse"
            ARG_LIST
              L_PAREN "("
              CONTENT_KW "content"
              WHITESPACE " "
              LITERAL
                STRING "'<twoerrors>&idontexist;</unbalanced>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPARSE_KW "xmlparse"
            ARG_LIST
              L_PAREN "("
              CONTENT_KW "content"
              WHITESPACE " "
              LITERAL
                STRING "'<nosuchprefix:tag/>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPARSE_KW "xmlparse"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "document"
              WHITESPACE " "
              LITERAL
                STRING "'   '"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPARSE_KW "xmlparse"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "document"
              WHITESPACE " "
              LITERAL
                STRING "'abc'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPARSE_KW "xmlparse"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "document"
              WHITESPACE " "
              LITERAL
                STRING "'<abc>x</abc>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPARSE_KW "xmlparse"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "document"
              WHITESPACE " "
              LITERAL
                STRING "'<invalidentity>&</abc>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPARSE_KW "xmlparse"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "document"
              WHITESPACE " "
              LITERAL
                STRING "'<undefinedentity>&idontexist;</abc>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPARSE_KW "xmlparse"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "document"
              WHITESPACE " "
              LITERAL
                STRING "'<invalidns xmlns=''&lt;''/>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPARSE_KW "xmlparse"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "document"
              WHITESPACE " "
              LITERAL
                STRING "'<relativens xmlns=''relative''/>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPARSE_KW "xmlparse"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "document"
              WHITESPACE " "
              LITERAL
                STRING "'<twoerrors>&idontexist;</unbalanced>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPARSE_KW "xmlparse"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "document"
              WHITESPACE " "
              LITERAL
                STRING "'<nosuchprefix:tag/>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPI_KW "xmlpi"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "foo"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPI_KW "xmlpi"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                XML_KW "xml"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPI_KW "xmlpi"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "xmlstuff"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPI_KW "xmlpi"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "foo"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'bar'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPI_KW "xmlpi"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "foo"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'in?>valid'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPI_KW "xmlpi"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "foo"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPI_KW "xmlpi"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                XML_KW "xml"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPI_KW "xmlpi"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "xmlstuff"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "null"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPI_KW "xmlpi"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "\"xml-stylesheet\""
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'href=\"mystyle.css\" type=\"text/css\"'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPI_KW "xmlpi"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "foo"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'   bar'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLROOT_KW "xmlroot"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  XML_KW "xml"
                WHITESPACE " "
                LITERAL
                  STRING "'<foo/>'"
              COMMA ","
              WHITESPACE " "
              VERSION_KW "version"
              WHITESPACE " "
              NO_KW "no"
              WHITESPACE " "
              VALUE_KW "value"
              COMMA ","
              WHITESPACE " "
              STANDALONE_KW "standalone"
              WHITESPACE " "
              NO_KW "no"
              WHITESPACE " "
              VALUE_KW "value"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLROOT_KW "xmlroot"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  XML_KW "xml"
                WHITESPACE " "
                LITERAL
                  STRING "'<foo/>'"
              COMMA ","
              WHITESPACE " "
              VERSION_KW "version"
              WHITESPACE " "
              LITERAL
                STRING "'2.0'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLROOT_KW "xmlroot"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  XML_KW "xml"
                WHITESPACE " "
                LITERAL
                  STRING "'<foo/>'"
              COMMA ","
              WHITESPACE " "
              VERSION_KW "version"
              WHITESPACE " "
              NO_KW "no"
              WHITESPACE " "
              VALUE_KW "value"
              COMMA ","
              WHITESPACE " "
              STANDALONE_KW "standalone"
              WHITESPACE " "
              YES_KW "yes"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLROOT_KW "xmlroot"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  XML_KW "xml"
                WHITESPACE " "
                LITERAL
                  STRING "'<?xml version=\"1.1\"?><foo/>'"
              COMMA ","
              WHITESPACE " "
              VERSION_KW "version"
              WHITESPACE " "
              NO_KW "no"
              WHITESPACE " "
              VALUE_KW "value"
              COMMA ","
              WHITESPACE " "
              STANDALONE_KW "standalone"
              WHITESPACE " "
              YES_KW "yes"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLROOT_KW "xmlroot"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  XMLROOT_KW "xmlroot"
                ARG_LIST
                  L_PAREN "("
                  CAST_EXPR
                    NAME_REF
                      XML_KW "xml"
                    WHITESPACE " "
                    LITERAL
                      STRING "'<foo/>'"
                  COMMA ","
                  WHITESPACE " "
                  VERSION_KW "version"
                  WHITESPACE " "
                  LITERAL
                    STRING "'1.0'"
                  R_PAREN ")"
              COMMA ","
              WHITESPACE " "
              VERSION_KW "version"
              WHITESPACE " "
              LITERAL
                STRING "'1.1'"
              COMMA ","
              WHITESPACE " "
              STANDALONE_KW "standalone"
              WHITESPACE " "
              NO_KW "no"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLROOT_KW "xmlroot"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'<?xml version=\"1.1\" standalone=\"yes\"?><foo/>'"
              COMMA ","
              WHITESPACE " "
              VERSION_KW "version"
              WHITESPACE " "
              NO_KW "no"
              WHITESPACE " "
              VALUE_KW "value"
              COMMA ","
              WHITESPACE " "
              STANDALONE_KW "standalone"
              WHITESPACE " "
              NO_KW "no"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLROOT_KW "xmlroot"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'<?xml version=\"1.1\" standalone=\"yes\"?><foo/>'"
              COMMA ","
              WHITESPACE " "
              VERSION_KW "version"
              WHITESPACE " "
              NO_KW "no"
              WHITESPACE " "
              VALUE_KW "value"
              COMMA ","
              WHITESPACE " "
              STANDALONE_KW "standalone"
              WHITESPACE " "
              NO_KW "no"
              WHITESPACE " "
              VALUE_KW "value"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLROOT_KW "xmlroot"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'<?xml version=\"1.1\" standalone=\"yes\"?><foo/>'"
              COMMA ","
              WHITESPACE " "
              VERSION_KW "version"
              WHITESPACE " "
              NO_KW "no"
              WHITESPACE " "
              VALUE_KW "value"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLROOT_KW "xmlroot"
            WHITESPACE " "
            ARG_LIST
              L_PAREN "("
              WHITESPACE "\n  "
              CALL_EXPR
                NAME_REF
                  XMLELEMENT_KW "xmlelement"
                WHITESPACE " "
                ARG_LIST
                  L_PAREN "("
                  WHITESPACE "\n    "
                  NAME_KW "name"
                  WHITESPACE " "
                  NAME
                    IDENT "gazonk"
                  COMMA ","
                  WHITESPACE "\n    "
                  XMLATTRIBUTES_KW "xmlattributes"
                  WHITESPACE " "
                  L_PAREN "("
                  WHITESPACE "\n      "
                  LITERAL
                    STRING "'val'"
                  WHITESPACE " "
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    NAME_KW "name"
                  COMMA ","
                  WHITESPACE "\n      "
                  BIN_EXPR
                    LITERAL
                      INT_NUMBER "1"
                    WHITESPACE " "
                    PLUS "+"
                    WHITESPACE " "
                    LITERAL
                      INT_NUMBER "1"
                  WHITESPACE " "
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "num"
                  WHITESPACE "\n    "
                  R_PAREN ")"
                  COMMA ","
                  WHITESPACE "\n    "
                  CALL_EXPR
                    NAME_REF
                      XMLELEMENT_KW "xmlelement"
                    WHITESPACE " "
                    ARG_LIST
                      L_PAREN "("
                      WHITESPACE "\n      "
                      NAME_KW "NAME"
                      WHITESPACE " "
                      NAME
                        IDENT "qux"
                      COMMA ","
                      WHITESPACE "\n      "
                      LITERAL
                        STRING "'foo'"
                      WHITESPACE "\n    "
                      R_PAREN ")"
                  WHITESPACE "\n  "
                  R_PAREN ")"
              COMMA ","
              WHITESPACE "\n  "
              VERSION_KW "version"
              WHITESPACE " "
              LITERAL
                STRING "'1.0'"
              COMMA ","
              WHITESPACE "\n  "
              STANDALONE_KW "standalone"
              WHITESPACE " "
              YES_KW "yes"
              WHITESPACE "\n"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            CALL_EXPR
              NAME_REF
                XMLSERIALIZE_KW "xmlserialize"
              ARG_LIST
                L_PAREN "("
                CONTENT_KW "content"
                WHITESPACE " "
                NAME_REF
                  DATA_KW "data"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                CHAR_TYPE
                  CHARACTER_KW "character"
                  WHITESPACE " "
                  VARYING_KW "varying"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "20"
              R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    FROM_KW "FROM"
  WHITESPACE " "
  ERROR
    IDENT "xmltest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            CALL_EXPR
              NAME_REF
                XMLSERIALIZE_KW "xmlserialize"
              ARG_LIST
                L_PAREN "("
                CONTENT_KW "content"
                WHITESPACE " "
                LITERAL
                  STRING "'good'"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                CHAR_TYPE
                  CHAR_KW "char"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "10"
              R_PAREN ")"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "document"
              WHITESPACE " "
              LITERAL
                STRING "'bad'"
              WHITESPACE " "
              AS_KW "as"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- indent"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "DOCUMENT"
              WHITESPACE " "
              LITERAL
                STRING "'<foo><bar><val x=\"y\">42</val></bar></foo>'"
              WHITESPACE " "
              AS_KW "AS"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              WHITESPACE " "
              INDENT_KW "INDENT"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              CONTENT_KW "CONTENT"
              WHITESPACE "  "
              LITERAL
                STRING "'<foo><bar><val x=\"y\">42</val></bar></foo>'"
              WHITESPACE " "
              AS_KW "AS"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              WHITESPACE " "
              INDENT_KW "INDENT"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- no indent"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "DOCUMENT"
              WHITESPACE " "
              LITERAL
                STRING "'<foo><bar><val x=\"y\">42</val></bar></foo>'"
              WHITESPACE " "
              AS_KW "AS"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              WHITESPACE " "
              NO_KW "NO"
              WHITESPACE " "
              INDENT_KW "INDENT"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              CONTENT_KW "CONTENT"
              WHITESPACE "  "
              LITERAL
                STRING "'<foo><bar><val x=\"y\">42</val></bar></foo>'"
              WHITESPACE " "
              AS_KW "AS"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              WHITESPACE " "
              NO_KW "NO"
              WHITESPACE " "
              INDENT_KW "INDENT"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- indent non singly-rooted xml"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "DOCUMENT"
              WHITESPACE " "
              LITERAL
                STRING "'<foo>73</foo><bar><val x=\"y\">42</val></bar>'"
              WHITESPACE " "
              AS_KW "AS"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              WHITESPACE " "
              INDENT_KW "INDENT"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              CONTENT_KW "CONTENT"
              WHITESPACE "  "
              LITERAL
                STRING "'<foo>73</foo><bar><val x=\"y\">42</val></bar>'"
              WHITESPACE " "
              AS_KW "AS"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              WHITESPACE " "
              INDENT_KW "INDENT"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- indent non singly-rooted xml with mixed contents"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "DOCUMENT"
              WHITESPACE " "
              LITERAL
                STRING "'text node<foo>73</foo>text node<bar><val x=\"y\">42</val></bar>'"
              WHITESPACE " "
              AS_KW "AS"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              WHITESPACE " "
              INDENT_KW "INDENT"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              CONTENT_KW "CONTENT"
              WHITESPACE "  "
              LITERAL
                STRING "'text node<foo>73</foo>text node<bar><val x=\"y\">42</val></bar>'"
              WHITESPACE " "
              AS_KW "AS"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              WHITESPACE " "
              INDENT_KW "INDENT"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- indent singly-rooted xml with mixed contents"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "DOCUMENT"
              WHITESPACE " "
              LITERAL
                STRING "'<foo><bar><val x=\"y\">42</val><val x=\"y\">text node<val>73</val></val></bar></foo>'"
              WHITESPACE " "
              AS_KW "AS"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              WHITESPACE " "
              INDENT_KW "INDENT"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              CONTENT_KW "CONTENT"
              WHITESPACE "  "
              LITERAL
                STRING "'<foo><bar><val x=\"y\">42</val><val x=\"y\">text node<val>73</val></val></bar></foo>'"
              WHITESPACE " "
              AS_KW "AS"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              WHITESPACE " "
              INDENT_KW "INDENT"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- indent empty string"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "DOCUMENT"
              WHITESPACE " "
              LITERAL
                STRING "''"
              WHITESPACE " "
              AS_KW "AS"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              WHITESPACE " "
              INDENT_KW "INDENT"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              CONTENT_KW "CONTENT"
              WHITESPACE "  "
              LITERAL
                STRING "''"
              WHITESPACE " "
              AS_KW "AS"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              WHITESPACE " "
              INDENT_KW "INDENT"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- whitespaces"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "DOCUMENT"
              WHITESPACE " "
              LITERAL
                STRING "'  '"
              WHITESPACE " "
              AS_KW "AS"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              WHITESPACE " "
              INDENT_KW "INDENT"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              CONTENT_KW "CONTENT"
              WHITESPACE "  "
              LITERAL
                STRING "'  '"
              WHITESPACE " "
              AS_KW "AS"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              WHITESPACE " "
              INDENT_KW "INDENT"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- indent null"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "DOCUMENT"
              WHITESPACE " "
              LITERAL
                NULL_KW "NULL"
              WHITESPACE " "
              AS_KW "AS"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              WHITESPACE " "
              INDENT_KW "INDENT"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              CONTENT_KW "CONTENT"
              WHITESPACE "  "
              LITERAL
                NULL_KW "NULL"
              WHITESPACE " "
              AS_KW "AS"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              WHITESPACE " "
              INDENT_KW "INDENT"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- indent with XML declaration"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "DOCUMENT"
              WHITESPACE " "
              LITERAL
                STRING "'<?xml version=\"1.0\" encoding=\"UTF-8\"?><foo><bar><val>73</val></bar></foo>'"
              WHITESPACE " "
              AS_KW "AS"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              WHITESPACE " "
              INDENT_KW "INDENT"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              CONTENT_KW "CONTENT"
              WHITESPACE "  "
              LITERAL
                STRING "'<?xml version=\"1.0\" encoding=\"UTF-8\"?><foo><bar><val>73</val></bar></foo>'"
              WHITESPACE " "
              AS_KW "AS"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              WHITESPACE " "
              INDENT_KW "INDENT"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- indent containing DOCTYPE declaration"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "DOCUMENT"
              WHITESPACE " "
              LITERAL
                STRING "'<!DOCTYPE a><a/>'"
              WHITESPACE " "
              AS_KW "AS"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              WHITESPACE " "
              INDENT_KW "INDENT"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              CONTENT_KW "CONTENT"
              WHITESPACE "  "
              LITERAL
                STRING "'<!DOCTYPE a><a/>'"
              WHITESPACE " "
              AS_KW "AS"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              WHITESPACE " "
              INDENT_KW "INDENT"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- indent xml with empty element"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "DOCUMENT"
              WHITESPACE " "
              LITERAL
                STRING "'<foo><bar></bar></foo>'"
              WHITESPACE " "
              AS_KW "AS"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              WHITESPACE " "
              INDENT_KW "INDENT"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              CONTENT_KW "CONTENT"
              WHITESPACE "  "
              LITERAL
                STRING "'<foo><bar></bar></foo>'"
              WHITESPACE " "
              AS_KW "AS"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              WHITESPACE " "
              INDENT_KW "INDENT"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- 'no indent' = not using 'no indent'"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                XMLSERIALIZE_KW "xmlserialize"
              ARG_LIST
                L_PAREN "("
                DOCUMENT_KW "DOCUMENT"
                WHITESPACE " "
                LITERAL
                  STRING "'<foo><bar><val x=\"y\">42</val></bar></foo>'"
                WHITESPACE " "
                AS_KW "AS"
                WHITESPACE " "
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        TEXT_KW "text"
                R_PAREN ")"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                XMLSERIALIZE_KW "xmlserialize"
              ARG_LIST
                L_PAREN "("
                DOCUMENT_KW "DOCUMENT"
                WHITESPACE " "
                LITERAL
                  STRING "'<foo><bar><val x=\"y\">42</val></bar></foo>'"
                WHITESPACE " "
                AS_KW "AS"
                WHITESPACE " "
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        TEXT_KW "text"
                WHITESPACE " "
                NO_KW "NO"
                WHITESPACE " "
                INDENT_KW "INDENT"
                R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                XMLSERIALIZE_KW "xmlserialize"
              ARG_LIST
                L_PAREN "("
                CONTENT_KW "CONTENT"
                WHITESPACE "  "
                LITERAL
                  STRING "'<foo><bar><val x=\"y\">42</val></bar></foo>'"
                WHITESPACE " "
                AS_KW "AS"
                WHITESPACE " "
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        TEXT_KW "text"
                R_PAREN ")"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                XMLSERIALIZE_KW "xmlserialize"
              ARG_LIST
                L_PAREN "("
                CONTENT_KW "CONTENT"
                WHITESPACE " "
                LITERAL
                  STRING "'<foo><bar><val x=\"y\">42</val></bar></foo>'"
                WHITESPACE " "
                AS_KW "AS"
                WHITESPACE " "
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        TEXT_KW "text"
                WHITESPACE " "
                NO_KW "NO"
                WHITESPACE " "
                INDENT_KW "INDENT"
                R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- indent xml strings containing blank nodes"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "DOCUMENT"
              WHITESPACE " "
              LITERAL
                STRING "'<foo>   <bar></bar>    </foo>'"
              WHITESPACE " "
              AS_KW "AS"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              WHITESPACE " "
              INDENT_KW "INDENT"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLSERIALIZE_KW "xmlserialize"
            ARG_LIST
              L_PAREN "("
              CONTENT_KW "CONTENT"
              WHITESPACE "  "
              LITERAL
                STRING "'text node<foo>    <bar></bar>   </foo>'"
              WHITESPACE " "
              AS_KW "AS"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              WHITESPACE " "
              INDENT_KW "INDENT"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CAST_EXPR
              NAME_REF
                XML_KW "xml"
              WHITESPACE " "
              LITERAL
                STRING "'<foo>bar</foo>'"
            WHITESPACE " "
            IS_KW "IS"
            WHITESPACE " "
            NAME_REF
              DOCUMENT_KW "DOCUMENT"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CAST_EXPR
              NAME_REF
                XML_KW "xml"
              WHITESPACE " "
              LITERAL
                STRING "'<foo>bar</foo><bar>foo</bar>'"
            WHITESPACE " "
            IS_KW "IS"
            WHITESPACE " "
            NAME_REF
              DOCUMENT_KW "DOCUMENT"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CAST_EXPR
              NAME_REF
                XML_KW "xml"
              WHITESPACE " "
              LITERAL
                STRING "'<abc/>'"
            WHITESPACE " "
            IS_NOT
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
            WHITESPACE " "
            NAME_REF
              DOCUMENT_KW "DOCUMENT"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CAST_EXPR
              NAME_REF
                XML_KW "xml"
              WHITESPACE " "
              LITERAL
                STRING "'abc'"
            WHITESPACE " "
            IS_NOT
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
            WHITESPACE " "
            NAME_REF
              DOCUMENT_KW "DOCUMENT"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            LITERAL
              STRING "'<>'"
            WHITESPACE " "
            IS_NOT
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
            WHITESPACE " "
            NAME_REF
              DOCUMENT_KW "DOCUMENT"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xmlagg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                DATA_KW "data"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmltest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xmlagg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                DATA_KW "data"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmltest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLELEMENT_KW "xmlelement"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "employees"
              COMMA ","
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "xmlagg"
                ARG_LIST
                  L_PAREN "("
                  CALL_EXPR
                    NAME_REF
                      XMLELEMENT_KW "xmlelement"
                    ARG_LIST
                      L_PAREN "("
                      NAME_KW "name"
                      WHITESPACE " "
                      NAME
                        NAME_KW "name"
                      COMMA ","
                      WHITESPACE " "
                      NAME_REF
                        NAME_KW "name"
                      R_PAREN ")"
                  R_PAREN ")"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "emp"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- Check mapping SQL identifier to XML name"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPI_KW "xmlpi"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "\":::_xml_abc135.%-&_\""
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPI_KW "xmlpi"
            ARG_LIST
              L_PAREN "("
              NAME_KW "name"
              WHITESPACE " "
              NAME
                IDENT "\"123\""
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  PREPARE_STMT
    PREPARE_KW "PREPARE"
    WHITESPACE " "
    NAME
      IDENT "foo"
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            XML_KW "xml"
    R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                XMLCONCAT_KW "xmlconcat"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  STRING "'<foo/>'"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  PARAM "$1"
                R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      XML_KW "XML"
    WHITESPACE " "
    OPTION_KW "OPTION"
  WHITESPACE " "
  ERROR
    DOCUMENT_KW "DOCUMENT"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "foo"
    WHITESPACE " "
    ARG_LIST
      L_PAREN "("
      LITERAL
        STRING "'<bar/>'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "foo"
    WHITESPACE " "
    ARG_LIST
      L_PAREN "("
      LITERAL
        STRING "'bad'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              XML_KW "xml"
            WHITESPACE " "
            LITERAL
              STRING "'<!DOCTYPE a><a/><b/>'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      XML_KW "XML"
    WHITESPACE " "
    OPTION_KW "OPTION"
  WHITESPACE " "
  ERROR
    CONTENT_KW "CONTENT"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "foo"
    WHITESPACE " "
    ARG_LIST
      L_PAREN "("
      LITERAL
        STRING "'<bar/>'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "foo"
    WHITESPACE " "
    ARG_LIST
      L_PAREN "("
      LITERAL
        STRING "'good'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              XML_KW "xml"
            WHITESPACE " "
            LITERAL
              STRING "'<!-- in SQL:2006+ a doc is content too--> <?y z?> <!DOCTYPE a><a/>'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              XML_KW "xml"
            WHITESPACE " "
            LITERAL
              STRING "'<?xml version=\"1.0\"?> <!-- hi--> <!DOCTYPE a><a/>'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              XML_KW "xml"
            WHITESPACE " "
            LITERAL
              STRING "'<!DOCTYPE a><a/>'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              XML_KW "xml"
            WHITESPACE " "
            LITERAL
              STRING "'<!-- hi--> oops <!DOCTYPE a><a/>'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              XML_KW "xml"
            WHITESPACE " "
            LITERAL
              STRING "'<!-- hi--> <oops/> <!DOCTYPE a><a/>'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              XML_KW "xml"
            WHITESPACE " "
            LITERAL
              STRING "'<!DOCTYPE a><a/><b/>'"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- Test backwards parsing"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "xmlview1"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "xmlcomment"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  STRING "'test'"
                R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "xmlview2"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                XMLCONCAT_KW "xmlconcat"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  STRING "'hello'"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  STRING "'you'"
                R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "xmlview3"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                XMLELEMENT_KW "xmlelement"
              ARG_LIST
                L_PAREN "("
                NAME_KW "name"
                WHITESPACE " "
                NAME
                  IDENT "element"
                COMMA ","
                WHITESPACE " "
                XMLATTRIBUTES_KW "xmlattributes"
                WHITESPACE " "
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "\":one:\""
                COMMA ","
                WHITESPACE " "
                LITERAL
                  STRING "'deuce'"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "two"
                R_PAREN ")"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  STRING "'content&'"
                R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "xmlview4"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                XMLELEMENT_KW "xmlelement"
              ARG_LIST
                L_PAREN "("
                NAME_KW "name"
                WHITESPACE " "
                NAME
                  IDENT "employee"
                COMMA ","
                WHITESPACE " "
                CALL_EXPR
                  NAME_REF
                    XMLFOREST_KW "xmlforest"
                  ARG_LIST
                    L_PAREN "("
                    NAME_REF
                      NAME_KW "name"
                    COMMA ","
                    WHITESPACE " "
                    NAME_REF
                      IDENT "age"
                    COMMA ","
                    WHITESPACE " "
                    NAME_REF
                      IDENT "salary"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "pay"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    FROM_KW "FROM"
  WHITESPACE " "
  ERROR
    IDENT "emp"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "xmlview5"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                XMLPARSE_KW "xmlparse"
              ARG_LIST
                L_PAREN "("
                CONTENT_KW "content"
                WHITESPACE " "
                LITERAL
                  STRING "'<abc>x</abc>'"
                R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "xmlview6"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                XMLPI_KW "xmlpi"
              ARG_LIST
                L_PAREN "("
                NAME_KW "name"
                WHITESPACE " "
                NAME
                  IDENT "foo"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  STRING "'bar'"
                R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "xmlview7"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                XMLROOT_KW "xmlroot"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  NAME_REF
                    XML_KW "xml"
                  WHITESPACE " "
                  LITERAL
                    STRING "'<foo/>'"
                COMMA ","
                WHITESPACE " "
                VERSION_KW "version"
                WHITESPACE " "
                NO_KW "no"
                WHITESPACE " "
                VALUE_KW "value"
                COMMA ","
                WHITESPACE " "
                STANDALONE_KW "standalone"
                WHITESPACE " "
                YES_KW "yes"
                R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "xmlview8"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              CALL_EXPR
                NAME_REF
                  XMLSERIALIZE_KW "xmlserialize"
                ARG_LIST
                  L_PAREN "("
                  CONTENT_KW "content"
                  WHITESPACE " "
                  LITERAL
                    STRING "'good'"
                  WHITESPACE " "
                  AS_KW "as"
                  WHITESPACE " "
                  CHAR_TYPE
                    CHAR_KW "char"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "10"
                R_PAREN ")"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "xmlview9"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                XMLSERIALIZE_KW "xmlserialize"
              ARG_LIST
                L_PAREN "("
                CONTENT_KW "content"
                WHITESPACE " "
                LITERAL
                  STRING "'good'"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        TEXT_KW "text"
                R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "xmlview10"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                XMLSERIALIZE_KW "xmlserialize"
              ARG_LIST
                L_PAREN "("
                DOCUMENT_KW "document"
                WHITESPACE " "
                LITERAL
                  STRING "'<foo><bar>42</bar></foo>'"
                WHITESPACE " "
                AS_KW "AS"
                WHITESPACE " "
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        TEXT_KW "text"
                WHITESPACE " "
                INDENT_KW "indent"
                R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "xmlview11"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                XMLSERIALIZE_KW "xmlserialize"
              ARG_LIST
                L_PAREN "("
                DOCUMENT_KW "document"
                WHITESPACE " "
                LITERAL
                  STRING "'<foo><bar>42</bar></foo>'"
                WHITESPACE " "
                AS_KW "AS"
                WHITESPACE " "
                CHAR_TYPE
                  CHARACTER_KW "character"
                  WHITESPACE " "
                  VARYING_KW "varying"
                WHITESPACE " "
                NO_KW "no"
                WHITESPACE " "
                INDENT_KW "indent"
                R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "table_name"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "view_definition"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "information_schema"
        DOT "."
        NAME_REF
          VIEWS_KW "views"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "table_name"
        WHITESPACE " "
        LIKE_KW "LIKE"
        WHITESPACE " "
        LITERAL
          STRING "'xmlview%'"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Text XPath expressions evaluation"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xpath"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'/value'"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                DATA_KW "data"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmltest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "xpath"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  NULL_KW "NULL"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  NULL_KW "NULL"
                R_PAREN ")"
            WHITESPACE " "
            IS_KW "IS"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmltest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xpath"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "''"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'<!-- error -->'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xpath"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'//text()'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'<local:data xmlns:local=\"http://127.0.0.1\"><local:piece id=\"1\">number one</local:piece><local:piece id=\"2\" /></local:data>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xpath"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'//loc:piece/@id'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'<local:data xmlns:local=\"http://127.0.0.1\"><local:piece id=\"1\">number one</local:piece><local:piece id=\"2\" /></local:data>'"
              COMMA ","
              WHITESPACE " "
              ARRAY_EXPR
                ARRAY_KW "ARRAY"
                L_BRACK "["
                ARRAY_EXPR
                  ARRAY_KW "ARRAY"
                  L_BRACK "["
                  LITERAL
                    STRING "'loc'"
                  COMMA ","
                  WHITESPACE " "
                  LITERAL
                    STRING "'http://127.0.0.1'"
                  R_BRACK "]"
                R_BRACK "]"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xpath"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'//loc:piece'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'<local:data xmlns:local=\"http://127.0.0.1\"><local:piece id=\"1\">number one</local:piece><local:piece id=\"2\" /></local:data>'"
              COMMA ","
              WHITESPACE " "
              ARRAY_EXPR
                ARRAY_KW "ARRAY"
                L_BRACK "["
                ARRAY_EXPR
                  ARRAY_KW "ARRAY"
                  L_BRACK "["
                  LITERAL
                    STRING "'loc'"
                  COMMA ","
                  WHITESPACE " "
                  LITERAL
                    STRING "'http://127.0.0.1'"
                  R_BRACK "]"
                R_BRACK "]"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xpath"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'//loc:piece'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'<local:data xmlns:local=\"http://127.0.0.1\" xmlns=\"http://127.0.0.2\"><local:piece id=\"1\"><internal>number one</internal><internal2/></local:piece><local:piece id=\"2\" /></local:data>'"
              COMMA ","
              WHITESPACE " "
              ARRAY_EXPR
                ARRAY_KW "ARRAY"
                L_BRACK "["
                ARRAY_EXPR
                  ARRAY_KW "ARRAY"
                  L_BRACK "["
                  LITERAL
                    STRING "'loc'"
                  COMMA ","
                  WHITESPACE " "
                  LITERAL
                    STRING "'http://127.0.0.1'"
                  R_BRACK "]"
                R_BRACK "]"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xpath"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'//b'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'<a>one <b>two</b> three <b>etc</b></a>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xpath"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'//text()'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'<root>&lt;</root>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xpath"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'//@value'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'<root value=\"&lt;\"/>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xpath"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'''<<invalid>>'''"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'<root/>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xpath"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'count(//*)'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'<root><sub/><sub/></root>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xpath"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'count(//*)=0'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'<root><sub/><sub/></root>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xpath"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'count(//*)=3'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'<root><sub/><sub/></root>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xpath"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'name(/*)'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'<root><sub/><sub/></root>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xpath"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'/nosuchtag'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'<root/>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xpath"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'root'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'<root/>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Round-trip non-ASCII data through xpath()."
  WHITESPACE "\n"
  DO_STMT
    DO_KW "DO"
    WHITESPACE " "
    LITERAL
      DOLLAR_QUOTED_STRING "$$\nDECLARE\n  xml_declaration text := '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>';\n  degree_symbol text;\n  res xml[];\nBEGIN\n  -- Per the documentation, except when the server encoding is UTF8, xpath()\n  -- may not work on non-ASCII data.  The untranslatable_character and\n  -- undefined_function traps below, currently dead code, will become relevant\n  -- if we remove this limitation.\n  IF current_setting('server_encoding') <> 'UTF8' THEN\n    RAISE LOG 'skip: encoding % unsupported for xpath',\n      current_setting('server_encoding');\n    RETURN;\n  END IF;\n\n  degree_symbol := convert_from('\\xc2b0', 'UTF8');\n  res := xpath('text()', (xml_declaration ||\n    '<x>' || degree_symbol || '</x>')::xml);\n  IF degree_symbol <> res[1]::text THEN\n    RAISE 'expected % (%), got % (%)',\n      degree_symbol, convert_to(degree_symbol, 'UTF8'),\n      res[1], convert_to(res[1]::text, 'UTF8');\n  END IF;\nEXCEPTION\n  -- character with byte sequence 0xc2 0xb0 in encoding \"UTF8\" has no equivalent in encoding \"LATIN8\"\n  WHEN untranslatable_character\n  -- default conversion function for encoding \"UTF8\" to \"MULE_INTERNAL\" does not exist\n  OR undefined_function\n  -- unsupported XML feature\n  OR feature_not_supported THEN\n    RAISE LOG 'skip: %', SQLERRM;\nEND\n$$"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test xmlexists and xpath_exists"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLEXISTS_KW "xmlexists"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'//town[text() = ''Toronto'']'"
              WHITESPACE " "
              PASSING_KW "PASSING"
              WHITESPACE " "
              BY_KW "BY"
              WHITESPACE " "
              REF_KW "REF"
              WHITESPACE " "
              LITERAL
                STRING "'<towns><town>Bidford-on-Avon</town><town>Cwmbran</town><town>Bristol</town></towns>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLEXISTS_KW "xmlexists"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'//town[text() = ''Cwmbran'']'"
              WHITESPACE " "
              PASSING_KW "PASSING"
              WHITESPACE " "
              BY_KW "BY"
              WHITESPACE " "
              REF_KW "REF"
              WHITESPACE " "
              LITERAL
                STRING "'<towns><town>Bidford-on-Avon</town><town>Cwmbran</town><town>Bristol</town></towns>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLEXISTS_KW "xmlexists"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'count(/nosuchtag)'"
              WHITESPACE " "
              PASSING_KW "PASSING"
              WHITESPACE " "
              BY_KW "BY"
              WHITESPACE " "
              REF_KW "REF"
              WHITESPACE " "
              LITERAL
                STRING "'<root/>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xpath_exists"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'//town[text() = ''Toronto'']'"
              COMMA ","
              CAST_EXPR
                LITERAL
                  STRING "'<towns><town>Bidford-on-Avon</town><town>Cwmbran</town><town>Bristol</town></towns>'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        XML_KW "xml"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xpath_exists"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'//town[text() = ''Cwmbran'']'"
              COMMA ","
              CAST_EXPR
                LITERAL
                  STRING "'<towns><town>Bidford-on-Avon</town><town>Cwmbran</town><town>Bristol</town></towns>'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        XML_KW "xml"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xpath_exists"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'count(/nosuchtag)'"
              COMMA ","
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'<root/>'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        XML_KW "xml"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "xmltest"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      WHITESPACE " "
      CAST_EXPR
        LITERAL
          STRING "'<menu><beers><name>Budvar</name><cost>free</cost><name>Carling</name><cost>lots</cost></beers></menu>'"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                XML_KW "xml"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "xmltest"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      WHITESPACE " "
      CAST_EXPR
        LITERAL
          STRING "'<menu><beers><name>Molson</name><cost>free</cost><name>Carling</name><cost>lots</cost></beers></menu>'"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                XML_KW "xml"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "xmltest"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "6"
      COMMA ","
      WHITESPACE " "
      CAST_EXPR
        LITERAL
          STRING "'<myns:menu xmlns:myns=\"http://myns.com\"><myns:beers><myns:name>Budvar</myns:name><myns:cost>free</myns:cost><myns:name>Carling</myns:name><myns:cost>lots</myns:cost></myns:beers></myns:menu>'"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                XML_KW "xml"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "xmltest"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "7"
      COMMA ","
      WHITESPACE " "
      CAST_EXPR
        LITERAL
          STRING "'<myns:menu xmlns:myns=\"http://myns.com\"><myns:beers><myns:name>Molson</myns:name><myns:cost>free</myns:cost><myns:name>Carling</myns:name><myns:cost>lots</myns:cost></myns:beers></myns:menu>'"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                XML_KW "xml"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "id"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmltest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLEXISTS_KW "xmlexists"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/menu/beer'"
          WHITESPACE " "
          PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            DATA_KW "data"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "id"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmltest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLEXISTS_KW "xmlexists"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/menu/beer'"
          WHITESPACE " "
          PASSING_KW "PASSING"
          WHITESPACE " "
          BY_KW "BY"
          WHITESPACE " "
          REF_KW "REF"
          WHITESPACE " "
          NAME_REF
            DATA_KW "data"
          WHITESPACE " "
          BY_KW "BY"
          WHITESPACE " "
          REF_KW "REF"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "id"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmltest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLEXISTS_KW "xmlexists"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/menu/beers'"
          WHITESPACE " "
          PASSING_KW "PASSING"
          WHITESPACE " "
          BY_KW "BY"
          WHITESPACE " "
          REF_KW "REF"
          WHITESPACE " "
          NAME_REF
            DATA_KW "data"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "id"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmltest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLEXISTS_KW "xmlexists"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/menu/beers/name[text() = ''Molson'']'"
          WHITESPACE " "
          PASSING_KW "PASSING"
          WHITESPACE " "
          BY_KW "BY"
          WHITESPACE " "
          REF_KW "REF"
          WHITESPACE " "
          NAME_REF
            DATA_KW "data"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "id"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmltest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "xpath_exists"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/menu/beer'"
          COMMA ","
          NAME_REF
            DATA_KW "data"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "id"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmltest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "xpath_exists"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/menu/beers'"
          COMMA ","
          NAME_REF
            DATA_KW "data"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "id"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmltest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "xpath_exists"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/menu/beers/name[text() = ''Molson'']'"
          COMMA ","
          NAME_REF
            DATA_KW "data"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "id"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmltest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "xpath_exists"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/myns:menu/myns:beer'"
          COMMA ","
          NAME_REF
            DATA_KW "data"
          COMMA ","
          ARRAY_EXPR
            ARRAY_KW "ARRAY"
            L_BRACK "["
            ARRAY_EXPR
              ARRAY_KW "ARRAY"
              L_BRACK "["
              LITERAL
                STRING "'myns'"
              COMMA ","
              LITERAL
                STRING "'http://myns.com'"
              R_BRACK "]"
            R_BRACK "]"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "id"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmltest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "xpath_exists"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/myns:menu/myns:beers'"
          COMMA ","
          NAME_REF
            DATA_KW "data"
          COMMA ","
          ARRAY_EXPR
            ARRAY_KW "ARRAY"
            L_BRACK "["
            ARRAY_EXPR
              ARRAY_KW "ARRAY"
              L_BRACK "["
              LITERAL
                STRING "'myns'"
              COMMA ","
              LITERAL
                STRING "'http://myns.com'"
              R_BRACK "]"
            R_BRACK "]"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "id"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmltest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "xpath_exists"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/myns:menu/myns:beers/myns:name[text() = ''Molson'']'"
          COMMA ","
          NAME_REF
            DATA_KW "data"
          COMMA ","
          ARRAY_EXPR
            ARRAY_KW "ARRAY"
            L_BRACK "["
            ARRAY_EXPR
              ARRAY_KW "ARRAY"
              L_BRACK "["
              LITERAL
                STRING "'myns'"
              COMMA ","
              LITERAL
                STRING "'http://myns.com'"
              R_BRACK "]"
            R_BRACK "]"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "query"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "expr"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
      WHITESPACE " "
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "query"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'/menu/beers/cost[text() = ''lots'']'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "id"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmltest"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "query"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLEXISTS_KW "xmlexists"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "expr"
          WHITESPACE " "
          PASSING_KW "PASSING"
          WHITESPACE " "
          BY_KW "BY"
          WHITESPACE " "
          REF_KW "REF"
          WHITESPACE " "
          NAME_REF
            DATA_KW "data"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test xml_is_well_formed and variants"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xml_is_well_formed_document"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'<foo>bar</foo>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xml_is_well_formed_document"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'abc'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xml_is_well_formed_content"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'<foo>bar</foo>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xml_is_well_formed_content"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'abc'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "xmloption"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    DOCUMENT_KW "DOCUMENT"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xml_is_well_formed"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'abc'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xml_is_well_formed"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'<>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xml_is_well_formed"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'<abc/>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xml_is_well_formed"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'<foo>bar</foo>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xml_is_well_formed"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'<foo>bar</foo'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xml_is_well_formed"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'<foo><bar>baz</foo>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xml_is_well_formed"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'<local:data xmlns:local=\"http://127.0.0.1\"><local:piece id=\"1\">number one</local:piece><local:piece id=\"2\" /></local:data>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xml_is_well_formed"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'<pg:foo xmlns:pg=\"http://postgresql.org/stuff\">bar</my:foo>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xml_is_well_formed"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'<pg:foo xmlns:pg=\"http://postgresql.org/stuff\">bar</pg:foo>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xml_is_well_formed"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'<invalidentity>&</abc>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xml_is_well_formed"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'<undefinedentity>&idontexist;</abc>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xml_is_well_formed"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'<invalidns xmlns=''&lt;''/>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xml_is_well_formed"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'<relativens xmlns=''relative''/>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xml_is_well_formed"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'<twoerrors>&idontexist;</unbalanced>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "xmloption"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    CONTENT_KW "CONTENT"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xml_is_well_formed"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'abc'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Since xpath() deals with namespaces, it's a bit stricter about"
  WHITESPACE "\n"
  COMMENT "-- what's well-formed and what's not. If we don't obey these rules"
  WHITESPACE "\n"
  COMMENT "-- (i.e. ignore namespace-related errors from libxml), xpath()"
  WHITESPACE "\n"
  COMMENT "-- fails in subtle ways. The following would for example produce"
  WHITESPACE "\n"
  COMMENT "-- the xml value"
  WHITESPACE "\n"
  COMMENT "--   <invalidns xmlns='<'/>"
  WHITESPACE "\n"
  COMMENT "-- which is invalid because '<' may not appear un-escaped in"
  WHITESPACE "\n"
  COMMENT "-- attribute values."
  WHITESPACE "\n"
  COMMENT "-- Since different libxml versions emit slightly different"
  WHITESPACE "\n"
  COMMENT "-- error messages, we suppress the DETAIL in this test."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xpath"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'/*'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'<invalidns xmlns=''&lt;''/>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Again, the XML isn't well-formed for namespace purposes"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xpath"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'/*'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'<nosuchprefix:tag/>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- XPath deprecates relative namespaces, but they're not supposed to"
  WHITESPACE "\n"
  COMMENT "-- throw an error, only a warning."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xpath"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'/*'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'<relativens xmlns=''relative''/>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- External entity references should not leak filesystem information."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPARSE_KW "XMLPARSE"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "DOCUMENT"
              WHITESPACE " "
              LITERAL
                STRING "'<!DOCTYPE foo [<!ENTITY c SYSTEM \"/etc/passwd\">]><foo>&c;</foo>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPARSE_KW "XMLPARSE"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "DOCUMENT"
              WHITESPACE " "
              LITERAL
                STRING "'<!DOCTYPE foo [<!ENTITY c SYSTEM \"/etc/no.such.file\">]><foo>&c;</foo>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- This might or might not load the requested DTD, but it mustn't throw error."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              XMLPARSE_KW "XMLPARSE"
            ARG_LIST
              L_PAREN "("
              DOCUMENT_KW "DOCUMENT"
              WHITESPACE " "
              LITERAL
                STRING "'<!DOCTYPE chapter PUBLIC \"-//OASIS//DTD DocBook XML V4.1.2//EN\" \"http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd\"><chapter>&nbsp;</chapter>'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- XMLPATH tests"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "xmldata"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          DATA_KW "data"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                XML_KW "xml"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "xmldata"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'<ROWS>\n<ROW id=\"1\">\n  <COUNTRY_ID>AU</COUNTRY_ID>\n  <COUNTRY_NAME>Australia</COUNTRY_NAME>\n  <REGION_ID>3</REGION_ID>\n</ROW>\n<ROW id=\"2\">\n  <COUNTRY_ID>CN</COUNTRY_ID>\n  <COUNTRY_NAME>China</COUNTRY_NAME>\n  <REGION_ID>3</REGION_ID>\n</ROW>\n<ROW id=\"3\">\n  <COUNTRY_ID>HK</COUNTRY_ID>\n  <COUNTRY_NAME>HongKong</COUNTRY_NAME>\n  <REGION_ID>3</REGION_ID>\n</ROW>\n<ROW id=\"4\">\n  <COUNTRY_ID>IN</COUNTRY_ID>\n  <COUNTRY_NAME>India</COUNTRY_NAME>\n  <REGION_ID>3</REGION_ID>\n</ROW>\n<ROW id=\"5\">\n  <COUNTRY_ID>JP</COUNTRY_ID>\n  <COUNTRY_NAME>Japan</COUNTRY_NAME>\n  <REGION_ID>3</REGION_ID><PREMIER_NAME>Sinzo Abe</PREMIER_NAME>\n</ROW>\n<ROW id=\"6\">\n  <COUNTRY_ID>SG</COUNTRY_ID>\n  <COUNTRY_NAME>Singapore</COUNTRY_NAME>\n  <REGION_ID>3</REGION_ID><SIZE unit=\"km\">791</SIZE>\n</ROW>\n</ROWS>'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- XMLTABLE with columns"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE "  "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              XMLTABLE_KW "xmltable"
            DOT "."
            STAR "*"
    WHITESPACE "\n   "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  DATA_KW "data"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "xmldata"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
      COMMA ","
      WHITESPACE "\n        "
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "XMLTABLE"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/ROWS/ROW'"
          WHITESPACE "\n                         "
          NAME_REF
            PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            DATA_KW "data"
          WHITESPACE "\n                         "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "id"
          WHITESPACE " "
          NAME_REF
            INT_KW "int"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'@id'"
          COMMA ","
          WHITESPACE "\n                                  "
          NAME_REF
            IDENT "_id"
    WHITESPACE " "
    LOCKING_CLAUSE
      FOR_KW "FOR"
  WHITESPACE " "
  ERROR
    ORDINALITY_KW "ORDINALITY"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "country_name"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'COUNTRY_NAME/text()'"
  WHITESPACE " "
  ERROR
    NOT_KW "NOT"
  WHITESPACE " "
  ERROR
    NULL_KW "NULL"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "country_id"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'COUNTRY_ID'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "region_id"
  WHITESPACE " "
  ERROR
    INT_KW "int"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'REGION_ID'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "size"
  WHITESPACE " "
  ERROR
    FLOAT_KW "float"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'SIZE'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "unit"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'SIZE/@unit'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "premier_name"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'PREMIER_NAME'"
  WHITESPACE " "
  ERROR
    DEFAULT_KW "DEFAULT"
  WHITESPACE " "
  ERROR
    STRING "'not specified'"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "xmltableview1"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE "  "
        TARGET_LIST
          TARGET
            FIELD_EXPR
              NAME_REF
                XMLTABLE_KW "xmltable"
              DOT "."
              STAR "*"
      WHITESPACE "\n   "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    DATA_KW "data"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "xmldata"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "x"
        COMMA ","
        WHITESPACE "\n        "
        LATERAL_KW "LATERAL"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            XMLTABLE_KW "XMLTABLE"
          ARG_LIST
            L_PAREN "("
            LITERAL
              STRING "'/ROWS/ROW'"
            WHITESPACE "\n                         "
            NAME_REF
              PASSING_KW "PASSING"
            WHITESPACE " "
            NAME_REF
              DATA_KW "data"
            WHITESPACE "\n                         "
            NAME_REF
              COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            NAME_REF
              IDENT "id"
            WHITESPACE " "
            NAME_REF
              INT_KW "int"
            WHITESPACE " "
            CAST_EXPR
              NAME_REF
                PATH_KW "PATH"
              WHITESPACE " "
              LITERAL
                STRING "'@id'"
            COMMA ","
            WHITESPACE "\n                                  "
            NAME_REF
              IDENT "_id"
      WHITESPACE " "
      LOCKING_CLAUSE
        FOR_KW "FOR"
  WHITESPACE " "
  ERROR
    ORDINALITY_KW "ORDINALITY"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "country_name"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'COUNTRY_NAME/text()'"
  WHITESPACE " "
  ERROR
    NOT_KW "NOT"
  WHITESPACE " "
  ERROR
    NULL_KW "NULL"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "country_id"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'COUNTRY_ID'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "region_id"
  WHITESPACE " "
  ERROR
    INT_KW "int"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'REGION_ID'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "size"
  WHITESPACE " "
  ERROR
    FLOAT_KW "float"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'SIZE'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "unit"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'SIZE/@unit'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "premier_name"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'PREMIER_NAME'"
  WHITESPACE " "
  ERROR
    DEFAULT_KW "DEFAULT"
  WHITESPACE " "
  ERROR
    STRING "'not specified'"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmltableview1"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmltableview1"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    VERBOSE_KW "VERBOSE"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmltableview1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- errors"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "XMLTABLE"
        WHITESPACE " "
        ARG_LIST
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              ROW_KW "ROW"
            WHITESPACE " "
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
          WHITESPACE " "
          NAME_REF
            PASSING_KW "PASSING"
          WHITESPACE " "
          LITERAL
            NULL_KW "null"
          WHITESPACE " "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "v1"
          WHITESPACE " "
          NAME_REF
            TIMESTAMP_KW "timestamp"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "f"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "v1"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "v2"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "XMLTABLE"
        WHITESPACE " "
        ARG_LIST
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              ROW_KW "ROW"
            WHITESPACE " "
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
          WHITESPACE " "
          NAME_REF
            PASSING_KW "PASSING"
          WHITESPACE " "
          LITERAL
            NULL_KW "null"
          WHITESPACE " "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "v1"
          WHITESPACE " "
          NAME_REF
            TIMESTAMP_KW "timestamp"
          WHITESPACE " "
          NAME_REF
            IDENT "__pg__is_not_null"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "f"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "v1"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- XMLNAMESPACES tests"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "XMLTABLE"
        ARG_LIST
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              XMLNAMESPACES_KW "XMLNAMESPACES"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'http://x.y'"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "zz"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE "\n                      "
  ERROR
    STRING "'/zz:rows/zz:row'"
  WHITESPACE "\n                      "
  ERROR
    PASSING_KW "PASSING"
  WHITESPACE " "
  ERROR
    STRING "'<rows xmlns=\"http://x.y\"><row><a>10</a></row></rows>'"
  WHITESPACE "\n                      "
  ERROR
    COLUMNS_KW "COLUMNS"
  WHITESPACE " "
  ERROR
    IDENT "a"
  WHITESPACE " "
  ERROR
    INT_KW "int"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'zz:a'"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "xmltableview2"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            XMLTABLE_KW "XMLTABLE"
          ARG_LIST
            L_PAREN "("
            CALL_EXPR
              NAME_REF
                XMLNAMESPACES_KW "XMLNAMESPACES"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  STRING "'http://x.y'"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"Zz\""
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE "\n                      "
  ERROR
    STRING "'/Zz:rows/Zz:row'"
  WHITESPACE "\n                      "
  ERROR
    PASSING_KW "PASSING"
  WHITESPACE " "
  ERROR
    STRING "'<rows xmlns=\"http://x.y\"><row><a>10</a></row></rows>'"
  WHITESPACE "\n                      "
  ERROR
    COLUMNS_KW "COLUMNS"
  WHITESPACE " "
  ERROR
    IDENT "a"
  WHITESPACE " "
  ERROR
    INT_KW "int"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'Zz:a'"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmltableview2"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "XMLTABLE"
        ARG_LIST
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              XMLNAMESPACES_KW "XMLNAMESPACES"
            ARG_LIST
              L_PAREN "("
              LITERAL
                DEFAULT_KW "DEFAULT"
              WHITESPACE " "
              LITERAL
                STRING "'http://x.y'"
              R_PAREN ")"
          COMMA ","
          WHITESPACE "\n                      "
          LITERAL
            STRING "'/rows/row'"
          WHITESPACE "\n                      "
          CAST_EXPR
            NAME_REF
              PASSING_KW "PASSING"
            WHITESPACE " "
            LITERAL
              STRING "'<rows xmlns=\"http://x.y\"><row><a>10</a></row></rows>'"
          WHITESPACE "\n                      "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          NAME_REF
            INT_KW "int"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'a'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "XMLTABLE"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'.'"
          WHITESPACE "\n                       "
          CAST_EXPR
            NAME_REF
              PASSING_KW "PASSING"
            WHITESPACE " "
            LITERAL
              STRING "'<foo/>'"
          WHITESPACE "\n                       "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          NAME_REF
            TEXT_KW "text"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'foo/namespace::node()'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- used in prepare statements"
  WHITESPACE "\n"
  PREPARE_STMT
    PREPARE_KW "PREPARE"
    WHITESPACE " "
    NAME
      IDENT "pp"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE "  "
        TARGET_LIST
          TARGET
            FIELD_EXPR
              NAME_REF
                XMLTABLE_KW "xmltable"
              DOT "."
              STAR "*"
      WHITESPACE "\n   "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    DATA_KW "data"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "xmldata"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "x"
        COMMA ","
        WHITESPACE "\n        "
        LATERAL_KW "LATERAL"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            XMLTABLE_KW "XMLTABLE"
          ARG_LIST
            L_PAREN "("
            LITERAL
              STRING "'/ROWS/ROW'"
            WHITESPACE "\n                         "
            NAME_REF
              PASSING_KW "PASSING"
            WHITESPACE " "
            NAME_REF
              DATA_KW "data"
            WHITESPACE "\n                         "
            NAME_REF
              COLUMNS_KW "COLUMNS"
            WHITESPACE " "
            NAME_REF
              IDENT "id"
            WHITESPACE " "
            NAME_REF
              INT_KW "int"
            WHITESPACE " "
            CAST_EXPR
              NAME_REF
                PATH_KW "PATH"
              WHITESPACE " "
              LITERAL
                STRING "'@id'"
            COMMA ","
            WHITESPACE "\n                                  "
            NAME_REF
              IDENT "_id"
      WHITESPACE " "
      LOCKING_CLAUSE
        FOR_KW "FOR"
  WHITESPACE " "
  ERROR
    ORDINALITY_KW "ORDINALITY"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "country_name"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'COUNTRY_NAME'"
  WHITESPACE " "
  ERROR
    NOT_KW "NOT"
  WHITESPACE " "
  ERROR
    NULL_KW "NULL"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "country_id"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'COUNTRY_ID'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "region_id"
  WHITESPACE " "
  ERROR
    INT_KW "int"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'REGION_ID'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "size"
  WHITESPACE " "
  ERROR
    FLOAT_KW "float"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'SIZE'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "unit"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'SIZE/@unit'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "premier_name"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'PREMIER_NAME'"
  WHITESPACE " "
  ERROR
    DEFAULT_KW "DEFAULT"
  WHITESPACE " "
  ERROR
    STRING "'not specified'"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "pp"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              XMLTABLE_KW "xmltable"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmldata"
      COMMA ","
      WHITESPACE " "
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "xmltable"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/ROWS/ROW[COUNTRY_NAME=\"Japan\" or COUNTRY_NAME=\"India\"]'"
          WHITESPACE " "
          NAME_REF
            PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            DATA_KW "data"
          WHITESPACE " "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "\"COUNTRY_NAME\""
          WHITESPACE " "
          NAME_REF
            TEXT_KW "text"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "\"REGION_ID\""
          WHITESPACE " "
          NAME_REF
            INT_KW "int"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              XMLTABLE_KW "xmltable"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmldata"
      COMMA ","
      WHITESPACE " "
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "xmltable"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/ROWS/ROW[COUNTRY_NAME=\"Japan\" or COUNTRY_NAME=\"India\"]'"
          WHITESPACE " "
          NAME_REF
            PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            DATA_KW "data"
          WHITESPACE " "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "id"
    WHITESPACE " "
    LOCKING_CLAUSE
      FOR_KW "FOR"
  WHITESPACE " "
  ERROR
    ORDINALITY_KW "ORDINALITY"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "\"COUNTRY_NAME\""
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "\"REGION_ID\""
  WHITESPACE " "
  ERROR
    INT_KW "int"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              XMLTABLE_KW "xmltable"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmldata"
      COMMA ","
      WHITESPACE " "
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "xmltable"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/ROWS/ROW[COUNTRY_NAME=\"Japan\" or COUNTRY_NAME=\"India\"]'"
          WHITESPACE " "
          NAME_REF
            PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            DATA_KW "data"
          WHITESPACE " "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "id"
          WHITESPACE " "
          NAME_REF
            INT_KW "int"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'@id'"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "\"COUNTRY_NAME\""
          WHITESPACE " "
          NAME_REF
            TEXT_KW "text"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "\"REGION_ID\""
          WHITESPACE " "
          NAME_REF
            INT_KW "int"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              XMLTABLE_KW "xmltable"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmldata"
      COMMA ","
      WHITESPACE " "
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "xmltable"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/ROWS/ROW[COUNTRY_NAME=\"Japan\" or COUNTRY_NAME=\"India\"]'"
          WHITESPACE " "
          NAME_REF
            PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            DATA_KW "data"
          WHITESPACE " "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "id"
          WHITESPACE " "
          NAME_REF
            INT_KW "int"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'@id'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              XMLTABLE_KW "xmltable"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmldata"
      COMMA ","
      WHITESPACE " "
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "xmltable"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/ROWS/ROW[COUNTRY_NAME=\"Japan\" or COUNTRY_NAME=\"India\"]'"
          WHITESPACE " "
          NAME_REF
            PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            DATA_KW "data"
          WHITESPACE " "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "id"
    WHITESPACE " "
    LOCKING_CLAUSE
      FOR_KW "FOR"
  WHITESPACE " "
  ERROR
    ORDINALITY_KW "ORDINALITY"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              XMLTABLE_KW "xmltable"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmldata"
      COMMA ","
      WHITESPACE " "
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "xmltable"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/ROWS/ROW[COUNTRY_NAME=\"Japan\" or COUNTRY_NAME=\"India\"]'"
          WHITESPACE " "
          NAME_REF
            PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            DATA_KW "data"
          WHITESPACE " "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "id"
          WHITESPACE " "
          NAME_REF
            INT_KW "int"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'@id'"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "\"COUNTRY_NAME\""
          WHITESPACE " "
          NAME_REF
            TEXT_KW "text"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "\"REGION_ID\""
          WHITESPACE " "
          NAME_REF
            INT_KW "int"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "rawdata"
          WHITESPACE " "
          NAME_REF
            XML_KW "xml"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'.'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              XMLTABLE_KW "xmltable"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmldata"
      COMMA ","
      WHITESPACE " "
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "xmltable"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/ROWS/ROW[COUNTRY_NAME=\"Japan\" or COUNTRY_NAME=\"India\"]'"
          WHITESPACE " "
          NAME_REF
            PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            DATA_KW "data"
          WHITESPACE " "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "id"
          WHITESPACE " "
          NAME_REF
            INT_KW "int"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'@id'"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "\"COUNTRY_NAME\""
          WHITESPACE " "
          NAME_REF
            TEXT_KW "text"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "\"REGION_ID\""
          WHITESPACE " "
          NAME_REF
            INT_KW "int"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "rawdata"
          WHITESPACE " "
          NAME_REF
            XML_KW "xml"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'./*'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "xmltable"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/root'"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PASSING_KW "passing"
            WHITESPACE " "
            LITERAL
              STRING "'<root><element>a1a<!-- aaaa -->a2a<?aaaaa?> <!--z-->  bbbb<x>xxx</x>cccc</element></root>'"
          WHITESPACE " "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "element"
          WHITESPACE " "
          NAME_REF
            TEXT_KW "text"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "xmltable"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/root'"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PASSING_KW "passing"
            WHITESPACE " "
            LITERAL
              STRING "'<root><element>a1a<!-- aaaa -->a2a<?aaaaa?> <!--z-->  bbbb<x>xxx</x>cccc</element></root>'"
          WHITESPACE " "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "element"
          WHITESPACE " "
          NAME_REF
            TEXT_KW "text"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'element/text()'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- should fail"
  WHITESPACE "\n\n"
  COMMENT "-- CDATA test"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "xmltable"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'d/r'"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PASSING_KW "passing"
            WHITESPACE " "
            LITERAL
              STRING "'<d><r><c><![CDATA[<hello> &\"<>!<a>foo</a>]]></c></r><r><c>2</c></r></d>'"
          WHITESPACE " "
          NAME_REF
            COLUMNS_KW "columns"
          WHITESPACE " "
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          NAME_REF
            TEXT_KW "text"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- XML builtin entities"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "xmltable"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/x/a'"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PASSING_KW "PASSING"
            WHITESPACE " "
            LITERAL
              STRING "'<x><a><ent>&apos;</ent></a><a><ent>&quot;</ent></a><a><ent>&amp;</ent></a><a><ent>&lt;</ent></a><a><ent>&gt;</ent></a></x>'"
          WHITESPACE " "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "ent"
          WHITESPACE " "
          NAME_REF
            TEXT_KW "text"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "xmltable"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/x/a'"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PASSING_KW "PASSING"
            WHITESPACE " "
            LITERAL
              STRING "'<x><a><ent>&apos;</ent></a><a><ent>&quot;</ent></a><a><ent>&amp;</ent></a><a><ent>&lt;</ent></a><a><ent>&gt;</ent></a></x>'"
          WHITESPACE " "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "ent"
          WHITESPACE " "
          NAME_REF
            XML_KW "xml"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "VERBOSE"
    COMMA ","
    WHITESPACE " "
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE "  "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              XMLTABLE_KW "xmltable"
            DOT "."
            STAR "*"
    WHITESPACE "\n   "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  DATA_KW "data"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "xmldata"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
      COMMA ","
      WHITESPACE "\n        "
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "XMLTABLE"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/ROWS/ROW'"
          WHITESPACE "\n                         "
          NAME_REF
            PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            DATA_KW "data"
          WHITESPACE "\n                         "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "id"
          WHITESPACE " "
          NAME_REF
            INT_KW "int"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'@id'"
          COMMA ","
          WHITESPACE "\n                                  "
          NAME_REF
            IDENT "_id"
    WHITESPACE " "
    LOCKING_CLAUSE
      FOR_KW "FOR"
  WHITESPACE " "
  ERROR
    ORDINALITY_KW "ORDINALITY"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "country_name"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'COUNTRY_NAME'"
  WHITESPACE " "
  ERROR
    NOT_KW "NOT"
  WHITESPACE " "
  ERROR
    NULL_KW "NULL"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "country_id"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'COUNTRY_ID'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "region_id"
  WHITESPACE " "
  ERROR
    INT_KW "int"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'REGION_ID'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "size"
  WHITESPACE " "
  ERROR
    FLOAT_KW "float"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'SIZE'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "unit"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'SIZE/@unit'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "premier_name"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'PREMIER_NAME'"
  WHITESPACE " "
  ERROR
    DEFAULT_KW "DEFAULT"
  WHITESPACE " "
  ERROR
    STRING "'not specified'"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test qual"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              XMLTABLE_KW "xmltable"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmldata"
      COMMA ","
      WHITESPACE " "
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "xmltable"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/ROWS/ROW[COUNTRY_NAME=\"Japan\" or COUNTRY_NAME=\"India\"]'"
          WHITESPACE " "
          NAME_REF
            PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            DATA_KW "data"
          WHITESPACE " "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "\"COUNTRY_NAME\""
          WHITESPACE " "
          NAME_REF
            TEXT_KW "text"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "\"REGION_ID\""
          WHITESPACE " "
          NAME_REF
            INT_KW "int"
          R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "\"COUNTRY_NAME\""
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'Japan'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "VERBOSE"
    COMMA ","
    WHITESPACE " "
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "f"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmldata"
      COMMA ","
      WHITESPACE " "
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "xmltable"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/ROWS/ROW[COUNTRY_NAME=\"Japan\" or COUNTRY_NAME=\"India\"]'"
          WHITESPACE " "
          NAME_REF
            PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            DATA_KW "data"
          WHITESPACE " "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "\"COUNTRY_NAME\""
          WHITESPACE " "
          NAME_REF
            TEXT_KW "text"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "\"REGION_ID\""
          WHITESPACE " "
          NAME_REF
            INT_KW "int"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "f"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "\"COUNTRY_NAME\""
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'Japan'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "VERBOSE"
    COMMA ","
    WHITESPACE " "
    FORMAT_KW "FORMAT"
    WHITESPACE " "
    JSON_KW "JSON"
    COMMA ","
    WHITESPACE " "
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "f"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmldata"
      COMMA ","
      WHITESPACE " "
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "xmltable"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/ROWS/ROW[COUNTRY_NAME=\"Japan\" or COUNTRY_NAME=\"India\"]'"
          WHITESPACE " "
          NAME_REF
            PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            DATA_KW "data"
          WHITESPACE " "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "\"COUNTRY_NAME\""
          WHITESPACE " "
          NAME_REF
            TEXT_KW "text"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "\"REGION_ID\""
          WHITESPACE " "
          NAME_REF
            INT_KW "int"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "f"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "\"COUNTRY_NAME\""
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'Japan'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- should to work with more data"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "xmldata"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'<ROWS>\n<ROW id=\"10\">\n  <COUNTRY_ID>CZ</COUNTRY_ID>\n  <COUNTRY_NAME>Czech Republic</COUNTRY_NAME>\n  <REGION_ID>2</REGION_ID><PREMIER_NAME>Milos Zeman</PREMIER_NAME>\n</ROW>\n<ROW id=\"11\">\n  <COUNTRY_ID>DE</COUNTRY_ID>\n  <COUNTRY_NAME>Germany</COUNTRY_NAME>\n  <REGION_ID>2</REGION_ID>\n</ROW>\n<ROW id=\"12\">\n  <COUNTRY_ID>FR</COUNTRY_ID>\n  <COUNTRY_NAME>France</COUNTRY_NAME>\n  <REGION_ID>2</REGION_ID>\n</ROW>\n</ROWS>'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "xmldata"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'<ROWS>\n<ROW id=\"20\">\n  <COUNTRY_ID>EG</COUNTRY_ID>\n  <COUNTRY_NAME>Egypt</COUNTRY_NAME>\n  <REGION_ID>1</REGION_ID>\n</ROW>\n<ROW id=\"21\">\n  <COUNTRY_ID>SD</COUNTRY_ID>\n  <COUNTRY_NAME>Sudan</COUNTRY_NAME>\n  <REGION_ID>1</REGION_ID>\n</ROW>\n</ROWS>'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE "  "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              XMLTABLE_KW "xmltable"
            DOT "."
            STAR "*"
    WHITESPACE "\n   "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  DATA_KW "data"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "xmldata"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
      COMMA ","
      WHITESPACE "\n        "
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "XMLTABLE"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/ROWS/ROW'"
          WHITESPACE "\n                         "
          NAME_REF
            PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            DATA_KW "data"
          WHITESPACE "\n                         "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "id"
          WHITESPACE " "
          NAME_REF
            INT_KW "int"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'@id'"
          COMMA ","
          WHITESPACE "\n                                  "
          NAME_REF
            IDENT "_id"
    WHITESPACE " "
    LOCKING_CLAUSE
      FOR_KW "FOR"
  WHITESPACE " "
  ERROR
    ORDINALITY_KW "ORDINALITY"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "country_name"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'COUNTRY_NAME'"
  WHITESPACE " "
  ERROR
    NOT_KW "NOT"
  WHITESPACE " "
  ERROR
    NULL_KW "NULL"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "country_id"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'COUNTRY_ID'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "region_id"
  WHITESPACE " "
  ERROR
    INT_KW "int"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'REGION_ID'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "size"
  WHITESPACE " "
  ERROR
    FLOAT_KW "float"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'SIZE'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "unit"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'SIZE/@unit'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "premier_name"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'PREMIER_NAME'"
  WHITESPACE " "
  ERROR
    DEFAULT_KW "DEFAULT"
  WHITESPACE " "
  ERROR
    STRING "'not specified'"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE "  "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              XMLTABLE_KW "xmltable"
            DOT "."
            STAR "*"
    WHITESPACE "\n   "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  DATA_KW "data"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "xmldata"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
      COMMA ","
      WHITESPACE "\n        "
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "XMLTABLE"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/ROWS/ROW'"
          WHITESPACE "\n                         "
          NAME_REF
            PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            DATA_KW "data"
          WHITESPACE "\n                         "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "id"
          WHITESPACE " "
          NAME_REF
            INT_KW "int"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'@id'"
          COMMA ","
          WHITESPACE "\n                                  "
          NAME_REF
            IDENT "_id"
    WHITESPACE " "
    LOCKING_CLAUSE
      FOR_KW "FOR"
  WHITESPACE " "
  ERROR
    ORDINALITY_KW "ORDINALITY"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "country_name"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'COUNTRY_NAME'"
  WHITESPACE " "
  ERROR
    NOT_KW "NOT"
  WHITESPACE " "
  ERROR
    NULL_KW "NULL"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "country_id"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'COUNTRY_ID'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "region_id"
  WHITESPACE " "
  ERROR
    INT_KW "int"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'REGION_ID'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "size"
  WHITESPACE " "
  ERROR
    FLOAT_KW "float"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'SIZE'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "unit"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'SIZE/@unit'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "premier_name"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'PREMIER_NAME'"
  WHITESPACE " "
  ERROR
    DEFAULT_KW "DEFAULT"
  WHITESPACE " "
  ERROR
    STRING "'not specified'"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  ERROR
    WHERE_KW "WHERE"
  WHITESPACE " "
  ERROR
    IDENT "region_id"
  WHITESPACE " "
  ERROR
    EQ "="
  WHITESPACE " "
  ERROR
    INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "VERBOSE"
    COMMA ","
    WHITESPACE " "
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE "  "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              XMLTABLE_KW "xmltable"
            DOT "."
            STAR "*"
    WHITESPACE "\n   "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  DATA_KW "data"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "xmldata"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
      COMMA ","
      WHITESPACE "\n        "
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "XMLTABLE"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/ROWS/ROW'"
          WHITESPACE "\n                         "
          NAME_REF
            PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            DATA_KW "data"
          WHITESPACE "\n                         "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "id"
          WHITESPACE " "
          NAME_REF
            INT_KW "int"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'@id'"
          COMMA ","
          WHITESPACE "\n                                  "
          NAME_REF
            IDENT "_id"
    WHITESPACE " "
    LOCKING_CLAUSE
      FOR_KW "FOR"
  WHITESPACE " "
  ERROR
    ORDINALITY_KW "ORDINALITY"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "country_name"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'COUNTRY_NAME'"
  WHITESPACE " "
  ERROR
    NOT_KW "NOT"
  WHITESPACE " "
  ERROR
    NULL_KW "NULL"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "country_id"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'COUNTRY_ID'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "region_id"
  WHITESPACE " "
  ERROR
    INT_KW "int"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'REGION_ID'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "size"
  WHITESPACE " "
  ERROR
    FLOAT_KW "float"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'SIZE'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "unit"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'SIZE/@unit'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "premier_name"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'PREMIER_NAME'"
  WHITESPACE " "
  ERROR
    DEFAULT_KW "DEFAULT"
  WHITESPACE " "
  ERROR
    STRING "'not specified'"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  ERROR
    WHERE_KW "WHERE"
  WHITESPACE " "
  ERROR
    IDENT "region_id"
  WHITESPACE " "
  ERROR
    EQ "="
  WHITESPACE " "
  ERROR
    INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- should fail, NULL value"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE "  "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              XMLTABLE_KW "xmltable"
            DOT "."
            STAR "*"
    WHITESPACE "\n   "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  DATA_KW "data"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "xmldata"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
      COMMA ","
      WHITESPACE "\n        "
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "XMLTABLE"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/ROWS/ROW'"
          WHITESPACE "\n                         "
          NAME_REF
            PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            DATA_KW "data"
          WHITESPACE "\n                         "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "id"
          WHITESPACE " "
          NAME_REF
            INT_KW "int"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'@id'"
          COMMA ","
          WHITESPACE "\n                                  "
          NAME_REF
            IDENT "_id"
    WHITESPACE " "
    LOCKING_CLAUSE
      FOR_KW "FOR"
  WHITESPACE " "
  ERROR
    ORDINALITY_KW "ORDINALITY"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "country_name"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'COUNTRY_NAME'"
  WHITESPACE " "
  ERROR
    NOT_KW "NOT"
  WHITESPACE " "
  ERROR
    NULL_KW "NULL"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "country_id"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'COUNTRY_ID'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "region_id"
  WHITESPACE " "
  ERROR
    INT_KW "int"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'REGION_ID'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "size"
  WHITESPACE " "
  ERROR
    FLOAT_KW "float"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'SIZE'"
  WHITESPACE " "
  ERROR
    NOT_KW "NOT"
  WHITESPACE " "
  ERROR
    NULL_KW "NULL"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "unit"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'SIZE/@unit'"
  ERROR
    COMMA ","
  WHITESPACE "\n                                  "
  ERROR
    IDENT "premier_name"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    PATH_KW "PATH"
  WHITESPACE " "
  ERROR
    STRING "'PREMIER_NAME'"
  WHITESPACE " "
  ERROR
    DEFAULT_KW "DEFAULT"
  WHITESPACE " "
  ERROR
    STRING "'not specified'"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- if all is ok, then result is empty"
  WHITESPACE "\n"
  COMMENT "-- one line xml test"
  WHITESPACE "\n"
  COMPOUND_SELECT
    SELECT
      WITH_CLAUSE
        WITH_KW "WITH"
        WHITESPACE "\n   "
        WITH_TABLE
          NAME
            IDENT "x"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "proname"
                COMMA ","
                WHITESPACE " "
                TARGET
                  NAME_REF
                    IDENT "proowner"
                COMMA ","
                WHITESPACE " "
                TARGET
                  CAST_EXPR
                    NAME_REF
                      IDENT "procost"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            NUMERIC_KW "numeric"
                COMMA ","
                WHITESPACE " "
                TARGET
                  NAME_REF
                    IDENT "pronargs"
                COMMA ","
                WHITESPACE "\n                "
                TARGET
                  CALL_EXPR
                    NAME_REF
                      IDENT "array_to_string"
                    ARG_LIST
                      L_PAREN "("
                      NAME_REF
                        IDENT "proargnames"
                      COMMA ","
                      LITERAL
                        STRING "','"
                      R_PAREN ")"
                  WHITESPACE " "
                  AS_KW "as"
                  WHITESPACE " "
                  NAME
                    IDENT "proargnames"
                COMMA ","
                WHITESPACE "\n                "
                TARGET
                  CASE_EXPR
                    CASE_KW "case"
                    WHITESPACE " "
                    WHEN_CLAUSE
                      WHEN_KW "when"
                      WHITESPACE " "
                      BIN_EXPR
                        NAME_REF
                          IDENT "proargtypes"
                        WHITESPACE " "
                        NEQB "<>"
                        WHITESPACE " "
                        LITERAL
                          STRING "''"
                      WHITESPACE " "
                      THEN_KW "then"
                      WHITESPACE " "
                      CALL_EXPR
                        NAME_REF
                          IDENT "array_to_string"
                        ARG_LIST
                          L_PAREN "("
                          CAST_EXPR
                            NAME_REF
                              IDENT "proargtypes"
                            COLON2 "::"
                            ARRAY_TYPE
                              PATH_TYPE
                                PATH
                                  PATH_SEGMENT
                                    NAME_REF
                                      IDENT "oid"
                              L_BRACK "["
                              R_BRACK "]"
                          COMMA ","
                          LITERAL
                            STRING "','"
                          R_PAREN ")"
                    WHITESPACE " "
                    END_KW "end"
                  WHITESPACE " "
                  AS_KW "as"
                  WHITESPACE " "
                  NAME
                    IDENT "proargtypes"
            WHITESPACE "\n           "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "pg_proc"
            WHITESPACE " "
            WHERE_CLAUSE
              WHERE_KW "WHERE"
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "proname"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  STRING "'f_leak'"
          R_PAREN ")"
        COMMA ","
        WHITESPACE "\n   "
        WITH_TABLE
          NAME
            IDENT "y"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  CALL_EXPR
                    NAME_REF
                      XMLELEMENT_KW "xmlelement"
                    ARG_LIST
                      L_PAREN "("
                      NAME_KW "name"
                      WHITESPACE " "
                      NAME
                        IDENT "proc"
                      COMMA ","
                      WHITESPACE "\n                           "
                      CALL_EXPR
                        NAME_REF
                          XMLFOREST_KW "xmlforest"
                        ARG_LIST
                          L_PAREN "("
                          NAME_REF
                            IDENT "proname"
                          COMMA ","
                          WHITESPACE " "
                          NAME_REF
                            IDENT "proowner"
                          COMMA ","
                          WHITESPACE "\n                                     "
                          NAME_REF
                            IDENT "procost"
                          COMMA ","
                          WHITESPACE " "
                          NAME_REF
                            IDENT "pronargs"
                          COMMA ","
                          WHITESPACE "\n                                     "
                          NAME_REF
                            IDENT "proargnames"
                          COMMA ","
                          WHITESPACE " "
                          NAME_REF
                            IDENT "proargtypes"
                          R_PAREN ")"
                      R_PAREN ")"
                  WHITESPACE " "
                  AS_KW "as"
                  WHITESPACE " "
                  NAME
                    IDENT "proc"
            WHITESPACE "\n           "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "x"
          R_PAREN ")"
        COMMA ","
        WHITESPACE "\n   "
        WITH_TABLE
          NAME
            IDENT "z"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  FIELD_EXPR
                    NAME_REF
                      XMLTABLE_KW "xmltable"
                    DOT "."
                    STAR "*"
            WHITESPACE "\n           "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "y"
              COMMA ","
              WHITESPACE "\n                "
              LATERAL_KW "LATERAL"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  XMLTABLE_KW "xmltable"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    STRING "'/proc'"
                  WHITESPACE " "
                  NAME_REF
                    PASSING_KW "PASSING"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "proc"
                  WHITESPACE "\n                                 "
                  NAME_REF
                    COLUMNS_KW "COLUMNS"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "proname"
                  WHITESPACE " "
                  NAME_REF
                    NAME_KW "name"
                  COMMA ","
                  WHITESPACE "\n                                         "
                  NAME_REF
                    IDENT "proowner"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "oid"
                  COMMA ","
                  WHITESPACE "\n                                         "
                  NAME_REF
                    IDENT "procost"
                  WHITESPACE " "
                  NAME_REF
                    FLOAT_KW "float"
                  COMMA ","
                  WHITESPACE "\n                                         "
                  NAME_REF
                    IDENT "pronargs"
                  WHITESPACE " "
                  NAME_REF
                    INT_KW "int"
                  COMMA ","
                  WHITESPACE "\n                                         "
                  NAME_REF
                    IDENT "proargnames"
                  WHITESPACE " "
                  NAME_REF
                    TEXT_KW "text"
                  COMMA ","
                  WHITESPACE "\n                                         "
                  NAME_REF
                    IDENT "proargtypes"
                  WHITESPACE " "
                  NAME_REF
                    TEXT_KW "text"
                  R_PAREN ")"
          R_PAREN ")"
      WHITESPACE "\n   "
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "z"
    WHITESPACE "\n   "
    EXCEPT_KW "EXCEPT"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- multi line xml test, result should be empty too"
  WHITESPACE "\n"
  COMPOUND_SELECT
    SELECT
      WITH_CLAUSE
        WITH_KW "WITH"
        WHITESPACE "\n   "
        WITH_TABLE
          NAME
            IDENT "x"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "proname"
                COMMA ","
                WHITESPACE " "
                TARGET
                  NAME_REF
                    IDENT "proowner"
                COMMA ","
                WHITESPACE " "
                TARGET
                  CAST_EXPR
                    NAME_REF
                      IDENT "procost"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            NUMERIC_KW "numeric"
                COMMA ","
                WHITESPACE " "
                TARGET
                  NAME_REF
                    IDENT "pronargs"
                COMMA ","
                WHITESPACE "\n                "
                TARGET
                  CALL_EXPR
                    NAME_REF
                      IDENT "array_to_string"
                    ARG_LIST
                      L_PAREN "("
                      NAME_REF
                        IDENT "proargnames"
                      COMMA ","
                      LITERAL
                        STRING "','"
                      R_PAREN ")"
                  WHITESPACE " "
                  AS_KW "as"
                  WHITESPACE " "
                  NAME
                    IDENT "proargnames"
                COMMA ","
                WHITESPACE "\n                "
                TARGET
                  CASE_EXPR
                    CASE_KW "case"
                    WHITESPACE " "
                    WHEN_CLAUSE
                      WHEN_KW "when"
                      WHITESPACE " "
                      BIN_EXPR
                        NAME_REF
                          IDENT "proargtypes"
                        WHITESPACE " "
                        NEQB "<>"
                        WHITESPACE " "
                        LITERAL
                          STRING "''"
                      WHITESPACE " "
                      THEN_KW "then"
                      WHITESPACE " "
                      CALL_EXPR
                        NAME_REF
                          IDENT "array_to_string"
                        ARG_LIST
                          L_PAREN "("
                          CAST_EXPR
                            NAME_REF
                              IDENT "proargtypes"
                            COLON2 "::"
                            ARRAY_TYPE
                              PATH_TYPE
                                PATH
                                  PATH_SEGMENT
                                    NAME_REF
                                      IDENT "oid"
                              L_BRACK "["
                              R_BRACK "]"
                          COMMA ","
                          LITERAL
                            STRING "','"
                          R_PAREN ")"
                    WHITESPACE " "
                    END_KW "end"
                  WHITESPACE " "
                  AS_KW "as"
                  WHITESPACE " "
                  NAME
                    IDENT "proargtypes"
            WHITESPACE "\n           "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "pg_proc"
          R_PAREN ")"
        COMMA ","
        WHITESPACE "\n   "
        WITH_TABLE
          NAME
            IDENT "y"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  CALL_EXPR
                    NAME_REF
                      XMLELEMENT_KW "xmlelement"
                    ARG_LIST
                      L_PAREN "("
                      NAME_KW "name"
                      WHITESPACE " "
                      NAME
                        DATA_KW "data"
                      COMMA ","
                      WHITESPACE "\n                           "
                      CALL_EXPR
                        NAME_REF
                          IDENT "xmlagg"
                        ARG_LIST
                          L_PAREN "("
                          CALL_EXPR
                            NAME_REF
                              XMLELEMENT_KW "xmlelement"
                            ARG_LIST
                              L_PAREN "("
                              NAME_KW "name"
                              WHITESPACE " "
                              NAME
                                IDENT "proc"
                              COMMA ","
                              WHITESPACE "\n                                             "
                              CALL_EXPR
                                NAME_REF
                                  XMLFOREST_KW "xmlforest"
                                ARG_LIST
                                  L_PAREN "("
                                  NAME_REF
                                    IDENT "proname"
                                  COMMA ","
                                  WHITESPACE " "
                                  NAME_REF
                                    IDENT "proowner"
                                  COMMA ","
                                  WHITESPACE " "
                                  NAME_REF
                                    IDENT "procost"
                                  COMMA ","
                                  WHITESPACE "\n                                                       "
                                  NAME_REF
                                    IDENT "pronargs"
                                  COMMA ","
                                  WHITESPACE " "
                                  NAME_REF
                                    IDENT "proargnames"
                                  COMMA ","
                                  WHITESPACE " "
                                  NAME_REF
                                    IDENT "proargtypes"
                                  R_PAREN ")"
                              R_PAREN ")"
                          R_PAREN ")"
                      R_PAREN ")"
                  WHITESPACE " "
                  AS_KW "as"
                  WHITESPACE " "
                  NAME
                    IDENT "doc"
            WHITESPACE "\n           "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "x"
          R_PAREN ")"
        COMMA ","
        WHITESPACE "\n   "
        WITH_TABLE
          NAME
            IDENT "z"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  FIELD_EXPR
                    NAME_REF
                      XMLTABLE_KW "xmltable"
                    DOT "."
                    STAR "*"
            WHITESPACE "\n           "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "y"
              COMMA ","
              WHITESPACE "\n                "
              LATERAL_KW "LATERAL"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  XMLTABLE_KW "xmltable"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    STRING "'/data/proc'"
                  WHITESPACE " "
                  NAME_REF
                    PASSING_KW "PASSING"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "doc"
                  WHITESPACE "\n                                 "
                  NAME_REF
                    COLUMNS_KW "COLUMNS"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "proname"
                  WHITESPACE " "
                  NAME_REF
                    NAME_KW "name"
                  COMMA ","
                  WHITESPACE "\n                                         "
                  NAME_REF
                    IDENT "proowner"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "oid"
                  COMMA ","
                  WHITESPACE "\n                                         "
                  NAME_REF
                    IDENT "procost"
                  WHITESPACE " "
                  NAME_REF
                    FLOAT_KW "float"
                  COMMA ","
                  WHITESPACE "\n                                         "
                  NAME_REF
                    IDENT "pronargs"
                  WHITESPACE " "
                  NAME_REF
                    INT_KW "int"
                  COMMA ","
                  WHITESPACE "\n                                         "
                  NAME_REF
                    IDENT "proargnames"
                  WHITESPACE " "
                  NAME_REF
                    TEXT_KW "text"
                  COMMA ","
                  WHITESPACE "\n                                         "
                  NAME_REF
                    IDENT "proargtypes"
                  WHITESPACE " "
                  NAME_REF
                    TEXT_KW "text"
                  R_PAREN ")"
          R_PAREN ")"
      WHITESPACE "\n   "
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "z"
    WHITESPACE "\n   "
    EXCEPT_KW "EXCEPT"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "xmltest2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                XML_KW "xml"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "_path"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "xmltest2"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'<d><r><ac>1</ac></r></d>'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'A'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "xmltest2"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'<d><r><bc>2</bc></r></d>'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'B'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "xmltest2"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'<d><r><cc>3</cc></r></d>'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'C'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "xmltest2"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'<d><r><dc>2</dc></r></d>'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'D'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              XMLTABLE_KW "xmltable"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmltest2"
      COMMA ","
      WHITESPACE " "
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "xmltable"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'/d/r'"
          WHITESPACE " "
          NAME_REF
            PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            IDENT "x"
          WHITESPACE " "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          NAME_REF
            INT_KW "int"
          WHITESPACE " "
          BIN_EXPR
            CAST_EXPR
              NAME_REF
                PATH_KW "PATH"
              WHITESPACE " "
              LITERAL
                STRING "''"
            WHITESPACE " "
            CUSTOM_OP
              PIPE "|"
              PIPE "|"
            WHITESPACE " "
            BIN_EXPR
              CALL_EXPR
                NAME_REF
                  IDENT "lower"
                ARG_LIST
                  L_PAREN "("
                  NAME_REF
                    IDENT "_path"
                  R_PAREN ")"
              WHITESPACE " "
              CUSTOM_OP
                PIPE "|"
                PIPE "|"
              WHITESPACE " "
              LITERAL
                STRING "'c'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              XMLTABLE_KW "xmltable"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmltest2"
      COMMA ","
      WHITESPACE " "
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "xmltable"
        ARG_LIST
          L_PAREN "("
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              LITERAL
                STRING "'/d/r/'"
              WHITESPACE " "
              CUSTOM_OP
                PIPE "|"
                PIPE "|"
              WHITESPACE " "
              BIN_EXPR
                CALL_EXPR
                  NAME_REF
                    IDENT "lower"
                  ARG_LIST
                    L_PAREN "("
                    NAME_REF
                      IDENT "_path"
                    R_PAREN ")"
                WHITESPACE " "
                CUSTOM_OP
                  PIPE "|"
                  PIPE "|"
                WHITESPACE " "
                LITERAL
                  STRING "'c'"
            R_PAREN ")"
          WHITESPACE " "
          NAME_REF
            PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            IDENT "x"
          WHITESPACE " "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          NAME_REF
            INT_KW "int"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'.'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              XMLTABLE_KW "xmltable"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "xmltest2"
      COMMA ","
      WHITESPACE " "
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "xmltable"
        ARG_LIST
          L_PAREN "("
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              LITERAL
                STRING "'/d/r/'"
              WHITESPACE " "
              CUSTOM_OP
                PIPE "|"
                PIPE "|"
              WHITESPACE " "
              BIN_EXPR
                CALL_EXPR
                  NAME_REF
                    IDENT "lower"
                  ARG_LIST
                    L_PAREN "("
                    NAME_REF
                      IDENT "_path"
                    R_PAREN ")"
                WHITESPACE " "
                CUSTOM_OP
                  PIPE "|"
                  PIPE "|"
                WHITESPACE " "
                LITERAL
                  STRING "'c'"
            R_PAREN ")"
          WHITESPACE " "
          NAME_REF
            PASSING_KW "PASSING"
          WHITESPACE " "
          NAME_REF
            IDENT "x"
          WHITESPACE " "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          NAME_REF
            INT_KW "int"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'x'"
          WHITESPACE " "
          LITERAL
            DEFAULT_KW "DEFAULT"
          WHITESPACE " "
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "ascii"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "_path"
                R_PAREN ")"
            WHITESPACE " "
            MINUS "-"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "54"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- XPath result can be boolean or number too"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "XMLTABLE"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'*'"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PASSING_KW "PASSING"
            WHITESPACE " "
            LITERAL
              STRING "'<a>a</a>'"
          WHITESPACE " "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          NAME_REF
            XML_KW "xml"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'.'"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          NAME_REF
            TEXT_KW "text"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'.'"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          NAME_REF
            TEXT_KW "text"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'\"hi\"'"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "d"
          WHITESPACE " "
          NAME_REF
            BOOLEAN_KW "boolean"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'. = \"a\"'"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "e"
          WHITESPACE " "
          NAME_REF
            INTEGER_KW "integer"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'string-length(.)'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "XMLTABLE"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'*'"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PASSING_KW "PASSING"
            WHITESPACE " "
            LITERAL
              STRING "'<e>pre<!--c1--><?pi arg?><![CDATA[&ent1]]><n2>&amp;deep</n2>post</e>'"
          WHITESPACE " "
          NAME_REF
            COLUMNS_KW "COLUMNS"
          WHITESPACE " "
          NAME_REF
            IDENT "x"
          WHITESPACE " "
          NAME_REF
            XML_KW "xml"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'/e/n2'"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "y"
          WHITESPACE " "
          NAME_REF
            XML_KW "xml"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'/'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          XMLTABLE_KW "XMLTABLE"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'.'"
          WHITESPACE " "
          NAME_REF
            PASSING_KW "PASSING"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              XMLELEMENT_KW "XMLELEMENT"
            ARG_LIST
              L_PAREN "("
              NAME_KW "NAME"
              WHITESPACE " "
              NAME
                IDENT "a"
              R_PAREN ")"
          WHITESPACE " "
          NAME_REF
            COLUMNS_KW "columns"
          WHITESPACE " "
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              VARCHAR_KW "varchar"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "20"
              R_PAREN ")"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'\"<foo/>\"'"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          NAME_REF
            XML_KW "xml"
          WHITESPACE " "
          CAST_EXPR
            NAME_REF
              PATH_KW "PATH"
            WHITESPACE " "
            LITERAL
              STRING "'\"<foo/>\"'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xmltext"
            ARG_LIST
              L_PAREN "("
              LITERAL
                NULL_KW "NULL"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xmltext"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "''"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xmltext"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'  '"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xmltext"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'foo `$_-+?=*^%!|/\\()[]{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xmltext"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'foo & <\"bar\">'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "xmltext"
            ARG_LIST
              L_PAREN "("
              BIN_EXPR
                LITERAL
                  STRING "'x'"
                CUSTOM_OP
                  PIPE "|"
                  PIPE "|"
                WHITESPACE " "
                BIN_EXPR
                  CAST_EXPR
                    LITERAL
                      STRING "'<P>73</P>'"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            XML_KW "xml"
                  WHITESPACE " "
                  CUSTOM_OP
                    PIPE "|"
                    PIPE "|"
                  WHITESPACE " "
                  BIN_EXPR
                    LITERAL
                      INT_NUMBER ".42"
                    WHITESPACE " "
                    CUSTOM_OP
                      PIPE "|"
                      PIPE "|"
                    WHITESPACE " "
                    BIN_EXPR
                      LITERAL
                        TRUE_KW "true"
                      WHITESPACE " "
                      CUSTOM_OP
                        PIPE "|"
                        PIPE "|"
                      WHITESPACE " "
                      CAST_EXPR
                        LITERAL
                          STRING "'j'"
                        COLON2 "::"
                        CHAR_TYPE
                          CHAR_KW "char"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
---
ERROR@1539: expected R_PAREN
ERROR@1539: expected R_PAREN
ERROR@1546: expected SEMICOLON
ERROR@1546: expected command, found R_PAREN
ERROR@1547: expected command, found R_PAREN
ERROR@1549: expected command, found FROM_KW
ERROR@1554: expected command, found IDENT
ERROR@4527: expected R_PAREN
ERROR@4531: expected SEMICOLON
ERROR@4531: expected command, found R_PAREN
ERROR@4533: expected command, found FROM_KW
ERROR@4538: expected command, found IDENT
ERROR@4589: expected R_PAREN
ERROR@4593: expected SEMICOLON
ERROR@4593: expected command, found R_PAREN
ERROR@7929: expected EQ
ERROR@7936: expected SEMICOLON
ERROR@7937: expected command, found DOCUMENT_KW
ERROR@8035: expected EQ
ERROR@8042: expected SEMICOLON
ERROR@8043: expected command, found CONTENT_KW
ERROR@8743: expected R_PAREN
ERROR@8743: expected R_PAREN
ERROR@8750: expected SEMICOLON
ERROR@8750: expected command, found R_PAREN
ERROR@8751: expected command, found R_PAREN
ERROR@8753: expected command, found FROM_KW
ERROR@8758: expected command, found IDENT
ERROR@9037: expected R_PAREN
ERROR@9041: expected SEMICOLON
ERROR@9041: expected command, found R_PAREN
ERROR@18387: expected COMMA
ERROR@18420: expected COMMA
ERROR@18425: expected COMMA
ERROR@18458: expected COMMA
ERROR@18461: expected COMMA
ERROR@18465: expected COMMA
ERROR@18515: expected R_PAREN
ERROR@18519: expected UPDATE_KW
ERROR@18519: expected SEMICOLON
ERROR@18520: expected command, found ORDINALITY_KW
ERROR@18530: expected command, found COMMA
ERROR@18566: expected command, found IDENT
ERROR@18579: expected command, found TEXT_KW
ERROR@18584: expected command, found PATH_KW
ERROR@18589: expected command, found STRING
ERROR@18611: expected command, found NOT_KW
ERROR@18615: expected command, found NULL_KW
ERROR@18619: expected command, found COMMA
ERROR@18655: expected command, found IDENT
ERROR@18666: expected command, found TEXT_KW
ERROR@18671: expected command, found PATH_KW
ERROR@18676: expected command, found STRING
ERROR@18688: expected command, found COMMA
ERROR@18724: expected command, found IDENT
ERROR@18734: expected command, found INT_KW
ERROR@18738: expected command, found PATH_KW
ERROR@18743: expected command, found STRING
ERROR@18754: expected command, found COMMA
ERROR@18790: expected command, found IDENT
ERROR@18795: expected command, found FLOAT_KW
ERROR@18801: expected command, found PATH_KW
ERROR@18806: expected command, found STRING
ERROR@18812: expected command, found COMMA
ERROR@18848: expected command, found IDENT
ERROR@18853: expected command, found TEXT_KW
ERROR@18858: expected command, found PATH_KW
ERROR@18863: expected command, found STRING
ERROR@18875: expected command, found COMMA
ERROR@18911: expected command, found IDENT
ERROR@18924: expected command, found TEXT_KW
ERROR@18929: expected command, found PATH_KW
ERROR@18934: expected command, found STRING
ERROR@18949: expected command, found DEFAULT_KW
ERROR@18957: expected command, found STRING
ERROR@18972: expected command, found R_PAREN
ERROR@19098: expected COMMA
ERROR@19131: expected COMMA
ERROR@19136: expected COMMA
ERROR@19169: expected COMMA
ERROR@19172: expected COMMA
ERROR@19176: expected COMMA
ERROR@19226: expected R_PAREN
ERROR@19230: expected UPDATE_KW
ERROR@19230: expected SEMICOLON
ERROR@19231: expected command, found ORDINALITY_KW
ERROR@19241: expected command, found COMMA
ERROR@19277: expected command, found IDENT
ERROR@19290: expected command, found TEXT_KW
ERROR@19295: expected command, found PATH_KW
ERROR@19300: expected command, found STRING
ERROR@19322: expected command, found NOT_KW
ERROR@19326: expected command, found NULL_KW
ERROR@19330: expected command, found COMMA
ERROR@19366: expected command, found IDENT
ERROR@19377: expected command, found TEXT_KW
ERROR@19382: expected command, found PATH_KW
ERROR@19387: expected command, found STRING
ERROR@19399: expected command, found COMMA
ERROR@19435: expected command, found IDENT
ERROR@19445: expected command, found INT_KW
ERROR@19449: expected command, found PATH_KW
ERROR@19454: expected command, found STRING
ERROR@19465: expected command, found COMMA
ERROR@19501: expected command, found IDENT
ERROR@19506: expected command, found FLOAT_KW
ERROR@19512: expected command, found PATH_KW
ERROR@19517: expected command, found STRING
ERROR@19523: expected command, found COMMA
ERROR@19559: expected command, found IDENT
ERROR@19564: expected command, found TEXT_KW
ERROR@19569: expected command, found PATH_KW
ERROR@19574: expected command, found STRING
ERROR@19586: expected command, found COMMA
ERROR@19622: expected command, found IDENT
ERROR@19635: expected command, found TEXT_KW
ERROR@19640: expected command, found PATH_KW
ERROR@19645: expected command, found STRING
ERROR@19660: expected command, found DEFAULT_KW
ERROR@19668: expected command, found STRING
ERROR@19683: expected command, found R_PAREN
ERROR@19732: expected R_PAREN
ERROR@19733: expected command, found OFF_KW
ERROR@19736: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@19736: expected SEMICOLON
ERROR@19736: expected command, found R_PAREN
ERROR@19781: expected R_PAREN
ERROR@19782: expected command, found OFF_KW
ERROR@19785: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@19785: expected SEMICOLON
ERROR@19785: expected command, found COMMA
ERROR@19787: expected command, found VERBOSE_KW
ERROR@19794: expected command, found R_PAREN
ERROR@19866: expected COMMA
ERROR@19874: expected COMMA
ERROR@19879: expected COMMA
ERROR@19887: expected COMMA
ERROR@19890: expected COMMA
ERROR@19948: expected COMMA
ERROR@19956: expected COMMA
ERROR@19961: expected COMMA
ERROR@19969: expected COMMA
ERROR@19972: expected COMMA
ERROR@19982: expected COMMA
ERROR@20000: expected COMMA
ERROR@20088: expected R_PAREN
ERROR@20088: expected R_PAREN
ERROR@20094: expected SEMICOLON
ERROR@20094: expected command, found R_PAREN
ERROR@20095: expected command, found COMMA
ERROR@20119: expected command, found STRING
ERROR@20159: expected command, found PASSING_KW
ERROR@20167: expected command, found STRING
ERROR@20244: expected command, found COLUMNS_KW
ERROR@20252: expected command, found IDENT
ERROR@20254: expected command, found INT_KW
ERROR@20258: expected command, found PATH_KW
ERROR@20263: expected command, found STRING
ERROR@20269: expected command, found R_PAREN
ERROR@20351: expected R_PAREN
ERROR@20351: expected R_PAREN
ERROR@20359: expected SEMICOLON
ERROR@20359: expected command, found R_PAREN
ERROR@20360: expected command, found COMMA
ERROR@20384: expected command, found STRING
ERROR@20424: expected command, found PASSING_KW
ERROR@20432: expected command, found STRING
ERROR@20509: expected command, found COLUMNS_KW
ERROR@20517: expected command, found IDENT
ERROR@20519: expected command, found INT_KW
ERROR@20523: expected command, found PATH_KW
ERROR@20528: expected command, found STRING
ERROR@20534: expected command, found R_PAREN
ERROR@20613: expected COMMA
ERROR@20662: expected COMMA
ERROR@20747: expected COMMA
ERROR@20777: expected COMMA
ERROR@20779: expected COMMA
ERROR@20783: expected COMMA
ERROR@20822: expected COMMA
ERROR@20862: expected COMMA
ERROR@20893: expected COMMA
ERROR@20895: expected COMMA
ERROR@20900: expected COMMA
ERROR@21070: expected COMMA
ERROR@21103: expected COMMA
ERROR@21108: expected COMMA
ERROR@21141: expected COMMA
ERROR@21144: expected COMMA
ERROR@21148: expected COMMA
ERROR@21198: expected R_PAREN
ERROR@21202: expected UPDATE_KW
ERROR@21202: expected SEMICOLON
ERROR@21203: expected command, found ORDINALITY_KW
ERROR@21213: expected command, found COMMA
ERROR@21249: expected command, found IDENT
ERROR@21262: expected command, found TEXT_KW
ERROR@21267: expected command, found PATH_KW
ERROR@21272: expected command, found STRING
ERROR@21287: expected command, found NOT_KW
ERROR@21291: expected command, found NULL_KW
ERROR@21295: expected command, found COMMA
ERROR@21331: expected command, found IDENT
ERROR@21342: expected command, found TEXT_KW
ERROR@21347: expected command, found PATH_KW
ERROR@21352: expected command, found STRING
ERROR@21364: expected command, found COMMA
ERROR@21400: expected command, found IDENT
ERROR@21410: expected command, found INT_KW
ERROR@21414: expected command, found PATH_KW
ERROR@21419: expected command, found STRING
ERROR@21430: expected command, found COMMA
ERROR@21466: expected command, found IDENT
ERROR@21471: expected command, found FLOAT_KW
ERROR@21477: expected command, found PATH_KW
ERROR@21482: expected command, found STRING
ERROR@21488: expected command, found COMMA
ERROR@21524: expected command, found IDENT
ERROR@21529: expected command, found TEXT_KW
ERROR@21534: expected command, found PATH_KW
ERROR@21539: expected command, found STRING
ERROR@21551: expected command, found COMMA
ERROR@21587: expected command, found IDENT
ERROR@21600: expected command, found TEXT_KW
ERROR@21605: expected command, found PATH_KW
ERROR@21610: expected command, found STRING
ERROR@21625: expected command, found DEFAULT_KW
ERROR@21633: expected command, found STRING
ERROR@21648: expected command, found R_PAREN
ERROR@21771: expected COMMA
ERROR@21779: expected COMMA
ERROR@21784: expected COMMA
ERROR@21792: expected COMMA
ERROR@21807: expected COMMA
ERROR@21825: expected COMMA
ERROR@21938: expected COMMA
ERROR@21946: expected COMMA
ERROR@21951: expected COMMA
ERROR@21959: expected COMMA
ERROR@21962: expected R_PAREN
ERROR@21966: expected UPDATE_KW
ERROR@21966: expected SEMICOLON
ERROR@21967: expected command, found ORDINALITY_KW
ERROR@21977: expected command, found COMMA
ERROR@21979: expected command, found IDENT
ERROR@21994: expected command, found TEXT_KW
ERROR@21998: expected command, found COMMA
ERROR@22000: expected command, found IDENT
ERROR@22012: expected command, found INT_KW
ERROR@22015: expected command, found R_PAREN
ERROR@22124: expected COMMA
ERROR@22132: expected COMMA
ERROR@22137: expected COMMA
ERROR@22145: expected COMMA
ERROR@22148: expected COMMA
ERROR@22152: expected COMMA
ERROR@22179: expected COMMA
ERROR@22197: expected COMMA
ERROR@22310: expected COMMA
ERROR@22318: expected COMMA
ERROR@22323: expected COMMA
ERROR@22331: expected COMMA
ERROR@22334: expected COMMA
ERROR@22338: expected COMMA
ERROR@22458: expected COMMA
ERROR@22466: expected COMMA
ERROR@22471: expected COMMA
ERROR@22479: expected COMMA
ERROR@22482: expected R_PAREN
ERROR@22486: expected UPDATE_KW
ERROR@22486: expected SEMICOLON
ERROR@22487: expected command, found ORDINALITY_KW
ERROR@22497: expected command, found R_PAREN
ERROR@22606: expected COMMA
ERROR@22614: expected COMMA
ERROR@22619: expected COMMA
ERROR@22627: expected COMMA
ERROR@22630: expected COMMA
ERROR@22634: expected COMMA
ERROR@22661: expected COMMA
ERROR@22679: expected COMMA
ERROR@22692: expected COMMA
ERROR@22696: expected COMMA
ERROR@22814: expected COMMA
ERROR@22822: expected COMMA
ERROR@22827: expected COMMA
ERROR@22835: expected COMMA
ERROR@22838: expected COMMA
ERROR@22842: expected COMMA
ERROR@22869: expected COMMA
ERROR@22887: expected COMMA
ERROR@22900: expected COMMA
ERROR@22904: expected COMMA
ERROR@22949: expected COMMA
ERROR@23049: expected COMMA
ERROR@23057: expected COMMA
ERROR@23065: expected COMMA
ERROR@23103: expected COMMA
ERROR@23203: expected COMMA
ERROR@23211: expected COMMA
ERROR@23219: expected COMMA
ERROR@23224: expected COMMA
ERROR@23307: expected COMMA
ERROR@23389: expected COMMA
ERROR@23397: expected COMMA
ERROR@23399: expected COMMA
ERROR@23461: expected COMMA
ERROR@23594: expected COMMA
ERROR@23602: expected COMMA
ERROR@23606: expected COMMA
ERROR@23643: expected COMMA
ERROR@23776: expected COMMA
ERROR@23784: expected COMMA
ERROR@23788: expected COMMA
ERROR@23819: expected R_PAREN
ERROR@23820: expected command, found OFF_KW
ERROR@23823: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@23823: expected SEMICOLON
ERROR@23823: expected command, found R_PAREN
ERROR@23918: expected COMMA
ERROR@23951: expected COMMA
ERROR@23956: expected COMMA
ERROR@23989: expected COMMA
ERROR@23992: expected COMMA
ERROR@23996: expected COMMA
ERROR@24046: expected R_PAREN
ERROR@24050: expected UPDATE_KW
ERROR@24050: expected SEMICOLON
ERROR@24051: expected command, found ORDINALITY_KW
ERROR@24061: expected command, found COMMA
ERROR@24097: expected command, found IDENT
ERROR@24110: expected command, found TEXT_KW
ERROR@24115: expected command, found PATH_KW
ERROR@24120: expected command, found STRING
ERROR@24135: expected command, found NOT_KW
ERROR@24139: expected command, found NULL_KW
ERROR@24143: expected command, found COMMA
ERROR@24179: expected command, found IDENT
ERROR@24190: expected command, found TEXT_KW
ERROR@24195: expected command, found PATH_KW
ERROR@24200: expected command, found STRING
ERROR@24212: expected command, found COMMA
ERROR@24248: expected command, found IDENT
ERROR@24258: expected command, found INT_KW
ERROR@24262: expected command, found PATH_KW
ERROR@24267: expected command, found STRING
ERROR@24278: expected command, found COMMA
ERROR@24314: expected command, found IDENT
ERROR@24319: expected command, found FLOAT_KW
ERROR@24325: expected command, found PATH_KW
ERROR@24330: expected command, found STRING
ERROR@24336: expected command, found COMMA
ERROR@24372: expected command, found IDENT
ERROR@24377: expected command, found TEXT_KW
ERROR@24382: expected command, found PATH_KW
ERROR@24387: expected command, found STRING
ERROR@24399: expected command, found COMMA
ERROR@24435: expected command, found IDENT
ERROR@24448: expected command, found TEXT_KW
ERROR@24453: expected command, found PATH_KW
ERROR@24458: expected command, found STRING
ERROR@24473: expected command, found DEFAULT_KW
ERROR@24481: expected command, found STRING
ERROR@24496: expected command, found R_PAREN
ERROR@24619: expected COMMA
ERROR@24627: expected COMMA
ERROR@24632: expected COMMA
ERROR@24640: expected COMMA
ERROR@24655: expected COMMA
ERROR@24673: expected COMMA
ERROR@24735: expected R_PAREN
ERROR@24736: expected command, found OFF_KW
ERROR@24739: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@24739: expected SEMICOLON
ERROR@24739: expected command, found R_PAREN
ERROR@24840: expected COMMA
ERROR@24848: expected COMMA
ERROR@24853: expected COMMA
ERROR@24861: expected COMMA
ERROR@24876: expected COMMA
ERROR@24894: expected COMMA
ERROR@24974: expected R_PAREN
ERROR@24975: expected command, found OFF_KW
ERROR@24978: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@24978: expected SEMICOLON
ERROR@24978: expected command, found R_PAREN
ERROR@25079: expected COMMA
ERROR@25087: expected COMMA
ERROR@25092: expected COMMA
ERROR@25100: expected COMMA
ERROR@25115: expected COMMA
ERROR@25133: expected COMMA
ERROR@26024: expected COMMA
ERROR@26057: expected COMMA
ERROR@26062: expected COMMA
ERROR@26095: expected COMMA
ERROR@26098: expected COMMA
ERROR@26102: expected COMMA
ERROR@26152: expected R_PAREN
ERROR@26156: expected UPDATE_KW
ERROR@26156: expected SEMICOLON
ERROR@26157: expected command, found ORDINALITY_KW
ERROR@26167: expected command, found COMMA
ERROR@26203: expected command, found IDENT
ERROR@26216: expected command, found TEXT_KW
ERROR@26221: expected command, found PATH_KW
ERROR@26226: expected command, found STRING
ERROR@26241: expected command, found NOT_KW
ERROR@26245: expected command, found NULL_KW
ERROR@26249: expected command, found COMMA
ERROR@26285: expected command, found IDENT
ERROR@26296: expected command, found TEXT_KW
ERROR@26301: expected command, found PATH_KW
ERROR@26306: expected command, found STRING
ERROR@26318: expected command, found COMMA
ERROR@26354: expected command, found IDENT
ERROR@26364: expected command, found INT_KW
ERROR@26368: expected command, found PATH_KW
ERROR@26373: expected command, found STRING
ERROR@26384: expected command, found COMMA
ERROR@26420: expected command, found IDENT
ERROR@26425: expected command, found FLOAT_KW
ERROR@26431: expected command, found PATH_KW
ERROR@26436: expected command, found STRING
ERROR@26442: expected command, found COMMA
ERROR@26478: expected command, found IDENT
ERROR@26483: expected command, found TEXT_KW
ERROR@26488: expected command, found PATH_KW
ERROR@26493: expected command, found STRING
ERROR@26505: expected command, found COMMA
ERROR@26541: expected command, found IDENT
ERROR@26554: expected command, found TEXT_KW
ERROR@26559: expected command, found PATH_KW
ERROR@26564: expected command, found STRING
ERROR@26579: expected command, found DEFAULT_KW
ERROR@26587: expected command, found STRING
ERROR@26602: expected command, found R_PAREN
ERROR@26699: expected COMMA
ERROR@26732: expected COMMA
ERROR@26737: expected COMMA
ERROR@26770: expected COMMA
ERROR@26773: expected COMMA
ERROR@26777: expected COMMA
ERROR@26827: expected R_PAREN
ERROR@26831: expected UPDATE_KW
ERROR@26831: expected SEMICOLON
ERROR@26832: expected command, found ORDINALITY_KW
ERROR@26842: expected command, found COMMA
ERROR@26878: expected command, found IDENT
ERROR@26891: expected command, found TEXT_KW
ERROR@26896: expected command, found PATH_KW
ERROR@26901: expected command, found STRING
ERROR@26916: expected command, found NOT_KW
ERROR@26920: expected command, found NULL_KW
ERROR@26924: expected command, found COMMA
ERROR@26960: expected command, found IDENT
ERROR@26971: expected command, found TEXT_KW
ERROR@26976: expected command, found PATH_KW
ERROR@26981: expected command, found STRING
ERROR@26993: expected command, found COMMA
ERROR@27029: expected command, found IDENT
ERROR@27039: expected command, found INT_KW
ERROR@27043: expected command, found PATH_KW
ERROR@27048: expected command, found STRING
ERROR@27059: expected command, found COMMA
ERROR@27095: expected command, found IDENT
ERROR@27100: expected command, found FLOAT_KW
ERROR@27106: expected command, found PATH_KW
ERROR@27111: expected command, found STRING
ERROR@27117: expected command, found COMMA
ERROR@27153: expected command, found IDENT
ERROR@27158: expected command, found TEXT_KW
ERROR@27163: expected command, found PATH_KW
ERROR@27168: expected command, found STRING
ERROR@27180: expected command, found COMMA
ERROR@27216: expected command, found IDENT
ERROR@27229: expected command, found TEXT_KW
ERROR@27234: expected command, found PATH_KW
ERROR@27239: expected command, found STRING
ERROR@27254: expected command, found DEFAULT_KW
ERROR@27262: expected command, found STRING
ERROR@27277: expected command, found R_PAREN
ERROR@27281: expected command, found WHERE_KW
ERROR@27287: expected command, found IDENT
ERROR@27297: expected command, found EQ
ERROR@27299: expected command, found INT_NUMBER
ERROR@27326: expected R_PAREN
ERROR@27327: expected command, found OFF_KW
ERROR@27330: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@27330: expected SEMICOLON
ERROR@27330: expected command, found R_PAREN
ERROR@27425: expected COMMA
ERROR@27458: expected COMMA
ERROR@27463: expected COMMA
ERROR@27496: expected COMMA
ERROR@27499: expected COMMA
ERROR@27503: expected COMMA
ERROR@27553: expected R_PAREN
ERROR@27557: expected UPDATE_KW
ERROR@27557: expected SEMICOLON
ERROR@27558: expected command, found ORDINALITY_KW
ERROR@27568: expected command, found COMMA
ERROR@27604: expected command, found IDENT
ERROR@27617: expected command, found TEXT_KW
ERROR@27622: expected command, found PATH_KW
ERROR@27627: expected command, found STRING
ERROR@27642: expected command, found NOT_KW
ERROR@27646: expected command, found NULL_KW
ERROR@27650: expected command, found COMMA
ERROR@27686: expected command, found IDENT
ERROR@27697: expected command, found TEXT_KW
ERROR@27702: expected command, found PATH_KW
ERROR@27707: expected command, found STRING
ERROR@27719: expected command, found COMMA
ERROR@27755: expected command, found IDENT
ERROR@27765: expected command, found INT_KW
ERROR@27769: expected command, found PATH_KW
ERROR@27774: expected command, found STRING
ERROR@27785: expected command, found COMMA
ERROR@27821: expected command, found IDENT
ERROR@27826: expected command, found FLOAT_KW
ERROR@27832: expected command, found PATH_KW
ERROR@27837: expected command, found STRING
ERROR@27843: expected command, found COMMA
ERROR@27879: expected command, found IDENT
ERROR@27884: expected command, found TEXT_KW
ERROR@27889: expected command, found PATH_KW
ERROR@27894: expected command, found STRING
ERROR@27906: expected command, found COMMA
ERROR@27942: expected command, found IDENT
ERROR@27955: expected command, found TEXT_KW
ERROR@27960: expected command, found PATH_KW
ERROR@27965: expected command, found STRING
ERROR@27980: expected command, found DEFAULT_KW
ERROR@27988: expected command, found STRING
ERROR@28003: expected command, found R_PAREN
ERROR@28007: expected command, found WHERE_KW
ERROR@28013: expected command, found IDENT
ERROR@28023: expected command, found EQ
ERROR@28025: expected command, found INT_NUMBER
ERROR@28149: expected COMMA
ERROR@28182: expected COMMA
ERROR@28187: expected COMMA
ERROR@28220: expected COMMA
ERROR@28223: expected COMMA
ERROR@28227: expected COMMA
ERROR@28277: expected R_PAREN
ERROR@28281: expected UPDATE_KW
ERROR@28281: expected SEMICOLON
ERROR@28282: expected command, found ORDINALITY_KW
ERROR@28292: expected command, found COMMA
ERROR@28328: expected command, found IDENT
ERROR@28341: expected command, found TEXT_KW
ERROR@28346: expected command, found PATH_KW
ERROR@28351: expected command, found STRING
ERROR@28366: expected command, found NOT_KW
ERROR@28370: expected command, found NULL_KW
ERROR@28374: expected command, found COMMA
ERROR@28410: expected command, found IDENT
ERROR@28421: expected command, found TEXT_KW
ERROR@28426: expected command, found PATH_KW
ERROR@28431: expected command, found STRING
ERROR@28443: expected command, found COMMA
ERROR@28479: expected command, found IDENT
ERROR@28489: expected command, found INT_KW
ERROR@28493: expected command, found PATH_KW
ERROR@28498: expected command, found STRING
ERROR@28509: expected command, found COMMA
ERROR@28545: expected command, found IDENT
ERROR@28550: expected command, found FLOAT_KW
ERROR@28556: expected command, found PATH_KW
ERROR@28561: expected command, found STRING
ERROR@28568: expected command, found NOT_KW
ERROR@28572: expected command, found NULL_KW
ERROR@28576: expected command, found COMMA
ERROR@28612: expected command, found IDENT
ERROR@28617: expected command, found TEXT_KW
ERROR@28622: expected command, found PATH_KW
ERROR@28627: expected command, found STRING
ERROR@28639: expected command, found COMMA
ERROR@28675: expected command, found IDENT
ERROR@28688: expected command, found TEXT_KW
ERROR@28693: expected command, found PATH_KW
ERROR@28698: expected command, found STRING
ERROR@28713: expected command, found DEFAULT_KW
ERROR@28721: expected command, found STRING
ERROR@28736: expected command, found R_PAREN
ERROR@29419: expected COMMA
ERROR@29427: expected COMMA
ERROR@29432: expected COMMA
ERROR@29473: expected COMMA
ERROR@29481: expected COMMA
ERROR@29537: expected COMMA
ERROR@29591: expected COMMA
ERROR@29648: expected COMMA
ERROR@29706: expected COMMA
ERROR@29765: expected COMMA
ERROR@30527: expected COMMA
ERROR@30535: expected COMMA
ERROR@30539: expected COMMA
ERROR@30580: expected COMMA
ERROR@30588: expected COMMA
ERROR@30644: expected COMMA
ERROR@30698: expected COMMA
ERROR@30755: expected COMMA
ERROR@30813: expected COMMA
ERROR@30872: expected COMMA
ERROR@31275: expected COMMA
ERROR@31283: expected COMMA
ERROR@31285: expected COMMA
ERROR@31293: expected COMMA
ERROR@31295: expected COMMA
ERROR@31299: expected COMMA
ERROR@31415: expected COMMA
ERROR@31423: expected COMMA
ERROR@31425: expected COMMA
ERROR@31433: expected COMMA
ERROR@31435: expected COMMA
ERROR@31439: expected COMMA
ERROR@31533: expected COMMA
ERROR@31541: expected COMMA
ERROR@31543: expected COMMA
ERROR@31551: expected COMMA
ERROR@31553: expected COMMA
ERROR@31557: expected COMMA
ERROR@31566: expected COMMA
ERROR@31574: expected COMMA
ERROR@31667: expected COMMA
ERROR@31686: expected COMMA
ERROR@31694: expected COMMA
ERROR@31696: expected COMMA
ERROR@31700: expected COMMA
ERROR@31712: expected COMMA
ERROR@31717: expected COMMA
ERROR@31729: expected COMMA
ERROR@31734: expected COMMA
ERROR@31749: expected COMMA
ERROR@31757: expected COMMA
ERROR@31775: expected COMMA
ERROR@31783: expected COMMA
ERROR@31836: expected COMMA
ERROR@31915: expected COMMA
ERROR@31923: expected COMMA
ERROR@31925: expected COMMA
ERROR@31929: expected COMMA
ERROR@31945: expected COMMA
ERROR@31949: expected COMMA
ERROR@31988: expected COMMA
ERROR@31996: expected COMMA
ERROR@32015: expected COMMA
ERROR@32023: expected COMMA
ERROR@32025: expected COMMA
ERROR@32037: expected COMMA
ERROR@32056: expected COMMA
ERROR@32060: expected COMMA

---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/object_address.sql
---
SOURCE_FILE
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test for pg_get_object_address"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  COMMENT "-- Clean up in case a prior regression run failed"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "client_min_messages"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    LITERAL
      STRING "'warning'"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_addr_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "client_min_messages"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_USER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    NAME
      IDENT "regress_addr_user"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test generic object addressing/identification functions"
  WHITESPACE "\n"
  CREATE_SCHEMA_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SCHEMA_KW "SCHEMA"
    WHITESPACE " "
    NAME
      IDENT "addr_nsp"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "search_path"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    LITERAL
      STRING "'addr_nsp'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FOREIGN_DATA_WRAPPER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FOREIGN_KW "FOREIGN"
    WHITESPACE " "
    DATA_KW "DATA"
    WHITESPACE " "
    WRAPPER_KW "WRAPPER"
    WHITESPACE " "
    NAME
      IDENT "addr_fdw"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_SERVER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SERVER_KW "SERVER"
    WHITESPACE " "
    NAME
      IDENT "addr_fserv"
    WHITESPACE " "
    FOREIGN_KW "FOREIGN"
    WHITESPACE " "
    DATA_KW "DATA"
    WHITESPACE " "
    WRAPPER_KW "WRAPPER"
    WHITESPACE " "
    NAME_REF
      IDENT "addr_fdw"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    DICTIONARY_KW "DICTIONARY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "addr_ts_dict"
    WHITESPACE " "
    L_PAREN "("
    NAME
      TEMPLATE_KW "template"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            SIMPLE_KW "simple"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    CONFIGURATION_KW "CONFIGURATION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "addr_ts_conf"
    WHITESPACE " "
    L_PAREN "("
    NAME
      COPY_KW "copy"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "english"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    TEMPLATE_KW "TEMPLATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "addr_ts_temp"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "lexize"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "dsimple_lexize"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEXT_KW "TEXT"
    WHITESPACE " "
    SEARCH_KW "SEARCH"
    WHITESPACE " "
    PARSER_KW "PARSER"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "addr_ts_prs"
    WHITESPACE "\n    "
    L_PAREN "("
    NAME
      START_KW "start"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "prsd_start"
    COMMA ","
    WHITESPACE " "
    NAME
      IDENT "gettoken"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "prsd_nexttoken"
    COMMA ","
    WHITESPACE " "
    NAME
      END_KW "end"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "prsd_end"
    COMMA ","
    WHITESPACE " "
    NAME
      IDENT "lextypes"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "prsd_lextype"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "addr_nsp"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "gentable"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "serial"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CONSTRAINT_KW "CONSTRAINT"
          WHITESPACE " "
          NAME_REF
            IDENT "a_chk"
          WHITESPACE " "
          CHECK_KW "CHECK"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
        WHITESPACE " "
        DEFAULT_CONSTRAINT
          DEFAULT_KW "DEFAULT"
          WHITESPACE " "
          LITERAL
            STRING "'hello'"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "addr_nsp"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "parttable"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    RANGE_KW "RANGE"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "addr_nsp"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "genview"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "addr_nsp"
          DOT "."
          NAME_REF
            IDENT "gentable"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_MATERIALIZED_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    MATERIALIZED_KW "MATERIALIZED"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "addr_nsp"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "genmatview"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "addr_nsp"
          DOT "."
          NAME_REF
            IDENT "gentable"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TYPE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "addr_nsp"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "gencomptype"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TYPE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "addr_nsp"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "genenum"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    ENUM_KW "ENUM"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'one'"
    COMMA ","
    WHITESPACE " "
    LITERAL
      STRING "'two'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FOREIGN_TABLE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FOREIGN_KW "FOREIGN"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "addr_nsp"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "genftable"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "a"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    R_PAREN ")"
    WHITESPACE " "
    SERVER_KW "SERVER"
    WHITESPACE " "
    NAME_REF
      IDENT "addr_fserv"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_AGGREGATE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    AGGREGATE_KW "AGGREGATE"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "addr_nsp"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "genaggr"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "int4"
      R_PAREN ")"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "sfunc"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4pl"
    COMMA ","
    WHITESPACE " "
    NAME
      IDENT "stype"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    DOMAIN_KW "DOMAIN"
    WHITESPACE " "
    NAME
      IDENT "addr_nsp"
  ERROR
    DOT "."
  ERROR
    IDENT "gendomain"
  WHITESPACE " "
  ERROR
    AS_KW "AS"
  WHITESPACE " "
  ERROR
    IDENT "int4"
  WHITESPACE " "
  ERROR
    CONSTRAINT_KW "CONSTRAINT"
  WHITESPACE " "
  ERROR
    IDENT "domconstr"
  WHITESPACE " "
  ERROR
    CHECK_KW "CHECK"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    VALUE_KW "value"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    INT_NUMBER "0"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "addr_nsp"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "trig"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$ BEGIN END; $$"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TRIGGER_KW "TRIGGER"
    WHITESPACE " "
    NAME
      IDENT "t"
    WHITESPACE " "
    BEFORE_KW "BEFORE"
    WHITESPACE " "
    INSERT_KW "INSERT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "addr_nsp"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "gentable"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    EACH_KW "EACH"
    WHITESPACE " "
    ROW_KW "ROW"
    WHITESPACE " "
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    PROCEDURE_KW "PROCEDURE"
    WHITESPACE " "
    CALL_EXPR
      FIELD_EXPR
        NAME_REF
          IDENT "addr_nsp"
        DOT "."
        NAME_REF
          IDENT "trig"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "genpol"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "addr_nsp"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "gentable"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_PROCEDURE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    PROCEDURE_KW "PROCEDURE"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "addr_nsp"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "proc"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "int4"
      R_PAREN ")"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$ $$"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_SERVER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SERVER_KW "SERVER"
    WHITESPACE " "
    NAME
      IDENT "\"integer\""
    WHITESPACE " "
    FOREIGN_KW "FOREIGN"
    WHITESPACE " "
    DATA_KW "DATA"
    WHITESPACE " "
    WRAPPER_KW "WRAPPER"
    WHITESPACE " "
    NAME_REF
      IDENT "addr_fdw"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_USER_MAPPING_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    MAPPING_KW "MAPPING"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    IDENT "regress_addr_user"
    WHITESPACE " "
    SERVER_KW "SERVER"
    WHITESPACE " "
    NAME_REF
      IDENT "\"integer\""
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DEFAULT_PRIVILEGES_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    PRIVILEGES_KW "PRIVILEGES"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    IDENT "regress_addr_user"
    WHITESPACE " "
    IN_KW "IN"
    WHITESPACE " "
    SCHEMA_KW "SCHEMA"
    WHITESPACE " "
    NAME_REF
      IDENT "public"
    WHITESPACE " "
    GRANT_KW "GRANT"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    TABLES_KW "TABLES"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_addr_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DEFAULT_PRIVILEGES_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    PRIVILEGES_KW "PRIVILEGES"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    IDENT "regress_addr_user"
    WHITESPACE " "
    REVOKE_KW "REVOKE"
    WHITESPACE " "
    DELETE_KW "DELETE"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    TABLES_KW "TABLES"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    IDENT "regress_addr_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- this transform would be quite unsafe to leave lying around,"
  WHITESPACE "\n"
  COMMENT "-- except that the SQL language pays no attention to transforms:"
  WHITESPACE "\n"
  CREATE_TRANSFORM_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TRANSFORM_KW "TRANSFORM"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    WHITESPACE " "
    LANGUAGE_KW "LANGUAGE"
    WHITESPACE " "
    NAME_REF
      SQL_KW "SQL"
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n    "
    FROM_KW "FROM"
    WHITESPACE " "
    SQL_KW "SQL"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "prsd_lextype"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "internal"
      R_PAREN ")"
    COMMA ","
    WHITESPACE "\n    "
    TO_KW "TO"
    WHITESPACE " "
    SQL_KW "SQL"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "int4recv"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "internal"
      R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- suppress warning that depends on wal_level"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "client_min_messages"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'ERROR'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_PUBLICATION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME
      IDENT "addr_pub"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "addr_nsp"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "gentable"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_PUBLICATION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME
      IDENT "addr_pub_schema"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    TABLES_KW "TABLES"
    WHITESPACE " "
    IN_KW "IN"
    WHITESPACE " "
    SCHEMA_KW "SCHEMA"
    WHITESPACE " "
    NAME_REF
      IDENT "addr_nsp"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "client_min_messages"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_addr_sub"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "''"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "bar"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "slot_name"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      NONE_KW "NONE"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_STATISTICS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    STATISTICS_KW "STATISTICS"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "addr_nsp"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "gentable_stat"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "addr_nsp"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "gentable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test some error cases"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'stone'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'table'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'table'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{NULL}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- unrecognized object types"
  WHITESPACE "\n"
  DO_STMT
    DO_KW "DO"
    WHITESPACE " "
    LITERAL
      DOLLAR_QUOTED_STRING "$$\nDECLARE\n    objtype text;\nBEGIN\n    FOR objtype IN VALUES ('toast table'), ('index column'), ('sequence column'),\n        ('toast table column'), ('view column'), ('materialized view column')\n    LOOP\n        BEGIN\n            PERFORM pg_get_object_address(objtype, '{one}', '{}');\n        EXCEPTION WHEN invalid_parameter_value THEN\n            RAISE WARNING 'error for %: %', objtype, sqlerrm;\n        END;\n    END LOOP;\nEND;\n$$"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- miscellaneous other errors"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "pg_get_object_address"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'operator of access method'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{btree,integer_ops,1}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{int4,bool}'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "pg_get_object_address"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'operator of access method'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{btree,integer_ops,99}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{int4,int4}'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "pg_get_object_address"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'function of access method'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{btree,integer_ops,1}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{int4,bool}'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "pg_get_object_address"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'function of access method'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{btree,integer_ops,99}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{int4,int4}'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DO_STMT
    DO_KW "DO"
    WHITESPACE " "
    LITERAL
      DOLLAR_QUOTED_STRING "$$\nDECLARE\n    objtype text;\n    names   text[];\n    args    text[];\nBEGIN\n    FOR objtype IN VALUES\n        ('table'), ('index'), ('sequence'), ('view'),\n        ('materialized view'), ('foreign table'),\n        ('table column'), ('foreign table column'),\n        ('aggregate'), ('function'), ('procedure'), ('type'), ('cast'),\n        ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),\n        ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),\n        ('text search parser'), ('text search dictionary'),\n        ('text search template'), ('text search configuration'),\n        ('policy'), ('user mapping'), ('default acl'), ('transform'),\n        ('operator of access method'), ('function of access method'),\n        ('publication namespace'), ('publication relation')\n    LOOP\n        FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')\n        LOOP\n            FOR args IN VALUES ('{}'), ('{integer}')\n            LOOP\n                BEGIN\n                    PERFORM pg_get_object_address(objtype, names, args);\n                EXCEPTION WHEN OTHERS THEN\n                    RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;\n                END;\n            END LOOP;\n        END LOOP;\n    END LOOP;\nEND;\n$$"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- these object types cannot be qualified names"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'language'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{one}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'language'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{one,two}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'large object'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{123}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'large object'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{123,456}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'large object'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{blargh}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'schema'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{one}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'schema'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{one,two}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'role'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{one}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'role'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{one,two}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'database'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{one}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'database'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{one,two}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'tablespace'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{one}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'tablespace'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{one,two}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'foreign-data wrapper'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{one}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'foreign-data wrapper'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{one,two}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'server'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{one}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'server'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{one,two}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'extension'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{one}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'extension'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{one,two}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'event trigger'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{one}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'event trigger'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{one,two}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'access method'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{one}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'access method'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{one,two}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'publication'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{one}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'publication'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{one,two}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'subscription'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{one}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_object_address"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'subscription'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{one,two}'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'{}'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Make sure that NULL handling is correct."
  WHITESPACE "\n\n"
  COMMENT "-- Temporarily disable fancy output, so as future additions never create"
  WHITESPACE "\n"
  COMMENT "-- a large amount of diffs."
  WHITESPACE "\n\n"
  COMMENT "-- test successful cases"
  WHITESPACE "\n"
  SELECT
    WITH_CLAUSE
      WITH_KW "WITH"
      WHITESPACE " "
      WITH_TABLE
        NAME
          IDENT "objects"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              TYPE_KW "type"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              NAME_KW "name"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "args"
          R_PAREN ")"
        WHITESPACE " "
        AS_KW "AS"
        WHITESPACE " "
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'table'"
          COMMA ","
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'{addr_nsp, gentable}'"
            COLON2 "::"
            ARRAY_TYPE
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              L_BRACK "["
              R_BRACK "]"
          COMMA ","
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'{}'"
            COLON2 "::"
            ARRAY_TYPE
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              L_BRACK "["
              R_BRACK "]"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'table'"
          COMMA ","
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'{addr_nsp, parttable}'"
            COLON2 "::"
            ARRAY_TYPE
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              L_BRACK "["
              R_BRACK "]"
          COMMA ","
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'{}'"
            COLON2 "::"
            ARRAY_TYPE
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              L_BRACK "["
              R_BRACK "]"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'index'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_nsp, gentable_pkey}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'index'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_nsp, parttable_pkey}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'sequence'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_nsp, gentable_a_seq}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          COMMENT "-- toast table"
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'view'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_nsp, genview}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'materialized view'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_nsp, genmatview}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'foreign table'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_nsp, genftable}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'table column'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_nsp, gentable, b}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'foreign table column'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_nsp, genftable, a}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'aggregate'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_nsp, genaggr}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{int4}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'function'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{pg_catalog, pg_identify_object}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{pg_catalog.oid, pg_catalog.oid, int4}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'procedure'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_nsp, proc}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{int4}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'type'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{pg_catalog._int4}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'type'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_nsp.gendomain}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'type'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_nsp.gencomptype}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'type'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_nsp.genenum}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'cast'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{int8}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{int4}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'collation'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{default}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'table constraint'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_nsp, gentable, a_chk}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'domain constraint'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_nsp.gendomain}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{domconstr}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'conversion'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{pg_catalog, koi8_r_to_mic}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'default value'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_nsp, gentable, b}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'language'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{plpgsql}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          COMMENT "-- large object"
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'operator'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{+}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{int4, int4}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'operator class'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{btree, int4_ops}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'operator family'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{btree, integer_ops}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'operator of access method'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{btree,integer_ops,1}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{integer,integer}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'function of access method'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{btree,integer_ops,2}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{integer,integer}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'rule'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_nsp, genview, _RETURN}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'trigger'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_nsp, gentable, t}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'schema'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_nsp}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'text search parser'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_ts_prs}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'text search dictionary'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_ts_dict}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'text search template'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_ts_temp}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'text search configuration'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_ts_conf}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'role'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{regress_addr_user}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          COMMENT "-- database"
          WHITESPACE "\n    "
          COMMENT "-- tablespace"
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'foreign-data wrapper'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_fdw}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'server'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_fserv}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'user mapping'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{regress_addr_user}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{integer}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'default acl'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{regress_addr_user,public}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{r}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'default acl'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{regress_addr_user}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{r}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          COMMENT "-- extension"
          WHITESPACE "\n    "
          COMMENT "-- event trigger"
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'policy'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_nsp, gentable, genpol}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'transform'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{int}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{sql}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'access method'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{btree}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'publication'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_pub}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'publication namespace'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_nsp}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_pub_schema}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'publication relation'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_nsp, gentable}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_pub}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'subscription'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{regress_addr_sub}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "\n    "
          L_PAREN "("
          LITERAL
            STRING "'statistics object'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{addr_nsp, gentable_stat}'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'{}'"
          R_PAREN ")"
        WHITESPACE "\n  "
        R_PAREN ")"
    WHITESPACE "\n"
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            PAREN_EXPR
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  IDENT "pg_identify_object"
                ARG_LIST
                  L_PAREN "("
                  FIELD_EXPR
                    NAME_REF
                      IDENT "addr1"
                    DOT "."
                    NAME_REF
                      IDENT "classid"
                  COMMA ","
                  WHITESPACE " "
                  FIELD_EXPR
                    NAME_REF
                      IDENT "addr1"
                    DOT "."
                    NAME_REF
                      IDENT "objid"
                  COMMA ","
                  WHITESPACE " "
                  FIELD_EXPR
                    NAME_REF
                      IDENT "addr1"
                    DOT "."
                    NAME_REF
                      IDENT "objsubid"
                  R_PAREN ")"
              R_PAREN ")"
            DOT "."
            STAR "*"
        COMMA ","
        WHITESPACE "\n        "
        COMMENT "-- test roundtrip through pg_identify_object_as_address"
        WHITESPACE "\n        "
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                ROW_KW "ROW"
              ARG_LIST
                L_PAREN "("
                CALL_EXPR
                  NAME_REF
                    IDENT "pg_identify_object"
                  ARG_LIST
                    L_PAREN "("
                    FIELD_EXPR
                      NAME_REF
                        IDENT "addr1"
                      DOT "."
                      NAME_REF
                        IDENT "classid"
                    COMMA ","
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "addr1"
                      DOT "."
                      NAME_REF
                        IDENT "objid"
                    COMMA ","
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "addr1"
                      DOT "."
                      NAME_REF
                        IDENT "objsubid"
                    R_PAREN ")"
                R_PAREN ")"
            WHITESPACE " "
            EQ "="
            WHITESPACE "\n          "
            CALL_EXPR
              NAME_REF
                ROW_KW "ROW"
              ARG_LIST
                L_PAREN "("
                CALL_EXPR
                  NAME_REF
                    IDENT "pg_identify_object"
                  ARG_LIST
                    L_PAREN "("
                    FIELD_EXPR
                      NAME_REF
                        IDENT "addr2"
                      DOT "."
                      NAME_REF
                        IDENT "classid"
                    COMMA ","
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "addr2"
                      DOT "."
                      NAME_REF
                        IDENT "objid"
                    COMMA ","
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "addr2"
                      DOT "."
                      NAME_REF
                        IDENT "objsubid"
                    R_PAREN ")"
                R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "roundtrip"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "objects"
      COMMA ","
      WHITESPACE "\n     "
      CALL_EXPR
        NAME_REF
          IDENT "pg_get_object_address"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            TYPE_KW "type"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            NAME_KW "name"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "args"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "addr1"
      COMMA ","
      WHITESPACE "\n     "
      CALL_EXPR
        NAME_REF
          IDENT "pg_identify_object_as_address"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "classid"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "objid"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "objsubid"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "ioa"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "typ"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "nms"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "args"
          R_PAREN ")"
      COMMA ","
      WHITESPACE "\n     "
      CALL_EXPR
        NAME_REF
          IDENT "pg_get_object_address"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "typ"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "nms"
          COMMA ","
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "ioa"
            DOT "."
            NAME_REF
              IDENT "args"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "addr2"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "addr1"
        DOT "."
        NAME_REF
          IDENT "classid"
      COMMA ","
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "addr1"
        DOT "."
        NAME_REF
          IDENT "objid"
      COMMA ","
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "addr1"
        DOT "."
        NAME_REF
          IDENT "objsubid"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "---"
  WHITESPACE "\n"
  COMMENT "--- Cleanup resources"
  WHITESPACE "\n"
  COMMENT "---"
  WHITESPACE "\n"
  DROP_FOREIGN_DATA_WRAPPER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FOREIGN_KW "FOREIGN"
    WHITESPACE " "
    DATA_KW "DATA"
    WHITESPACE " "
    WRAPPER_KW "WRAPPER"
    WHITESPACE " "
    NAME_REF
      IDENT "addr_fdw"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_PUBLICATION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "addr_pub"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_PUBLICATION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "addr_pub_schema"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_SUBSCRIPTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_addr_sub"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_SCHEMA_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    SCHEMA_KW "SCHEMA"
    WHITESPACE " "
    NAME
      IDENT "addr_nsp"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_OWNED_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    OWNED_KW "OWNED"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "regress_addr_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_USER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_addr_user"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Checks for invalid objects"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  COMMENT "-- Keep this list in the same order as getObjectIdentityParts()"
  WHITESPACE "\n"
  COMMENT "-- in objectaddress.c."
  WHITESPACE "\n"
  SELECT
    WITH_CLAUSE
      WITH_KW "WITH"
      WHITESPACE " "
      WITH_TABLE
        NAME
          IDENT "objects"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "classid"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "objid"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "objsubid"
          R_PAREN ")"
        WHITESPACE " "
        AS_KW "AS"
        WHITESPACE " "
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_class'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no relation"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_class'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'pg_class'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "100"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no column for relation"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_proc'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no function"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_type'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no type"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_cast'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no cast"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_collation'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no collation"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_constraint'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no constraint"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_conversion'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no conversion"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_attrdef'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no default attribute"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_language'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no language"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_largeobject'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no large object, no error"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_operator'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no operator"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_opclass'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no opclass, no need to check for no access method"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_opfamily'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no opfamily"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_am'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no access method"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_amop'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no AM operator"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_amproc'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no AM proc"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_rewrite'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no rewrite"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_trigger'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no trigger"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_namespace'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no schema"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_statistic_ext'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no statistics"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_ts_parser'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no TS parser"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_ts_dict'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no TS dictionary"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_ts_template'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no TS template"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_ts_config'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no TS configuration"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_authid'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no role"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_auth_members'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE "  "
          COMMENT "-- no role membership"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_database'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no database"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_tablespace'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no tablespace"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_foreign_data_wrapper'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no FDW"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_foreign_server'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no server"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_user_mapping'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no user mapping"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_default_acl'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no default ACL"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_extension'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no extension"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_event_trigger'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no event trigger"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_parameter_acl'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no parameter ACL"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_policy'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no policy"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_publication'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no publication"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_publication_namespace'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no publication namespace"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_publication_rel'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no publication relation"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_subscription'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          COMMENT "-- no subscription"
          WHITESPACE "\n    "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'pg_transform'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
        WHITESPACE " "
        COMMENT "-- no transformation"
        WHITESPACE "\n  "
        R_PAREN ")"
    WHITESPACE "\n"
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              ROW_KW "ROW"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  IDENT "pg_identify_object"
                ARG_LIST
                  L_PAREN "("
                  FIELD_EXPR
                    NAME_REF
                      IDENT "objects"
                    DOT "."
                    NAME_REF
                      IDENT "classid"
                  COMMA ","
                  WHITESPACE " "
                  FIELD_EXPR
                    NAME_REF
                      IDENT "objects"
                    DOT "."
                    NAME_REF
                      IDENT "objid"
                  COMMA ","
                  WHITESPACE " "
                  FIELD_EXPR
                    NAME_REF
                      IDENT "objects"
                    DOT "."
                    NAME_REF
                      IDENT "objsubid"
                  R_PAREN ")"
              R_PAREN ")"
          WHITESPACE "\n         "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "ident"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              ROW_KW "ROW"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  IDENT "pg_identify_object_as_address"
                ARG_LIST
                  L_PAREN "("
                  FIELD_EXPR
                    NAME_REF
                      IDENT "objects"
                    DOT "."
                    NAME_REF
                      IDENT "classid"
                  COMMA ","
                  WHITESPACE " "
                  FIELD_EXPR
                    NAME_REF
                      IDENT "objects"
                    DOT "."
                    NAME_REF
                      IDENT "objid"
                  COMMA ","
                  WHITESPACE " "
                  FIELD_EXPR
                    NAME_REF
                      IDENT "objects"
                    DOT "."
                    NAME_REF
                      IDENT "objsubid"
                  R_PAREN ")"
              R_PAREN ")"
          WHITESPACE "\n         "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "addr"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_describe_object"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "objects"
                DOT "."
                NAME_REF
                  IDENT "classid"
              COMMA ","
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "objects"
                DOT "."
                NAME_REF
                  IDENT "objid"
              COMMA ","
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "objects"
                DOT "."
                NAME_REF
                  IDENT "objsubid"
              R_PAREN ")"
          WHITESPACE "\n         "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "descr"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "objects"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "objects"
        DOT "."
        NAME_REF
          IDENT "classid"
      COMMA ","
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "objects"
        DOT "."
        NAME_REF
          IDENT "objid"
      COMMA ","
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "objects"
        DOT "."
        NAME_REF
          IDENT "objsubid"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- restore normal output mode"
  WHITESPACE "\n"
---
ERROR@1365: expected type name
ERROR@1365: expected SEMICOLON
ERROR@1365: expected command, found DOT
ERROR@1366: expected command, found IDENT
ERROR@1376: expected command, found AS_KW
ERROR@1379: expected command, found IDENT
ERROR@1384: expected command, found CONSTRAINT_KW
ERROR@1395: expected command, found IDENT
ERROR@1405: expected command, found CHECK_KW
ERROR@1411: expected command, found L_PAREN
ERROR@1412: expected command, found VALUE_KW
ERROR@1418: expected command, found R_ANGLE
ERROR@1420: expected command, found INT_NUMBER
ERROR@1421: expected command, found R_PAREN

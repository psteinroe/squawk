---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/subscription.sql
---
SOURCE_FILE
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- SUBSCRIPTION"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_ROLE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME
      IDENT "regress_subscription_user"
    WHITESPACE " "
    IDENT "LOGIN"
    WHITESPACE " "
    IDENT "SUPERUSER"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_ROLE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME
      IDENT "regress_subscription_user2"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_ROLE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME
      IDENT "regress_subscription_user3"
    WHITESPACE " "
    IN_KW "IN"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    IDENT "pg_create_subscription"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_ROLE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME
      IDENT "regress_subscription_user_dummy"
    WHITESPACE " "
    IDENT "LOGIN"
    WHITESPACE " "
    IDENT "NOSUPERUSER"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    LITERAL
      STRING "'regress_subscription_user'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail - no publications"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'foo'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail - no connection"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "foo"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail - cannot do CREATE SUBSCRIPTION CREATE SLOT inside transaction block"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'testconn'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "create_slot"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail - invalid connection string"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'testconn'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail - duplicate publications"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "foo"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "foo"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ok"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT_STMT
    COMMENT_KW "COMMENT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "regress_testsub"
    WHITESPACE " "
    IS_KW "IS"
    WHITESPACE " "
    LITERAL
      STRING "'test subscription'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "obj_description"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "s"
                DOT "."
                NAME_REF
                  IDENT "oid"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'pg_subscription'"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_subscription"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check if the subscription stats are created and stats_reset is updated"
  WHITESPACE "\n"
  COMMENT "-- by pg_stat_reset_subscription_stats()."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "subname"
        COMMA ","
        WHITESPACE " "
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "stats_reset"
            WHITESPACE " "
            IS_KW "IS"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          NAME
            IDENT "stats_reset_is_null"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_subscription_stats"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "subname"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'regress_testsub'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_reset_subscription_stats"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "oid"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_subscription"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "subname"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'regress_testsub'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "subname"
        COMMA ","
        WHITESPACE " "
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "stats_reset"
            WHITESPACE " "
            IS_KW "IS"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          NAME
            IDENT "stats_reset_is_null"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_subscription_stats"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "subname"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'regress_testsub'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Reset the stats again and check if the new reset_stats is updated."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "stats_reset"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "prev_stats_reset"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_subscription_stats"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "subname"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'regress_testsub'"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_reset_subscription_stats"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "oid"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_subscription"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "subname"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'regress_testsub'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'prev_stats_reset'"
  WHITESPACE " "
  ERROR
    L_ANGLE "<"
  WHITESPACE " "
  ERROR
    IDENT "stats_reset"
  WHITESPACE " "
  ERROR
    FROM_KW "FROM"
  WHITESPACE " "
  ERROR
    IDENT "pg_stat_subscription_stats"
  WHITESPACE " "
  ERROR
    WHERE_KW "WHERE"
  WHITESPACE " "
  ERROR
    IDENT "subname"
  WHITESPACE " "
  ERROR
    EQ "="
  WHITESPACE " "
  ERROR
    STRING "'regress_testsub'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail - name already exists"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail - must be superuser"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    LITERAL
      STRING "'regress_subscription_user2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub2"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "foo"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    LITERAL
      STRING "'regress_subscription_user'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail - invalid option combinations"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub2"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "copy_data"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        TRUE_KW "true"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub2"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "enabled"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        TRUE_KW "true"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub2"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "create_slot"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        TRUE_KW "true"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub2"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "slot_name"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      NONE_KW "NONE"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "enabled"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        TRUE_KW "true"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub2"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "slot_name"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      NONE_KW "NONE"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "enabled"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "create_slot"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        TRUE_KW "true"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub2"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "slot_name"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      NONE_KW "NONE"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub2"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "slot_name"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      NONE_KW "NONE"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "enabled"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub2"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "slot_name"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      NONE_KW "NONE"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "create_slot"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ok - with slot_name = NONE"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub3"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "slot_name"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      NONE_KW "NONE"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- fail"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub3"
    WHITESPACE " "
    ENABLE_KW "ENABLE"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub3"
    WHITESPACE " "
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail - origin must be either none or any"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub4"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "slot_name"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      NONE_KW "NONE"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "origin"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "foo"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- now it works"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub4"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "slot_name"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      NONE_KW "NONE"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "origin"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      NONE_KW "none"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub4"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "origin"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    ANY_KW "any"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_SUBSCRIPTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub3"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_SUBSCRIPTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub4"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail, connection string does not parse"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub5"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'i_dont_exist=param'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail, connection string parses, but doesn't work (and does so without"
  WHITESPACE "\n"
  COMMENT "-- connecting, so this is reliable and safe)"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub5"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'port=-1'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail - invalid connection string during ALTER"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'foobar'"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME
      IDENT "testpub2"
    COMMA ","
    WHITESPACE " "
    NAME
      IDENT "testpub3"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    L_PAREN "("
    NAME
      REFRESH_KW "refresh"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "slot_name"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'newname'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "password_required"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "run_as_owner"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "password_required"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "run_as_owner"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "slot_name"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "''"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_doesnotexist"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "create_slot"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ok"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SKIP_KW "SKIP"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "lsn"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'0/12345'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- ok - with lsn = NONE"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SKIP_KW "SKIP"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "lsn"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NONE_KW "NONE"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SKIP_KW "SKIP"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "lsn"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'0/0'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    ENABLE_KW "ENABLE"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    DISABLE_KW "DISABLE"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail - must be owner of subscription"
  WHITESPACE "\n"
  SET_ROLE_STMT
    SET_KW "SET"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    IDENT "regress_subscription_user_dummy"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub_dummy"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_ROLE_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    ROLE_KW "ROLE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub_foo"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub_foo"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "synchronous_commit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            LOCAL_KW "local"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub_foo"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "synchronous_commit"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "foobar"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- rename back to keep the rest simple"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub_foo"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ok, we're a superuser"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    OWNER_KW "OWNER"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_subscription_user2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail - cannot do DROP SUBSCRIPTION inside transaction block with slot name"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_SUBSCRIPTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "slot_name"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NONE_KW "NONE"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- now it works"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_SUBSCRIPTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_SUBSCRIPTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_SUBSCRIPTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n\n"
  COMMENT "-- fail - binary must be boolean"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            BINARY_KW "binary"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "foo"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- now it works"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            BINARY_KW "binary"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        TRUE_KW "true"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      BINARY_KW "binary"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "slot_name"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NONE_KW "NONE"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  DROP_SUBSCRIPTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail - streaming must be boolean or 'parallel'"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "streaming"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "foo"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- now it works"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "streaming"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        TRUE_KW "true"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "streaming"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            PARALLEL_KW "parallel"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "streaming"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "slot_name"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NONE_KW "NONE"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- fail - publication already exists"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME
      IDENT "testpub"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    L_PAREN "("
    NAME
      REFRESH_KW "refresh"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail - publication used more than once"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME
      IDENT "testpub1"
    COMMA ","
    WHITESPACE " "
    NAME
      IDENT "testpub1"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    L_PAREN "("
    NAME
      REFRESH_KW "refresh"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ok - add two publications into subscription"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME
      IDENT "testpub1"
    COMMA ","
    WHITESPACE " "
    NAME
      IDENT "testpub2"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    L_PAREN "("
    NAME
      REFRESH_KW "refresh"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail - publications already exist"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME
      IDENT "testpub1"
    COMMA ","
    WHITESPACE " "
    NAME
      IDENT "testpub2"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    L_PAREN "("
    NAME
      REFRESH_KW "refresh"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- fail - publication used more than once"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    DROP_KW "DROP"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "testpub1"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    L_PAREN "("
    NAME
      REFRESH_KW "refresh"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail - all publications are deleted"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    DROP_KW "DROP"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "testpub1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "testpub2"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    L_PAREN "("
    NAME
      REFRESH_KW "refresh"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail - publication does not exist in subscription"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    DROP_KW "DROP"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub3"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    L_PAREN "("
    NAME
      REFRESH_KW "refresh"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ok - delete publications"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    DROP_KW "DROP"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "testpub2"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    L_PAREN "("
    NAME
      REFRESH_KW "refresh"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  DROP_SUBSCRIPTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "mypub"
    WHITESPACE "\n       "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "create_slot"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "copy_data"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    ENABLE_KW "ENABLE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail - ALTER SUBSCRIPTION with refresh is not allowed in a transaction"
  WHITESPACE "\n"
  COMMENT "-- block or function"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME
      IDENT "mypub"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    L_PAREN "("
    NAME
      REFRESH_KW "refresh"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    END_KW "END"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    REFRESH_KW "REFRESH"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    END_KW "END"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "func"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "VOID"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$ ALTER SUBSCRIPTION regress_testsub SET PUBLICATION mypub WITH (refresh = true) $$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "func"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    DISABLE_KW "DISABLE"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "slot_name"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NONE_KW "NONE"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_SUBSCRIPTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "func"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail - two_phase must be boolean"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "two_phase"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "foo"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- now it works"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "two_phase"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        TRUE_KW "true"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- we can alter streaming when two_phase enabled"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "streaming"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "slot_name"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NONE_KW "NONE"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_SUBSCRIPTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- two_phase and streaming are compatible."
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "streaming"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        TRUE_KW "true"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "two_phase"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        TRUE_KW "true"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "slot_name"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NONE_KW "NONE"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_SUBSCRIPTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail - disable_on_error must be boolean"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "disable_on_error"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "foo"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- now it works"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "disable_on_error"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "disable_on_error"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "slot_name"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NONE_KW "NONE"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_SUBSCRIPTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- let's do some tests with pg_create_subscription rather than superuser"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_subscription_user3"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail, not enough privileges"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail, must specify password"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    CREATE_KW "CREATE"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    DATABASE_KW "DATABASE"
    WHITESPACE " "
    NAME_REF
      IDENT "REGRESSION"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_subscription_user3"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_subscription_user3"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail, can't set password_required=false"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    CREATE_KW "CREATE"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    DATABASE_KW "DATABASE"
    WHITESPACE " "
    NAME_REF
      IDENT "REGRESSION"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_subscription_user3"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_subscription_user3"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "password_required"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ok"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    CREATE_KW "CREATE"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    DATABASE_KW "DATABASE"
    WHITESPACE " "
    NAME_REF
      IDENT "REGRESSION"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_subscription_user3"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_subscription_user3"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_SUBSCRIPTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub"
    WHITESPACE " "
    CONNECTION_KW "CONNECTION"
    WHITESPACE " "
    LITERAL
      STRING "'dbname=regress_doesnotexist password=regress_fakepassword'"
    WHITESPACE " "
    PUBLICATION_KW "PUBLICATION"
    WHITESPACE " "
    NAME_REF
      IDENT "testpub"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "connect"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- we cannot give the subscription away to some random user"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    OWNER_KW "OWNER"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_subscription_user"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- but we can rename the subscription we just created"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ok, even after losing pg_create_subscription we can still rename it"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  REVOKE_STMT
    REVOKE_KW "REVOKE"
    WHITESPACE " "
    IDENT "pg_create_subscription"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    IDENT "regress_subscription_user3"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_subscription_user3"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub2"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail, after losing CREATE on the database we can't rename it any more"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  REVOKE_STMT
    REVOKE_KW "REVOKE"
    WHITESPACE " "
    CREATE_KW "CREATE"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    DATABASE_KW "DATABASE"
    WHITESPACE " "
    NAME_REF
      IDENT "REGRESSION"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    IDENT "regress_subscription_user3"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_subscription_user3"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    NAME
      IDENT "regress_testsub2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail - cannot do ALTER SUBSCRIPTION SET (failover) inside transaction block"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "failover"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ok, owning it is enough for this stuff"
  WHITESPACE "\n"
  ALTER_SUBSCRIPTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "slot_name"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NONE_KW "NONE"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_SUBSCRIPTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    SUBSCRIPTION_KW "SUBSCRIPTION"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_testsub"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_subscription_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_subscription_user2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_subscription_user3"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_subscription_user_dummy"
  SEMICOLON ";"
  WHITESPACE "\n"
---
ERROR@386: expected PUBLICATION_KW
ERROR@386: expected name
ERROR@448: expected CONNECTION_KW
ERROR@448: expected string literal
ERROR@1953: expected SEMICOLON
ERROR@1954: expected command, found COLON
ERROR@1955: expected command, found STRING
ERROR@1974: expected command, found L_ANGLE
ERROR@1976: expected command, found IDENT
ERROR@1988: expected command, found FROM_KW
ERROR@1993: expected command, found IDENT
ERROR@2020: expected command, found WHERE_KW
ERROR@2026: expected command, found IDENT
ERROR@2034: expected command, found EQ
ERROR@2036: expected command, found STRING

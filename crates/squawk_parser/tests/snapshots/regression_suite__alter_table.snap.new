---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/alter_table.sql
---
SOURCE_FILE
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- ALTER_TABLE"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  COMMENT "-- Clean up in case a prior regression run failed"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "client_min_messages"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    LITERAL
      STRING "'warning'"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_alter_table_user1"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "client_min_messages"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_USER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    NAME
      IDENT "regress_alter_table_user1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- add attribute"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attmp"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "initial"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT_STMT
    COMMENT_KW "COMMENT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp_wrong"
    WHITESPACE " "
    IS_KW "IS"
    WHITESPACE " "
    LITERAL
      STRING "'table comment'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT_STMT
    COMMENT_KW "COMMENT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    IS_KW "IS"
    WHITESPACE " "
    LITERAL
      STRING "'table comment'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT_STMT
    COMMENT_KW "COMMENT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    IS_KW "IS"
    WHITESPACE " "
    NULL_KW "NULL"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "xmin"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INTEGER_KW "integer"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "int4"
      WHITESPACE " "
      DEFAULT_CONSTRAINT
        DEFAULT_KW "default"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "3"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              NAME_KW "name"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "d"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "float8"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "e"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "float4"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "f"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "int2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "g"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "polygon"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "i"
      WHITESPACE " "
      CHAR_TYPE
        CHAR_KW "char"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "k"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "int4"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "l"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "tid"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "m"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "xid"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "n"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "oidvector"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--ALTER TABLE attmp ADD COLUMN o lock;"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "p"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              BOOLEAN_KW "boolean"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "q"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "point"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "r"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "lseg"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "s"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              PATH_KW "path"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "t"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "box"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "v"
      WHITESPACE " "
      TIME_TYPE
        NAME_REF
          TIMESTAMP_KW "timestamp"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "w"
      WHITESPACE " "
      INTERVAL_TYPE
        INTERVAL_KW "interval"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "x"
      WHITESPACE " "
      ARRAY_TYPE
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "float8"
        L_BRACK "["
        R_BRACK "]"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "y"
      WHITESPACE " "
      ARRAY_TYPE
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "float4"
        L_BRACK "["
        R_BRACK "]"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "z"
      WHITESPACE " "
      ARRAY_TYPE
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int2"
        L_BRACK "["
        R_BRACK "]"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "d"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "e"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "g"
      COMMA ","
      WHITESPACE "    "
      COLUMN
        NAME_REF
          IDENT "i"
      COMMA ","
      WHITESPACE "    "
      COLUMN
        NAME_REF
          IDENT "k"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "l"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "m"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "n"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "p"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "q"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "r"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "s"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "t"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "v"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "w"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "x"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "y"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "z"
      R_PAREN ")"
    WHITESPACE "\n   "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'name'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'text'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        FLOAT_NUMBER "4.1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        FLOAT_NUMBER "4.1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'(4.1,4.1,3.1,3.1)'"
      COMMA ","
      WHITESPACE "\n\t"
      LITERAL
        STRING "'c'"
      COMMA ","
      WHITESPACE "\n\t"
      LITERAL
        INT_NUMBER "314159"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'(1,1)'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'512'"
      COMMA ","
      WHITESPACE "\n\t"
      LITERAL
        STRING "'1 2 3 4 5 6 7 8'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        TRUE_KW "true"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'(1.1,1.1)'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'(4.1,4.1,3.1,3.1)'"
      COMMA ","
      WHITESPACE "\n\t"
      LITERAL
        STRING "'(0,2,4.1,4.1,3.1,3.1)'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'(4.1,4.1,3.1,3.1)'"
      COMMA ","
      WHITESPACE "\n\t"
      LITERAL
        STRING "'epoch'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'01:00:10'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'{1.0,2.0,3.0,4.0}'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'{1.0,2.0,3.0,4.0}'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'{1,2,3,4}'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "attmp"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- the wolf bug - schema mods caused inconsistent row descriptors"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attmp"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "initial"
        WHITESPACE " \t"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "int4"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              NAME_KW "name"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "d"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "float8"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "e"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "float4"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "f"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "int2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "g"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "polygon"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "i"
      WHITESPACE " "
      CHAR_TYPE
        CHAR_KW "char"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "k"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "int4"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "l"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "tid"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "m"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "xid"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "n"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "oidvector"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--ALTER TABLE attmp ADD COLUMN o lock;"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "p"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              BOOLEAN_KW "boolean"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "q"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "point"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "r"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "lseg"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "s"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              PATH_KW "path"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "t"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "box"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "v"
      WHITESPACE " "
      TIME_TYPE
        NAME_REF
          TIMESTAMP_KW "timestamp"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "w"
      WHITESPACE " "
      INTERVAL_TYPE
        INTERVAL_KW "interval"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "x"
      WHITESPACE " "
      ARRAY_TYPE
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "float8"
        L_BRACK "["
        R_BRACK "]"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "y"
      WHITESPACE " "
      ARRAY_TYPE
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "float4"
        L_BRACK "["
        R_BRACK "]"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "z"
      WHITESPACE " "
      ARRAY_TYPE
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int2"
        L_BRACK "["
        R_BRACK "]"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "d"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "e"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "g"
      COMMA ","
      WHITESPACE "    "
      COLUMN
        NAME_REF
          IDENT "i"
      COMMA ","
      WHITESPACE "   "
      COLUMN
        NAME_REF
          IDENT "k"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "l"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "m"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "n"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "p"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "q"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "r"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "s"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "t"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "v"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "w"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "x"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "y"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "z"
      R_PAREN ")"
    WHITESPACE "\n   "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'name'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'text'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        FLOAT_NUMBER "4.1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        FLOAT_NUMBER "4.1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'(4.1,4.1,3.1,3.1)'"
      COMMA ","
      WHITESPACE "\n        "
      LITERAL
        STRING "'c'"
      COMMA ","
      WHITESPACE "\n\t"
      LITERAL
        INT_NUMBER "314159"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'(1,1)'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'512'"
      COMMA ","
      WHITESPACE "\n\t"
      LITERAL
        STRING "'1 2 3 4 5 6 7 8'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        TRUE_KW "true"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'(1.1,1.1)'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'(4.1,4.1,3.1,3.1)'"
      COMMA ","
      WHITESPACE "\n\t"
      LITERAL
        STRING "'(0,2,4.1,4.1,3.1,3.1)'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'(4.1,4.1,3.1,3.1)'"
      COMMA ","
      WHITESPACE "\n\t"
      LITERAL
        STRING "'epoch'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'01:00:10'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'{1.0,2.0,3.0,4.0}'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'{1.0,2.0,3.0,4.0}'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'{1,2,3,4}'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "attmp"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "attmp_idx"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "d"
          WHITESPACE " "
          PLUS "+"
          WHITESPACE " "
          NAME_REF
            IDENT "e"
        R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_INDEX_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp_idx"
    WHITESPACE " "
    ALTER_KW "ALTER"
    WHITESPACE " "
    COLUMN_KW "COLUMN"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    STATISTICS_KW "STATISTICS"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1000"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_INDEX_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp_idx"
    WHITESPACE " "
    ALTER_KW "ALTER"
    WHITESPACE " "
    COLUMN_KW "COLUMN"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    STATISTICS_KW "STATISTICS"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1000"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_INDEX_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp_idx"
    WHITESPACE " "
    ALTER_KW "ALTER"
    WHITESPACE " "
    COLUMN_KW "COLUMN"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "2"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    STATISTICS_KW "STATISTICS"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1000"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  ALTER_INDEX_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp_idx"
    WHITESPACE " "
    ALTER_KW "ALTER"
    WHITESPACE " "
    COLUMN_KW "COLUMN"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "3"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    STATISTICS_KW "STATISTICS"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1000"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_INDEX_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp_idx"
    WHITESPACE " "
    ALTER_KW "ALTER"
    WHITESPACE " "
    COLUMN_KW "COLUMN"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "4"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    STATISTICS_KW "STATISTICS"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1000"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_INDEX_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp_idx"
    WHITESPACE " "
    ALTER_KW "ALTER"
    WHITESPACE " "
    COLUMN_KW "COLUMN"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "2"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    STATISTICS_KW "STATISTICS"
    WHITESPACE " "
    PREFIX_EXPR
      MINUS "-"
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- rename - check on both non-temp and temp tables"
    WHITESPACE "\n"
    COMMENT "--"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attmp"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "regtable"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attmp"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "attmptable"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    RENAME_TABLE
      RENAME_KW "RENAME"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "attmp_new"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "attmp"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "attmp_new"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    RENAME_TABLE
      RENAME_KW "RENAME"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "attmp_new2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "attmp"
  SEMICOLON ";"
  WHITESPACE "\t\t"
  COMMENT "-- should fail"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "attmp_new"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "attmp_new2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp_new"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp_new2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check rename of partitioned tables and indexes also"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_attmp"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    RANGE_KW "range"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_attmp1"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_attmp"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "100"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_INDEX_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_attmp_pkey"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_attmp_index"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_INDEX_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_attmp1_pkey"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_attmp1_index"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_attmp"
    WHITESPACE " "
    RENAME_TABLE
      RENAME_KW "RENAME"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "part_at2tmp"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_attmp1"
    WHITESPACE " "
    RENAME_TABLE
      RENAME_KW "RENAME"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "part_at2tmp1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_ROLE_STMT
    SET_KW "SET"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    IDENT "regress_alter_table_user1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_INDEX_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_attmp_index"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "fail"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_INDEX_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_attmp1_index"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "fail"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_at2tmp"
    WHITESPACE " "
    RENAME_TABLE
      RENAME_KW "RENAME"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "fail"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_at2tmp1"
    WHITESPACE " "
    RENAME_TABLE
      RENAME_KW "RENAME"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "fail"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_ROLE_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    ROLE_KW "ROLE"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_at2tmp"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- check renaming to a table's array type's autogenerated name"
    WHITESPACE "\n"
    COMMENT "-- (the array type's name should get out of the way)"
    WHITESPACE "\n"
    COMMENT "--"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attmp_array"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attmp_array2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "typname"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "oid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'attmp_array[]'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regtype"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "typname"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "oid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'attmp_array2[]'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regtype"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp_array2"
    WHITESPACE " "
    RENAME_TABLE
      RENAME_KW "RENAME"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "_attmp_array"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "typname"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "oid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'attmp_array[]'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regtype"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "typname"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "oid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'_attmp_array[]'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regtype"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "_attmp_array"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp_array"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- renaming to table's own array type's name is an interesting corner case"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attmp_array"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "typname"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "oid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'attmp_array[]'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regtype"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp_array"
    WHITESPACE " "
    RENAME_TABLE
      RENAME_KW "RENAME"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "_attmp_array"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "typname"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "oid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'_attmp_array[]'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regtype"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "_attmp_array"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ALTER TABLE ... RENAME on non-table relations"
  WHITESPACE "\n"
  COMMENT "-- renaming indexes (FIXME: this should probably test the index's functionality)"
  WHITESPACE "\n"
  ALTER_INDEX_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "__onek_unique1"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp_onek_unique1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_INDEX_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "__attmp_onek_unique1"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "onek_unique1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_INDEX_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "onek_unique1"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp_onek_unique1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_INDEX_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp_onek_unique1"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "onek_unique1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_ROLE_STMT
    SET_KW "SET"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    IDENT "regress_alter_table_user1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_INDEX_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "onek_unique1"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "fail"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- permission denied"
  WHITESPACE "\n"
  SET_ROLE_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    ROLE_KW "ROLE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- rename statements with mismatching statement and object types"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "alter_idx_rename_test"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "INT"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "alter_idx_rename_test_idx"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alter_idx_rename_test"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "alter_idx_rename_test_parted"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "INT"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "LIST"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "alter_idx_rename_test_parted_idx"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alter_idx_rename_test_parted"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_INDEX_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alter_idx_rename_test"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alter_idx_rename_test_2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_INDEX_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alter_idx_rename_test_parted"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alter_idx_rename_test_parted_2"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "relation"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            MODE_KW "mode"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_locks"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "pid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "pg_backend_pid"
              ARG_LIST
                L_PAREN "("
                R_PAREN ")"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "locktype"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'relation'"
        WHITESPACE "\n  "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "relation"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          WHITESPACE " "
          LIKE_KW "LIKE"
          WHITESPACE " "
          LITERAL
            STRING "'alter\\_idx%'"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      BIN_EXPR
        CAST_EXPR
          CAST_EXPR
            NAME_REF
              IDENT "relation"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
        WHITESPACE " "
        COLLATE_KW "COLLATE"
        WHITESPACE " "
        NAME_REF
          IDENT "\"C\""
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_INDEX_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alter_idx_rename_test_idx"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alter_idx_rename_test_idx_2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_INDEX_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alter_idx_rename_test_parted_idx"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alter_idx_rename_test_parted_idx_2"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "relation"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            MODE_KW "mode"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_locks"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "pid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "pg_backend_pid"
              ARG_LIST
                L_PAREN "("
                R_PAREN ")"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "locktype"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'relation'"
        WHITESPACE "\n  "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "relation"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          WHITESPACE " "
          LIKE_KW "LIKE"
          WHITESPACE " "
          LITERAL
            STRING "'alter\\_idx%'"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      BIN_EXPR
        CAST_EXPR
          CAST_EXPR
            NAME_REF
              IDENT "relation"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
        WHITESPACE " "
        COLLATE_KW "COLLATE"
        WHITESPACE " "
        NAME_REF
          IDENT "\"C\""
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alter_idx_rename_test_idx_2"
    WHITESPACE " "
    RENAME_TABLE
      RENAME_KW "RENAME"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "alter_idx_rename_test_idx_3"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alter_idx_rename_test_parted_idx_2"
    WHITESPACE " "
    RENAME_TABLE
      RENAME_KW "RENAME"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "alter_idx_rename_test_parted_idx_3"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "relation"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            MODE_KW "mode"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_locks"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "pid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "pg_backend_pid"
              ARG_LIST
                L_PAREN "("
                R_PAREN ")"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "locktype"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'relation'"
        WHITESPACE "\n  "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "relation"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          WHITESPACE " "
          LIKE_KW "LIKE"
          WHITESPACE " "
          LITERAL
            STRING "'alter\\_idx%'"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      BIN_EXPR
        CAST_EXPR
          CAST_EXPR
            NAME_REF
              IDENT "relation"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
        WHITESPACE " "
        COLLATE_KW "COLLATE"
        WHITESPACE " "
        NAME_REF
          IDENT "\"C\""
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alter_idx_rename_test_2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- renaming views"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attmp_view"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "unique1"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "unique1"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp_view"
    WHITESPACE " "
    RENAME_TABLE
      RENAME_KW "RENAME"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "attmp_view_new"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_ROLE_STMT
    SET_KW "SET"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    IDENT "regress_alter_table_user1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_VIEW_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp_view_new"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    NAME
      IDENT "fail"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- permission denied"
  WHITESPACE "\n"
  SET_ROLE_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    ROLE_KW "ROLE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- hack to ensure we get an indexscan here"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_bitmapscan"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- 5 values, sorted"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "unique1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "unique1"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "5"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_bitmapscan"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp_view_new"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- toast-like relation name"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "stud_emp"
    WHITESPACE " "
    RENAME_TABLE
      RENAME_KW "rename"
      WHITESPACE " "
      TO_KW "to"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_toast_stud_emp"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pg_toast_stud_emp"
    WHITESPACE " "
    RENAME_TABLE
      RENAME_KW "rename"
      WHITESPACE " "
      TO_KW "to"
      WHITESPACE " "
      NAME_REF
        IDENT "stud_emp"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- renaming index should rename constraint as well"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "onek"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      UNIQUE_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "onek_unique1_constraint"
        WHITESPACE " "
        UNIQUE_KW "UNIQUE"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "unique1"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_INDEX_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "onek_unique1_constraint"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "onek_unique1_constraint_foo"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "onek"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "DROP"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "onek_unique1_constraint_foo"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- renaming constraint"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "onek"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "onek_check_constraint"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "unique1"
          WHITESPACE " "
          GTEQ ">="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "onek"
    WHITESPACE " "
    RENAME_CONSTRAINT
      RENAME_KW "RENAME"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "onek_check_constraint"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "onek_check_constraint_foo"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "onek"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "DROP"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "onek_check_constraint_foo"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- renaming constraint should rename index as well"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "onek"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      UNIQUE_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "onek_unique1_constraint"
        WHITESPACE " "
        UNIQUE_KW "UNIQUE"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "unique1"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_INDEX_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "onek_unique1_constraint"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- to see whether it's there"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "onek"
    WHITESPACE " "
    RENAME_CONSTRAINT
      RENAME_KW "RENAME"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "onek_unique1_constraint"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "onek_unique1_constraint_foo"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_INDEX_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "onek_unique1_constraint_foo"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- to see whether it's there"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "onek"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "DROP"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "onek_unique1_constraint_foo"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- renaming constraints vs. inheritance"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "constraint_rename_test"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CONSTRAINT_KW "CONSTRAINT"
          WHITESPACE " "
          NAME_REF
            IDENT "con1"
          WHITESPACE " "
          CHECK_KW "CHECK"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "constraint_rename_test2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CONSTRAINT_KW "CONSTRAINT"
          WHITESPACE " "
          NAME_REF
            IDENT "con1"
          WHITESPACE " "
          CHECK_KW "CHECK"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "d"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "constraint_rename_test"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "constraint_rename_test2"
    WHITESPACE " "
    RENAME_CONSTRAINT
      RENAME_KW "RENAME"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "con1"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "con1foo"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    ONLY_KW "ONLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "constraint_rename_test"
    WHITESPACE " "
    RENAME_CONSTRAINT
      RENAME_KW "RENAME"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "con1"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "con1foo"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "constraint_rename_test"
    WHITESPACE " "
    RENAME_CONSTRAINT
      RENAME_KW "RENAME"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "con1"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "con1foo"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- ok"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "constraint_rename_test"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "con2"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
        WHITESPACE " "
        NO_KW "NO"
        WHITESPACE " "
        INHERIT_KW "INHERIT"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    ONLY_KW "ONLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "constraint_rename_test"
    WHITESPACE " "
    RENAME_CONSTRAINT
      RENAME_KW "RENAME"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "con2"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "con2foo"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- ok"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "constraint_rename_test"
    WHITESPACE " "
    RENAME_CONSTRAINT
      RENAME_KW "RENAME"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "con2foo"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "con2bar"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- ok"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "constraint_rename_test"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "con3"
        WHITESPACE " "
        PRIMARY_KW "PRIMARY"
        WHITESPACE " "
        KEY_KW "KEY"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "a"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "constraint_rename_test"
    WHITESPACE " "
    RENAME_CONSTRAINT
      RENAME_KW "RENAME"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "con3"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "con3foo"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- ok"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "constraint_rename_test2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "constraint_rename_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "constraint_not_exist"
    WHITESPACE " "
    RENAME_CONSTRAINT
      RENAME_KW "RENAME"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "con3"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "con3foo"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- ok"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "constraint_rename_test"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      UNIQUE_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "con4"
        WHITESPACE " "
        UNIQUE_KW "UNIQUE"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "a"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- renaming constraints with cache reset of target relation"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "constraint_rename_cache"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n  "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "chk_a"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
      COMMA ","
      WHITESPACE "\n  "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "PRIMARY"
        WHITESPACE " "
        KEY_KW "KEY"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "a"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "constraint_rename_cache"
    WHITESPACE "\n  "
    RENAME_CONSTRAINT
      RENAME_KW "RENAME"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "chk_a"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "chk_a_new"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "constraint_rename_cache"
    WHITESPACE "\n  "
    RENAME_CONSTRAINT
      RENAME_KW "RENAME"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "constraint_rename_cache_pkey"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "constraint_rename_pkey_new"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "like_constraint_rename_cache"
    WHITESPACE "\n  "
    TABLE_ARGS
      L_PAREN "("
      LIKE_CLAUSE
        LIKE_KW "LIKE"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "constraint_rename_cache"
        WHITESPACE " "
        INCLUDING_KW "INCLUDING"
        WHITESPACE " "
        ALL_KW "ALL"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "constraint_rename_cache"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "like_constraint_rename_cache"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- FOREIGN KEY CONSTRAINT adding TEST"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attmp2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attmp3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attmp4"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      UNIQUE_CONSTRAINT
        UNIQUE_KW "unique"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "a"
          COMMA ","
          COLUMN
            NAME_REF
              IDENT "b"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attmp5"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Insert rows into attmp2 (pktable)"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Insert rows into attmp3"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "20"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      LITERAL
        INT_NUMBER "50"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Try (and fail) to add constraint due to invalid source columns"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "attmpconstr"
        WHITESPACE " "
        FOREIGN_KW "foreign"
        WHITESPACE " "
        KEY_KW "key"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "c"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "references"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "attmp2"
        WHITESPACE " "
        MATCH_KW "match"
        WHITESPACE " "
        FULL_KW "full"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Try (and fail) to add constraint due to invalid destination columns explicitly given"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "attmpconstr"
        WHITESPACE " "
        FOREIGN_KW "foreign"
        WHITESPACE " "
        KEY_KW "key"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "a"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "references"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "attmp2"
        L_PAREN "("
        NAME_REF
          IDENT "b"
        R_PAREN ")"
        WHITESPACE " "
        MATCH_KW "match"
        WHITESPACE " "
        FULL_KW "full"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Try (and fail) to add constraint due to invalid data"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "attmpconstr"
        WHITESPACE " "
        FOREIGN_KW "foreign"
        WHITESPACE " "
        KEY_KW "key"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "a"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "references"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "attmp2"
        WHITESPACE " "
        MATCH_KW "match"
        WHITESPACE " "
        FULL_KW "full"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Delete failing row"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        EQ "="
        LITERAL
          INT_NUMBER "5"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Try (and succeed)"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "attmpconstr"
        WHITESPACE " "
        FOREIGN_KW "foreign"
        WHITESPACE " "
        KEY_KW "key"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "a"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "references"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "attmp2"
        WHITESPACE " "
        MATCH_KW "match"
        WHITESPACE " "
        FULL_KW "full"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "attmpconstr"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      LITERAL
        INT_NUMBER "50"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Try NOT VALID and then VALIDATE CONSTRAINT, but fails. Delete failure then re-validate"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "attmpconstr"
        WHITESPACE " "
        FOREIGN_KW "foreign"
        WHITESPACE " "
        KEY_KW "key"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "a"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "references"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "attmp2"
        WHITESPACE " "
        MATCH_KW "match"
        WHITESPACE " "
        FULL_KW "full"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "NOT"
        WHITESPACE " "
        VALID_KW "VALID"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    VALIDATE_CONSTRAINT
      VALIDATE_KW "validate"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "attmpconstr"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Delete failing row"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        EQ "="
        LITERAL
          INT_NUMBER "5"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Try (and succeed) and repeat to show it works on already valid constraint"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    VALIDATE_CONSTRAINT
      VALIDATE_KW "validate"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "attmpconstr"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    VALIDATE_CONSTRAINT
      VALIDATE_KW "validate"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "attmpconstr"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Try a non-verified CHECK constraint"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "b_greater_than_ten"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "b_greater_than_ten"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "NOT"
        WHITESPACE " "
        VALID_KW "VALID"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- succeeds"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "b_greater_than_ten_not_enforced"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "NOT"
  WHITESPACE " "
  ERROR
    IDENT "ENFORCED"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- succeeds"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    VALIDATE_CONSTRAINT
      VALIDATE_KW "VALIDATE"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "b_greater_than_ten"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      PREFIX_EXPR
        NOT_KW "NOT"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    VALIDATE_CONSTRAINT
      VALIDATE_KW "VALIDATE"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "b_greater_than_ten"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- succeeds"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    VALIDATE_CONSTRAINT
      VALIDATE_KW "VALIDATE"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "b_greater_than_ten"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- succeeds"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    VALIDATE_CONSTRAINT
      VALIDATE_KW "VALIDATE"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "b_greater_than_ten_not_enforced"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n\n"
  COMMENT "-- Test inherited NOT VALID CHECK constraints"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "attmp3"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attmp6"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attmp7"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp6"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "6"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "30"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "7"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "16"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "b_le_20"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          LTEQ "<="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "20"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "NOT"
        WHITESPACE " "
        VALID_KW "VALID"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    VALIDATE_CONSTRAINT
      VALIDATE_KW "VALIDATE"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "b_le_20"
  SEMICOLON ";"
  WHITESPACE "\t"
  COMMENT "-- fails"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp6"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "20"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    VALIDATE_CONSTRAINT
      VALIDATE_KW "VALIDATE"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "b_le_20"
  SEMICOLON ";"
  WHITESPACE "\t"
  COMMENT "-- succeeds"
  WHITESPACE "\n\n"
  COMMENT "-- An already validated constraint must not be revalidated"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "boo"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "IMMUTABLE"
      WHITESPACE " "
      STRICT_FUNC_OPTION
        STRICT_KW "STRICT"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$ BEGIN RAISE NOTICE 'boo: %', $1; RETURN $1; END; $$"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp7"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "8"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "18"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp7"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENTITY_KW "identity"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "boo"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b"
              R_PAREN ")"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENTITY_KW "IDENTITY"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "boo"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b"
              R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "NOT"
        WHITESPACE " "
        VALID_KW "VALID"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
    WHITESPACE " "
    VALIDATE_CONSTRAINT
      VALIDATE_KW "VALIDATE"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENTITY_KW "identity"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- A NO INHERIT constraint should not be looked for in children during VALIDATE CONSTRAINT"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parent_noinh_convalid"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "child_noinh_convalid"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent_noinh_convalid"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent_noinh_convalid"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "child_noinh_convalid"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent_noinh_convalid"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "check_a_is_2"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "2"
        R_PAREN ")"
        WHITESPACE " "
        NO_KW "no"
        WHITESPACE " "
        INHERIT_KW "inherit"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "not"
        WHITESPACE " "
        VALID_KW "valid"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- fail, because of the row in parent"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent_noinh_convalid"
    WHITESPACE " "
    VALIDATE_CONSTRAINT
      VALIDATE_KW "validate"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "check_a_is_2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "delete"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    ONLY_KW "only"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent_noinh_convalid"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ok (parent itself contains no violating rows)"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent_noinh_convalid"
    WHITESPACE " "
    VALIDATE_CONSTRAINT
      VALIDATE_KW "validate"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "check_a_is_2"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "convalidated"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "conrelid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'parent_noinh_convalid'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "conname"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'check_a_is_2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- cleanup"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent_noinh_convalid"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "child_noinh_convalid"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Try (and fail) to create constraint from attmp5(a) to attmp4(a) - unique constraint on"
  WHITESPACE "\n"
  COMMENT "-- attmp4 is a,b"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp5"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "attmpconstr"
        WHITESPACE " "
        FOREIGN_KW "foreign"
        WHITESPACE " "
        KEY_KW "key"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "a"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "references"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "attmp4"
        L_PAREN "("
        NAME_REF
          IDENT "a"
        R_PAREN ")"
        WHITESPACE " "
        MATCH_KW "match"
        WHITESPACE " "
        FULL_KW "full"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp7"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp6"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp5"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp4"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp3"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- NOT VALID with plan invalidation -- ensure we don't use a constraint for"
  WHITESPACE "\n"
  COMMENT "-- exclusion until validated"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "constraint_exclusion"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    LITERAL
      STRING "'partition'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "nv_parent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "d"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "date"
      COMMA ","
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        LITERAL
          FALSE_KW "false"
        R_PAREN ")"
        WHITESPACE " "
        NO_KW "no"
        WHITESPACE " "
        INHERIT_KW "inherit"
  WHITESPACE " "
  ERROR
    NOT_KW "not"
  WHITESPACE " "
  ERROR
    VALID_KW "valid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- not valid constraint added at creation time should automatically become valid"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "nv_child_2010"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "nv_parent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "nv_child_2011"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "nv_parent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "nv_child_2010"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BETWEEN_EXPR
          NAME_REF
            IDENT "d"
          WHITESPACE " "
          BETWEEN_KW "between"
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'2010-01-01'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "date"
          WHITESPACE " "
          AND_KW "and"
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'2010-12-31'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "date"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "not"
        WHITESPACE " "
        VALID_KW "valid"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "nv_child_2011"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BETWEEN_EXPR
          NAME_REF
            IDENT "d"
          WHITESPACE " "
          BETWEEN_KW "between"
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'2011-01-01'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "date"
          WHITESPACE " "
          AND_KW "and"
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'2011-12-31'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "date"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "not"
        WHITESPACE " "
        VALID_KW "valid"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "nv_parent"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BETWEEN_EXPR
        NAME_REF
          IDENT "d"
        WHITESPACE " "
        BETWEEN_KW "between"
        WHITESPACE " "
        LITERAL
          STRING "'2011-08-01'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        LITERAL
          STRING "'2011-08-31'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "nv_child_2009"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      CHECK_CONSTRAINT
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BETWEEN_EXPR
          NAME_REF
            IDENT "d"
          WHITESPACE " "
          BETWEEN_KW "between"
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'2009-01-01'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "date"
          WHITESPACE " "
          AND_KW "and"
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'2009-12-31'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "date"
        R_PAREN ")"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "nv_parent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "nv_parent"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BETWEEN_EXPR
        NAME_REF
          IDENT "d"
        WHITESPACE " "
        BETWEEN_KW "between"
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'2011-08-01'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "date"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'2011-08-31'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "date"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "nv_parent"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BETWEEN_EXPR
        NAME_REF
          IDENT "d"
        WHITESPACE " "
        BETWEEN_KW "between"
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'2009-08-01'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "date"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'2009-08-31'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "date"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- after validation, the constraint should be used"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "nv_child_2011"
    WHITESPACE " "
    VALIDATE_CONSTRAINT
      VALIDATE_KW "VALIDATE"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "nv_child_2011_d_check"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "nv_parent"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BETWEEN_EXPR
        NAME_REF
          IDENT "d"
        WHITESPACE " "
        BETWEEN_KW "between"
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'2009-08-01'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "date"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'2009-08-31'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "date"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- add an inherited NOT VALID constraint"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "nv_parent"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BETWEEN_EXPR
          NAME_REF
            IDENT "d"
          WHITESPACE " "
          BETWEEN_KW "between"
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'2001-01-01'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "date"
          WHITESPACE " "
          AND_KW "and"
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'2099-12-31'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "date"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "not"
        WHITESPACE " "
        VALID_KW "valid"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- we leave nv_parent and children around to help test pg_dump logic"
  WHITESPACE "\n\n"
  COMMENT "-- Foreign key adding test with mixed types"
  WHITESPACE "\n\n"
  COMMENT "-- Note: these tables are TEMP to avoid name conflicts when this test"
  WHITESPACE "\n"
  COMMENT "-- is run in parallel with foreign_key.sql."
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "PKTABLE"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "ptest1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "PKTABLE"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        INT_NUMBER "42"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "FKTABLE"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "ftest1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "inet"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- This next should fail, because int=inet does not exist"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        FOREIGN_KW "FOREIGN"
        WHITESPACE " "
        KEY_KW "KEY"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "ftest1"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "references"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "pktable"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- This should also fail for the same reason, but here we"
  WHITESPACE "\n"
  COMMENT "-- give the column name"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        FOREIGN_KW "FOREIGN"
        WHITESPACE " "
        KEY_KW "KEY"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "ftest1"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "references"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "pktable"
        L_PAREN "("
        NAME_REF
          IDENT "ptest1"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    COMMENT "-- This should succeed, even though they are different types,"
    WHITESPACE "\n"
    COMMENT "-- because int=int8 exists and is a member of the integer opfamily"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "FKTABLE"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "ftest1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int8"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        FOREIGN_KW "FOREIGN"
        WHITESPACE " "
        KEY_KW "KEY"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "ftest1"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "references"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "pktable"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Check it actually works"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        INT_NUMBER "42"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\t\t"
  COMMENT "-- should succeed"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        INT_NUMBER "43"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\t\t"
  COMMENT "-- should fail"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    COMMENT "-- This should fail, because we'd have to cast numeric to int which is"
    WHITESPACE "\n"
    COMMENT "-- not an implicit coercion (or use numeric=numeric, but that's not part"
    WHITESPACE "\n"
    COMMENT "-- of the integer opfamily)"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "FKTABLE"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "ftest1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        FOREIGN_KW "FOREIGN"
        WHITESPACE " "
        KEY_KW "KEY"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "ftest1"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "references"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "pktable"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "PKTABLE"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    COMMENT "-- On the other hand, this should work because int implicitly promotes to"
    WHITESPACE "\n"
    COMMENT "-- numeric, and we allow promotion on the FK side"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "PKTABLE"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "ptest1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "PKTABLE"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        INT_NUMBER "42"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "FKTABLE"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "ftest1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        FOREIGN_KW "FOREIGN"
        WHITESPACE " "
        KEY_KW "KEY"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "ftest1"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "references"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "pktable"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Check it actually works"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        INT_NUMBER "42"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\t\t"
  COMMENT "-- should succeed"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        INT_NUMBER "43"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\t\t"
  COMMENT "-- should fail"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "PKTABLE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "PKTABLE"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "ptest1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "ptest2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "inet"
      COMMA ","
      WHITESPACE "\n                           "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "PRIMARY"
        WHITESPACE " "
        KEY_KW "KEY"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "ptest1"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME_REF
              IDENT "ptest2"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    COMMENT "-- This should fail, because we just chose really odd types"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "FKTABLE"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "ftest1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "cidr"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "ftest2"
        WHITESPACE " "
        TIME_TYPE
          NAME_REF
            TIMESTAMP_KW "timestamp"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        FOREIGN_KW "FOREIGN"
        WHITESPACE " "
        KEY_KW "KEY"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "ftest1"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME_REF
              IDENT "ftest2"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "references"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "pktable"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    COMMENT "-- Again, so should this..."
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "FKTABLE"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "ftest1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "cidr"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "ftest2"
        WHITESPACE " "
        TIME_TYPE
          NAME_REF
            TIMESTAMP_KW "timestamp"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        FOREIGN_KW "FOREIGN"
        WHITESPACE " "
        KEY_KW "KEY"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "ftest1"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME_REF
              IDENT "ftest2"
          R_PAREN ")"
        WHITESPACE "\n     "
        REFERENCES_KW "references"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "pktable"
        L_PAREN "("
        NAME_REF
          IDENT "ptest1"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "ptest2"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    COMMENT "-- This fails because we mixed up the column ordering"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "FKTABLE"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "ftest1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "ftest2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "inet"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        FOREIGN_KW "FOREIGN"
        WHITESPACE " "
        KEY_KW "KEY"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "ftest1"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME_REF
              IDENT "ftest2"
          R_PAREN ")"
        WHITESPACE "\n     "
        REFERENCES_KW "references"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "pktable"
        L_PAREN "("
        NAME_REF
          IDENT "ptest2"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "ptest1"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- As does this..."
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        FOREIGN_KW "FOREIGN"
        WHITESPACE " "
        KEY_KW "KEY"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "ftest2"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME_REF
              IDENT "ftest1"
          R_PAREN ")"
        WHITESPACE "\n     "
        REFERENCES_KW "references"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "pktable"
        L_PAREN "("
        NAME_REF
          IDENT "ptest1"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "ptest2"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "PKTABLE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test that ALTER CONSTRAINT updates trigger deferrability properly"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "PKTABLE"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "ptest1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "FKTABLE"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "ftest1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "fknd"
        WHITESPACE " "
        FOREIGN_KW "FOREIGN"
        WHITESPACE " "
        KEY_KW "KEY"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "ftest1"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "REFERENCES"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "pktable"
        WHITESPACE "\n  "
        ON_KW "ON"
        WHITESPACE " "
        DELETE_KW "DELETE"
        WHITESPACE " "
        CASCADE_KW "CASCADE"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        UPDATE_KW "UPDATE"
        WHITESPACE " "
        NO_KW "NO"
        WHITESPACE " "
        ACTION_KW "ACTION"
        WHITESPACE " "
        CONSTRAINT_OPTION_LIST
          NOT_DEFERRABLE_CONSTRAINT_OPTION
            NOT_KW "NOT"
            WHITESPACE " "
            DEFERRABLE_KW "DEFERRABLE"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "fkdd"
        WHITESPACE " "
        FOREIGN_KW "FOREIGN"
        WHITESPACE " "
        KEY_KW "KEY"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "ftest1"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "REFERENCES"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "pktable"
        WHITESPACE "\n  "
        ON_KW "ON"
        WHITESPACE " "
        DELETE_KW "DELETE"
        WHITESPACE " "
        CASCADE_KW "CASCADE"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        UPDATE_KW "UPDATE"
        WHITESPACE " "
        NO_KW "NO"
        WHITESPACE " "
        ACTION_KW "ACTION"
        WHITESPACE " "
        CONSTRAINT_OPTION_LIST
          DEFERRABLE_CONSTRAINT_OPTION
            DEFERRABLE_KW "DEFERRABLE"
          WHITESPACE " "
          INITALLY_DEFERRED_CONSTRAINT_OPTION
            INITIALLY_KW "INITIALLY"
            WHITESPACE " "
            DEFERRED_KW "DEFERRED"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "fkdi"
        WHITESPACE " "
        FOREIGN_KW "FOREIGN"
        WHITESPACE " "
        KEY_KW "KEY"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "ftest1"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "REFERENCES"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "pktable"
        WHITESPACE "\n  "
        ON_KW "ON"
        WHITESPACE " "
        DELETE_KW "DELETE"
        WHITESPACE " "
        CASCADE_KW "CASCADE"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        UPDATE_KW "UPDATE"
        WHITESPACE " "
        NO_KW "NO"
        WHITESPACE " "
        ACTION_KW "ACTION"
        WHITESPACE " "
        CONSTRAINT_OPTION_LIST
          DEFERRABLE_CONSTRAINT_OPTION
            DEFERRABLE_KW "DEFERRABLE"
          WHITESPACE " "
          INITIALLY_IMMEDIATE_CONSTRAINT_OPTION
            INITIALLY_KW "INITIALLY"
            WHITESPACE " "
            IMMEDIATE_KW "IMMEDIATE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "fknd2"
        WHITESPACE " "
        FOREIGN_KW "FOREIGN"
        WHITESPACE " "
        KEY_KW "KEY"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "ftest1"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "REFERENCES"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "pktable"
        WHITESPACE "\n  "
        ON_KW "ON"
        WHITESPACE " "
        DELETE_KW "DELETE"
        WHITESPACE " "
        CASCADE_KW "CASCADE"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        UPDATE_KW "UPDATE"
        WHITESPACE " "
        NO_KW "NO"
        WHITESPACE " "
        ACTION_KW "ACTION"
        WHITESPACE " "
        CONSTRAINT_OPTION_LIST
          DEFERRABLE_CONSTRAINT_OPTION
            DEFERRABLE_KW "DEFERRABLE"
          WHITESPACE " "
          INITALLY_DEFERRED_CONSTRAINT_OPTION
            INITIALLY_KW "INITIALLY"
            WHITESPACE " "
            DEFERRED_KW "DEFERRED"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
    WHITESPACE " "
    ALTER_CONSTRAINT
      ALTER_KW "ALTER"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "fknd2"
      WHITESPACE " "
      CONSTRAINT_OPTION_LIST
        NOT_DEFERRABLE_CONSTRAINT_OPTION
          NOT_KW "NOT"
          WHITESPACE " "
          DEFERRABLE_KW "DEFERRABLE"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "fkdd2"
        WHITESPACE " "
        FOREIGN_KW "FOREIGN"
        WHITESPACE " "
        KEY_KW "KEY"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "ftest1"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "REFERENCES"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "pktable"
        WHITESPACE "\n  "
        ON_KW "ON"
        WHITESPACE " "
        DELETE_KW "DELETE"
        WHITESPACE " "
        CASCADE_KW "CASCADE"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        UPDATE_KW "UPDATE"
        WHITESPACE " "
        NO_KW "NO"
        WHITESPACE " "
        ACTION_KW "ACTION"
        WHITESPACE " "
        CONSTRAINT_OPTION_LIST
          NOT_DEFERRABLE_CONSTRAINT_OPTION
            NOT_KW "NOT"
            WHITESPACE " "
            DEFERRABLE_KW "DEFERRABLE"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
    WHITESPACE " "
    ALTER_CONSTRAINT
      ALTER_KW "ALTER"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "fkdd2"
      WHITESPACE " "
      CONSTRAINT_OPTION_LIST
        DEFERRABLE_CONSTRAINT_OPTION
          DEFERRABLE_KW "DEFERRABLE"
        WHITESPACE " "
        INITALLY_DEFERRED_CONSTRAINT_OPTION
          INITIALLY_KW "INITIALLY"
          WHITESPACE " "
          DEFERRED_KW "DEFERRED"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "fkdi2"
        WHITESPACE " "
        FOREIGN_KW "FOREIGN"
        WHITESPACE " "
        KEY_KW "KEY"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "ftest1"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "REFERENCES"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "pktable"
        WHITESPACE "\n  "
        ON_KW "ON"
        WHITESPACE " "
        DELETE_KW "DELETE"
        WHITESPACE " "
        CASCADE_KW "CASCADE"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        UPDATE_KW "UPDATE"
        WHITESPACE " "
        NO_KW "NO"
        WHITESPACE " "
        ACTION_KW "ACTION"
        WHITESPACE " "
        CONSTRAINT_OPTION_LIST
          NOT_DEFERRABLE_CONSTRAINT_OPTION
            NOT_KW "NOT"
            WHITESPACE " "
            DEFERRABLE_KW "DEFERRABLE"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "FKTABLE"
    WHITESPACE " "
    ALTER_CONSTRAINT
      ALTER_KW "ALTER"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "fkdi2"
      WHITESPACE " "
      CONSTRAINT_OPTION_LIST
        DEFERRABLE_CONSTRAINT_OPTION
          DEFERRABLE_KW "DEFERRABLE"
        WHITESPACE " "
        INITIALLY_IMMEDIATE_CONSTRAINT_OPTION
          INITIALLY_KW "INITIALLY"
          WHITESPACE " "
          IMMEDIATE_KW "IMMEDIATE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "tgfoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "tgtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "tgdeferrable"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "tginitdeferred"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_trigger"
      WHITESPACE " "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_constraint"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "con"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "con"
            DOT "."
            NAME_REF
              IDENT "oid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          NAME_REF
            IDENT "tgconstraint"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "tgrelid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'pktable'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      LITERAL
        INT_NUMBER "3"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "tgfoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "tgtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "tgdeferrable"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "tginitdeferred"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_trigger"
      WHITESPACE " "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_constraint"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "con"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "con"
            DOT "."
            NAME_REF
              IDENT "oid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          NAME_REF
            IDENT "tgconstraint"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "tgrelid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'fktable'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      LITERAL
        INT_NUMBER "3"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- temp tables should go away by themselves, need not drop them."
  WHITESPACE "\n\n"
  COMMENT "-- test check constraint adding"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      WHITESPACE " "
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- add a check constraint"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "atacc_test1"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "test"
          R_ANGLE ">"
          LITERAL
            INT_NUMBER "3"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should fail"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should succeed"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- let's do one where the check fails when added"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      WHITESPACE " "
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- insert a soon to be failing row"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- add a check constraint (fails)"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "atacc_test1"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "test"
          R_ANGLE ">"
          LITERAL
            INT_NUMBER "3"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- let's do one where the check fails because the column doesn't exist"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      WHITESPACE " "
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- add a check constraint (fails)"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "atacc_test1"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "test1"
          R_ANGLE ">"
          LITERAL
            INT_NUMBER "3"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- something a little more complicated"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- add a check constraint (fails)"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "atacc_test1"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "test"
            PLUS "+"
            NAME_REF
              IDENT "test2"
          L_ANGLE "<"
          BIN_EXPR
            NAME_REF
              IDENT "test3"
            STAR "*"
            LITERAL
              INT_NUMBER "4"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should fail"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "test2"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "test3"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should succeed"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "test2"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "test3"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      LITERAL
        INT_NUMBER "5"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- lets do some naming tests"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CHECK_KW "check"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "test"
            R_ANGLE ">"
            LITERAL
              INT_NUMBER "3"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "test2"
          R_ANGLE ">"
          NAME_REF
            IDENT "test"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should fail for $2"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test2"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- inheritance related tests"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc2"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "foo"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "test2"
          R_ANGLE ">"
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- fail and then succeed on atacc2"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc2"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      PREFIX_EXPR
        MINUS "-"
        LITERAL
          INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc2"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- fail and then succeed on atacc3"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc3"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      PREFIX_EXPR
        MINUS "-"
        LITERAL
          INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc3"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc3"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- same things with one created with INHERIT"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc3"
    WHITESPACE " "
    NO_INHERIT
      NO_KW "no"
      WHITESPACE " "
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "atacc2"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc3"
    WHITESPACE " "
    NO_INHERIT
      NO_KW "no"
      WHITESPACE " "
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "atacc2"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- make sure it really isn't a child"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc3"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "test2"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc2"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- fail due to missing constraint"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc2"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "foo"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "test2"
          R_ANGLE ">"
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc3"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "atacc2"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- fail due to missing column"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc3"
    WHITESPACE " "
    RENAME_COLUMN
      RENAME_KW "rename"
      WHITESPACE " "
      NAME_REF
        IDENT "test2"
      WHITESPACE " "
      TO_KW "to"
      WHITESPACE " "
      NAME_REF
        IDENT "testx"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc3"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "atacc2"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- fail due to mismatched data type"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc3"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      NAME_REF
        IDENT "test2"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "bool"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc3"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "atacc2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc3"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      NAME_REF
        IDENT "test2"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- succeed"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc3"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      NAME_REF
        IDENT "test2"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc3"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "test2"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "4"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "test2"
        WHITESPACE " "
        IS_KW "is"
        WHITESPACE " "
        LITERAL
          NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc3"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "foo"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "test2"
          R_ANGLE ">"
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc3"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "atacc2"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- fail due to duplicates and circular inheritance"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc3"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "atacc2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc2"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "atacc3"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc2"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "atacc2"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- test that we really are a child now (should see 4 not 3 and cascade should go through)"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "test2"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc2"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- adding only to a parent is allowed as of 9.2"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ok:"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "foo"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "test"
          R_ANGLE ">"
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
        WHITESPACE " "
        NO_KW "no"
        WHITESPACE " "
        INHERIT_KW "inherit"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- check constraint is not there on child"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc2"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      PREFIX_EXPR
        MINUS "-"
        LITERAL
          INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- check constraint is there on parent"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      PREFIX_EXPR
        MINUS "-"
        LITERAL
          INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- fail, violating row:"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc2"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "foo"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "test"
          R_ANGLE ">"
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
        WHITESPACE " "
        NO_KW "no"
        WHITESPACE " "
        INHERIT_KW "inherit"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test unique constraint adding"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      WHITESPACE " "
      R_PAREN ")"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- add a unique constraint"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      UNIQUE_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "atacc_test1"
        WHITESPACE " "
        UNIQUE_KW "unique"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "test"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- insert first value"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should fail"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should succeed"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- try to create duplicates via alter table using - should fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "test"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
        WHITESPACE " "
        USING_KW "using"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- let's do one where the unique constraint fails when added"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      WHITESPACE " "
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- insert soon to be failing rows"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- add a unique constraint (fails)"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      UNIQUE_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "atacc_test1"
        WHITESPACE " "
        UNIQUE_KW "unique"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "test"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- let's do one where the unique constraint fails"
    WHITESPACE "\n"
    COMMENT "-- because the column doesn't exist"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      WHITESPACE " "
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- add a unique constraint (fails)"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      UNIQUE_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "atacc_test1"
        WHITESPACE " "
        UNIQUE_KW "unique"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "test1"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- something a little more complicated"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- add a unique constraint"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      UNIQUE_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "atacc_test1"
        WHITESPACE " "
        UNIQUE_KW "unique"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "test"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME_REF
              IDENT "test2"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- insert initial value"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "test2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should fail"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "test2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should all succeed"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "test2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      LITERAL
        INT_NUMBER "5"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "test2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "test2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      LITERAL
        INT_NUMBER "5"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- lets do some naming tests"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      UNIQUE_CONSTRAINT
        UNIQUE_KW "unique"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "test"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      UNIQUE_CONSTRAINT
        UNIQUE_KW "unique"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "test2"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should fail for @@ second one @@"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test2"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test2"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test primary key constraint adding"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "serial"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- add a primary key constraint"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "atacc_test1"
        WHITESPACE " "
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "test"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- insert first value"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should fail"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should succeed"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- inserting NULL should fail"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        NULL_KW "NULL"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- try adding a second primary key (should fail)"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "atacc_oid1"
        WHITESPACE " "
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "id"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- drop first primary key constraint"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc_test1"
      WHITESPACE " "
      RESTRICT_KW "restrict"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- try adding a primary key on oid (should succeed)"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "atacc_oid1"
        WHITESPACE " "
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "id"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- let's do one where the primary key constraint fails when added"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      WHITESPACE " "
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- insert soon to be failing rows"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- add a primary key (fails)"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "atacc_test1"
        WHITESPACE " "
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "test"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- let's do another one where the primary key constraint fails when added"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      WHITESPACE " "
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- insert soon to be failing row"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        NULL_KW "NULL"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- add a primary key (fails)"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "atacc_test1"
        WHITESPACE " "
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "test"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- let's do one where the primary key constraint fails"
    WHITESPACE "\n"
    COMMENT "-- because the column doesn't exist"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      WHITESPACE " "
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- add a primary key constraint (fails)"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "atacc_test1"
        WHITESPACE " "
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "test1"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- adding a new column as primary key to a non-empty table."
    WHITESPACE "\n"
    COMMENT "-- should fail unless the column has a non-null default value."
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      WHITESPACE " "
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- add a primary key column without a default (fails)."
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "test2"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- now add a primary key column with a default (succeeds)."
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "test2"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
      WHITESPACE " "
      DEFAULT_CONSTRAINT
        DEFAULT_KW "default"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- this combination used to have order-of-execution problems (bug #15580)"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE "\n  "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "float8"
      WHITESPACE " "
      NOT_NULL_CONSTRAINT
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
      WHITESPACE " "
      DEFAULT_CONSTRAINT
        DEFAULT_KW "default"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "random"
          ARG_LIST
            L_PAREN "("
            R_PAREN ")"
    COMMA ","
    WHITESPACE "\n  "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "a"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- additionally, we've seen issues with foreign key validation not being"
    WHITESPACE "\n"
    COMMENT "-- properly delayed until after a table rewrite.  Check that works ok."
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "atacc1_fkey"
        WHITESPACE " "
        FOREIGN_KW "foreign"
        WHITESPACE " "
        KEY_KW "key"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "a"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "references"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "atacc1"
        WHITESPACE " "
        L_PAREN "("
        NAME_REF
          IDENT "a"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "not"
        WHITESPACE " "
        VALID_KW "valid"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    VALIDATE_CONSTRAINT
      VALIDATE_KW "validate"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc1_fkey"
    COMMA ","
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- we've also seen issues with check constraints being validated at the wrong"
    WHITESPACE "\n"
    COMMENT "-- time when there's a pending table rewrite."
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "atacc1_chk"
        WHITESPACE " "
        CHECK_KW "check"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "not"
        WHITESPACE " "
        VALID_KW "valid"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    VALIDATE_CONSTRAINT
      VALIDATE_KW "validate"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc1_chk"
    COMMA ","
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- same as above, but ensure the constraint violation is detected"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "atacc1_chk"
        WHITESPACE " "
        CHECK_KW "check"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "not"
        WHITESPACE " "
        VALID_KW "valid"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    VALIDATE_CONSTRAINT
      VALIDATE_KW "validate"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc1_chk"
    COMMA ","
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- something a little more complicated"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- add a primary key constraint"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "atacc_test1"
        WHITESPACE " "
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "test"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME_REF
              IDENT "test2"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- try adding a second primary key - should fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "atacc_test2"
        WHITESPACE " "
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "test"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- insert initial value"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "test2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should fail"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "test2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "test2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        NULL_KW "NULL"
      COMMA ","
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "test2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        NULL_KW "NULL"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "test2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        NULL_KW "NULL"
      COMMA ","
      LITERAL
        NULL_KW "NULL"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should all succeed"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "test2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      LITERAL
        INT_NUMBER "5"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "test2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "test2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      LITERAL
        INT_NUMBER "5"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- lets do some naming tests"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "test"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- only first should succeed"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test2"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test2"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test2"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        NULL_KW "NULL"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- alter table / alter column [set/drop] not null tests"
  WHITESPACE "\n"
  COMMENT "-- try altering system catalogs, should fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pg_class"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "relname"
      WHITESPACE " "
      DROP_NOT_NULL
        DROP_KW "drop"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pg_class"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "relname"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- try altering non-existent table, should fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "non_existent"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "bar"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "non_existent"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "bar"
      WHITESPACE " "
      DROP_NOT_NULL
        DROP_KW "drop"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- test setting columns to null and not null and vice versa"
    WHITESPACE "\n"
    COMMENT "-- test checking for null values and primary key"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "\"atacc1_pkey\""
        WHITESPACE " "
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "test"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "test"
      WHITESPACE " "
      DROP_NOT_NULL
        DROP_KW "drop"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "\"atacc1_pkey\""
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "test"
      WHITESPACE " "
      DROP_NOT_NULL
        DROP_KW "drop"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "test"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "delete"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "test"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- try altering a non-existent column, should fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "bar"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "bar"
      WHITESPACE " "
      DROP_NOT_NULL
        DROP_KW "drop"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- try creating a view and altering that, should fail"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "myview"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "myview"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "test"
      WHITESPACE " "
      DROP_NOT_NULL
        DROP_KW "drop"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "myview"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "test"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "drop"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "myview"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- set not null verified by constraints"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "test_a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "test_b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        NULL_KW "null"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- constraint not cover all values, should fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "atacc1_constr_or"
        WHITESPACE " "
        CHECK_KW "check"
        L_PAREN "("
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "test_a"
            WHITESPACE " "
            IS_NOT
              IS_KW "is"
              WHITESPACE " "
              NOT_KW "not"
            WHITESPACE " "
            LITERAL
              NULL_KW "null"
          WHITESPACE " "
          OR_KW "or"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "test_b"
            WHITESPACE " "
            L_ANGLE "<"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "10"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "test_a"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc1_constr_or"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- not valid constraint, should fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "atacc1_constr_invalid"
        WHITESPACE " "
        CHECK_KW "check"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "test_a"
          WHITESPACE " "
          IS_NOT
            IS_KW "is"
            WHITESPACE " "
            NOT_KW "not"
          WHITESPACE " "
          LITERAL
            NULL_KW "null"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "not"
        WHITESPACE " "
        VALID_KW "valid"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "test_a"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc1_constr_invalid"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- with valid constraint"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "test_a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "atacc1_constr_a_valid"
        WHITESPACE " "
        CHECK_KW "check"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "test_a"
          WHITESPACE " "
          IS_NOT
            IS_KW "is"
            WHITESPACE " "
            NOT_KW "not"
          WHITESPACE " "
          LITERAL
            NULL_KW "null"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "test_a"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "delete"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "test_a"
      WHITESPACE " "
      DROP_NOT_NULL
        DROP_KW "drop"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- test multiple set not null at same time"
  WHITESPACE "\n"
  COMMENT "-- test_a checked by atacc1_constr_a_valid, test_b should fail by table scan"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "test_a"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
    COMMA ","
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "test_b"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- commands order has no importance"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "test_b"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
    COMMA ","
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "test_a"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- valid one by table scan, one by check constraints"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "test_b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "test_b"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
    COMMA ","
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "test_a"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "test_a"
      WHITESPACE " "
      DROP_NOT_NULL
        DROP_KW "drop"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
    COMMA ","
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "test_b"
      WHITESPACE " "
      DROP_NOT_NULL
        DROP_KW "drop"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- both column has check constraints"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "atacc1_constr_b_valid"
        WHITESPACE " "
        CHECK_KW "check"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "test_b"
          WHITESPACE " "
          IS_NOT
            IS_KW "is"
            WHITESPACE " "
            NOT_KW "not"
          WHITESPACE " "
          LITERAL
            NULL_KW "null"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "test_b"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
    COMMA ","
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "test_a"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- not null not valid with partitions"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atnnparted"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "col1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "LIST"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "id"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atnnparted"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "dummy_constr"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              NOT_KW "NOT"
  WHITESPACE " "
  ERROR
    NULL_KW "NULL"
  WHITESPACE " "
  ERROR
    IDENT "id"
  WHITESPACE " "
  ERROR
    NOT_KW "NOT"
  WHITESPACE " "
  ERROR
    VALID_KW "VALID"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atnnpart1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "col1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atnnpart1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "another_constr"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              NOT_KW "NOT"
  WHITESPACE " "
  ERROR
    NULL_KW "NULL"
  WHITESPACE " "
  ERROR
    IDENT "id"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atnnpart1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "PRIMARY"
        WHITESPACE " "
        KEY_KW "KEY"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "id"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atnnparted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "atnnpart1"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'1'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atnnparted"
    WHITESPACE " "
    VALIDATE_CONSTRAINT
      VALIDATE_KW "VALIDATE"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "dummy_constr"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- leave a table in this state for the pg_upgrade test"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- test inheritance"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        CHAR_TYPE
          VARCHAR_KW "varchar"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "255"
            R_PAREN ")"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        NULL_KW "NULL"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "child"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        NULL_KW "NULL"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'foo'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      DROP_NOT_NULL
        DROP_KW "drop"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        NULL_KW "NULL"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "child"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        NULL_KW "NULL"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'foo'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    ONLY_KW "only"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "child"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "child"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- test setting and removing default values"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "def_test"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "c1"
        WHITESPACE "\t"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
        WHITESPACE " "
        DEFAULT_CONSTRAINT
          DEFAULT_KW "default"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "5"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "c2"
        WHITESPACE "\t"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
        WHITESPACE " "
        DEFAULT_CONSTRAINT
          DEFAULT_KW "default"
          WHITESPACE " "
          LITERAL
            STRING "'initial_default'"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "def_test"
    WHITESPACE " "
    DEFAULT_KW "default"
    WHITESPACE " "
    VALUES_KW "values"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "def_test"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "c1"
      WHITESPACE " "
      DROP_DEFAULT
        DROP_KW "drop"
        WHITESPACE " "
        DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "def_test"
    WHITESPACE " "
    DEFAULT_KW "default"
    WHITESPACE " "
    VALUES_KW "values"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "def_test"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "c2"
      WHITESPACE " "
      DROP_DEFAULT
        DROP_KW "drop"
        WHITESPACE " "
        DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "def_test"
    WHITESPACE " "
    DEFAULT_KW "default"
    WHITESPACE " "
    VALUES_KW "values"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "def_test"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "c1"
      WHITESPACE " "
      SET_DEFAULT
        SET_KW "set"
        WHITESPACE " "
        DEFAULT_KW "default"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "def_test"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "c2"
      WHITESPACE " "
      SET_DEFAULT
        SET_KW "set"
        WHITESPACE " "
        DEFAULT_KW "default"
        WHITESPACE " "
        LITERAL
          STRING "'new_default'"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "def_test"
    WHITESPACE " "
    DEFAULT_KW "default"
    WHITESPACE " "
    VALUES_KW "values"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "def_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- set defaults to an incorrect type: this should fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "def_test"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "c1"
      WHITESPACE " "
      SET_DEFAULT
        SET_KW "set"
        WHITESPACE " "
        DEFAULT_KW "default"
        WHITESPACE " "
        LITERAL
          STRING "'wrong_datatype'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "def_test"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "c2"
      WHITESPACE " "
      SET_DEFAULT
        SET_KW "set"
        WHITESPACE " "
        DEFAULT_KW "default"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "20"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- set defaults on a non-existent column: this should fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "def_test"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "c3"
      WHITESPACE " "
      SET_DEFAULT
        SET_KW "set"
        WHITESPACE " "
        DEFAULT_KW "default"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "30"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- set defaults on views: we need to create a view, add a rule"
  WHITESPACE "\n"
  COMMENT "-- to allow insertions into it, and then alter the view to add"
  WHITESPACE "\n"
  COMMENT "-- a default"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "def_view_test"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "def_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_RULE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    RULE_KW "rule"
    WHITESPACE " "
    NAME
      IDENT "def_view_test_ins"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n\t"
    ON_KW "on"
    WHITESPACE " "
    INSERT_KW "insert"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "def_view_test"
    WHITESPACE "\n\t"
    DO_KW "do"
    WHITESPACE " "
    INSTEAD_KW "instead"
    WHITESPACE " "
    INSERT_STMT
      INSERT_KW "insert"
      WHITESPACE " "
      INTO_KW "into"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "def_test"
      WHITESPACE " "
      SELECT
        SELECT_CLAUSE
          SELECT_KW "select"
          WHITESPACE " "
          TARGET_LIST
            TARGET
              FIELD_EXPR
                NAME_REF
                  NEW_KW "new"
                DOT "."
                STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "def_view_test"
    WHITESPACE " "
    DEFAULT_KW "default"
    WHITESPACE " "
    VALUES_KW "values"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "def_view_test"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "c1"
      WHITESPACE " "
      SET_DEFAULT
        SET_KW "set"
        WHITESPACE " "
        DEFAULT_KW "default"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "45"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "def_view_test"
    WHITESPACE " "
    DEFAULT_KW "default"
    WHITESPACE " "
    VALUES_KW "values"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "def_view_test"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "c2"
      WHITESPACE " "
      SET_DEFAULT
        SET_KW "set"
        WHITESPACE " "
        DEFAULT_KW "default"
        WHITESPACE " "
        LITERAL
          STRING "'view_default'"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "def_view_test"
    WHITESPACE " "
    DEFAULT_KW "default"
    WHITESPACE " "
    VALUES_KW "values"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "def_view_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_RULE_STMT
    DROP_KW "drop"
    WHITESPACE " "
    RULE_KW "rule"
    WHITESPACE " "
    NAME_REF
      IDENT "def_view_test_ins"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "def_view_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "drop"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "def_view_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "def_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- alter table / drop column tests"
  WHITESPACE "\n"
  COMMENT "-- try altering system catalogs, should fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pg_class"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "relname"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- try altering non-existent table, should fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "nosuchtable"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "bar"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- test dropping columns"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "d"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- SELECTs"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc1"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc1"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "\"........pg.dropped.1........\""
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc1"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc1"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "\"........pg.dropped.1........\""
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "atacc1"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "atacc1"
            DOT "."
            NAME_REF
              IDENT "a"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "b"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "c"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "d"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "b"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "c"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "d"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "\"........pg.dropped.1........\""
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "atacc1"
            DOT "."
            NAME_REF
              IDENT "\"........pg.dropped.1........\""
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "\"........pg.dropped.1........\""
        COMMA ","
        TARGET
          NAME_REF
            IDENT "b"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "c"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "d"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "\"........pg.dropped.1........\""
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- UPDATEs"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "3"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "3"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "\"........pg.dropped.1........\""
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "3"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "\"........pg.dropped.1........\""
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "3"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- INSERTs"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "12"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "13"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        DEFAULT_KW "default"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "12"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "13"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "12"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "13"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        DEFAULT_KW "default"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "b"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "c"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "d"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      COMMA ","
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      LITERAL
        INT_NUMBER "12"
      COMMA ","
      LITERAL
        INT_NUMBER "13"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "b"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "c"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "d"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        DEFAULT_KW "default"
      COMMA ","
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      LITERAL
        INT_NUMBER "12"
      COMMA ","
      LITERAL
        INT_NUMBER "13"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "c"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "d"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      LITERAL
        INT_NUMBER "12"
      COMMA ","
      LITERAL
        INT_NUMBER "13"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "\"........pg.dropped.1........\""
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "\"........pg.dropped.1........\""
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        DEFAULT_KW "default"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "\"........pg.dropped.1........\""
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "b"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "c"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "d"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      COMMA ","
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      LITERAL
        INT_NUMBER "12"
      COMMA ","
      LITERAL
        INT_NUMBER "13"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "\"........pg.dropped.1........\""
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "b"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "c"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "d"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        DEFAULT_KW "default"
      COMMA ","
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      LITERAL
        INT_NUMBER "12"
      COMMA ","
      LITERAL
        INT_NUMBER "13"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- DELETEs"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "delete"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "3"
  SEMICOLON ";"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "delete"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "\"........pg.dropped.1........\""
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "3"
  SEMICOLON ";"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "delete"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- try dropping a non-existent column, should fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      NAME_REF
        IDENT "bar"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- try removing an oid column, should succeed (as it's nonexistent)"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    SET_WITHOUT_OIDS
      SET_KW "SET"
      WHITESPACE " "
      WITHOUT_KW "WITHOUT"
      WHITESPACE " "
      OIDS_KW "OIDS"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- try adding an oid column, should fail (not supported)"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    SET_STORAGE_PARAMS
      SET_KW "SET"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            WITH_KW "WITH"
  WHITESPACE " "
  ERROR
    OIDS_KW "OIDS"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- try dropping the xmin column, should fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      NAME_REF
        IDENT "xmin"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- try creating a view and altering that, should fail"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "myview"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "myview"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "myview"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      NAME_REF
        IDENT "d"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "drop"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "myview"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test some commands to make sure they fail on the dropped column"
  WHITESPACE "\n"
  ANALYZE_STMT
    ANALYZE_KW "analyze"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ANALYZE_STMT
    ANALYZE_KW "analyze"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "\"........pg.dropped.1........\""
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  VACUUM_STMT
    VACUUM_KW "vacuum"
    WHITESPACE " "
    ANALYZE_KW "analyze"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  VACUUM_STMT
    VACUUM_KW "vacuum"
    WHITESPACE " "
    ANALYZE_KW "analyze"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "\"........pg.dropped.1........\""
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT_STMT
    COMMENT_KW "comment"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    COLUMN_KW "column"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "atacc1"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "a"
    WHITESPACE " "
    IS_KW "is"
    WHITESPACE " "
    LITERAL
      STRING "'testing'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT_STMT
    COMMENT_KW "comment"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    COLUMN_KW "column"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "atacc1"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "\"........pg.dropped.1........\""
    WHITESPACE " "
    IS_KW "is"
    WHITESPACE " "
    LITERAL
      STRING "'testing'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      SET_STORAGE
        SET_KW "set"
        WHITESPACE " "
        STORAGE_KW "storage"
        WHITESPACE " "
        IDENT "plain"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "\"........pg.dropped.1........\""
      WHITESPACE " "
      SET_STORAGE
        SET_KW "set"
        WHITESPACE " "
        STORAGE_KW "storage"
        WHITESPACE " "
        IDENT "plain"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      SET_STATISTICS
        SET_KW "set"
        WHITESPACE " "
        STATISTICS_KW "statistics"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "\"........pg.dropped.1........\""
      WHITESPACE " "
      SET_STATISTICS
        SET_KW "set"
        WHITESPACE " "
        STATISTICS_KW "statistics"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      SET_DEFAULT
        SET_KW "set"
        WHITESPACE " "
        DEFAULT_KW "default"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "3"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "\"........pg.dropped.1........\""
      WHITESPACE " "
      SET_DEFAULT
        SET_KW "set"
        WHITESPACE " "
        DEFAULT_KW "default"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "3"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      DROP_DEFAULT
        DROP_KW "drop"
        WHITESPACE " "
        DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "\"........pg.dropped.1........\""
      WHITESPACE " "
      DROP_DEFAULT
        DROP_KW "drop"
        WHITESPACE " "
        DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "\"........pg.dropped.1........\""
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      DROP_NOT_NULL
        DROP_KW "drop"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "\"........pg.dropped.1........\""
      WHITESPACE " "
      DROP_NOT_NULL
        DROP_KW "drop"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    RENAME_COLUMN
      RENAME_KW "rename"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      TO_KW "to"
      WHITESPACE " "
      NAME_REF
        IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    RENAME_COLUMN
      RENAME_KW "rename"
      WHITESPACE " "
      NAME_REF
        IDENT "\"........pg.dropped.1........\""
      WHITESPACE " "
      TO_KW "to"
      WHITESPACE " "
      NAME_REF
        IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "a"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "\"........pg.dropped.1........\""
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      UNIQUE_CONSTRAINT
        UNIQUE_KW "unique"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "a"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      UNIQUE_CONSTRAINT
        UNIQUE_KW "unique"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "\"........pg.dropped.1........\""
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "3"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "\"........pg.dropped.1........\""
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "3"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
        WHITESPACE " "
        UNIQUE_CONSTRAINT
          UNIQUE_KW "unique"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        FOREIGN_KW "foreign"
        WHITESPACE " "
        KEY_KW "key"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "a"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "references"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "atacc2"
        L_PAREN "("
        NAME_REF
          IDENT "id"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        FOREIGN_KW "foreign"
        WHITESPACE " "
        KEY_KW "key"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "\"........pg.dropped.1........\""
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "references"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "atacc2"
        L_PAREN "("
        NAME_REF
          IDENT "id"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc2"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        FOREIGN_KW "foreign"
        WHITESPACE " "
        KEY_KW "key"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "id"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "references"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "atacc1"
        L_PAREN "("
        NAME_REF
          IDENT "a"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc2"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        FOREIGN_KW "foreign"
        WHITESPACE " "
        KEY_KW "key"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "id"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "references"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "atacc1"
        L_PAREN "("
        NAME_REF
          IDENT "\"........pg.dropped.1........\""
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc2"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "\"testing_idx\""
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "\"testing_idx\""
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "\"........pg.dropped.1........\""
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test create as and select into"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "21"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "22"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "23"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attest1"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "attest1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attest1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT_INTO_STMT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    INTO_CLAUSE
      INTO_KW "into"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME
            IDENT "attest2"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "attest2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attest2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- try dropping all columns"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      NAME_REF
        IDENT "d"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- test constraint error reporting in presence of dropped columns"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atacc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "serial"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          VALUE_KW "value"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CHECK_KW "check"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              VALUE_KW "value"
            WHITESPACE " "
            L_ANGLE "<"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "10"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          VALUE_KW "value"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "100"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        VALUE_KW "value"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        VALUE_KW "value"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            VALUE_KW "value"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          VALUE_KW "value"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "100"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          VALUE_KW "value"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        NULL_KW "null"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atacc1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- test inheritance"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "d"
        WHITESPACE " "
        CHAR_TYPE
          VARCHAR_KW "varchar"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "255"
            R_PAREN ")"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "child"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "12"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "13"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'testing'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "parent"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "child"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "parent"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "child"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "child"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check error cases for inheritance column merging"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "float8"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "10"
            COMMA ","
            ARG
              LITERAL
                INT_NUMBER "4"
            R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
        WHITESPACE " "
        COLLATE
          COLLATE_KW "collate"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "\"C\""
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "float4"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  CREATE_TABLE
    COMMENT "-- fail"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                DECIMAL_KW "decimal"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "10"
            COMMA ","
            ARG
              LITERAL
                INT_NUMBER "7"
            R_PAREN ")"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  CREATE_TABLE
    COMMENT "-- fail"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
        WHITESPACE " "
        COLLATE
          COLLATE_KW "collate"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "\"POSIX\""
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  CREATE_TABLE
    COMMENT "-- fail"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        DOUBLE_TYPE
          DOUBLE_KW "double"
          WHITESPACE " "
          PRECISION_KW "precision"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                DECIMAL_KW "decimal"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "10"
            COMMA ","
            ARG
              LITERAL
                INT_NUMBER "4"
            R_PAREN ")"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "child"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- test copy in/out"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attest"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attest"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attest"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    STDOUT_KW "stdout"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attest"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    STDOUT_KW "stdout"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attest"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "\"........pg.dropped.1........\""
      R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    STDOUT_KW "stdout"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attest"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    INT_NUMBER "10"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "11"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "12"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "attest"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attest"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    INT_NUMBER "21"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "22"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "attest"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attest"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      R_PAREN ")"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attest"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "\"........pg.dropped.1........\""
      R_PAREN ")"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "copy"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attest"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "c"
      R_PAREN ")"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    STDIN_KW "stdin"
  SEMICOLON ";"
  WHITESPACE "\n"
  ERROR
    INT_NUMBER "31"
  WHITESPACE "\t"
  ERROR
    INT_NUMBER "32"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "attest"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test inheritance"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dropColumn"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "e"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dropColumnChild"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dropColumn"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dropColumnAnother"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "d"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dropColumnChild"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- these two should fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dropColumnchild"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    ONLY_KW "only"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dropColumnChild"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
  SEMICOLON ";"
  WHITESPACE "\n\n\n\n"
  COMMENT "-- these three should work"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    ONLY_KW "only"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dropColumn"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "e"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dropColumnChild"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dropColumn"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "renameColumn"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "renameColumnChild"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "renameColumn"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "renameColumnAnother"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "renameColumnChild"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- these three should fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "renameColumnChild"
    WHITESPACE " "
    RENAME_COLUMN
      RENAME_KW "rename"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      TO_KW "to"
      WHITESPACE " "
      NAME_REF
        IDENT "d"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    ONLY_KW "only"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "renameColumnChild"
    WHITESPACE " "
    RENAME_COLUMN
      RENAME_KW "rename"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      TO_KW "to"
      WHITESPACE " "
      NAME_REF
        IDENT "d"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    ONLY_KW "only"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "renameColumn"
    WHITESPACE " "
    RENAME_COLUMN
      RENAME_KW "rename"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      TO_KW "to"
      WHITESPACE " "
      NAME_REF
        IDENT "d"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- these should work"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "renameColumn"
    WHITESPACE " "
    RENAME_COLUMN
      RENAME_KW "rename"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      TO_KW "to"
      WHITESPACE " "
      NAME_REF
        IDENT "d"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "renameColumnChild"
    WHITESPACE " "
    RENAME_COLUMN
      RENAME_KW "rename"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      TO_KW "to"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- these should work"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "if"
      WHITESPACE " "
      EXISTS_KW "exists"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "doesnt_exist_tab"
    WHITESPACE " "
    RENAME_COLUMN
      RENAME_KW "rename"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      TO_KW "to"
      WHITESPACE " "
      NAME_REF
        IDENT "d"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "if"
      WHITESPACE " "
      EXISTS_KW "exists"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "doesnt_exist_tab"
    WHITESPACE " "
    RENAME_COLUMN
      RENAME_KW "rename"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      TO_KW "to"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- this should work"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "renameColumn"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "w"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- this should fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    ONLY_KW "only"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "renameColumn"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "x"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- this should work"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "renameColumn"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "x"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "x"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
      WHITESPACE " "
      NOT_NULL_CONSTRAINT
        NOT_KW "not"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- this should fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "renameColumn"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "y"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "x"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
      WHITESPACE " "
      NOT_NULL_CONSTRAINT
        NOT_KW "not"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test corner cases in dropping of inherited columns"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "c1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- should be rejected since c1.f1 is inherited"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should work"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- c1.f1 is still there, but no longer inherited"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "f1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "c1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "f1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "c1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "c1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- should be rejected since c1.f1 is inherited"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- c1.f1 is dropped now, since there is no local definition for it"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "f1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "c1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "c1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- should be rejected since c1.f1 is inherited"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    ONLY_KW "only"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- c1.f1 is NOT dropped, but must now be considered non-inherited"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "c1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- should be rejected since c1.f1 is inherited"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    ONLY_KW "only"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- c1.f1 is still there, but no longer inherited"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          NAME_KW "name"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          NAME_KW "name"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "height"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "c1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "age"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    COMMA ","
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "gc1"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "attname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "attinhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "attislocal"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      JOIN
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_attribute"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "pg_class"
              DOT "."
              NAME_REF
                IDENT "oid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "pg_attribute"
              DOT "."
              NAME_REF
                IDENT "attrelid"
          R_PAREN ")"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "relname"
            WHITESPACE " "
            IN_KW "in"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                STRING "'p1'"
              COMMA ","
              LITERAL
                STRING "'p2'"
              COMMA ","
              LITERAL
                STRING "'c1'"
              COMMA ","
              LITERAL
                STRING "'gc1'"
              R_PAREN ")"
          WHITESPACE " "
          AND_KW "and"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "attnum"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "not"
          WHITESPACE " "
          NAME_REF
            IDENT "attisdropped"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "relname"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "attnum"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- should work"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    ONLY_KW "only"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        NAME_KW "name"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should work. Now c1.name is local and inhcount is 0."
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p2"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        NAME_KW "name"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should be rejected since its inherited"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "gc1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        NAME_KW "name"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should work, and drop gc1.name along"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        NAME_KW "name"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should fail: column does not exist"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "gc1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        NAME_KW "name"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should work and drop the attribute in all tables"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p2"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "height"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- IF EXISTS test"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dropColumnExists"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dropColumnExists"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "non_existing"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dropColumnExists"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IF_EXISTS
        IF_KW "if"
        WHITESPACE " "
        EXISTS_KW "exists"
      WHITESPACE " "
      NAME_REF
        IDENT "non_existing"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--succeed"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "attname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "attinhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "attislocal"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      JOIN
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_attribute"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "pg_class"
              DOT "."
              NAME_REF
                IDENT "oid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "pg_attribute"
              DOT "."
              NAME_REF
                IDENT "attrelid"
          R_PAREN ")"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "relname"
            WHITESPACE " "
            IN_KW "in"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                STRING "'p1'"
              COMMA ","
              LITERAL
                STRING "'p2'"
              COMMA ","
              LITERAL
                STRING "'c1'"
              COMMA ","
              LITERAL
                STRING "'gc1'"
              R_PAREN ")"
          WHITESPACE " "
          AND_KW "and"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "attnum"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "not"
          WHITESPACE " "
          NAME_REF
            IDENT "attisdropped"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "relname"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "attnum"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p2"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test attinhcount tracking with merged columns"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "depth0"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "depth1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "depth0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "depth2"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "depth1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "depth0"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "attrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "attname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "attinhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "attislocal"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_attribute"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "attnum"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          CAST_EXPR
            NAME_REF
              IDENT "attrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          WHITESPACE " "
          IN_KW "in"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'depth0'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'depth1'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'depth2'"
            R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      CAST_EXPR
        CAST_EXPR
          NAME_REF
            IDENT "attrelid"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "attnum"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test renumbering of child-table columns in inherited operations"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "c1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "a1"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "a1"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "f2"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      LITERAL
        STRING "'abc'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      LITERAL
        STRING "'xyz'"
      COMMA ","
      LITERAL
        INT_NUMBER "33"
      COMMA ","
      LITERAL
        INT_NUMBER "0"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- should fail"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      LITERAL
        STRING "'xyz'"
      COMMA ","
      LITERAL
        INT_NUMBER "33"
      COMMA ","
      LITERAL
        INT_NUMBER "22"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "p1"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "a1"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "f2"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "upper"
      ARG_LIST
        L_PAREN "("
        NAME_REF
          IDENT "f2"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "p1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test that operations with a dropped column do not try to reference"
  WHITESPACE "\n"
  COMMENT "-- its datatype"
  WHITESPACE "\n\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "mytype"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "foo"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "mytype"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "foo"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        STRING "'bb'"
      COMMA ","
      LITERAL
        STRING "'cc'"
      COMMA ","
      LITERAL
        STRING "'dd'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mytype"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "foo"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        STRING "'qq'"
      COMMA ","
      LITERAL
        STRING "'rr'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "foo"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "f3"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'zz'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "f3"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "f1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "f3"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Simple tests for alter table column type"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "foo"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "f1"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "TYPE"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "foo"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "f1"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "TYPE"
        WHITESPACE " "
        CHAR_TYPE
          VARCHAR_KW "varchar"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "10"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "anothertab"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "atcol1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "serial8"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "atcol2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BOOLEAN_KW "boolean"
      COMMA ","
      WHITESPACE "\n\t"
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "anothertab_chk"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "atcol1"
          WHITESPACE " "
          LTEQ "<="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "3"
        R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "atcol1"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "atcol2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        DEFAULT_KW "default"
      COMMA ","
      WHITESPACE " "
      LITERAL
        TRUE_KW "true"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "atcol1"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "atcol2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        DEFAULT_KW "default"
      COMMA ","
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "anothertab"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "atcol1"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BOOLEAN_KW "boolean"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "atcol1"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BOOLEAN_KW "boolean"
        WHITESPACE " "
        USING_KW "using"
        WHITESPACE " "
        CAST_EXPR
          NAME_REF
            IDENT "atcol1"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "atcol1"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "anothertab"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "atcol1"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "atcol2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "45"
      COMMA ","
      WHITESPACE " "
      LITERAL
        NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "atcol1"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "atcol2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        DEFAULT_KW "default"
      COMMA ","
      WHITESPACE " "
      LITERAL
        NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "anothertab"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "atcol2"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
        WHITESPACE "\n      "
        USING_KW "using"
        WHITESPACE " "
        CASE_EXPR
          CASE_KW "case"
          WHITESPACE " "
          WHEN_CLAUSE
            WHEN_KW "when"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "atcol2"
              WHITESPACE " "
              IS_KW "is"
              WHITESPACE " "
              LITERAL
                TRUE_KW "true"
            WHITESPACE " "
            THEN_KW "then"
            WHITESPACE " "
            LITERAL
              STRING "'IT WAS TRUE'"
          WHITESPACE "\n                 "
          WHEN_CLAUSE
            WHEN_KW "when"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "atcol2"
              WHITESPACE " "
              IS_KW "is"
              WHITESPACE " "
              LITERAL
                FALSE_KW "false"
            WHITESPACE " "
            THEN_KW "then"
            WHITESPACE " "
            LITERAL
              STRING "'IT WAS FALSE'"
          WHITESPACE "\n                 "
          ELSE_KW "else"
          WHITESPACE " "
          LITERAL
            STRING "'IT WAS NULL!'"
          WHITESPACE " "
          END_KW "end"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "anothertab"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "atcol1"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BOOLEAN_KW "boolean"
        WHITESPACE "\n        "
        USING_KW "using"
        WHITESPACE " "
        CASE_EXPR
          CASE_KW "case"
          WHITESPACE " "
          WHEN_CLAUSE
            WHEN_KW "when"
            WHITESPACE " "
            BIN_EXPR
              BIN_EXPR
                NAME_REF
                  IDENT "atcol1"
                WHITESPACE " "
                PERCENT "%"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "2"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
            WHITESPACE " "
            THEN_KW "then"
            WHITESPACE " "
            LITERAL
              TRUE_KW "true"
          WHITESPACE " "
          ELSE_KW "else"
          WHITESPACE " "
          LITERAL
            FALSE_KW "false"
          WHITESPACE " "
          END_KW "end"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "atcol1"
      WHITESPACE " "
      DROP_DEFAULT
        DROP_KW "drop"
        WHITESPACE " "
        DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "atcol1"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BOOLEAN_KW "boolean"
        WHITESPACE "\n        "
        USING_KW "using"
        WHITESPACE " "
        CASE_EXPR
          CASE_KW "case"
          WHITESPACE " "
          WHEN_CLAUSE
            WHEN_KW "when"
            WHITESPACE " "
            BIN_EXPR
              BIN_EXPR
                NAME_REF
                  IDENT "atcol1"
                WHITESPACE " "
                PERCENT "%"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "2"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
            WHITESPACE " "
            THEN_KW "then"
            WHITESPACE " "
            LITERAL
              TRUE_KW "true"
          WHITESPACE " "
          ELSE_KW "else"
          WHITESPACE " "
          LITERAL
            FALSE_KW "false"
          WHITESPACE " "
          END_KW "end"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "anothertab_chk"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "anothertab_chk"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      IF_EXISTS
        IF_KW "IF"
        WHITESPACE " "
        EXISTS_KW "EXISTS"
      WHITESPACE " "
      NAME_REF
        IDENT "anothertab_chk"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- succeeds"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "atcol1"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BOOLEAN_KW "boolean"
        WHITESPACE "\n        "
        USING_KW "using"
        WHITESPACE " "
        CASE_EXPR
          CASE_KW "case"
          WHITESPACE " "
          WHEN_CLAUSE
            WHEN_KW "when"
            WHITESPACE " "
            BIN_EXPR
              BIN_EXPR
                NAME_REF
                  IDENT "atcol1"
                WHITESPACE " "
                PERCENT "%"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "2"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
            WHITESPACE " "
            THEN_KW "then"
            WHITESPACE " "
            LITERAL
              TRUE_KW "true"
          WHITESPACE " "
          ELSE_KW "else"
          WHITESPACE " "
          LITERAL
            FALSE_KW "false"
          WHITESPACE " "
          END_KW "end"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "anothertab"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test index handling in alter table column type (cf. bugs #15835, #15865)"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "anothertab"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        UNIQUE_CONSTRAINT
          UNIQUE_KW "unique"
      COMMA ","
      WHITESPACE "\n                        "
      COLUMN
        NAME_REF
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f4"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f5"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
    WHITESPACE "\n  "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      EXCLUDE_CONSTRAINT
        EXCLUDE_KW "exclude"
        WHITESPACE " "
        CONSTRAINT_INDEX_METHOD
          USING_KW "using"
          WHITESPACE " "
          NAME_REF
            IDENT "btree"
        WHITESPACE " "
        CONSTRAINT_EXCLUSIONS
          L_PAREN "("
          NAME_REF
            IDENT "f3"
          WHITESPACE " "
          WITH_KW "with"
          WHITESPACE " "
          EQ "="
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
    WHITESPACE "\n  "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      EXCLUDE_CONSTRAINT
        EXCLUDE_KW "exclude"
        WHITESPACE " "
        CONSTRAINT_INDEX_METHOD
          USING_KW "using"
          WHITESPACE " "
          NAME_REF
            IDENT "btree"
        WHITESPACE " "
        CONSTRAINT_EXCLUSIONS
          L_PAREN "("
          NAME_REF
            IDENT "f4"
          WHITESPACE " "
          WITH_KW "with"
          WHITESPACE " "
          EQ "="
          R_PAREN ")"
        WHITESPACE " "
        CONSTRAINT_WHERE_CLAUSE
          WHERE_KW "where"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "f4"
            WHITESPACE " "
            IS_NOT
              IS_KW "is"
              WHITESPACE " "
              NOT_KW "not"
            WHITESPACE " "
            LITERAL
              NULL_KW "null"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
    WHITESPACE "\n  "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      EXCLUDE_CONSTRAINT
        EXCLUDE_KW "exclude"
        WHITESPACE " "
        CONSTRAINT_INDEX_METHOD
          USING_KW "using"
          WHITESPACE " "
          NAME_REF
            IDENT "btree"
        WHITESPACE " "
        CONSTRAINT_EXCLUSIONS
          L_PAREN "("
          NAME_REF
            IDENT "f4"
          WHITESPACE " "
          WITH_KW "with"
          WHITESPACE " "
          EQ "="
          R_PAREN ")"
        WHITESPACE " "
        CONSTRAINT_WHERE_CLAUSE
          WHERE_KW "where"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "f5"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
    WHITESPACE "\n  "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      UNIQUE_CONSTRAINT
        UNIQUE_KW "unique"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "f1"
          COMMA ","
          COLUMN
            NAME_REF
              IDENT "f4"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "f2"
      COMMA ","
      NAME_REF
        IDENT "f3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "f4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "f1"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
    WHITESPACE "\n  "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "f2"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
    COMMA ","
    WHITESPACE "\n  "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "f3"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
    COMMA ","
    WHITESPACE "\n  "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "f4"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "f5"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "anothertab"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- test that USING expressions are parsed before column alter type / drop steps"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "another"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "another"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'one'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'uno'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "another"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'two'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'due'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "another"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'three'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'tre'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "another"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "another"
    WHITESPACE "\n  "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "f1"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
        WHITESPACE " "
        USING_KW "using"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "f2"
          WHITESPACE " "
          CUSTOM_OP
            PIPE "|"
            PIPE "|"
          WHITESPACE " "
          BIN_EXPR
            LITERAL
              STRING "' and '"
            WHITESPACE " "
            CUSTOM_OP
              PIPE "|"
              PIPE "|"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "f3"
              WHITESPACE " "
              CUSTOM_OP
                PIPE "|"
                PIPE "|"
              WHITESPACE " "
              LITERAL
                STRING "' more'"
    COMMA ","
    WHITESPACE "\n  "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "f2"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
        WHITESPACE " "
        USING_KW "using"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          STAR "*"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
    COMMA ","
    WHITESPACE "\n  "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "f3"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "another"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "another"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Create an index that skips WAL, then perform a SET DATA TYPE that skips"
  WHITESPACE "\n"
  COMMENT "-- rewriting the index."
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "skip_wal_skip_rewrite_index"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        CHAR_TYPE
          VARCHAR_KW "varchar"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "10"
            R_PAREN ")"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "skip_wal_skip_rewrite_index"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "c"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        CHAR_TYPE
          VARCHAR_KW "varchar"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "20"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "commit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- We disallow changing table's row type if it's used for storage"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "at_tab1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "at_tab2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "at_tab1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_tab1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "b"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        CHAR_TYPE
          VARCHAR_KW "varchar"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_tab2"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    COMMENT "-- Use of row type in an expression is defended differently"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "at_tab2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "check"
        L_PAREN "("
        BIN_EXPR
          CAST_EXPR
            TUPLE_EXPR
              L_PAREN "("
              NAME_REF
                IDENT "x"
              COMMA ","
              NAME_REF
                IDENT "y"
              R_PAREN ")"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "at_tab1"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                STRING "'42'"
              R_PAREN ")"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "at_tab1"
        R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_tab1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "b"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        CHAR_TYPE
          VARCHAR_KW "varchar"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- allowed, but ..."
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_tab2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        STRING "'42'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- ... this will fail"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_tab1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_tab2"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    COMMENT "-- Check it for a partitioned table, too"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "at_tab1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "at_tab2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "at_tab1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_tab1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "b"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        CHAR_TYPE
          VARCHAR_KW "varchar"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_tab1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_tab2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Alter column type that's part of a partitioned index"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "at_partitioned"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    RANGE_KW "range"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "at_part_1"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_partitioned"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1000"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_partitioned"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "512"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'0.123'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "at_part_2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_part_2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'1.234'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1024"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_partitioned"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "b"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_partitioned"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_partitioned"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "attach"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "at_part_2"
      WHITESPACE " "
      FOR_KW "for"
      WHITESPACE " "
      VALUES_KW "values"
      WHITESPACE " "
      FROM_KW "from"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1000"
      R_PAREN ")"
      WHITESPACE " "
      TO_KW "to"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2000"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_partitioned"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "b"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
        WHITESPACE " "
        USING_KW "using"
        WHITESPACE " "
        CAST_EXPR
          NAME_REF
            IDENT "b"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  NUMERIC_KW "numeric"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_partitioned"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Alter column type when no table rewrite is required"
    WHITESPACE "\n"
    COMMENT "-- Also check that comments are preserved"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "at_partitioned"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          NAME_KW "name"
        WHITESPACE " "
        CHAR_TYPE
          VARCHAR_KW "varchar"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "64"
            R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      UNIQUE_CONSTRAINT
        UNIQUE_KW "unique"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "id"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME_REF
              NAME_KW "name"
          R_PAREN ")"
      R_PAREN ")"
    WHITESPACE "\n  "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "hash"
    L_PAREN "("
    NAME_REF
      IDENT "id"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT_STMT
    COMMENT_KW "comment"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONSTRAINT_KW "constraint"
    WHITESPACE " "
    NAME_REF
      IDENT "at_partitioned_id_name_key"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_partitioned"
    WHITESPACE " "
    IS_KW "is"
    WHITESPACE " "
    LITERAL
      STRING "'parent constraint'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT_STMT
    COMMENT_KW "comment"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_partitioned_id_name_key"
    WHITESPACE " "
    IS_KW "is"
    WHITESPACE " "
    LITERAL
      STRING "'parent index'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "at_partitioned_0"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_partitioned"
    WHITESPACE "\n  "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    WITH_KW "with"
    WHITESPACE " "
    L_PAREN "("
    IDENT "modulus"
    WHITESPACE " "
    INT_NUMBER "2"
    COMMA ","
    WHITESPACE " "
    IDENT "remainder"
    WHITESPACE " "
    INT_NUMBER "0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT_STMT
    COMMENT_KW "comment"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONSTRAINT_KW "constraint"
    WHITESPACE " "
    NAME_REF
      IDENT "at_partitioned_0_id_name_key"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_partitioned_0"
    WHITESPACE " "
    IS_KW "is"
    WHITESPACE " "
    LITERAL
      STRING "'child 0 constraint'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT_STMT
    COMMENT_KW "comment"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_partitioned_0_id_name_key"
    WHITESPACE " "
    IS_KW "is"
    WHITESPACE " "
    LITERAL
      STRING "'child 0 index'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "at_partitioned_1"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_partitioned"
    WHITESPACE "\n  "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    WITH_KW "with"
    WHITESPACE " "
    L_PAREN "("
    IDENT "modulus"
    WHITESPACE " "
    INT_NUMBER "2"
    COMMA ","
    WHITESPACE " "
    IDENT "remainder"
    WHITESPACE " "
    INT_NUMBER "1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT_STMT
    COMMENT_KW "comment"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONSTRAINT_KW "constraint"
    WHITESPACE " "
    NAME_REF
      IDENT "at_partitioned_1_id_name_key"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_partitioned_1"
    WHITESPACE " "
    IS_KW "is"
    WHITESPACE " "
    LITERAL
      STRING "'child 1 constraint'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT_STMT
    COMMENT_KW "comment"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_partitioned_1_id_name_key"
    WHITESPACE " "
    IS_KW "is"
    WHITESPACE " "
    LITERAL
      STRING "'child 1 index'"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_partitioned"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'foo'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_partitioned"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'bar'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "old_oids"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "relname"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "oid"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "oldoid"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "relfilenode"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "oldfilenode"
      WHITESPACE "\n  "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_class"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "where"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "relname"
          WHITESPACE " "
          LIKE_KW "like"
          WHITESPACE " "
          LITERAL
            STRING "'at_partitioned%'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "c"
              DOT "."
              NAME_REF
                IDENT "oid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            NAME_REF
              IDENT "oldoid"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "orig_oid"
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CASE_EXPR
            CASE_KW "case"
            WHITESPACE " "
            NAME_REF
              IDENT "relfilenode"
            WHITESPACE "\n    "
            WHEN_CLAUSE
              WHEN_KW "when"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
              WHITESPACE " "
              THEN_KW "then"
              WHITESPACE " "
              LITERAL
                STRING "'none'"
            WHITESPACE "\n    "
            WHEN_CLAUSE
              WHEN_KW "when"
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "c"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              THEN_KW "then"
              WHITESPACE " "
              LITERAL
                STRING "'own'"
            WHITESPACE "\n    "
            WHEN_CLAUSE
              WHEN_KW "when"
              WHITESPACE " "
              NAME_REF
                IDENT "oldfilenode"
              WHITESPACE " "
              THEN_KW "then"
              WHITESPACE " "
              LITERAL
                STRING "'orig'"
            WHITESPACE "\n    "
            ELSE_KW "else"
            WHITESPACE " "
            LITERAL
              STRING "'OTHER'"
            WHITESPACE "\n    "
            END_KW "end"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            STORAGE_KW "storage"
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "obj_description"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "c"
                DOT "."
                NAME_REF
                  IDENT "oid"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'pg_class'"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            DESC_KW "desc"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "c"
      WHITESPACE " "
      JOIN
        LEFT_KW "left"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "old_oids"
        WHITESPACE " "
        USING_CLAUSE
          USING_KW "using"
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            NAME_REF
              IDENT "relname"
            R_PAREN ")"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "relname"
        WHITESPACE " "
        LIKE_KW "like"
        WHITESPACE " "
        LITERAL
          STRING "'at_partitioned%'"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "relname"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "obj_description"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "oid"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'pg_constraint'"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            DESC_KW "desc"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "conname"
        WHITESPACE " "
        LIKE_KW "like"
        WHITESPACE " "
        LITERAL
          STRING "'at_partitioned%'"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "conname"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_partitioned"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_KW "name"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        CHAR_TYPE
          VARCHAR_KW "varchar"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "127"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "c"
              DOT "."
              NAME_REF
                IDENT "oid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            NAME_REF
              IDENT "oldoid"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "orig_oid"
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CASE_EXPR
            CASE_KW "case"
            WHITESPACE " "
            NAME_REF
              IDENT "relfilenode"
            WHITESPACE "\n    "
            WHEN_CLAUSE
              WHEN_KW "when"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
              WHITESPACE " "
              THEN_KW "then"
              WHITESPACE " "
              LITERAL
                STRING "'none'"
            WHITESPACE "\n    "
            WHEN_CLAUSE
              WHEN_KW "when"
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "c"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              THEN_KW "then"
              WHITESPACE " "
              LITERAL
                STRING "'own'"
            WHITESPACE "\n    "
            WHEN_CLAUSE
              WHEN_KW "when"
              WHITESPACE " "
              NAME_REF
                IDENT "oldfilenode"
              WHITESPACE " "
              THEN_KW "then"
              WHITESPACE " "
              LITERAL
                STRING "'orig'"
            WHITESPACE "\n    "
            ELSE_KW "else"
            WHITESPACE " "
            LITERAL
              STRING "'OTHER'"
            WHITESPACE "\n    "
            END_KW "end"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            STORAGE_KW "storage"
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "obj_description"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "c"
                DOT "."
                NAME_REF
                  IDENT "oid"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'pg_class'"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            DESC_KW "desc"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "c"
      WHITESPACE " "
      JOIN
        LEFT_KW "left"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "old_oids"
        WHITESPACE " "
        USING_CLAUSE
          USING_KW "using"
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            NAME_REF
              IDENT "relname"
            R_PAREN ")"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "relname"
        WHITESPACE " "
        LIKE_KW "like"
        WHITESPACE " "
        LITERAL
          STRING "'at_partitioned%'"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "relname"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "obj_description"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "oid"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'pg_constraint'"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            DESC_KW "desc"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "conname"
        WHITESPACE " "
        LIKE_KW "like"
        WHITESPACE " "
        LITERAL
          STRING "'at_partitioned%'"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "conname"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Don't remove this DROP, it exposes bug #15672"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_partitioned"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- disallow recursive containment of row types"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "recur1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "recur1"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "f2"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "recur1"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "recur1"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "f2"
      WHITESPACE " "
      ARRAY_TYPE
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "recur1"
        L_BRACK "["
        R_BRACK "]"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "array_of_recur1"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    ARRAY_TYPE
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "recur1"
      L_BRACK "["
      R_BRACK "]"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "recur1"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "f2"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "array_of_recur1"
  SEMICOLON ";"
  WHITESPACE " "
  CREATE_TABLE
    COMMENT "-- fails"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "recur2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "recur1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "recur1"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "f2"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "recur2"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "recur1"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "f2"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "recur1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "f2"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "recur2"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- SET STORAGE may need to add a TOAST table"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_storage"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
        WHITESPACE " "
        STORAGE_KW "storage"
        WHITESPACE " "
        IDENT "plain"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "reltoastrelid"
            WHITESPACE " "
            NEQB "<>"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "has_toast_table"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "oid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'test_storage'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_storage"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      SET_STORAGE
        SET_KW "set"
        WHITESPACE " "
        STORAGE_KW "storage"
        WHITESPACE " "
        IDENT "plain"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- rewrite table to remove its TOAST table; need a non-constant column default"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_storage"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
      WHITESPACE " "
      DEFAULT_CONSTRAINT
        DEFAULT_KW "default"
        WHITESPACE " "
        CAST_EXPR
          CALL_EXPR
            NAME_REF
              IDENT "random"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "reltoastrelid"
            WHITESPACE " "
            NEQB "<>"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "has_toast_table"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "oid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'test_storage'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_storage"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      SET_STORAGE
        SET_KW "set"
        WHITESPACE " "
        STORAGE_KW "storage"
        WHITESPACE " "
        DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- re-add TOAST table"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "reltoastrelid"
            WHITESPACE " "
            NEQB "<>"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "has_toast_table"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "oid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'test_storage'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check STORAGE correctness"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_storage_failed"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        STORAGE_KW "storage"
        WHITESPACE " "
        IDENT "extended"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test that SET STORAGE propagates to index correctly"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "test_storage_idx"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_storage"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "b"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_storage"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      SET_STORAGE
        SET_KW "set"
        WHITESPACE " "
        STORAGE_KW "storage"
        WHITESPACE " "
        EXTERNAL_KW "external"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- ALTER COLUMN TYPE with a check constraint and a child table (bug #13779)"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_inh_check"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                FLOAT_KW "float"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CHECK_KW "check"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              FLOAT_NUMBER "10.2"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                FLOAT_KW "float"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_inh_check_child"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_inh_check"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "connoinherit"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "c"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "r"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "relname"
          WHITESPACE " "
          LIKE_KW "like"
          WHITESPACE " "
          LITERAL
            STRING "'test_inh_check%'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            NAME_REF
              IDENT "conrelid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "oid"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_inh_check"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "TYPE"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "connoinherit"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "c"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "r"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "relname"
          WHITESPACE " "
          LIKE_KW "like"
          WHITESPACE " "
          LITERAL
            STRING "'test_inh_check%'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            NAME_REF
              IDENT "conrelid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "oid"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- also try noinherit, local, and local+inherited cases"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_inh_check"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "bnoinherit"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "100"
        R_PAREN ")"
        WHITESPACE " "
        NO_KW "NO"
        WHITESPACE " "
        INHERIT_KW "INHERIT"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_inh_check_child"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "blocal"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1000"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_inh_check_child"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "bmerged"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_inh_check"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "bmerged"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "connoinherit"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "c"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "r"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "relname"
          WHITESPACE " "
          LIKE_KW "like"
          WHITESPACE " "
          LITERAL
            STRING "'test_inh_check%'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            NAME_REF
              IDENT "conrelid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "oid"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_inh_check"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IDENT "b"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "TYPE"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "connoinherit"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "c"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "r"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "relname"
          WHITESPACE " "
          LIKE_KW "like"
          WHITESPACE " "
          LITERAL
            STRING "'test_inh_check%'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            NAME_REF
              IDENT "conrelid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "oid"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- ALTER COLUMN TYPE with different schema in children"
    WHITESPACE "\n"
    COMMENT "-- Bug at https://postgr.es/m/20170102225618.GA10071@telsasoft.com"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_type_diff"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_type_diff_c"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "extra"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                SMALLINT_KW "smallint"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type_diff"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type_diff"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "f2"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type_diff_c"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type_diff"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IDENT "f2"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "TYPE"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
        WHITESPACE " "
        USING_KW "USING"
        WHITESPACE " "
        CAST_EXPR
          NAME_REF
            IDENT "f2"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  BIGINT_KW "bigint"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_type_diff2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "int_two"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int2"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "int_four"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "int_eight"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int8"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_type_diff2_c1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "int_four"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "int_eight"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int8"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "int_two"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_type_diff2_c2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "int_eight"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int8"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "int_two"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int2"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "int_four"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_type_diff2_c3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "int_two"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int2"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "int_four"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "int_eight"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int8"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type_diff2_c1"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "INHERIT"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "test_type_diff2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type_diff2_c2"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "INHERIT"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "test_type_diff2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type_diff2_c3"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "INHERIT"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "test_type_diff2"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type_diff2_c1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type_diff2_c2"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "6"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type_diff2_c3"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "7"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "8"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "9"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type_diff2"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IDENT "int_four"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "TYPE"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int8"
        WHITESPACE " "
        USING_KW "USING"
        WHITESPACE " "
        CAST_EXPR
          NAME_REF
            IDENT "int_four"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "int8"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- whole-row references are disallowed"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type_diff2"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IDENT "int_four"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "TYPE"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
        WHITESPACE " "
        USING_KW "USING"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              IDENT "pg_column_size"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "test_type_diff2"
              R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check for rollback of ANALYZE corrupting table property flags (bug #11638)"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "check_fk_presence_1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "t"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "check_fk_presence_2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        REFERENCES_CONSTRAINT
          REFERENCES_KW "REFERENCES"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "check_fk_presence_1"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "t"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "check_fk_presence_2"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "DROP"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "check_fk_presence_2_id_fkey"
  SEMICOLON ";"
  WHITESPACE "\n"
  ANALYZE_STMT
    ANALYZE_KW "ANALYZE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "check_fk_presence_2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "check_fk_presence_1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "check_fk_presence_2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check column addition within a view (bug #14876)"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "at_base_table"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "stuff"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_base_table"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "23"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'skidoo'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "at_view_1"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "at_base_table"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "bt"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "at_view_2"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "to_json"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "v1"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "j"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "at_view_1"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "v1"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "at_view_2"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "at_view_2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "at_view_1"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
          COMMA ","
          WHITESPACE " "
          TARGET
            BIN_EXPR
              LITERAL
                INT_NUMBER "2"
              PLUS "+"
              LITERAL
                INT_NUMBER "2"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "more"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "at_base_table"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "bt"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "at_view_2"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "at_view_2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_VIEW_STMT
    DROP_KW "drop"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_view_2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "drop"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_view_1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_base_table"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- related case (bug #17811)"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "t1"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "int8_tbl"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "v1"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CAST_EXPR
              LITERAL
                INT_NUMBER "1"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "int8"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "q1"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "v2"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "v1"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "v1"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "with"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "security_barrier"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        TRUE_KW "true"
      R_PAREN ")"
    WHITESPACE "\n  "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "log"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "q1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int8"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "q2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int8"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_RULE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    RULE_KW "rule"
    WHITESPACE " "
    NAME
      IDENT "v1_upd_rule"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "v1"
    WHITESPACE "\n  "
    DO_KW "do"
    WHITESPACE " "
    ALSO_KW "also"
    WHITESPACE " "
    INSERT_STMT
      INSERT_KW "insert"
      WHITESPACE " "
      INTO_KW "into"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "log"
      WHITESPACE " "
      SELECT
        VALUES_KW "values"
        WHITESPACE " "
        L_PAREN "("
        FIELD_EXPR
          NAME_REF
            NEW_KW "new"
          DOT "."
          STAR "*"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "v2"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "q1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "q1"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "q1"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "123"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "log"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "rollback"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check adding a column not itself requiring a rewrite, together with"
  WHITESPACE "\n"
  COMMENT "-- a column requiring a default (bug #16038)"
  WHITESPACE "\n\n"
  COMMENT "-- ensure that rewrites aren't silently optimized away, removing the"
  WHITESPACE "\n"
  COMMENT "-- value of the test"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "check_ddl_rewrite"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "p_tablename"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "regclass"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "p_ddl"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE "\n"
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              BOOLEAN_KW "boolean"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nDECLARE\n    v_relfilenode oid;\nBEGIN\n    v_relfilenode := relfilenode FROM pg_class WHERE oid = p_tablename;\n\n    EXECUTE p_ddl;\n\n    RETURN v_relfilenode <> (SELECT relfilenode FROM pg_class WHERE oid = p_tablename);\nEND;\n$$"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rewrite_test"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rewrite_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'something'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rewrite_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        NULL_KW "NULL"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- empty[12] don't need rewrite, but notempty[12]_rewrite will force one"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "check_ddl_rewrite"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rewrite_test'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                DOLLAR_QUOTED_STRING "$$\n  ALTER TABLE rewrite_test\n      ADD COLUMN empty1 text,\n      ADD COLUMN notempty1_rewrite serial;\n$$"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "check_ddl_rewrite"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rewrite_test'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                DOLLAR_QUOTED_STRING "$$\n    ALTER TABLE rewrite_test\n        ADD COLUMN notempty2_rewrite serial,\n        ADD COLUMN empty2 text;\n$$"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- also check that fast defaults cause no problem, first without rewrite"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "check_ddl_rewrite"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rewrite_test'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                DOLLAR_QUOTED_STRING "$$\n    ALTER TABLE rewrite_test\n        ADD COLUMN empty3 text,\n        ADD COLUMN notempty3_norewrite int default 42;\n$$"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "check_ddl_rewrite"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rewrite_test'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                DOLLAR_QUOTED_STRING "$$\n    ALTER TABLE rewrite_test\n        ADD COLUMN notempty4_norewrite int default 42,\n        ADD COLUMN empty4 text;\n$$"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- then with rewrite"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "check_ddl_rewrite"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rewrite_test'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                DOLLAR_QUOTED_STRING "$$\n    ALTER TABLE rewrite_test\n        ADD COLUMN empty5 text,\n        ADD COLUMN notempty5_norewrite int default 42,\n        ADD COLUMN notempty5_rewrite serial;\n$$"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "check_ddl_rewrite"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'rewrite_test'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                DOLLAR_QUOTED_STRING "$$\n    ALTER TABLE rewrite_test\n        ADD COLUMN notempty6_rewrite serial,\n        ADD COLUMN empty6 text,\n        ADD COLUMN notempty6_norewrite int default 42;\n$$"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- cleanup"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "check_ddl_rewrite"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "regclass"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rewrite_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- lock levels"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  DROP_TYPE_STMT
    DROP_KW "drop"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "lockmodes"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TYPE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "lockmodes"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    ENUM_KW "enum"
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n "
    LITERAL
      STRING "'SIReadLock'"
    WHITESPACE "\n"
    COMMA ","
    LITERAL
      STRING "'AccessShareLock'"
    WHITESPACE "\n"
    COMMA ","
    LITERAL
      STRING "'RowShareLock'"
    WHITESPACE "\n"
    COMMA ","
    LITERAL
      STRING "'RowExclusiveLock'"
    WHITESPACE "\n"
    COMMA ","
    LITERAL
      STRING "'ShareUpdateExclusiveLock'"
    WHITESPACE "\n"
    COMMA ","
    LITERAL
      STRING "'ShareLock'"
    WHITESPACE "\n"
    COMMA ","
    LITERAL
      STRING "'ShareRowExclusiveLock'"
    WHITESPACE "\n"
    COMMA ","
    LITERAL
      STRING "'ExclusiveLock'"
    WHITESPACE "\n"
    COMMA ","
    LITERAL
      STRING "'AccessExclusiveLock'"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_VIEW_STMT
    DROP_KW "drop"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "my_locks"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "my_locks"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CASE_EXPR
              CASE_KW "case"
              WHITESPACE " "
              WHEN_CLAUSE
                WHEN_KW "when"
                WHITESPACE " "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "c"
                    DOT "."
                    NAME_REF
                      IDENT "relname"
                  WHITESPACE " "
                  LIKE_KW "like"
                  WHITESPACE " "
                  LITERAL
                    STRING "'pg_toast%'"
                WHITESPACE " "
                THEN_KW "then"
                WHITESPACE " "
                LITERAL
                  STRING "'pg_toast'"
              WHITESPACE " "
              ELSE_KW "else"
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "c"
                DOT "."
                NAME_REF
                  IDENT "relname"
              WHITESPACE " "
              END_KW "end"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "max"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  NAME_REF
                    MODE_KW "mode"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "lockmodes"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "max_lockmode"
      WHITESPACE "\n"
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_locks"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "l"
        WHITESPACE " "
        JOIN
          JOIN_KW "join"
          WHITESPACE " "
          NAME_REF
            IDENT "pg_class"
          WHITESPACE " "
          ALIAS
            NAME
              IDENT "c"
          WHITESPACE " "
          ON_KW "on"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "l"
              DOT "."
              NAME_REF
                IDENT "relation"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "c"
              DOT "."
              NAME_REF
                IDENT "oid"
      WHITESPACE "\n"
      WHERE_CLAUSE
        WHERE_KW "where"
        WHITESPACE " "
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                NAME_REF
                  IDENT "virtualtransaction"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                PAREN_EXPR
                  L_PAREN "("
                  WHITESPACE "\n        "
                  SELECT
                    SELECT_CLAUSE
                      SELECT_KW "select"
                      WHITESPACE " "
                      TARGET_LIST
                        TARGET
                          NAME_REF
                            IDENT "virtualtransaction"
                    WHITESPACE "\n        "
                    FROM_CLAUSE
                      FROM_KW "from"
                      WHITESPACE " "
                      NAME_REF
                        IDENT "pg_locks"
                    WHITESPACE "\n        "
                    WHERE_CLAUSE
                      WHERE_KW "where"
                      WHITESPACE " "
                      BIN_EXPR
                        NAME_REF
                          IDENT "transactionid"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        CAST_EXPR
                          CALL_EXPR
                            NAME_REF
                              IDENT "pg_current_xact_id"
                            ARG_LIST
                              L_PAREN "("
                              R_PAREN ")"
                          COLON2 "::"
                          PATH_TYPE
                            PATH
                              PATH_SEGMENT
                                NAME_REF
                                  IDENT "xid"
                  R_PAREN ")"
              WHITESPACE "\n"
              AND_KW "and"
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "locktype"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  STRING "'relation'"
            WHITESPACE "\n"
            AND_KW "and"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "relnamespace"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              PAREN_EXPR
                L_PAREN "("
                SELECT
                  SELECT_CLAUSE
                    SELECT_KW "select"
                    WHITESPACE " "
                    TARGET_LIST
                      TARGET
                        NAME_REF
                          IDENT "oid"
                  WHITESPACE " "
                  FROM_CLAUSE
                    FROM_KW "from"
                    WHITESPACE " "
                    NAME_REF
                      IDENT "pg_namespace"
                  WHITESPACE " "
                  WHERE_CLAUSE
                    WHERE_KW "where"
                    WHITESPACE " "
                    BIN_EXPR
                      NAME_REF
                        IDENT "nspname"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      LITERAL
                        STRING "'pg_catalog'"
                R_PAREN ")"
          WHITESPACE "\n"
          AND_KW "and"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "c"
              DOT "."
              NAME_REF
                IDENT "relname"
            WHITESPACE " "
            NEQ "!="
            WHITESPACE " "
            LITERAL
              STRING "'my_locks'"
      WHITESPACE "\n"
      GROUP_BY_CLAUSE
        GROUP_KW "group"
        WHITESPACE " "
        BY_KW "by"
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "c"
          DOT "."
          NAME_REF
            IDENT "relname"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "alterlock"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alterlock"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'foo'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "alterlock2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alterlock2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE " "
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alterlock"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "f2"
      WHITESPACE " "
      SET_STATISTICS
        SET_KW "set"
        WHITESPACE " "
        STATISTICS_KW "statistics"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "150"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "my_locks"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "rollback"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE " "
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alterlock"
    WHITESPACE " "
    DISABLE_CLUSTER
      CLUSTER_KW "cluster"
      WHITESPACE " "
      ON_KW "on"
      WHITESPACE " "
      NAME_REF
        IDENT "alterlock_pkey"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "my_locks"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "commit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE " "
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alterlock"
    WHITESPACE " "
    SET_WITHOUT_CLUSTER
      SET_KW "set"
      WHITESPACE " "
      WITHOUT_KW "without"
      WHITESPACE " "
      CLUSTER_KW "cluster"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "my_locks"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "commit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE " "
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alterlock"
    WHITESPACE " "
    SET_STORAGE_PARAMS
      SET_KW "set"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "fillfactor"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "100"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "my_locks"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "commit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE " "
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alterlock"
    WHITESPACE " "
    RESET_STORAGE_PARAMS
      RESET_KW "reset"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "fillfactor"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "my_locks"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "commit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE " "
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alterlock"
    WHITESPACE " "
    SET_STORAGE_PARAMS
      SET_KW "set"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "toast"
        DOT "."
        PATH_SEGMENT
          NAME_REF
            IDENT "autovacuum_enabled"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              OFF_KW "off"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "my_locks"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "commit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE " "
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alterlock"
    WHITESPACE " "
    SET_STORAGE_PARAMS
      SET_KW "set"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "autovacuum_enabled"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              OFF_KW "off"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "my_locks"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "commit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE " "
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alterlock"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "f2"
      WHITESPACE " "
      SET_OPTIONS
        SET_KW "set"
        WHITESPACE " "
        L_PAREN "("
        NAME
          IDENT "n_distinct"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "my_locks"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "rollback"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test that mixing options with different lock levels works as expected"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE " "
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alterlock"
    WHITESPACE " "
    SET_STORAGE_PARAMS
      SET_KW "set"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "autovacuum_enabled"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              OFF_KW "off"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "fillfactor"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "80"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "my_locks"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "commit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE " "
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alterlock"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "f2"
      WHITESPACE " "
      SET_STORAGE
        SET_KW "set"
        WHITESPACE " "
        STORAGE_KW "storage"
        WHITESPACE " "
        IDENT "extended"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "my_locks"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "rollback"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE " "
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alterlock"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "f2"
      WHITESPACE " "
      SET_DEFAULT
        SET_KW "set"
        WHITESPACE " "
        DEFAULT_KW "default"
        WHITESPACE " "
        LITERAL
          STRING "'x'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "my_locks"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "rollback"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "ttdummy"
    WHITESPACE " "
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TRIGGER_KW "trigger"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$ begin return new; end $$"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TRIGGER_KW "trigger"
    WHITESPACE " "
    NAME
      IDENT "ttdummy"
    WHITESPACE "\n\t"
    BEFORE_KW "before"
    WHITESPACE " "
    DELETE_KW "delete"
    WHITESPACE " "
    OR_KW "or"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alterlock"
    WHITESPACE "\n\t"
    FOR_KW "for"
    WHITESPACE " "
    EACH_KW "each"
    WHITESPACE " "
    ROW_KW "row"
    WHITESPACE "\n\t"
    EXECUTE_KW "execute"
    WHITESPACE " "
    PROCEDURE_KW "procedure"
    WHITESPACE "\n\t"
    CALL_EXPR
      NAME_REF
        IDENT "ttdummy"
      WHITESPACE " "
      ARG_LIST
        L_PAREN "("
        LITERAL
          INT_NUMBER "1"
        COMMA ","
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "my_locks"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "rollback"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "my_locks"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alterlock2"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        FOREIGN_KW "foreign"
        WHITESPACE " "
        KEY_KW "key"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "f1"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "references"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "alterlock"
        WHITESPACE " "
        L_PAREN "("
        NAME_REF
          IDENT "f1"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "my_locks"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "rollback"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alterlock2"
    WHITESPACE "\n"
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "alterlock2nv"
        WHITESPACE " "
        FOREIGN_KW "foreign"
        WHITESPACE " "
        KEY_KW "key"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "f1"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "references"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "alterlock"
        WHITESPACE " "
        L_PAREN "("
        NAME_REF
          IDENT "f1"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "NOT"
        WHITESPACE " "
        VALID_KW "VALID"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "my_locks"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "commit"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alterlock2"
    WHITESPACE " "
    VALIDATE_CONSTRAINT
      VALIDATE_KW "validate"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "alterlock2nv"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "my_locks"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "rollback"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "my_locks"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CASE_EXPR
              CASE_KW "case"
              WHITESPACE " "
              WHEN_CLAUSE
                WHEN_KW "when"
                WHITESPACE " "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "c"
                    DOT "."
                    NAME_REF
                      IDENT "relname"
                  WHITESPACE " "
                  LIKE_KW "like"
                  WHITESPACE " "
                  LITERAL
                    STRING "'pg_toast%'"
                WHITESPACE " "
                THEN_KW "then"
                WHITESPACE " "
                LITERAL
                  STRING "'pg_toast'"
              WHITESPACE " "
              ELSE_KW "else"
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "c"
                DOT "."
                NAME_REF
                  IDENT "relname"
              WHITESPACE " "
              END_KW "end"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "max"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  NAME_REF
                    MODE_KW "mode"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "lockmodes"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "max_lockmode"
      WHITESPACE "\n"
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_locks"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "l"
        WHITESPACE " "
        JOIN
          JOIN_KW "join"
          WHITESPACE " "
          NAME_REF
            IDENT "pg_class"
          WHITESPACE " "
          ALIAS
            NAME
              IDENT "c"
          WHITESPACE " "
          ON_KW "on"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "l"
              DOT "."
              NAME_REF
                IDENT "relation"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "c"
              DOT "."
              NAME_REF
                IDENT "oid"
      WHITESPACE "\n"
      WHERE_CLAUSE
        WHERE_KW "where"
        WHITESPACE " "
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                NAME_REF
                  IDENT "virtualtransaction"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                PAREN_EXPR
                  L_PAREN "("
                  WHITESPACE "\n        "
                  SELECT
                    SELECT_CLAUSE
                      SELECT_KW "select"
                      WHITESPACE " "
                      TARGET_LIST
                        TARGET
                          NAME_REF
                            IDENT "virtualtransaction"
                    WHITESPACE "\n        "
                    FROM_CLAUSE
                      FROM_KW "from"
                      WHITESPACE " "
                      NAME_REF
                        IDENT "pg_locks"
                    WHITESPACE "\n        "
                    WHERE_CLAUSE
                      WHERE_KW "where"
                      WHITESPACE " "
                      BIN_EXPR
                        NAME_REF
                          IDENT "transactionid"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        CAST_EXPR
                          CALL_EXPR
                            NAME_REF
                              IDENT "pg_current_xact_id"
                            ARG_LIST
                              L_PAREN "("
                              R_PAREN ")"
                          COLON2 "::"
                          PATH_TYPE
                            PATH
                              PATH_SEGMENT
                                NAME_REF
                                  IDENT "xid"
                  R_PAREN ")"
              WHITESPACE "\n"
              AND_KW "and"
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "locktype"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  STRING "'relation'"
            WHITESPACE "\n"
            AND_KW "and"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "relnamespace"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              PAREN_EXPR
                L_PAREN "("
                SELECT
                  SELECT_CLAUSE
                    SELECT_KW "select"
                    WHITESPACE " "
                    TARGET_LIST
                      TARGET
                        NAME_REF
                          IDENT "oid"
                  WHITESPACE " "
                  FROM_CLAUSE
                    FROM_KW "from"
                    WHITESPACE " "
                    NAME_REF
                      IDENT "pg_namespace"
                  WHITESPACE " "
                  WHERE_CLAUSE
                    WHERE_KW "where"
                    WHITESPACE " "
                    BIN_EXPR
                      NAME_REF
                        IDENT "nspname"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      LITERAL
                        STRING "'pg_catalog'"
                R_PAREN ")"
          WHITESPACE "\n"
          AND_KW "and"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "c"
              DOT "."
              NAME_REF
                IDENT "relname"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'my_locks'"
      WHITESPACE "\n"
      GROUP_BY_CLAUSE
        GROUP_KW "group"
        WHITESPACE " "
        BY_KW "by"
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "c"
          DOT "."
          NAME_REF
            IDENT "relname"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- raise exception"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "my_locks"
    WHITESPACE " "
    SET_STORAGE_PARAMS
      SET_KW "set"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "autovacuum_enabled"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_VIEW_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "my_locks"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "autovacuum_enabled"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "my_locks"
    WHITESPACE " "
    RESET_STORAGE_PARAMS
      RESET_KW "reset"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "autovacuum_enabled"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_VIEW_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "my_locks"
    WHITESPACE " "
    RESET_KW "reset"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "autovacuum_enabled"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_VIEW_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "my_locks"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "security_barrier"
    EQ "="
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            OFF_KW "off"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "my_locks"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_VIEW_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "my_locks"
    WHITESPACE " "
    RESET_KW "reset"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "security_barrier"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "rollback"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- this test intentionally applies the ALTER TABLE command against a view, but"
  WHITESPACE "\n"
  COMMENT "-- uses a view option so we expect this to succeed. This form of SQL is"
  WHITESPACE "\n"
  COMMENT "-- accepted for historical reasons, as shown in the docs for ALTER VIEW"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "my_locks"
    WHITESPACE " "
    SET_STORAGE_PARAMS
      SET_KW "set"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "security_barrier"
      EQ "="
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              OFF_KW "off"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "my_locks"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "my_locks"
    WHITESPACE " "
    RESET_STORAGE_PARAMS
      RESET_KW "reset"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "security_barrier"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "rollback"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- cleanup"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alterlock2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alterlock"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "drop"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "my_locks"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TYPE_STMT
    DROP_KW "drop"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "lockmodes"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- alter function"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_strict"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TEXT_KW "text"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE "\n    "
        LITERAL
          STRING "'select coalesce($1, ''got passed a null'');'"
      WHITESPACE "\n    "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE " "
      STRICT_FUNC_OPTION
        RETURNS_KW "returns"
        WHITESPACE " "
        NULL_KW "null"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        NULL_KW "null"
        WHITESPACE " "
        INPUT_KW "input"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "test_strict"
            ARG_LIST
              L_PAREN "("
              LITERAL
                NULL_KW "NULL"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_FUNCTION_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_strict"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE " "
    FUNC_OPTION_LIST
      STRICT_FUNC_OPTION
        CALLED_KW "called"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        NULL_KW "null"
        WHITESPACE " "
        INPUT_KW "input"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "test_strict"
            ARG_LIST
              L_PAREN "("
              LITERAL
                NULL_KW "NULL"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "non_strict"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TEXT_KW "text"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE "\n    "
        LITERAL
          STRING "'select coalesce($1, ''got passed a null'');'"
      WHITESPACE "\n    "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE " "
      STRICT_FUNC_OPTION
        CALLED_KW "called"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        NULL_KW "null"
        WHITESPACE " "
        INPUT_KW "input"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "non_strict"
            ARG_LIST
              L_PAREN "("
              LITERAL
                NULL_KW "NULL"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_FUNCTION_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "non_strict"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE " "
    FUNC_OPTION_LIST
      STRICT_FUNC_OPTION
        RETURNS_KW "returns"
        WHITESPACE " "
        NULL_KW "null"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        NULL_KW "null"
        WHITESPACE " "
        INPUT_KW "input"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "non_strict"
            ARG_LIST
              L_PAREN "("
              LITERAL
                NULL_KW "NULL"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- alter object set schema"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_SCHEMA_STMT
    CREATE_KW "create"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    NAME
      IDENT "alter1"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_SCHEMA_STMT
    CREATE_KW "create"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    NAME
      IDENT "alter2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "t1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "serial"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CHECK_KW "check"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "f2"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "v1"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "alter1"
          DOT "."
          NAME_REF
            IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "plus1"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          STRING "'select $1+1'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "alter1"
  ERROR
    DOT "."
  ERROR
    IDENT "posint"
  WHITESPACE " "
  ERROR
    INTEGER_KW "integer"
  WHITESPACE " "
  ERROR
    CHECK_KW "check"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    VALUE_KW "value"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    INT_NUMBER "0"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TYPE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "ctype"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "f1"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "f2"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            TEXT_KW "text"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "same"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "alter1"
  ERROR
    DOT "."
  ERROR
    IDENT "ctype"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "alter1"
  ERROR
    DOT "."
  ERROR
    IDENT "ctype"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    RETURNS_KW "returns"
  WHITESPACE " "
  ERROR
    BOOLEAN_KW "boolean"
  WHITESPACE " "
  ERROR
    LANGUAGE_KW "language"
  WHITESPACE " "
  ERROR
    SQL_KW "sql"
  WHITESPACE "\n"
  ERROR
    AS_KW "as"
  WHITESPACE " "
  ERROR
    STRING "'select $1.f1 is not distinct from $2.f1 and $1.f2 is not distinct from $2.f2'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_OPERATOR_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OPERATOR_KW "operator"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
    EQ "="
    L_PAREN "("
    NAME
      PROCEDURE_KW "procedure"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "alter1"
        DOT "."
        PATH_SEGMENT
          NAME_REF
            IDENT "same"
    COMMA ","
    WHITESPACE " "
    NAME
      IDENT "leftarg"
    WHITESPACE "  "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "alter1"
        DOT "."
        PATH_SEGMENT
          NAME_REF
            IDENT "ctype"
    COMMA ","
    WHITESPACE " "
    NAME
      IDENT "rightarg"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "alter1"
        DOT "."
        PATH_SEGMENT
          NAME_REF
            IDENT "ctype"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_OPERATOR_CLASS_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OPERATOR_KW "operator"
    WHITESPACE " "
    CLASS_KW "class"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "ctype_hash_ops"
    WHITESPACE " "
    DEFAULT_KW "default"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "alter1"
        DOT "."
        PATH_SEGMENT
          NAME_REF
            IDENT "ctype"
    WHITESPACE " "
    USING_KW "using"
    WHITESPACE " "
    NAME_REF
      IDENT "hash"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n  "
    OPERATOR_KW "operator"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
    EQ "="
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "alter1"
        DOT "."
        PATH_SEGMENT
          NAME_REF
            IDENT "ctype"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "alter1"
        DOT "."
        PATH_SEGMENT
          NAME_REF
            IDENT "ctype"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_CONVERSION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    CONVERSION_KW "conversion"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "latin1_to_utf8"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    LITERAL
      STRING "'latin1'"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    LITERAL
      STRING "'utf8'"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "iso8859_1_to_utf8"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TEXT_KW "text"
    WHITESPACE " "
    SEARCH_KW "search"
    WHITESPACE " "
    PARSER_KW "parser"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "prs"
    L_PAREN "("
    NAME
      START_KW "start"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "prsd_start"
    COMMA ","
    WHITESPACE " "
    NAME
      IDENT "gettoken"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "prsd_nexttoken"
    COMMA ","
    WHITESPACE " "
    NAME
      END_KW "end"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "prsd_end"
    COMMA ","
    WHITESPACE " "
    NAME
      IDENT "lextypes"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "prsd_lextype"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TEXT_KW "text"
    WHITESPACE " "
    SEARCH_KW "search"
    WHITESPACE " "
    CONFIGURATION_KW "configuration"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "cfg"
    L_PAREN "("
    NAME
      PARSER_KW "parser"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "alter1"
        DOT "."
        PATH_SEGMENT
          NAME_REF
            IDENT "prs"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TEXT_KW "text"
    WHITESPACE " "
    SEARCH_KW "search"
    WHITESPACE " "
    TEMPLATE_KW "template"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "tmpl"
    L_PAREN "("
    NAME
      IDENT "init"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "dsimple_init"
    COMMA ","
    WHITESPACE " "
    NAME
      IDENT "lexize"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "dsimple_lexize"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TEXT_SEARCH_PARSER_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TEXT_KW "text"
    WHITESPACE " "
    SEARCH_KW "search"
    WHITESPACE " "
    DICTIONARY_KW "dictionary"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "dict"
    L_PAREN "("
    NAME
      TEMPLATE_KW "template"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "alter1"
        DOT "."
        PATH_SEGMENT
          NAME_REF
            IDENT "tmpl"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "11"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "12"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    SET_SCHEMA
      SET_KW "set"
      WHITESPACE " "
      SCHEMA_KW "schema"
      WHITESPACE " "
      NAME_REF
        IDENT "alter1"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- no-op, same schema"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    SET_SCHEMA
      SET_KW "set"
      WHITESPACE " "
      SCHEMA_KW "schema"
      WHITESPACE " "
      NAME_REF
        IDENT "alter2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "v1"
    WHITESPACE " "
    SET_SCHEMA
      SET_KW "set"
      WHITESPACE " "
      SCHEMA_KW "schema"
      WHITESPACE " "
      NAME_REF
        IDENT "alter2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_FUNCTION_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "plus1"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    NAME_REF
      IDENT "alter2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "posint"
    WHITESPACE " "
    SET_SCHEMA
      SET_KW "set"
      WHITESPACE " "
      SCHEMA_KW "schema"
      WHITESPACE " "
      NAME_REF
        IDENT "alter2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_OPERATOR_CLASS_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    OPERATOR_KW "operator"
    WHITESPACE " "
    CLASS_KW "class"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "ctype_hash_ops"
    WHITESPACE " "
    USING_KW "using"
    WHITESPACE " "
    NAME_REF
      IDENT "hash"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    NAME_REF
      IDENT "alter2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_OPERATOR_FAMILY_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    OPERATOR_KW "operator"
    WHITESPACE " "
    FAMILY_KW "family"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "ctype_hash_ops"
    WHITESPACE " "
    USING_KW "using"
    WHITESPACE " "
    NAME_REF
      IDENT "hash"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    NAME_REF
      IDENT "alter2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    OPERATOR_KW "operator"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
    EQ "="
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "alter1"
        DOT "."
        PATH_SEGMENT
          NAME_REF
            IDENT "ctype"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "alter1"
        DOT "."
        PATH_SEGMENT
          NAME_REF
            IDENT "ctype"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    NAME_REF
      IDENT "alter2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_FUNCTION_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "same"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "alter1"
  ERROR
    DOT "."
  ERROR
    IDENT "ctype"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "alter1"
  ERROR
    DOT "."
  ERROR
    IDENT "ctype"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      SCHEMA_KW "schema"
    WHITESPACE " "
    IDENT "alter2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "ctype"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    NAME_REF
      IDENT "alter1"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- no-op, same schema"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "ctype"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    NAME_REF
      IDENT "alter2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_CONVERSION_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    CONVERSION_KW "conversion"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "latin1_to_utf8"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    NAME_REF
      IDENT "alter2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TEXT_SEARCH_PARSER_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TEXT_KW "text"
    WHITESPACE " "
    SEARCH_KW "search"
    WHITESPACE " "
    PARSER_KW "parser"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "prs"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    NAME_REF
      IDENT "alter2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TEXT_SEARCH_CONFIGURATION_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TEXT_KW "text"
    WHITESPACE " "
    SEARCH_KW "search"
    WHITESPACE " "
    CONFIGURATION_KW "configuration"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "cfg"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alter2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TEXT_SEARCH_TEMPLATE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TEXT_KW "text"
    WHITESPACE " "
    SEARCH_KW "search"
    WHITESPACE " "
    TEMPLATE_KW "template"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "tmpl"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    NAME
      IDENT "alter2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TEXT_SEARCH_DICTIONARY_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TEXT_KW "text"
    WHITESPACE " "
    SEARCH_KW "search"
    WHITESPACE " "
    DICTIONARY_KW "dictionary"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "dict"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    NAME
      IDENT "alter2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- this should succeed because nothing is left in alter1"
  WHITESPACE "\n"
  DROP_SCHEMA_STMT
    DROP_KW "drop"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    NAME
      IDENT "alter1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter2"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "13"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter2"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f2"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "14"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "alter2"
        DOT "."
        NAME_REF
          IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "alter2"
        DOT "."
        NAME_REF
          IDENT "v1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "alter2"
              DOT "."
              NAME_REF
                IDENT "plus1"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "41"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- clean up"
  WHITESPACE "\n"
  DROP_SCHEMA_STMT
    DROP_KW "drop"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    NAME
      IDENT "alter2"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- composite types"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_TYPE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_type"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "nosuchtype"
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME
      IDENT "b"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type"
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME
      IDENT "b"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type"
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME
      IDENT "b"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type"
    WHITESPACE " "
    ALTER_KW "ALTER"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    DATA_KW "DATA"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    CHAR_TYPE
      VARCHAR_KW "varchar"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type"
    WHITESPACE " "
    ALTER_KW "ALTER"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    DATA_KW "DATA"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INTEGER_KW "integer"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type"
    WHITESPACE " "
    DROP_KW "DROP"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type"
    WHITESPACE " "
    DROP_KW "DROP"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "c"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type"
    WHITESPACE " "
    DROP_KW "DROP"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    NAME_REF
      IDENT "c"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type"
    WHITESPACE " "
    DROP_KW "DROP"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    COMMA ","
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME
      IDENT "d"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    NAME
      IDENT "aa"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "d"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    NAME
      IDENT "dd"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TYPE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TYPE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_type1"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            TEXT_KW "text"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_tbl1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "test_type1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type1"
    WHITESPACE " "
    ALTER_KW "ALTER"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    CHAR_TYPE
      VARCHAR_KW "varchar"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_tbl1"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_tbl1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "test_tbl1_idx"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_tbl1"
    INDEX_PARAMS
      L_PAREN "("
      PAREN_EXPR
        L_PAREN "("
        CAST_EXPR
          CALL_EXPR
            NAME_REF
              ROW_KW "row"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "x"
              COMMA ","
              NAME_REF
                IDENT "y"
              R_PAREN ")"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "test_type1"
        R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type1"
    WHITESPACE " "
    ALTER_KW "ALTER"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    CHAR_TYPE
      VARCHAR_KW "varchar"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_tbl1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TYPE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TYPE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_type2"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            TEXT_KW "text"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_tbl2"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "test_type2"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_tbl2_subclass"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_tbl2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type2"
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME
      IDENT "c"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type2"
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME
      IDENT "c"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            TEXT_KW "text"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type2"
    WHITESPACE " "
    ALTER_KW "ALTER"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    CHAR_TYPE
      VARCHAR_KW "varchar"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type2"
    WHITESPACE " "
    ALTER_KW "ALTER"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    CHAR_TYPE
      VARCHAR_KW "varchar"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type2"
    WHITESPACE " "
    DROP_KW "DROP"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type2"
    WHITESPACE " "
    DROP_KW "DROP"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type2"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    NAME
      IDENT "aa"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type2"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    NAME
      IDENT "aa"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_tbl2_subclass"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_tbl2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TYPE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TYPE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_typex"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            TEXT_KW "text"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_tblx"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "test_typex"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CHECK_KW "check"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            FIELD_EXPR
              PAREN_EXPR
                L_PAREN "("
                NAME_REF
                  IDENT "y"
                R_PAREN ")"
              DOT "."
              NAME_REF
                IDENT "a"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_typex"
    WHITESPACE " "
    DROP_KW "DROP"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_typex"
    WHITESPACE " "
    DROP_KW "DROP"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_tblx"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TYPE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_typex"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- This test isn't that interesting on its own, but the purpose is to leave"
  WHITESPACE "\n"
  COMMENT "-- behind a table to test pg_upgrade with. The table has a composite type"
  WHITESPACE "\n"
  COMMENT "-- column in it, and the composite type has a dropped attribute."
  WHITESPACE "\n"
  CREATE_TYPE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_type3"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_tbl3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'(1)'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "test_type3"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type3"
    WHITESPACE " "
    DROP_KW "DROP"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    COMMA ","
    WHITESPACE " "
    ADD_KW "ADD"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME
      IDENT "b"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TYPE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_type_empty"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    L_PAREN "("
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TYPE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_type_empty"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- typed tables: OF / NOT OF"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_TYPE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tt_t0"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "z"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "inet"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "x"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "y"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            NUMERIC_KW "numeric"
      L_PAREN "("
      ARG_LIST
        ARG
          LITERAL
            INT_NUMBER "8"
        COMMA ","
        ARG
          LITERAL
            INT_NUMBER "2"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt_t0"
    WHITESPACE " "
    DROP_KW "DROP"
    WHITESPACE " "
    ATTRIBUTE_KW "ATTRIBUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "z"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tt0"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "NOT"
          WHITESPACE " "
          NULL_KW "NULL"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "8"
            COMMA ","
            ARG
              LITERAL
                INT_NUMBER "2"
            R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\t"
  CREATE_TABLE
    COMMENT "-- OK"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tt1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\t\t\t\t\t"
  CREATE_TABLE
    COMMENT "-- wrong base type"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tt2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "9"
            COMMA ","
            ARG
              LITERAL
                INT_NUMBER "2"
            R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\t\t\t"
  CREATE_TABLE
    COMMENT "-- wrong typmod"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tt3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "8"
            COMMA ","
            ARG
              LITERAL
                INT_NUMBER "2"
            R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\t\t\t"
  CREATE_TABLE
    COMMENT "-- wrong column order"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tt4"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\t\t\t\t\t\t\t"
  CREATE_TABLE
    COMMENT "-- too few columns"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tt5"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "8"
            COMMA ","
            ARG
              LITERAL
                INT_NUMBER "2"
            R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "z"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\t"
  CREATE_TABLE
    COMMENT "-- too few columns"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tt6"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\t\t\t\t\t"
  CREATE_TABLE
    COMMENT "-- can't have a parent"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tt7"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "q"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "8"
            COMMA ","
            ARG
              LITERAL
                INT_NUMBER "2"
            R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt7"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "DROP"
      WHITESPACE " "
      NAME_REF
        IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\t\t\t\t\t\t\t\t"
  COMMENT "-- OK"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt0"
    WHITESPACE " "
    OF_TYPE
      OF_KW "OF"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "tt_t0"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt1"
    WHITESPACE " "
    OF_TYPE
      OF_KW "OF"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "tt_t0"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt2"
    WHITESPACE " "
    OF_TYPE
      OF_KW "OF"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "tt_t0"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt3"
    WHITESPACE " "
    OF_TYPE
      OF_KW "OF"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "tt_t0"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt4"
    WHITESPACE " "
    OF_TYPE
      OF_KW "OF"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "tt_t0"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt5"
    WHITESPACE " "
    OF_TYPE
      OF_KW "OF"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "tt_t0"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt6"
    WHITESPACE " "
    OF_TYPE
      OF_KW "OF"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "tt_t0"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt7"
    WHITESPACE " "
    OF_TYPE
      OF_KW "OF"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "tt_t0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TYPE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tt_t1"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "x"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "y"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            NUMERIC_KW "numeric"
      L_PAREN "("
      ARG_LIST
        ARG
          LITERAL
            INT_NUMBER "8"
        COMMA ","
        ARG
          LITERAL
            INT_NUMBER "2"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt7"
    WHITESPACE " "
    OF_TYPE
      OF_KW "OF"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "tt_t1"
  SEMICOLON ";"
  WHITESPACE "\t\t\t"
  COMMENT "-- reassign an already-typed table"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt7"
    WHITESPACE " "
    NOT_OF
      NOT_KW "NOT"
      WHITESPACE " "
      OF_KW "OF"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- make sure we can drop a constraint on the parent but it remains on the child"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_drop_constr_parent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CHECK_KW "CHECK"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "c"
            WHITESPACE " "
            IS_NOT
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_drop_constr_child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_drop_constr_parent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    ONLY_KW "ONLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_drop_constr_parent"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "DROP"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "\"test_drop_constr_parent_c_check\""
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should fail"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_drop_constr_child"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        NULL_KW "NULL"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_drop_constr_parent"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- IF EXISTS test"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt8"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "f"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt8"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "xxx"
        WHITESPACE " "
        PRIMARY_KW "PRIMARY"
        WHITESPACE " "
        KEY_KW "KEY"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "f"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt8"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BETWEEN_EXPR
          NAME_REF
            IDENT "f"
          WHITESPACE " "
          BETWEEN_KW "BETWEEN"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt8"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IDENT "f"
      WHITESPACE " "
      SET_DEFAULT
        SET_KW "SET"
        WHITESPACE " "
        DEFAULT_KW "DEFAULT"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt8"
    WHITESPACE " "
    RENAME_COLUMN
      RENAME_KW "RENAME"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "f"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt8"
    WHITESPACE " "
    SET_SCHEMA
      SET_KW "SET"
      WHITESPACE " "
      SCHEMA_KW "SCHEMA"
      WHITESPACE " "
      NAME_REF
        IDENT "alter2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tt8"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_SCHEMA_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SCHEMA_KW "SCHEMA"
    WHITESPACE " "
    NAME
      IDENT "alter2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt8"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "f"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt8"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "xxx"
        WHITESPACE " "
        PRIMARY_KW "PRIMARY"
        WHITESPACE " "
        KEY_KW "KEY"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "f"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt8"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BETWEEN_EXPR
          NAME_REF
            IDENT "f"
          WHITESPACE " "
          BETWEEN_KW "BETWEEN"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt8"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IDENT "f"
      WHITESPACE " "
      SET_DEFAULT
        SET_KW "SET"
        WHITESPACE " "
        DEFAULT_KW "DEFAULT"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt8"
    WHITESPACE " "
    RENAME_COLUMN
      RENAME_KW "RENAME"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "f"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt8"
    WHITESPACE " "
    SET_SCHEMA
      SET_KW "SET"
      WHITESPACE " "
      SCHEMA_KW "SCHEMA"
      WHITESPACE " "
      NAME_REF
        IDENT "alter2"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter2"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "tt8"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_SCHEMA_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    SCHEMA_KW "SCHEMA"
    WHITESPACE " "
    NAME
      IDENT "alter2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- Check conflicts between index and CHECK constraint names"
    WHITESPACE "\n"
    COMMENT "--"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tt9"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt9"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "CHECK"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt9"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "CHECK"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "2"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- picks nonconflicting name"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt9"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "foo"
        WHITESPACE " "
        CHECK_KW "CHECK"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "3"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt9"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "foo"
        WHITESPACE " "
        CHECK_KW "CHECK"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "4"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail, dup name"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt9"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      UNIQUE_CONSTRAINT
        UNIQUE_KW "UNIQUE"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "c"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt9"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      UNIQUE_CONSTRAINT
        UNIQUE_KW "UNIQUE"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "c"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- picks nonconflicting name"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt9"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      UNIQUE_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "tt9_c_key"
        WHITESPACE " "
        UNIQUE_KW "UNIQUE"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "c"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail, dup name"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt9"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      UNIQUE_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "foo"
        WHITESPACE " "
        UNIQUE_KW "UNIQUE"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "c"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail, dup name"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt9"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "tt9_c_key"
        WHITESPACE " "
        CHECK_KW "CHECK"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "5"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail, dup name"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt9"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "tt9_c_key2"
        WHITESPACE " "
        CHECK_KW "CHECK"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "6"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt9"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      UNIQUE_CONSTRAINT
        UNIQUE_KW "UNIQUE"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "c"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- picks nonconflicting name"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tt9"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  CREATE_TABLE
    COMMENT "-- Check that comments on constraints and indexes are not lost at ALTER TABLE."
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "comment_test"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n  "
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n  "
      FOREIGN_KEY_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "id_notnull_constraint"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              NOT_KW "not"
  WHITESPACE " "
  ERROR
    NULL_KW "null"
  WHITESPACE " "
  ERROR
    IDENT "id"
  ERROR
    COMMA ","
  WHITESPACE "\n  "
  ERROR
    IDENT "positive_col"
  WHITESPACE " "
  ERROR
    INT_KW "int"
  WHITESPACE " "
  ERROR
    CHECK_KW "CHECK"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "positive_col"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    INT_NUMBER "0"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE "\n  "
  ERROR
    IDENT "indexed_col"
  WHITESPACE " "
  ERROR
    INT_KW "int"
  ERROR
    COMMA ","
  WHITESPACE "\n  "
  ERROR
    CONSTRAINT_KW "CONSTRAINT"
  WHITESPACE " "
  ERROR
    IDENT "comment_test_pk"
  WHITESPACE " "
  ERROR
    PRIMARY_KW "PRIMARY"
  WHITESPACE " "
  ERROR
    KEY_KW "KEY"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "id"
  ERROR
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "comment_test_index"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comment_test"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "indexed_col"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT_STMT
    COMMENT_KW "COMMENT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    COLUMN_KW "COLUMN"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "comment_test"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "id"
    WHITESPACE " "
    IS_KW "IS"
    WHITESPACE " "
    LITERAL
      STRING "'Column ''id'' on comment_test'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT_STMT
    COMMENT_KW "COMMENT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comment_test_index"
    WHITESPACE " "
    IS_KW "IS"
    WHITESPACE " "
    LITERAL
      STRING "'Simple index on comment_test'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT_STMT
    COMMENT_KW "COMMENT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    CONSTRAINT_KW "CONSTRAINT"
    WHITESPACE " "
    NAME_REF
      IDENT "comment_test_positive_col_check"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comment_test"
    WHITESPACE " "
    IS_KW "IS"
    WHITESPACE " "
    LITERAL
      STRING "'CHECK constraint on comment_test.positive_col'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT_STMT
    COMMENT_KW "COMMENT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    CONSTRAINT_KW "CONSTRAINT"
    WHITESPACE " "
    NAME_REF
      IDENT "comment_test_pk"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comment_test"
    WHITESPACE " "
    IS_KW "IS"
    WHITESPACE " "
    LITERAL
      STRING "'PRIMARY KEY constraint of comment_test'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT_STMT
    COMMENT_KW "COMMENT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    CONSTRAINT_KW "CONSTRAINT"
    WHITESPACE " "
    NAME_REF
      IDENT "id_notnull_constraint"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comment_test"
    WHITESPACE " "
    IS_KW "IS"
    WHITESPACE " "
    LITERAL
      STRING "'NOT NULL constraint of comment_test'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT_STMT
    COMMENT_KW "COMMENT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comment_test_pk"
    WHITESPACE " "
    IS_KW "IS"
    WHITESPACE " "
    LITERAL
      STRING "'Index backing the PRIMARY KEY of comment_test'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "col_description"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'comment_test'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            COMMENT_KW "comment"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "indexrelid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            INDEX_KW "index"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "obj_description"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "indexrelid"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'pg_class'"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            COMMENT_KW "comment"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_index"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "indrelid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'comment_test'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "conname"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            CONSTRAINT_KW "constraint"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "obj_description"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "oid"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'pg_constraint'"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            COMMENT_KW "comment"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "conrelid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'comment_test'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Change the datatype of all the columns. ALTER TABLE is optimized to not"
  WHITESPACE "\n"
  COMMENT "-- rebuild an index if the new data type is binary compatible with the old"
  WHITESPACE "\n"
  COMMENT "-- one. Check do a dummy ALTER TABLE that doesn't change the datatype"
  WHITESPACE "\n"
  COMMENT "-- first, to test that no-op codepath, and another one that does."
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comment_test"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IDENT "indexed_col"
      WHITESPACE " "
      SET_TYPE
        SET_KW "SET"
        WHITESPACE " "
        DATA_KW "DATA"
        WHITESPACE " "
        TYPE_KW "TYPE"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comment_test"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IDENT "indexed_col"
      WHITESPACE " "
      SET_TYPE
        SET_KW "SET"
        WHITESPACE " "
        DATA_KW "DATA"
        WHITESPACE " "
        TYPE_KW "TYPE"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comment_test"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IDENT "id"
      WHITESPACE " "
      SET_TYPE
        SET_KW "SET"
        WHITESPACE " "
        DATA_KW "DATA"
        WHITESPACE " "
        TYPE_KW "TYPE"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comment_test"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IDENT "id"
      WHITESPACE " "
      SET_TYPE
        SET_KW "SET"
        WHITESPACE " "
        DATA_KW "DATA"
        WHITESPACE " "
        TYPE_KW "TYPE"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comment_test"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IDENT "positive_col"
      WHITESPACE " "
      SET_TYPE
        SET_KW "SET"
        WHITESPACE " "
        DATA_KW "DATA"
        WHITESPACE " "
        TYPE_KW "TYPE"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comment_test"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IDENT "positive_col"
      WHITESPACE " "
      SET_TYPE
        SET_KW "SET"
        WHITESPACE " "
        DATA_KW "DATA"
        WHITESPACE " "
        TYPE_KW "TYPE"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Some error cases."
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comment_test"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IDENT "xmin"
      WHITESPACE " "
      SET_TYPE
        SET_KW "SET"
        WHITESPACE " "
        DATA_KW "DATA"
        WHITESPACE " "
        TYPE_KW "TYPE"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comment_test"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IDENT "id"
      WHITESPACE " "
      SET_TYPE
        SET_KW "SET"
        WHITESPACE " "
        DATA_KW "DATA"
        WHITESPACE " "
        TYPE_KW "TYPE"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comment_test"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IDENT "id"
      WHITESPACE " "
      SET_TYPE
        SET_KW "SET"
        WHITESPACE " "
        DATA_KW "DATA"
        WHITESPACE " "
        TYPE_KW "TYPE"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        COLLATE
          COLLATE_KW "COLLATE"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "\"C\""
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that the comments are intact."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "col_description"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'comment_test'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            COMMENT_KW "comment"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "indexrelid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            INDEX_KW "index"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "obj_description"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "indexrelid"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'pg_class'"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            COMMENT_KW "comment"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_index"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "indrelid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'comment_test'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "conname"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            CONSTRAINT_KW "constraint"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "obj_description"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "oid"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'pg_constraint'"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            COMMENT_KW "comment"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "conrelid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'comment_test'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Check compatibility for foreign keys and comments. This is done"
    WHITESPACE "\n"
    COMMENT "-- separately as rebuilding the column type of the parent leads"
    WHITESPACE "\n"
    COMMENT "-- to an error and would reduce the test scope."
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "comment_test_child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n  "
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
        WHITESPACE " "
        REFERENCES_CONSTRAINT
          CONSTRAINT_KW "CONSTRAINT"
          WHITESPACE " "
          NAME_REF
            IDENT "comment_test_child_fk"
          WHITESPACE " "
          REFERENCES_KW "REFERENCES"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "comment_test"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "comment_test_child_fk"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comment_test_child"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "id"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT_STMT
    COMMENT_KW "COMMENT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    COLUMN_KW "COLUMN"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "comment_test_child"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "id"
    WHITESPACE " "
    IS_KW "IS"
    WHITESPACE " "
    LITERAL
      STRING "'Column ''id'' on comment_test_child'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT_STMT
    COMMENT_KW "COMMENT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comment_test_child_fk"
    WHITESPACE " "
    IS_KW "IS"
    WHITESPACE " "
    LITERAL
      STRING "'Index backing the FOREIGN KEY of comment_test_child'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT_STMT
    COMMENT_KW "COMMENT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    CONSTRAINT_KW "CONSTRAINT"
    WHITESPACE " "
    NAME_REF
      IDENT "comment_test_child_fk"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comment_test_child"
    WHITESPACE " "
    IS_KW "IS"
    WHITESPACE " "
    LITERAL
      STRING "'FOREIGN KEY constraint of comment_test_child'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Change column type of parent"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comment_test"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IDENT "id"
      WHITESPACE " "
      SET_TYPE
        SET_KW "SET"
        WHITESPACE " "
        DATA_KW "DATA"
        WHITESPACE " "
        TYPE_KW "TYPE"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comment_test"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IDENT "id"
      WHITESPACE " "
      SET_TYPE
        SET_KW "SET"
        WHITESPACE " "
        DATA_KW "DATA"
        WHITESPACE " "
        TYPE_KW "TYPE"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        USING_KW "USING"
        WHITESPACE " "
        CAST_EXPR
          NAME_REF
            IDENT "id"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INTEGER_KW "integer"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Comments should be intact"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "col_description"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'comment_test_child'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            COMMENT_KW "comment"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "indexrelid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            INDEX_KW "index"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "obj_description"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "indexrelid"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'pg_class'"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            COMMENT_KW "comment"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_index"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "indrelid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'comment_test_child'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "conname"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            CONSTRAINT_KW "constraint"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "obj_description"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "oid"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'pg_constraint'"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            COMMENT_KW "comment"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "conrelid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'comment_test_child'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that we map relation oids to filenodes and back correctly.  Only"
  WHITESPACE "\n"
  COMMENT "-- display bad mappings so the test output doesn't change all the time.  A"
  WHITESPACE "\n"
  COMMENT "-- filenode function call can return NULL for a relation dropped concurrently"
  WHITESPACE "\n"
  COMMENT "-- with the call's surrounding query, so ignore a NULL mapped_oid for"
  WHITESPACE "\n"
  COMMENT "-- relations that no longer exist after all calls finish."
  WHITESPACE "\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "filenode_mapping"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE "\n    "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "oid"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "mapped_oid"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "reltablespace"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "relfilenode"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "relname"
      WHITESPACE "\n"
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_class"
        COMMA ","
        WHITESPACE "\n    "
        CALL_EXPR
          NAME_REF
            IDENT "pg_filenode_relation"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "reltablespace"
            COMMA ","
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "pg_relation_filenode"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "oid"
                R_PAREN ")"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "mapped_oid"
      WHITESPACE "\n"
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "relkind"
            WHITESPACE " "
            IN_KW "IN"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                STRING "'r'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'i'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'S'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'t'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'m'"
              R_PAREN ")"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "mapped_oid"
            WHITESPACE " "
            IS_DISTINCT_FROM
              IS_KW "IS"
              WHITESPACE " "
              DISTINCT_KW "DISTINCT"
              WHITESPACE " "
              FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "m"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "filenode_mapping"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "m"
      WHITESPACE " "
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_class"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "c"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            NAME_REF
              IDENT "oid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "m"
            DOT "."
            NAME_REF
              IDENT "oid"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            NAME_REF
              IDENT "oid"
          WHITESPACE " "
          IS_NOT
            IS_KW "IS"
            WHITESPACE " "
            NOT_KW "NOT"
          WHITESPACE " "
          LITERAL
            NULL_KW "NULL"
        WHITESPACE " "
        OR_KW "OR"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "m"
            DOT "."
            NAME_REF
              IDENT "mapped_oid"
          WHITESPACE " "
          IS_NOT
            IS_KW "IS"
            WHITESPACE " "
            NOT_KW "NOT"
          WHITESPACE " "
          LITERAL
            NULL_KW "NULL"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Checks on creating and manipulation of user defined relations in"
  WHITESPACE "\n"
  COMMENT "-- pg_catalog."
  WHITESPACE "\n\n"
  SHOW_STMT
    SHOW_KW "SHOW"
    WHITESPACE " "
    NAME_REF
      IDENT "allow_system_table_mods"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    COMMENT "-- disallowed because of search_path issues with pg_dump"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "pg_catalog"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "new_system_table"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    COMMENT "-- instead create in public first, move to catalog"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "new_system_table"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "serial"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "othercol"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "new_system_table"
    WHITESPACE " "
    SET_SCHEMA
      SET_KW "SET"
      WHITESPACE " "
      SCHEMA_KW "SCHEMA"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_catalog"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "new_system_table"
    WHITESPACE " "
    SET_SCHEMA
      SET_KW "SET"
      WHITESPACE " "
      SCHEMA_KW "SCHEMA"
      WHITESPACE " "
      NAME_REF
        IDENT "public"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "new_system_table"
    WHITESPACE " "
    SET_SCHEMA
      SET_KW "SET"
      WHITESPACE " "
      SCHEMA_KW "SCHEMA"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_catalog"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- will be ignored -- already there:"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "new_system_table"
    WHITESPACE " "
    SET_SCHEMA
      SET_KW "SET"
      WHITESPACE " "
      SCHEMA_KW "SCHEMA"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_catalog"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "new_system_table"
    WHITESPACE " "
    RENAME_TABLE
      RENAME_KW "RENAME"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "old_system_table"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "old_system_table__othercol"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "old_system_table"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "othercol"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "old_system_table"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "othercol"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'somedata'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'otherdata'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "old_system_table"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "id"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PREFIX_EXPR
      MINUS "-"
      NAME_REF
        IDENT "id"
  SEMICOLON ";"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "old_system_table"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "othercol"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'somedata'"
  SEMICOLON ";"
  WHITESPACE "\n"
  TRUNCATE_STMT
    TRUNCATE_KW "TRUNCATE"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "old_system_table"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "old_system_table"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "DROP"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "new_system_table_pkey"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "old_system_table"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "DROP"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "othercol"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "old_system_table"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- set logged"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    UNLOGGED_KW "UNLOGGED"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "unlogged1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "SERIAL"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- has sequence, toast"
  WHITESPACE "\n"
  COMMENT "-- check relpersistence of an unlogged table"
  WHITESPACE "\n"
  COMPOUND_SELECT
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "relname"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "relkind"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "relpersistence"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_class"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "relname"
          WHITESPACE " "
          CUSTOM_OP
            TILDE "~"
          WHITESPACE " "
          LITERAL
            STRING "'^unlogged1'"
    WHITESPACE "\n"
    UNION_KW "UNION"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE "\n"
    COMPOUND_SELECT
      SELECT
        SELECT_CLAUSE
          SELECT_KW "SELECT"
          WHITESPACE " "
          TARGET_LIST
            TARGET
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "r"
                  DOT "."
                  NAME_REF
                    IDENT "relname"
                WHITESPACE " "
                CUSTOM_OP
                  PIPE "|"
                  PIPE "|"
                WHITESPACE " "
                LITERAL
                  STRING "' toast table'"
            COMMA ","
            WHITESPACE " "
            TARGET
              FIELD_EXPR
                NAME_REF
                  IDENT "t"
                DOT "."
                NAME_REF
                  IDENT "relkind"
            COMMA ","
            WHITESPACE " "
            TARGET
              FIELD_EXPR
                NAME_REF
                  IDENT "t"
                DOT "."
                NAME_REF
                  IDENT "relpersistence"
        WHITESPACE " "
        FROM_CLAUSE
          FROM_KW "FROM"
          WHITESPACE " "
          NAME_REF
            IDENT "pg_class"
          WHITESPACE " "
          ALIAS
            NAME
              IDENT "r"
          WHITESPACE " "
          JOIN
            JOIN_KW "JOIN"
            WHITESPACE " "
            NAME_REF
              IDENT "pg_class"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "t"
            WHITESPACE " "
            ON_KW "ON"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "r"
                DOT "."
                NAME_REF
                  IDENT "reltoastrelid"
        WHITESPACE " "
        WHERE_CLAUSE
          WHERE_KW "WHERE"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "r"
              DOT "."
              NAME_REF
                IDENT "relname"
            WHITESPACE " "
            CUSTOM_OP
              TILDE "~"
            WHITESPACE " "
            LITERAL
              STRING "'^unlogged1'"
      WHITESPACE "\n"
      UNION_KW "UNION"
      WHITESPACE " "
      ALL_KW "ALL"
      WHITESPACE "\n"
      SELECT
        SELECT_CLAUSE
          SELECT_KW "SELECT"
          WHITESPACE " "
          TARGET_LIST
            TARGET
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "r"
                  DOT "."
                  NAME_REF
                    IDENT "relname"
                WHITESPACE " "
                CUSTOM_OP
                  PIPE "|"
                  PIPE "|"
                WHITESPACE " "
                LITERAL
                  STRING "' toast index'"
            COMMA ","
            WHITESPACE " "
            TARGET
              FIELD_EXPR
                NAME_REF
                  IDENT "ri"
                DOT "."
                NAME_REF
                  IDENT "relkind"
            COMMA ","
            WHITESPACE " "
            TARGET
              FIELD_EXPR
                NAME_REF
                  IDENT "ri"
                DOT "."
                NAME_REF
                  IDENT "relpersistence"
        WHITESPACE " "
        FROM_CLAUSE
          FROM_KW "FROM"
          WHITESPACE " "
          NAME_REF
            IDENT "pg_class"
          WHITESPACE " "
          ALIAS
            NAME
              IDENT "r"
          WHITESPACE " "
          JOIN
            JOIN_KW "join"
            WHITESPACE " "
            NAME_REF
              IDENT "pg_class"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "t"
            WHITESPACE " "
            ON_KW "ON"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "r"
                DOT "."
                NAME_REF
                  IDENT "reltoastrelid"
          WHITESPACE " "
          JOIN
            JOIN_KW "JOIN"
            WHITESPACE " "
            NAME_REF
              IDENT "pg_index"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "i"
            WHITESPACE " "
            ON_KW "ON"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "i"
                DOT "."
                NAME_REF
                  IDENT "indrelid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "t"
                DOT "."
                NAME_REF
                  IDENT "oid"
          WHITESPACE " "
          JOIN
            JOIN_KW "JOIN"
            WHITESPACE " "
            NAME_REF
              IDENT "pg_class"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "ri"
            WHITESPACE " "
            ON_KW "ON"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "ri"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "i"
                DOT "."
                NAME_REF
                  IDENT "indexrelid"
        WHITESPACE " "
        WHERE_CLAUSE
          WHERE_KW "WHERE"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "r"
              DOT "."
              NAME_REF
                IDENT "relname"
            WHITESPACE " "
            CUSTOM_OP
              TILDE "~"
            WHITESPACE " "
            LITERAL
              STRING "'^unlogged1'"
        WHITESPACE "\n"
        ORDER_BY_CLAUSE
          ORDER_KW "ORDER"
          WHITESPACE " "
          BY_KW "BY"
          WHITESPACE " "
          NAME_REF
            IDENT "relname"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    UNLOGGED_KW "UNLOGGED"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "unlogged2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "SERIAL"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "INTEGER"
        WHITESPACE " "
        REFERENCES_CONSTRAINT
          REFERENCES_KW "REFERENCES"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "unlogged1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  CREATE_TABLE
    COMMENT "-- foreign key"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    UNLOGGED_KW "UNLOGGED"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "unlogged3"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "SERIAL"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "INTEGER"
        WHITESPACE " "
        REFERENCES_CONSTRAINT
          REFERENCES_KW "REFERENCES"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "unlogged3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- self-referencing foreign key"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "unlogged3"
    WHITESPACE " "
    SET_LOGGED
      SET_KW "SET"
      WHITESPACE " "
      LOGGED_KW "LOGGED"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- skip self-referencing foreign key"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "unlogged2"
    WHITESPACE " "
    SET_LOGGED
      SET_KW "SET"
      WHITESPACE " "
      LOGGED_KW "LOGGED"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails because a foreign key to an unlogged table exists"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "unlogged1"
    WHITESPACE " "
    SET_LOGGED
      SET_KW "SET"
      WHITESPACE " "
      LOGGED_KW "LOGGED"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- check relpersistence of an unlogged table after changing to permanent"
  WHITESPACE "\n"
  COMPOUND_SELECT
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "relname"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "relkind"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "relpersistence"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_class"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "relname"
          WHITESPACE " "
          CUSTOM_OP
            TILDE "~"
          WHITESPACE " "
          LITERAL
            STRING "'^unlogged1'"
    WHITESPACE "\n"
    UNION_KW "UNION"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE "\n"
    COMPOUND_SELECT
      SELECT
        SELECT_CLAUSE
          SELECT_KW "SELECT"
          WHITESPACE " "
          TARGET_LIST
            TARGET
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "r"
                  DOT "."
                  NAME_REF
                    IDENT "relname"
                WHITESPACE " "
                CUSTOM_OP
                  PIPE "|"
                  PIPE "|"
                WHITESPACE " "
                LITERAL
                  STRING "' toast table'"
            COMMA ","
            WHITESPACE " "
            TARGET
              FIELD_EXPR
                NAME_REF
                  IDENT "t"
                DOT "."
                NAME_REF
                  IDENT "relkind"
            COMMA ","
            WHITESPACE " "
            TARGET
              FIELD_EXPR
                NAME_REF
                  IDENT "t"
                DOT "."
                NAME_REF
                  IDENT "relpersistence"
        WHITESPACE " "
        FROM_CLAUSE
          FROM_KW "FROM"
          WHITESPACE " "
          NAME_REF
            IDENT "pg_class"
          WHITESPACE " "
          ALIAS
            NAME
              IDENT "r"
          WHITESPACE " "
          JOIN
            JOIN_KW "JOIN"
            WHITESPACE " "
            NAME_REF
              IDENT "pg_class"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "t"
            WHITESPACE " "
            ON_KW "ON"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "r"
                DOT "."
                NAME_REF
                  IDENT "reltoastrelid"
        WHITESPACE " "
        WHERE_CLAUSE
          WHERE_KW "WHERE"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "r"
              DOT "."
              NAME_REF
                IDENT "relname"
            WHITESPACE " "
            CUSTOM_OP
              TILDE "~"
            WHITESPACE " "
            LITERAL
              STRING "'^unlogged1'"
      WHITESPACE "\n"
      UNION_KW "UNION"
      WHITESPACE " "
      ALL_KW "ALL"
      WHITESPACE "\n"
      SELECT
        SELECT_CLAUSE
          SELECT_KW "SELECT"
          WHITESPACE " "
          TARGET_LIST
            TARGET
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "r"
                  DOT "."
                  NAME_REF
                    IDENT "relname"
                WHITESPACE " "
                CUSTOM_OP
                  PIPE "|"
                  PIPE "|"
                WHITESPACE " "
                LITERAL
                  STRING "' toast index'"
            COMMA ","
            WHITESPACE " "
            TARGET
              FIELD_EXPR
                NAME_REF
                  IDENT "ri"
                DOT "."
                NAME_REF
                  IDENT "relkind"
            COMMA ","
            WHITESPACE " "
            TARGET
              FIELD_EXPR
                NAME_REF
                  IDENT "ri"
                DOT "."
                NAME_REF
                  IDENT "relpersistence"
        WHITESPACE " "
        FROM_CLAUSE
          FROM_KW "FROM"
          WHITESPACE " "
          NAME_REF
            IDENT "pg_class"
          WHITESPACE " "
          ALIAS
            NAME
              IDENT "r"
          WHITESPACE " "
          JOIN
            JOIN_KW "join"
            WHITESPACE " "
            NAME_REF
              IDENT "pg_class"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "t"
            WHITESPACE " "
            ON_KW "ON"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "r"
                DOT "."
                NAME_REF
                  IDENT "reltoastrelid"
          WHITESPACE " "
          JOIN
            JOIN_KW "JOIN"
            WHITESPACE " "
            NAME_REF
              IDENT "pg_index"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "i"
            WHITESPACE " "
            ON_KW "ON"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "i"
                DOT "."
                NAME_REF
                  IDENT "indrelid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "t"
                DOT "."
                NAME_REF
                  IDENT "oid"
          WHITESPACE " "
          JOIN
            JOIN_KW "JOIN"
            WHITESPACE " "
            NAME_REF
              IDENT "pg_class"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "ri"
            WHITESPACE " "
            ON_KW "ON"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "ri"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "i"
                DOT "."
                NAME_REF
                  IDENT "indexrelid"
        WHITESPACE " "
        WHERE_CLAUSE
          WHERE_KW "WHERE"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "r"
              DOT "."
              NAME_REF
                IDENT "relname"
            WHITESPACE " "
            CUSTOM_OP
              TILDE "~"
            WHITESPACE " "
            LITERAL
              STRING "'^unlogged1'"
        WHITESPACE "\n"
        ORDER_BY_CLAUSE
          ORDER_KW "ORDER"
          WHITESPACE " "
          BY_KW "BY"
          WHITESPACE " "
          NAME_REF
            IDENT "relname"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "unlogged1"
    WHITESPACE " "
    SET_LOGGED
      SET_KW "SET"
      WHITESPACE " "
      LOGGED_KW "LOGGED"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- silently do nothing"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "unlogged3"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "unlogged2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "unlogged1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- set unlogged"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "logged1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "SERIAL"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- has sequence, toast"
  WHITESPACE "\n"
  COMMENT "-- check relpersistence of a permanent table"
  WHITESPACE "\n"
  COMPOUND_SELECT
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "relname"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "relkind"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "relpersistence"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_class"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "relname"
          WHITESPACE " "
          CUSTOM_OP
            TILDE "~"
          WHITESPACE " "
          LITERAL
            STRING "'^logged1'"
    WHITESPACE "\n"
    UNION_KW "UNION"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE "\n"
    COMPOUND_SELECT
      SELECT
        SELECT_CLAUSE
          SELECT_KW "SELECT"
          WHITESPACE " "
          TARGET_LIST
            TARGET
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "r"
                  DOT "."
                  NAME_REF
                    IDENT "relname"
                WHITESPACE " "
                CUSTOM_OP
                  PIPE "|"
                  PIPE "|"
                WHITESPACE " "
                LITERAL
                  STRING "' toast table'"
            COMMA ","
            WHITESPACE " "
            TARGET
              FIELD_EXPR
                NAME_REF
                  IDENT "t"
                DOT "."
                NAME_REF
                  IDENT "relkind"
            COMMA ","
            WHITESPACE " "
            TARGET
              FIELD_EXPR
                NAME_REF
                  IDENT "t"
                DOT "."
                NAME_REF
                  IDENT "relpersistence"
        WHITESPACE " "
        FROM_CLAUSE
          FROM_KW "FROM"
          WHITESPACE " "
          NAME_REF
            IDENT "pg_class"
          WHITESPACE " "
          ALIAS
            NAME
              IDENT "r"
          WHITESPACE " "
          JOIN
            JOIN_KW "JOIN"
            WHITESPACE " "
            NAME_REF
              IDENT "pg_class"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "t"
            WHITESPACE " "
            ON_KW "ON"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "r"
                DOT "."
                NAME_REF
                  IDENT "reltoastrelid"
        WHITESPACE " "
        WHERE_CLAUSE
          WHERE_KW "WHERE"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "r"
              DOT "."
              NAME_REF
                IDENT "relname"
            WHITESPACE " "
            CUSTOM_OP
              TILDE "~"
            WHITESPACE " "
            LITERAL
              STRING "'^logged1'"
      WHITESPACE "\n"
      UNION_KW "UNION"
      WHITESPACE " "
      ALL_KW "ALL"
      WHITESPACE "\n"
      SELECT
        SELECT_CLAUSE
          SELECT_KW "SELECT"
          WHITESPACE " "
          TARGET_LIST
            TARGET
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "r"
                  DOT "."
                  NAME_REF
                    IDENT "relname"
                WHITESPACE " "
                CUSTOM_OP
                  PIPE "|"
                  PIPE "|"
                LITERAL
                  STRING "' toast index'"
            COMMA ","
            WHITESPACE " "
            TARGET
              FIELD_EXPR
                NAME_REF
                  IDENT "ri"
                DOT "."
                NAME_REF
                  IDENT "relkind"
            COMMA ","
            WHITESPACE " "
            TARGET
              FIELD_EXPR
                NAME_REF
                  IDENT "ri"
                DOT "."
                NAME_REF
                  IDENT "relpersistence"
        WHITESPACE " "
        FROM_CLAUSE
          FROM_KW "FROM"
          WHITESPACE " "
          NAME_REF
            IDENT "pg_class"
          WHITESPACE " "
          ALIAS
            NAME
              IDENT "r"
          WHITESPACE " "
          JOIN
            JOIN_KW "join"
            WHITESPACE " "
            NAME_REF
              IDENT "pg_class"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "t"
            WHITESPACE " "
            ON_KW "ON"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "r"
                DOT "."
                NAME_REF
                  IDENT "reltoastrelid"
          WHITESPACE " "
          JOIN
            JOIN_KW "JOIN"
            WHITESPACE " "
            NAME_REF
              IDENT "pg_index"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "i"
            WHITESPACE " "
            ON_KW "ON"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "i"
                DOT "."
                NAME_REF
                  IDENT "indrelid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "t"
                DOT "."
                NAME_REF
                  IDENT "oid"
          WHITESPACE " "
          JOIN
            JOIN_KW "JOIN"
            WHITESPACE " "
            NAME_REF
              IDENT "pg_class"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "ri"
            WHITESPACE " "
            ON_KW "ON"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "ri"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "i"
                DOT "."
                NAME_REF
                  IDENT "indexrelid"
        WHITESPACE " "
        WHERE_CLAUSE
          WHERE_KW "WHERE"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "r"
              DOT "."
              NAME_REF
                IDENT "relname"
            WHITESPACE " "
            CUSTOM_OP
              TILDE "~"
            WHITESPACE " "
            LITERAL
              STRING "'^logged1'"
        WHITESPACE "\n"
        ORDER_BY_CLAUSE
          ORDER_KW "ORDER"
          WHITESPACE " "
          BY_KW "BY"
          WHITESPACE " "
          NAME_REF
            IDENT "relname"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "logged2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "SERIAL"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "INTEGER"
        WHITESPACE " "
        REFERENCES_CONSTRAINT
          REFERENCES_KW "REFERENCES"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "logged1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  CREATE_TABLE
    COMMENT "-- foreign key"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "logged3"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "SERIAL"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "INTEGER"
        WHITESPACE " "
        REFERENCES_CONSTRAINT
          REFERENCES_KW "REFERENCES"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "logged3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- self-referencing foreign key"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "logged1"
    WHITESPACE " "
    SET_UNLOGGED
      SET_KW "SET"
      WHITESPACE " "
      UNLOGGED_KW "UNLOGGED"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails because a foreign key from a permanent table exists"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "logged3"
    WHITESPACE " "
    SET_UNLOGGED
      SET_KW "SET"
      WHITESPACE " "
      UNLOGGED_KW "UNLOGGED"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- skip self-referencing foreign key"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "logged2"
    WHITESPACE " "
    SET_UNLOGGED
      SET_KW "SET"
      WHITESPACE " "
      UNLOGGED_KW "UNLOGGED"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "logged1"
    WHITESPACE " "
    SET_UNLOGGED
      SET_KW "SET"
      WHITESPACE " "
      UNLOGGED_KW "UNLOGGED"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- check relpersistence of a permanent table after changing to unlogged"
  WHITESPACE "\n"
  COMPOUND_SELECT
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "relname"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "relkind"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "relpersistence"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_class"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "relname"
          WHITESPACE " "
          CUSTOM_OP
            TILDE "~"
          WHITESPACE " "
          LITERAL
            STRING "'^logged1'"
    WHITESPACE "\n"
    UNION_KW "UNION"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE "\n"
    COMPOUND_SELECT
      SELECT
        SELECT_CLAUSE
          SELECT_KW "SELECT"
          WHITESPACE " "
          TARGET_LIST
            TARGET
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "r"
                  DOT "."
                  NAME_REF
                    IDENT "relname"
                WHITESPACE " "
                CUSTOM_OP
                  PIPE "|"
                  PIPE "|"
                WHITESPACE " "
                LITERAL
                  STRING "' toast table'"
            COMMA ","
            WHITESPACE " "
            TARGET
              FIELD_EXPR
                NAME_REF
                  IDENT "t"
                DOT "."
                NAME_REF
                  IDENT "relkind"
            COMMA ","
            WHITESPACE " "
            TARGET
              FIELD_EXPR
                NAME_REF
                  IDENT "t"
                DOT "."
                NAME_REF
                  IDENT "relpersistence"
        WHITESPACE " "
        FROM_CLAUSE
          FROM_KW "FROM"
          WHITESPACE " "
          NAME_REF
            IDENT "pg_class"
          WHITESPACE " "
          ALIAS
            NAME
              IDENT "r"
          WHITESPACE " "
          JOIN
            JOIN_KW "JOIN"
            WHITESPACE " "
            NAME_REF
              IDENT "pg_class"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "t"
            WHITESPACE " "
            ON_KW "ON"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "r"
                DOT "."
                NAME_REF
                  IDENT "reltoastrelid"
        WHITESPACE " "
        WHERE_CLAUSE
          WHERE_KW "WHERE"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "r"
              DOT "."
              NAME_REF
                IDENT "relname"
            WHITESPACE " "
            CUSTOM_OP
              TILDE "~"
            WHITESPACE " "
            LITERAL
              STRING "'^logged1'"
      WHITESPACE "\n"
      UNION_KW "UNION"
      WHITESPACE " "
      ALL_KW "ALL"
      WHITESPACE "\n"
      SELECT
        SELECT_CLAUSE
          SELECT_KW "SELECT"
          WHITESPACE " "
          TARGET_LIST
            TARGET
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "r"
                  DOT "."
                  NAME_REF
                    IDENT "relname"
                WHITESPACE " "
                CUSTOM_OP
                  PIPE "|"
                  PIPE "|"
                WHITESPACE " "
                LITERAL
                  STRING "' toast index'"
            COMMA ","
            WHITESPACE " "
            TARGET
              FIELD_EXPR
                NAME_REF
                  IDENT "ri"
                DOT "."
                NAME_REF
                  IDENT "relkind"
            COMMA ","
            WHITESPACE " "
            TARGET
              FIELD_EXPR
                NAME_REF
                  IDENT "ri"
                DOT "."
                NAME_REF
                  IDENT "relpersistence"
        WHITESPACE " "
        FROM_CLAUSE
          FROM_KW "FROM"
          WHITESPACE " "
          NAME_REF
            IDENT "pg_class"
          WHITESPACE " "
          ALIAS
            NAME
              IDENT "r"
          WHITESPACE " "
          JOIN
            JOIN_KW "join"
            WHITESPACE " "
            NAME_REF
              IDENT "pg_class"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "t"
            WHITESPACE " "
            ON_KW "ON"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "r"
                DOT "."
                NAME_REF
                  IDENT "reltoastrelid"
          WHITESPACE " "
          JOIN
            JOIN_KW "JOIN"
            WHITESPACE " "
            NAME_REF
              IDENT "pg_index"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "i"
            WHITESPACE " "
            ON_KW "ON"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "i"
                DOT "."
                NAME_REF
                  IDENT "indrelid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "t"
                DOT "."
                NAME_REF
                  IDENT "oid"
          WHITESPACE " "
          JOIN
            JOIN_KW "JOIN"
            WHITESPACE " "
            NAME_REF
              IDENT "pg_class"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "ri"
            WHITESPACE " "
            ON_KW "ON"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "ri"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "i"
                DOT "."
                NAME_REF
                  IDENT "indexrelid"
        WHITESPACE " "
        WHERE_CLAUSE
          WHERE_KW "WHERE"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "r"
              DOT "."
              NAME_REF
                IDENT "relname"
            WHITESPACE " "
            CUSTOM_OP
              TILDE "~"
            WHITESPACE " "
            LITERAL
              STRING "'^logged1'"
        WHITESPACE "\n"
        ORDER_BY_CLAUSE
          ORDER_KW "ORDER"
          WHITESPACE " "
          BY_KW "BY"
          WHITESPACE " "
          NAME_REF
            IDENT "relname"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "logged1"
    WHITESPACE " "
    SET_UNLOGGED
      SET_KW "SET"
      WHITESPACE " "
      UNLOGGED_KW "UNLOGGED"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- silently do nothing"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "logged3"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "logged2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "logged1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- test ADD COLUMN IF NOT EXISTS"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_add_column"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_add_column"
    WHITESPACE "\n\t"
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "c2"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INTEGER_KW "integer"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_add_column"
    WHITESPACE "\n\t"
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "c2"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INTEGER_KW "integer"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail because c2 already exists"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    ONLY_KW "ONLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_add_column"
    WHITESPACE "\n\t"
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "c2"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INTEGER_KW "integer"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail because c2 already exists"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_add_column"
    WHITESPACE "\n\t"
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IF_NOT_EXISTS
        IF_KW "IF"
        WHITESPACE " "
        NOT_KW "NOT"
        WHITESPACE " "
        EXISTS_KW "EXISTS"
      WHITESPACE " "
      NAME_REF
        IDENT "c2"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INTEGER_KW "integer"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- skipping because c2 already exists"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    ONLY_KW "ONLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_add_column"
    WHITESPACE "\n\t"
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IF_NOT_EXISTS
        IF_KW "IF"
        WHITESPACE " "
        NOT_KW "NOT"
        WHITESPACE " "
        EXISTS_KW "EXISTS"
      WHITESPACE " "
      NAME_REF
        IDENT "c2"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INTEGER_KW "integer"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- skipping because c2 already exists"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_add_column"
    WHITESPACE "\n\t"
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "c2"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INTEGER_KW "integer"
    COMMA ","
    WHITESPACE " "
    COMMENT "-- fail because c2 already exists"
    WHITESPACE "\n\t"
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "c3"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INTEGER_KW "integer"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_add_column"
    WHITESPACE "\n\t"
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IF_NOT_EXISTS
        IF_KW "IF"
        WHITESPACE " "
        NOT_KW "NOT"
        WHITESPACE " "
        EXISTS_KW "EXISTS"
      WHITESPACE " "
      NAME_REF
        IDENT "c2"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INTEGER_KW "integer"
    COMMA ","
    WHITESPACE " "
    COMMENT "-- skipping because c2 already exists"
    WHITESPACE "\n\t"
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "c3"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INTEGER_KW "integer"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_add_column"
    WHITESPACE "\n\t"
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IF_NOT_EXISTS
        IF_KW "IF"
        WHITESPACE " "
        NOT_KW "NOT"
        WHITESPACE " "
        EXISTS_KW "EXISTS"
      WHITESPACE " "
      NAME_REF
        IDENT "c2"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INTEGER_KW "integer"
    COMMA ","
    WHITESPACE " "
    COMMENT "-- skipping because c2 already exists"
    WHITESPACE "\n\t"
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IF_NOT_EXISTS
        IF_KW "IF"
        WHITESPACE " "
        NOT_KW "NOT"
        WHITESPACE " "
        EXISTS_KW "EXISTS"
      WHITESPACE " "
      NAME_REF
        IDENT "c3"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INTEGER_KW "integer"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- skipping because c3 already exists"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_add_column"
    WHITESPACE "\n\t"
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IF_NOT_EXISTS
        IF_KW "IF"
        WHITESPACE " "
        NOT_KW "NOT"
        WHITESPACE " "
        EXISTS_KW "EXISTS"
      WHITESPACE " "
      NAME_REF
        IDENT "c2"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INTEGER_KW "integer"
    COMMA ","
    WHITESPACE " "
    COMMENT "-- skipping because c2 already exists"
    WHITESPACE "\n\t"
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IF_NOT_EXISTS
        IF_KW "IF"
        WHITESPACE " "
        NOT_KW "NOT"
        WHITESPACE " "
        EXISTS_KW "EXISTS"
      WHITESPACE " "
      NAME_REF
        IDENT "c3"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INTEGER_KW "integer"
    COMMA ","
    WHITESPACE " "
    COMMENT "-- skipping because c3 already exists"
    WHITESPACE "\n\t"
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "c4"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INTEGER_KW "integer"
      WHITESPACE " "
      REFERENCES_CONSTRAINT
        REFERENCES_KW "REFERENCES"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "test_add_column"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_add_column"
    WHITESPACE "\n\t"
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IF_NOT_EXISTS
        IF_KW "IF"
        WHITESPACE " "
        NOT_KW "NOT"
        WHITESPACE " "
        EXISTS_KW "EXISTS"
      WHITESPACE " "
      NAME_REF
        IDENT "c4"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INTEGER_KW "integer"
      WHITESPACE " "
      REFERENCES_CONSTRAINT
        REFERENCES_KW "REFERENCES"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "test_add_column"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_add_column"
    WHITESPACE "\n\t"
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IF_NOT_EXISTS
        IF_KW "IF"
        WHITESPACE " "
        NOT_KW "NOT"
        WHITESPACE " "
        EXISTS_KW "EXISTS"
      WHITESPACE " "
      NAME_REF
        IDENT "c5"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "SERIAL"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "c5"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "8"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_add_column"
    WHITESPACE "\n\t"
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IF_NOT_EXISTS
        IF_KW "IF"
        WHITESPACE " "
        NOT_KW "NOT"
        WHITESPACE " "
        EXISTS_KW "EXISTS"
      WHITESPACE " "
      NAME_REF
        IDENT "c5"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "SERIAL"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "c5"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_add_column"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- assorted cases with multiple ALTER TABLE steps"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "ataddindex"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "INT"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ataddindex"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "42"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "43"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    UNIQUE_KW "UNIQUE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "ataddindexi0"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ataddindex"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "f1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ataddindex"
    WHITESPACE "\n  "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "PRIMARY"
        WHITESPACE " "
        KEY_KW "KEY"
        WHITESPACE " "
        USING_INDEX
          USING_KW "USING"
          WHITESPACE " "
          INDEX_KW "INDEX"
          WHITESPACE " "
          NAME_REF
            IDENT "ataddindexi0"
    COMMA ","
    WHITESPACE "\n  "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      IDENT "f1"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "TYPE"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "BIGINT"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ataddindex"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "ataddindex"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        CHAR_TYPE
          VARCHAR_KW "VARCHAR"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "10"
            R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ataddindex"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'foo'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'a'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ataddindex"
    WHITESPACE "\n  "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      IDENT "f1"
      WHITESPACE " "
      SET_TYPE
        SET_KW "SET"
        WHITESPACE " "
        DATA_KW "DATA"
        WHITESPACE " "
        TYPE_KW "TYPE"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
    COMMA ","
    WHITESPACE "\n  "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      EXCLUDE_CONSTRAINT
        EXCLUDE_KW "EXCLUDE"
        WHITESPACE " "
        CONSTRAINT_EXCLUSIONS
          L_PAREN "("
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "f1"
            WHITESPACE " "
            LIKE_KW "LIKE"
            WHITESPACE " "
            LITERAL
              STRING "'a'"
          R_PAREN ")"
          WHITESPACE " "
          WITH_KW "WITH"
          WHITESPACE " "
          EQ "="
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ataddindex"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "ataddindex"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "ref_id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ataddindex"
    WHITESPACE "\n  "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "PRIMARY"
        WHITESPACE " "
        KEY_KW "KEY"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "id"
          R_PAREN ")"
    COMMA ","
    WHITESPACE "\n  "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        FOREIGN_KW "FOREIGN"
        WHITESPACE " "
        KEY_KW "KEY"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "ref_id"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "REFERENCES"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "ataddindex"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ataddindex"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "ataddindex"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "ref_id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ataddindex"
    WHITESPACE "\n  "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      UNIQUE_CONSTRAINT
        UNIQUE_KW "UNIQUE"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "id"
          R_PAREN ")"
    COMMA ","
    WHITESPACE "\n  "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        FOREIGN_KW "FOREIGN"
        WHITESPACE " "
        KEY_KW "KEY"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "ref_id"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "REFERENCES"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "ataddindex"
        WHITESPACE " "
        L_PAREN "("
        NAME_REF
          IDENT "id"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ataddindex"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atnotnull1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atnotnull1"
    WHITESPACE "\n  "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "INT"
    COMMA ","
    WHITESPACE "\n  "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "SET"
        WHITESPACE " "
        NOT_KW "NOT"
        WHITESPACE " "
        NULL_KW "NULL"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atnotnull1"
    WHITESPACE "\n  "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "INT"
    COMMA ","
    WHITESPACE "\n  "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      NOT_NULL_CONSTRAINT
        NOT_KW "NOT"
        WHITESPACE " "
        NULL_KW "NULL"
  WHITESPACE " "
  ERROR
    IDENT "b"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atnotnull1"
    WHITESPACE "\n  "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "INT"
    COMMA ","
    WHITESPACE "\n  "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "PRIMARY"
        WHITESPACE " "
        KEY_KW "KEY"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "c"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- cannot drop column that is part of the partition key"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "partitioned"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    RANGE_KW "RANGE"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    COMMA ","
    WHITESPACE " "
    PAREN_EXPR
      L_PAREN "("
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          PLUS "+"
          NAME_REF
            IDENT "b"
        PLUS "+"
        LITERAL
          INT_NUMBER "1"
      R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "partitioned"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "DROP"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "partitioned"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "TYPE"
        WHITESPACE " "
        CHAR_TYPE
          CHAR_KW "char"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "5"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "partitioned"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "DROP"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "partitioned"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IDENT "b"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "TYPE"
        WHITESPACE " "
        CHAR_TYPE
          CHAR_KW "char"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "5"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- specifying storage parameters for partitioned tables is not supported"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "partitioned"
    WHITESPACE " "
    SET_STORAGE_PARAMS
      SET_KW "SET"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "fillfactor"
      EQ "="
      LITERAL
        INT_NUMBER "100"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- partitioned table cannot participate in regular inheritance"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "nonpartitioned"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "partitioned"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "INHERIT"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "nonpartitioned"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "nonpartitioned"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "INHERIT"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "partitioned"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- cannot add NO INHERIT constraint to partitioned tables"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "partitioned"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "chk_a"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
        WHITESPACE " "
        NO_KW "NO"
        WHITESPACE " "
        INHERIT_KW "INHERIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "partitioned"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "nonpartitioned"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- ATTACH PARTITION"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that target table is partitioned"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "unparted"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "fail_part"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      LIKE_CLAUSE
        LIKE_KW "like"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "unparted"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "unparted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "fail_part"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'a'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "unparted"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "fail_part"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that partition bound is compatible"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "list_parted"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "NOT"
          WHITESPACE " "
          NULL_KW "NULL"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        CHAR_TYPE
          CHAR_KW "char"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "2"
            R_PAREN ")"
        WHITESPACE " "
        COLLATE
          COLLATE_KW "COLLATE"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "\"C\""
      COMMA ","
      WHITESPACE "\n\t"
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "check_a"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "LIST"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "fail_part"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      LIKE_CLAUSE
        LIKE_KW "LIKE"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "list_parted"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "fail_part"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      FROM_KW "FROM"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "fail_part"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check that the table being attached exists"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "nonexistent"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check ownership of the source table"
  WHITESPACE "\n"
  CREATE_ROLE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME
      IDENT "regress_test_me"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_ROLE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME
      IDENT "regress_test_not_me"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "not_owned_by_me"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      LIKE_CLAUSE
        LIKE_KW "LIKE"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "list_parted"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "not_owned_by_me"
    WHITESPACE " "
    OWNER_TO
      OWNER_KW "OWNER"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "regress_test_not_me"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_test_me"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "owned_by_me"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "LIST"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "owned_by_me"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "not_owned_by_me"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "owned_by_me"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "not_owned_by_me"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_test_not_me"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_test_me"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that the table being attached is not part of regular inheritance"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      LIKE_CLAUSE
        LIKE_KW "LIKE"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "list_parted"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "child"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "parent"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "child"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- now it should work, with a little tweak"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "check_a"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "parent"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- test insert/update, per bug #18550"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check any TEMP-ness"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temp_parted"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "LIST"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "perm_part"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temp_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "perm_part"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temp_parted"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "perm_part"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check that the table being attached is not a typed table"
  WHITESPACE "\n"
  CREATE_TYPE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mytype"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "fail_part"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "mytype"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "fail_part"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TYPE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    TYPE_KW "TYPE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mytype"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that the table being attached has only columns present in the parent"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "fail_part"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      LIKE_CLAUSE
        LIKE_KW "like"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "list_parted"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "fail_part"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "fail_part"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that the table being attached has every column of the parent"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "fail_part"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "NOT"
          WHITESPACE " "
          NULL_KW "NULL"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "fail_part"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "fail_part"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that columns match in type, collation and NOT NULL status"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "fail_part"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        CHAR_TYPE
          CHAR_KW "char"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "3"
            R_PAREN ")"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "NOT"
          WHITESPACE " "
          NULL_KW "NULL"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "fail_part"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "fail_part"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      IDENT "b"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "TYPE"
        WHITESPACE " "
        CHAR_TYPE
          CHAR_KW "char"
          WHITESPACE " "
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "2"
            R_PAREN ")"
        WHITESPACE " "
        COLLATE
          COLLATE_KW "COLLATE"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "\"POSIX\""
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "fail_part"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "fail_part"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that the table being attached has all constraints of the parent"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "fail_part"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        CHAR_TYPE
          CHAR_KW "char"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "2"
            R_PAREN ")"
        WHITESPACE " "
        COLLATE
          COLLATE_KW "COLLATE"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "\"C\""
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "NOT"
          WHITESPACE " "
          NULL_KW "NULL"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "fail_part"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check that the constraint matches in definition with parent's constraint"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "fail_part"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "check_a"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          GTEQ ">="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "fail_part"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "fail_part"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check the attributes and constraints after partition is attached"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "NOT"
          WHITESPACE " "
          NULL_KW "NULL"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        CHAR_TYPE
          CHAR_KW "char"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "2"
            R_PAREN ")"
        WHITESPACE " "
        COLLATE
          COLLATE_KW "COLLATE"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "\"C\""
      COMMA ","
      WHITESPACE "\n\t"
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "check_a"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_1"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- attislocal and conislocal are always false for merged attributes and constraints respectively."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "attislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "attinhcount"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_attribute"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "attrelid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'part_1'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "attnum"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "coninhcount"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "conrelid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'part_1'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "conname"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'check_a'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that NOT NULL NO INHERIT cannot be merged to a normal NOT NULL"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_fail"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "NOT"
          WHITESPACE " "
          NULL_KW "NULL"
  WHITESPACE " "
  ERROR
    NO_KW "NO"
  WHITESPACE " "
  ERROR
    INHERIT_KW "INHERIT"
  ERROR
    COMMA ","
  WHITESPACE "\n\t"
  ERROR
    IDENT "b"
  WHITESPACE " "
  ERROR
    CHAR_KW "char"
  ERROR
    L_PAREN "("
  ERROR
    INT_NUMBER "2"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    COLLATE_KW "COLLATE"
  WHITESPACE " "
  ERROR
    IDENT "\"C\""
  ERROR
    COMMA ","
  WHITESPACE "\n\t"
  ERROR
    CONSTRAINT_KW "CONSTRAINT"
  WHITESPACE " "
  ERROR
    IDENT "check_a"
  WHITESPACE " "
  ERROR
    CHECK_KW "CHECK"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    INT_NUMBER "0"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_fail"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_fail"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that the new partition won't overlap with an existing partition"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "fail_part"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      LIKE_CLAUSE
        LIKE_KW "LIKE"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "part_1"
        WHITESPACE " "
        INCLUDING_KW "INCLUDING"
        WHITESPACE " "
        CONSTRAINTS_KW "CONSTRAINTS"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "fail_part"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "fail_part"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    COMMENT "-- check that an existing table can be attached as a default partition"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "def_part"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      LIKE_CLAUSE
        LIKE_KW "LIKE"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "list_parted"
        WHITESPACE " "
        INCLUDING_KW "INCLUDING"
        WHITESPACE " "
        CONSTRAINTS_KW "CONSTRAINTS"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "def_part"
      WHITESPACE " "
      DEFAULT_KW "DEFAULT"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    COMMENT "-- check attaching default partition fails if a default partition already"
    WHITESPACE "\n"
    COMMENT "-- exists"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "fail_def_part"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      LIKE_CLAUSE
        LIKE_KW "LIKE"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "part_1"
        WHITESPACE " "
        INCLUDING_KW "INCLUDING"
        WHITESPACE " "
        CONSTRAINTS_KW "CONSTRAINTS"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "fail_def_part"
      WHITESPACE " "
      DEFAULT_KW "DEFAULT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check validation when attaching list partitions"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "list_parted2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        CHAR_TYPE
          CHAR_KW "char"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "LIST"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that violating rows are correctly reported"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      LIKE_CLAUSE
        LIKE_KW "LIKE"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "list_parted2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_2"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_2"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- should be ok after deleting the bad row"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_2"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check partition cannot be attached if default has some row for its values"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "list_parted2_def"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2_def"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'z'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      LIKE_CLAUSE
        LIKE_KW "LIKE"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "list_parted2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_3"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "11"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should be ok after deleting the bad row"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2_def"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "11"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_3"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "11"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- adding constraints that describe the desired partition constraint"
    WHITESPACE "\n"
    COMMENT "-- (or more restrictive) will help skip the validation scan"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_3_4"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      LIKE_CLAUSE
        LIKE_KW "LIKE"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "list_parted2"
      COMMA ","
      WHITESPACE "\n\t"
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "check_a"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          IN_KW "IN"
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            LITERAL
              INT_NUMBER "3"
            R_PAREN ")"
        R_PAREN ")"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- however, if a list partition does not accept nulls, there should be"
  WHITESPACE "\n"
  COMMENT "-- an explicit NOT NULL constraint on the partition key column for the"
  WHITESPACE "\n"
  COMMENT "-- validation scan to be skipped;"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_3_4"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- adding a NOT NULL constraint will cause the scan to be skipped"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    DETACH_PARTITION
      DETACH_KW "DETACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_3_4"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_3_4"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "SET"
        WHITESPACE " "
        NOT_KW "NOT"
        WHITESPACE " "
        NULL_KW "NULL"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_3_4"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check if default partition scan skipped"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2_def"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "check_a"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          IN_KW "IN"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              INT_NUMBER "5"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "6"
            R_PAREN ")"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_55_66"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    IN_KW "IN"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "55"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "66"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check validation when attaching range partitions"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "range_parted"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    RANGE_KW "RANGE"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that violating rows are correctly reported"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "NOT"
          WHITESPACE " "
          NULL_KW "NULL"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CHECK_KW "CHECK"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1"
          R_PAREN ")"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "NOT"
          WHITESPACE " "
          NULL_KW "NULL"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CHECK_KW "CHECK"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              NAME_REF
                IDENT "b"
              WHITESPACE " "
              GTEQ ">="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "b"
              WHITESPACE " "
              LTEQ "<="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "10"
          R_PAREN ")"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Remember the TO bound is exclusive"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part1"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      FROM_KW "FROM"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- should be ok after deleting the bad row"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part1"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      FROM_KW "FROM"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- adding constraints that describe the desired partition constraint"
    WHITESPACE "\n"
    COMMENT "-- (or more restrictive) will help skip the validation scan"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "NOT"
          WHITESPACE " "
          NULL_KW "NULL"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CHECK_KW "CHECK"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1"
          R_PAREN ")"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "NOT"
          WHITESPACE " "
          NULL_KW "NULL"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CHECK_KW "CHECK"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              NAME_REF
                IDENT "b"
              WHITESPACE " "
              GTEQ ">="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "10"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "b"
              WHITESPACE " "
              L_ANGLE "<"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "18"
          R_PAREN ")"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part2"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      FROM_KW "FROM"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "20"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Create default partition"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "partr_def1"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Only one default partition is allowed, hence, following should give error"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "partr_def2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      LIKE_CLAUSE
        LIKE_KW "LIKE"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "part1"
        WHITESPACE " "
        INCLUDING_KW "INCLUDING"
        WHITESPACE " "
        CONSTRAINTS_KW "CONSTRAINTS"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "partr_def2"
      WHITESPACE " "
      DEFAULT_KW "DEFAULT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Overlapping partitions cannot be attached, hence, following should give error"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "partr_def1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      LIKE_CLAUSE
        LIKE_KW "LIKE"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "range_parted"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "part3"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      FROM_KW "FROM"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "20"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Attaching partitions should be successful when there are no overlapping rows"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "part3"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      FROM_KW "FROM"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "20"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that leaf partitions are scanned when attaching a partitioned"
    WHITESPACE "\n"
    COMMENT "-- table"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_5"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      LIKE_CLAUSE
        LIKE_KW "LIKE"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "list_parted2"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "LIST"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that violating rows are correctly reported"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_5_a"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_5"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    IN_KW "IN"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'a'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_5_a"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "6"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_5"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- delete the faulting row and also add a constraint to skip the scan"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_5_a"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        NOT_IN
          NOT_KW "NOT"
          WHITESPACE " "
          IN_KW "IN"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_5"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "check_a"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            IS_NOT
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "5"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_5"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    DETACH_PARTITION
      DETACH_KW "DETACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_5"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_5"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "DROP"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "check_a"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- scan should again be skipped, even though NOT NULL is now a column property"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_5"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "check_a"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          IN_KW "IN"
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            LITERAL
              INT_NUMBER "5"
            R_PAREN ")"
        R_PAREN ")"
    COMMA ","
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "SET"
        WHITESPACE " "
        NOT_KW "NOT"
        WHITESPACE " "
        NULL_KW "NULL"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_5"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Check the case where attnos of the partitioning columns in the table being"
    WHITESPACE "\n"
    COMMENT "-- attached differs from the parent.  It should not affect the constraint-"
    WHITESPACE "\n"
    COMMENT "-- checking logic that allows to skip the scan."
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_6"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n\t"
      LIKE_CLAUSE
        LIKE_KW "LIKE"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "list_parted2"
      COMMA ","
      WHITESPACE "\n\t"
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "check_a"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            IS_NOT
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "6"
        R_PAREN ")"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_6"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "DROP"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_6"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "6"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Similar to above, but the table being attached is a partitioned table"
    WHITESPACE "\n"
    COMMENT "-- whose partition has still different attnos for the root partitioning"
    WHITESPACE "\n"
    COMMENT "-- columns."
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_7"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      LIKE_CLAUSE
        LIKE_KW "LIKE"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "list_parted2"
      COMMA ","
      WHITESPACE "\n\t"
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "check_a"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            IS_NOT
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "7"
        R_PAREN ")"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "LIST"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_7_a_null"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "d"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "e"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n\t"
      LIKE_CLAUSE
        LIKE_KW "LIKE"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "list_parted2"
      COMMA ","
      WHITESPACE "  "
      COMMENT "-- 'a' will have attnum = 4"
      WHITESPACE "\n\t"
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "check_b"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "b"
            WHITESPACE " "
            IS_KW "IS"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          OR_KW "OR"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "b"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'a'"
        R_PAREN ")"
      COMMA ","
      WHITESPACE "\n\t"
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "check_a"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            IS_NOT
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "7"
        R_PAREN ")"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_7_a_null"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "DROP"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
    COMMA ","
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "DROP"
      WHITESPACE " "
      NAME_REF
        IDENT "d"
    COMMA ","
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "DROP"
      WHITESPACE " "
      NAME_REF
        IDENT "e"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_7"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_7_a_null"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'a'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_7"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "7"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Same example, but check this time that the constraint correctly detects"
  WHITESPACE "\n"
  COMMENT "-- violating rows"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    DETACH_PARTITION
      DETACH_KW "DETACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_7"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_7"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "DROP"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "check_a"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- thusly, scan won't be skipped"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_7"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "8"
      COMMA ","
      WHITESPACE " "
      LITERAL
        NULL_KW "null"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "9"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "tableoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "a"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "b"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_7"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_7"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "7"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check that leaf partitions of default partition are scanned when"
  WHITESPACE "\n"
  COMMENT "-- attaching a partitioned table."
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_5"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "DROP"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "check_a"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part5_def"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_5"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "LIST"
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part5_def_p1"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part5_def"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    IN_KW "IN"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "5"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part5_def_p1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'y'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part5_p1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      LIKE_CLAUSE
        LIKE_KW "LIKE"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "part_5"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_5"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part5_p1"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'y'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should be ok after deleting the bad row"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part5_def_p1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'y'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_5"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part5_p1"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'y'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check that the table being attached is not already a partition"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_2"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check that circular inheritance is not allowed"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_5"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "list_parted2"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'b'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "list_parted2"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- If a partitioned table being created or an existing table being attached"
    WHITESPACE "\n"
    COMMENT "-- as a partition does not have a constraint that would allow validation scan"
    WHITESPACE "\n"
    COMMENT "-- to be skipped, but an individual partition does, then the partition's"
    WHITESPACE "\n"
    COMMENT "-- validation scan is skipped."
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "quuux"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "LIST"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "quuux_default"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "quuux"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "LIST"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "quuux_default1"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "quuux_default"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "check_1"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            IS_NOT
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1"
        R_PAREN ")"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    IN_KW "IN"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'b'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "quuux1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "quuux"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "quuux1"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  CREATE_TABLE
    COMMENT "-- validate!"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "quuux2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "quuux"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "quuux2"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- skip validation"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "quuux1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "quuux2"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    COMMENT "-- should validate for quuux1, but not for quuux2"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "quuux1"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "quuux"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    IN_KW "IN"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "quuux2"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "quuux"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    IN_KW "IN"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "quuux"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check validation when attaching hash partitions"
  WHITESPACE "\n\n"
  COMMENT "-- Use hand-rolled hash functions and operator class to get predictable result"
  WHITESPACE "\n"
  COMMENT "-- on different machines. part_test_int4_ops is defined in test_setup.sql."
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that the new partition won't overlap with an existing partition"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "hash_parted"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "HASH"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    IDENT "part_test_int4_ops"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "hpart_1"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hash_parted"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    L_PAREN "("
    IDENT "MODULUS"
    WHITESPACE " "
    INT_NUMBER "4"
    COMMA ","
    WHITESPACE " "
    IDENT "REMAINDER"
    WHITESPACE " "
    INT_NUMBER "0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "fail_part"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      LIKE_CLAUSE
        LIKE_KW "LIKE"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "hpart_1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hash_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "fail_part"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      IDENT "MODULUS"
      WHITESPACE " "
      INT_NUMBER "8"
      COMMA ","
      WHITESPACE " "
      IDENT "REMAINDER"
      WHITESPACE " "
      INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hash_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "fail_part"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      IDENT "MODULUS"
      WHITESPACE " "
      INT_NUMBER "8"
      COMMA ","
      WHITESPACE " "
      IDENT "REMAINDER"
      WHITESPACE " "
      INT_NUMBER "0"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "fail_part"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check validation when attaching hash partitions"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that violating rows are correctly reported"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "hpart_2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      LIKE_CLAUSE
        LIKE_KW "LIKE"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "hash_parted"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hpart_2"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hash_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "hpart_2"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      IDENT "MODULUS"
      WHITESPACE " "
      INT_NUMBER "4"
      COMMA ","
      WHITESPACE " "
      IDENT "REMAINDER"
      WHITESPACE " "
      INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- should be ok after deleting the bad row"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hpart_2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hash_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "hpart_2"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      IDENT "MODULUS"
      WHITESPACE " "
      INT_NUMBER "4"
      COMMA ","
      WHITESPACE " "
      IDENT "REMAINDER"
      WHITESPACE " "
      INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that leaf partitions are scanned when attaching a partitioned"
    WHITESPACE "\n"
    COMMENT "-- table"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "hpart_5"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      LIKE_CLAUSE
        LIKE_KW "LIKE"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "hash_parted"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "LIST"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that violating rows are correctly reported"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "hpart_5_a"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hpart_5"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    IN_KW "IN"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'1'"
    COMMA ","
    WHITESPACE " "
    LITERAL
      STRING "'2'"
    COMMA ","
    WHITESPACE " "
    LITERAL
      STRING "'3'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hpart_5_a"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "7"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hash_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "hpart_5"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      IDENT "MODULUS"
      WHITESPACE " "
      INT_NUMBER "4"
      COMMA ","
      WHITESPACE " "
      IDENT "REMAINDER"
      WHITESPACE " "
      INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- should be ok after deleting the bad row"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hpart_5_a"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hash_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "hpart_5"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      IDENT "MODULUS"
      WHITESPACE " "
      INT_NUMBER "4"
      COMMA ","
      WHITESPACE " "
      IDENT "REMAINDER"
      WHITESPACE " "
      INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that the table being attach is with valid modulus and remainder value"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "fail_part"
    TABLE_ARGS
      L_PAREN "("
      LIKE_CLAUSE
        LIKE_KW "LIKE"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "hash_parted"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hash_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "fail_part"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      IDENT "MODULUS"
      WHITESPACE " "
      INT_NUMBER "0"
      COMMA ","
      WHITESPACE " "
      IDENT "REMAINDER"
      WHITESPACE " "
      INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hash_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "fail_part"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      IDENT "MODULUS"
      WHITESPACE " "
      INT_NUMBER "8"
      COMMA ","
      WHITESPACE " "
      IDENT "REMAINDER"
      WHITESPACE " "
      INT_NUMBER "8"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hash_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "fail_part"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      IDENT "MODULUS"
      WHITESPACE " "
      INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      IDENT "REMAINDER"
      WHITESPACE " "
      INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "fail_part"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- DETACH PARTITION"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that the table is partitioned at all"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "regular_table"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "regular_table"
    WHITESPACE " "
    DETACH_PARTITION
      DETACH_KW "DETACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "any_name"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "regular_table"
    WHITESPACE " "
    DETACH_PARTITION
      DETACH_KW "DETACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "any_name"
      WHITESPACE " "
      CONCURRENTLY_KW "CONCURRENTLY"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "regular_table"
    WHITESPACE " "
    DETACH_PARTITION
      DETACH_KW "DETACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "any_name"
      WHITESPACE " "
      FINALIZE_KW "FINALIZE"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "regular_table"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check that the partition being detached exists at all"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    DETACH_PARTITION
      DETACH_KW "DETACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_4"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hash_parted"
    WHITESPACE " "
    DETACH_PARTITION
      DETACH_KW "DETACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "hpart_4"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that the partition being detached is actually a partition of the parent"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "not_a_part"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    DETACH_PARTITION
      DETACH_KW "DETACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "not_a_part"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    DETACH_PARTITION
      DETACH_KW "DETACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hash_parted"
    WHITESPACE " "
    DETACH_PARTITION
      DETACH_KW "DETACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "not_a_part"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "not_a_part"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check that, after being detached, attinhcount/coninhcount is dropped to 0 and"
  WHITESPACE "\n"
  COMMENT "-- attislocal/conislocal is set to true"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    DETACH_PARTITION
      DETACH_KW "DETACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_3_4"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "attinhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "attislocal"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_attribute"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "attrelid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'part_3_4'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "attnum"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conislocal"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "conrelid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'part_3_4'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "conname"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'check_a'"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_3_4"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that a detached partition is not dropped on dropping a partitioned table"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "range_parted2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    RANGE_KW "RANGE"
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_rp"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted2"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "100"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted2"
    WHITESPACE " "
    DETACH_PARTITION
      DETACH_KW "DETACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_rp"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted2"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "part_rp"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_rp"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- concurrent detach"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "range_parted2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    RANGE_KW "RANGE"
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_rp"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted2"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "100"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- doesn't work in a partition block"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted2"
    WHITESPACE " "
    DETACH_PARTITION
      DETACH_KW "DETACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_rp"
      WHITESPACE " "
      CONCURRENTLY_KW "CONCURRENTLY"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_rpd"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted2"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- doesn't work if there's a default partition"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted2"
    WHITESPACE " "
    DETACH_PARTITION
      DETACH_KW "DETACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_rp"
      WHITESPACE " "
      CONCURRENTLY_KW "CONCURRENTLY"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- doesn't work for the default partition"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted2"
    WHITESPACE " "
    DETACH_PARTITION
      DETACH_KW "DETACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_rpd"
      WHITESPACE " "
      CONCURRENTLY_KW "CONCURRENTLY"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_rpd"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- works fine"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted2"
    WHITESPACE " "
    DETACH_PARTITION
      DETACH_KW "DETACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_rp"
      WHITESPACE " "
      CONCURRENTLY_KW "CONCURRENTLY"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    COMMENT "-- constraint should be created"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_rp100"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      CHECK_CONSTRAINT
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              NAME_REF
                IDENT "a"
              GTEQ ">="
              LITERAL
                INT_NUMBER "123"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "a"
              L_ANGLE "<"
              LITERAL
                INT_NUMBER "133"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            IS_NOT
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
        R_PAREN ")"
      R_PAREN ")"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "100"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "200"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted2"
    WHITESPACE " "
    DETACH_PARTITION
      DETACH_KW "DETACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "part_rp100"
      WHITESPACE " "
      CONCURRENTLY_KW "CONCURRENTLY"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- redundant constraint should not be created"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check ALTER TABLE commands for partitioned tables and partitions"
  WHITESPACE "\n\n"
  COMMENT "-- cannot add/drop column to/from *only* the parent"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    ONLY_KW "ONLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    ONLY_KW "ONLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "DROP"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- cannot add a column to partition or drop an inherited one"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_2"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_2"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "DROP"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Nor rename, alter type"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_2"
    WHITESPACE " "
    RENAME_COLUMN
      RENAME_KW "RENAME"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      TO_KW "to"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_2"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IDENT "b"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "TYPE"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- cannot add NOT NULL or check constraints to *only* the parent, when"
  WHITESPACE "\n"
  COMMENT "-- partitions exist"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    ONLY_KW "ONLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      IDENT "b"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "SET"
        WHITESPACE " "
        NOT_KW "NOT"
        WHITESPACE " "
        NULL_KW "NULL"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    ONLY_KW "ONLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "check_b"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          NEQB "<>"
          WHITESPACE " "
          LITERAL
            STRING "'zz'"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- dropping them is ok though"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      IDENT "b"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "SET"
        WHITESPACE " "
        NOT_KW "NOT"
        WHITESPACE " "
        NULL_KW "NULL"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    ONLY_KW "ONLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      IDENT "b"
      WHITESPACE " "
      DROP_NOT_NULL
        DROP_KW "DROP"
        WHITESPACE " "
        NOT_KW "NOT"
        WHITESPACE " "
        NULL_KW "NULL"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "check_b"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          NEQB "<>"
          WHITESPACE " "
          LITERAL
            STRING "'zz'"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    ONLY_KW "ONLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "DROP"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "check_b"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ... and the partitions should still have both"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- It's alright though, if no partitions are yet created"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_no_parts"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "LIST"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    ONLY_KW "ONLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_no_parts"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "SET"
        WHITESPACE " "
        NOT_KW "NOT"
        WHITESPACE " "
        NULL_KW "NULL"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    ONLY_KW "ONLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_no_parts"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "check_a"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_no_parts"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- cannot drop inherited NOT NULL or check constraints from partition"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      IDENT "b"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "SET"
        WHITESPACE " "
        NOT_KW "NOT"
        WHITESPACE " "
        NULL_KW "NULL"
    COMMA ","
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "check_a2"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_2"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      IDENT "b"
      WHITESPACE " "
      DROP_NOT_NULL
        DROP_KW "DROP"
        WHITESPACE " "
        NOT_KW "NOT"
        WHITESPACE " "
        NULL_KW "NULL"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_2"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "DROP"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "check_a2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- can't drop NOT NULL from under an invalid PK"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "list_parted3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "NOT"
          WHITESPACE " "
          NULL_KW "NULL"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "LIST"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "list_parted3_1"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted3"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    IN_KW "IN"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    ONLY_KW "ONLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted3"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "PRIMARY"
        WHITESPACE " "
        KEY_KW "KEY"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "a"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    ONLY_KW "ONLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted3"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "DROP"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "list_parted3_a_not_null"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Doesn't make sense to add NO INHERIT constraints on partitioned tables"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "check_b2"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          NEQB "<>"
          WHITESPACE " "
          LITERAL
            STRING "'zz'"
        R_PAREN ")"
        WHITESPACE " "
        NO_KW "NO"
        WHITESPACE " "
        INHERIT_KW "INHERIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that a partition cannot participate in regular inheritance"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_test"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_test"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      LIKE_CLAUSE
        LIKE_KW "LIKE"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "part_2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_test"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "INHERIT"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "part_2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_2"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "INHERIT"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "inh_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- cannot drop or alter type of partition key columns of lower level"
  WHITESPACE "\n"
  COMMENT "-- partitioned tables; for example, part_5, which is list_parted2's"
  WHITESPACE "\n"
  COMMENT "-- partition, is partitioned on b;"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "DROP"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IDENT "b"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "TYPE"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- dropping non-partition key columns should be allowed on the parent table."
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "DROP"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "list_parted"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- cleanup"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted2"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted3"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "fail_def_part"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "hash_parted"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- more tests for certain multi-level partitioning scenarios"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    RANGE_KW "range"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    RANGE_KW "range"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p11"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      LIKE_CLAUSE
        LIKE_KW "like"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "p1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p11"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p11"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p11"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p11"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
      WHITESPACE " "
      NOT_NULL_CONSTRAINT
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- attnum for key attribute 'a' is different in p, p1, and p11"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "attrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "attname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "attnum"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_attribute"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "attname"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'a'"
        WHITESPACE "\n "
        AND_KW "and"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                NAME_REF
                  IDENT "attrelid"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                CAST_EXPR
                  LITERAL
                    STRING "'p'"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "regclass"
              WHITESPACE "\n   "
              OR_KW "or"
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "attrelid"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                CAST_EXPR
                  LITERAL
                    STRING "'p1'"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "regclass"
            WHITESPACE "\n   "
            OR_KW "or"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "attrelid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'p11'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
          R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      CAST_EXPR
        CAST_EXPR
          NAME_REF
            IDENT "attrelid"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "attach"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "p11"
      WHITESPACE " "
      FOR_KW "for"
      WHITESPACE " "
      VALUES_KW "values"
      WHITESPACE " "
      FROM_KW "from"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
      WHITESPACE " "
      TO_KW "to"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- check that partition validation scan correctly detects violating rows"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "attach"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "p1"
      WHITESPACE " "
      FOR_KW "for"
      WHITESPACE " "
      VALUES_KW "values"
      WHITESPACE " "
      FROM_KW "from"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
      WHITESPACE " "
      TO_KW "to"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- cleanup"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- validate constraint on partitioned tables should only scan leaf partitions"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_validate_test"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_validate_test_1"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_validate_test"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_validate_test"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "parted_validate_test_chka"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "not"
        WHITESPACE " "
        VALID_KW "valid"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_validate_test"
    WHITESPACE " "
    VALIDATE_CONSTRAINT
      VALIDATE_KW "validate"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "parted_validate_test_chka"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_validate_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    COMMENT "-- test alter column options"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attmp"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "i"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IDENT "i"
      WHITESPACE " "
      SET_OPTIONS
        SET_KW "SET"
        WHITESPACE " "
        L_PAREN "("
        NAME
          IDENT "n_distinct"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
        COMMA ","
        WHITESPACE " "
        NAME
          IDENT "n_distinct_inherited"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      IDENT "i"
      WHITESPACE " "
      RESET_OPTIONS
        RESET_KW "RESET"
        WHITESPACE " "
        L_PAREN "("
        NAME
          IDENT "n_distinct_inherited"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ANALYZE_STMT
    ANALYZE_KW "ANALYZE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attmp"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_USER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_alter_table_user1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that violating rows are correctly reported when attaching as the"
    WHITESPACE "\n"
    COMMENT "-- default partition"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "defpart_attach_test"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "defpart_attach_test1"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "defpart_attach_test"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "defpart_attach_test_d"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "defpart_attach_test_d"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "drop"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "defpart_attach_test_d"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- error because its constraint as the default partition would be violated"
  WHITESPACE "\n"
  COMMENT "-- by the row containing 1"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "defpart_attach_test"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "attach"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "defpart_attach_test_d"
      WHITESPACE " "
      DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "delete"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "defpart_attach_test_d"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "defpart_attach_test_d"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- should be attached successfully and without needing to be scanned"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "defpart_attach_test"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "attach"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "defpart_attach_test_d"
      WHITESPACE " "
      DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that attaching a partition correctly reports any rows in the default"
    WHITESPACE "\n"
    COMMENT "-- partition that should not be there for the new partition to be attached"
    WHITESPACE "\n"
    COMMENT "-- successfully"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "defpart_attach_test_2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      LIKE_CLAUSE
        LIKE_KW "like"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "defpart_attach_test_d"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "defpart_attach_test"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "attach"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "defpart_attach_test_2"
      WHITESPACE " "
      FOR_KW "for"
      WHITESPACE " "
      VALUES_KW "values"
      WHITESPACE " "
      IN_KW "in"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "defpart_attach_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check combinations of temporary and permanent relations when attaching"
    WHITESPACE "\n"
    COMMENT "-- partitions."
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "perm_part_parent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temp_part_parent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "perm_part_child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temp_part_child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temp_part_parent"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "attach"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "perm_part_child"
      WHITESPACE " "
      DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- error"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "perm_part_parent"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "attach"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "temp_part_child"
      WHITESPACE " "
      DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- error"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temp_part_parent"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "attach"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "temp_part_child"
      WHITESPACE " "
      DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- ok"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "perm_part_parent"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temp_part_parent"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that attaching partitions to a table while it is being used is"
    WHITESPACE "\n"
    COMMENT "-- prevented"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tab_part_attach"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "func_part_attach"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TRIGGER_KW "trigger"
    WHITESPACE "\n  "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\n  begin\n    execute 'create table tab_part_attach_1 (a int)';\n    execute 'alter table tab_part_attach attach partition tab_part_attach_1 for values in (1)';\n    return null;\n  end $$"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TRIGGER_KW "trigger"
    WHITESPACE " "
    NAME
      IDENT "trig_part_attach"
    WHITESPACE " "
    BEFORE_KW "before"
    WHITESPACE " "
    INSERT_KW "insert"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tab_part_attach"
    WHITESPACE "\n  "
    FOR_KW "for"
    WHITESPACE " "
    EACH_KW "each"
    WHITESPACE " "
    STATEMENT_KW "statement"
    WHITESPACE " "
    EXECUTE_KW "execute"
    WHITESPACE " "
    PROCEDURE_KW "procedure"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "func_part_attach"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tab_part_attach"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tab_part_attach"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "drop"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "func_part_attach"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test case where the partitioning operator is a SQL function whose"
  WHITESPACE "\n"
  COMMENT "-- evaluation results in the table's relcache being rebuilt partway through"
  WHITESPACE "\n"
  COMMENT "-- the execution of an ATTACH PARTITION command"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "at_test_sql_partop"
    WHITESPACE " "
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "int4"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          IDENT "int4"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE "\n"
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$ select case when $1 = $2 then 0 when $1 > $2 then 1 else -1 end; $$"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_OPERATOR_CLASS_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OPERATOR_KW "operator"
    WHITESPACE " "
    CLASS_KW "class"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "at_test_sql_partop"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    WHITESPACE " "
    USING_KW "using"
    WHITESPACE " "
    NAME_REF
      IDENT "btree"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n    "
    OPERATOR_KW "operator"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
    WHITESPACE " "
    L_ANGLE "<"
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    R_PAREN ")"
    COMMA ","
    WHITESPACE " "
    OPERATOR_KW "operator"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "2"
    WHITESPACE " "
    LTEQ "<="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    R_PAREN ")"
    COMMA ","
    WHITESPACE "\n    "
    OPERATOR_KW "operator"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "3"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    R_PAREN ")"
    COMMA ","
    WHITESPACE " "
    OPERATOR_KW "operator"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "4"
    WHITESPACE " "
    GTEQ ">="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    R_PAREN ")"
    COMMA ","
    WHITESPACE "\n    "
    OPERATOR_KW "operator"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "5"
    WHITESPACE " "
    R_ANGLE ">"
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    R_PAREN ")"
    COMMA ","
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_test_sql_partop"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "int4"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          IDENT "int4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "at_test_sql_partop"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    RANGE_KW "range"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    IDENT "at_test_sql_partop"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "at_test_sql_partop_1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_test_sql_partop"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "attach"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "at_test_sql_partop_1"
      WHITESPACE " "
      FOR_KW "for"
      WHITESPACE " "
      VALUES_KW "values"
      WHITESPACE " "
      FROM_KW "from"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      R_PAREN ")"
      WHITESPACE " "
      TO_KW "to"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_test_sql_partop"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_OPERATOR_CLASS_STMT
    DROP_KW "drop"
    WHITESPACE " "
    OPERATOR_KW "operator"
    WHITESPACE " "
    CLASS_KW "class"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_test_sql_partop"
    WHITESPACE " "
    USING_KW "using"
    WHITESPACE " "
    NAME_REF
      IDENT "btree"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "drop"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "at_test_sql_partop"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "/* Test case for bug #16242 */"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- We create a parent and child where the child has missing"
    WHITESPACE "\n"
    COMMENT "-- non-null attribute values, and arrange to pass them through"
    WHITESPACE "\n"
    COMMENT "-- tuple conversion from the child to the parent tupdesc"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bar1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
        WHITESPACE " "
        DEFAULT_CONSTRAINT
          DEFAULT_KW "default"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1"
      R_PAREN ")"
    WHITESPACE "\n  "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    RANGE_KW "range"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bar2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bar2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bar2"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INTEGER_KW "integer"
      WHITESPACE " "
      NOT_NULL_CONSTRAINT
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
      WHITESPACE " "
      DEFAULT_CONSTRAINT
        DEFAULT_KW "default"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- (at this point bar2 contains tuple with natts=1)"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bar1"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "attach"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "bar2"
      WHITESPACE " "
      DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- this works:"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "bar1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- this exercises tuple conversion:"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "xtrig"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE "\n  "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TRIGGER_KW "trigger"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE "\n"
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\n  declare\n    r record;\n  begin\n    for r in select * from old loop\n      raise info 'a=%, b=%', r.a, r.b;\n    end loop;\n    return NULL;\n  end;\n$$"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TRIGGER_KW "trigger"
    WHITESPACE " "
    NAME
      IDENT "xtrig"
    WHITESPACE "\n  "
    AFTER_KW "after"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bar1"
    WHITESPACE "\n  "
    REFERENCING_KW "referencing"
    WHITESPACE " "
    OLD_KW "old"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    NAME_REF
      OLD_KW "old"
    WHITESPACE "\n  "
    FOR_KW "for"
    WHITESPACE " "
    EACH_KW "each"
    WHITESPACE " "
    STATEMENT_KW "statement"
    WHITESPACE " "
    EXECUTE_KW "execute"
    WHITESPACE " "
    PROCEDURE_KW "procedure"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "xtrig"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bar1"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "/* End test case for bug #16242 */"
  WHITESPACE "\n\n"
  COMMENT "/* Test case for bug #17409 */"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attbl"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "p1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          CONSTRAINT_KW "constraint"
          WHITESPACE " "
          NAME_REF
            IDENT "pk_attbl"
          WHITESPACE " "
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atref"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        REFERENCES_CONSTRAINT
          REFERENCES_KW "references"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "attbl"
          L_PAREN "("
          NAME_REF
            IDENT "p1"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CLUSTER_STMT
    CLUSTER_KW "cluster"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attbl"
    WHITESPACE " "
    USING_KW "using"
    WHITESPACE " "
    NAME_REF
      IDENT "pk_attbl"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attbl"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "p1"
      WHITESPACE " "
      SET_TYPE
        SET_KW "set"
        WHITESPACE " "
        DATA_KW "data"
        WHITESPACE " "
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atref"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "c1"
      WHITESPACE " "
      SET_TYPE
        SET_KW "set"
        WHITESPACE " "
        DATA_KW "data"
        WHITESPACE " "
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attbl"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atref"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attbl"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "p1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          CONSTRAINT_KW "constraint"
          WHITESPACE " "
          NAME_REF
            IDENT "pk_attbl"
          WHITESPACE " "
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attbl"
    WHITESPACE " "
    REPLICA_IDENTITY
      REPLICA_KW "replica"
      WHITESPACE " "
      IDENTITY_KW "identity"
      WHITESPACE " "
      USING_KW "using"
      WHITESPACE " "
      INDEX_KW "index"
      WHITESPACE " "
      NAME_REF
        IDENT "pk_attbl"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "atref"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        REFERENCES_CONSTRAINT
          REFERENCES_KW "references"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "attbl"
          L_PAREN "("
          NAME_REF
            IDENT "p1"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attbl"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "p1"
      WHITESPACE " "
      SET_TYPE
        SET_KW "set"
        WHITESPACE " "
        DATA_KW "data"
        WHITESPACE " "
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atref"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "c1"
      WHITESPACE " "
      SET_TYPE
        SET_KW "set"
        WHITESPACE " "
        DATA_KW "data"
        WHITESPACE " "
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attbl"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "atref"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "/* End test case for bug #17409 */"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test that ALTER TABLE rewrite preserves a clustered index"
    WHITESPACE "\n"
    COMMENT "-- for normal indexes and indexes on constraints."
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "alttype_cluster"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alttype_cluster"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "a"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "alttype_cluster_ind"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alttype_cluster"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alttype_cluster"
    WHITESPACE " "
    DISABLE_CLUSTER
      CLUSTER_KW "cluster"
      WHITESPACE " "
      ON_KW "on"
      WHITESPACE " "
      NAME_REF
        IDENT "alttype_cluster_ind"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Normal index remains clustered."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "indexrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "indisclustered"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_index"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "indrelid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'alttype_cluster'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      CAST_EXPR
        CAST_EXPR
          NAME_REF
            IDENT "indexrelid"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alttype_cluster"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "indexrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "indisclustered"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_index"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "indrelid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'alttype_cluster'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      CAST_EXPR
        CAST_EXPR
          NAME_REF
            IDENT "indexrelid"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Constraint index remains clustered."
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alttype_cluster"
    WHITESPACE " "
    DISABLE_CLUSTER
      CLUSTER_KW "cluster"
      WHITESPACE " "
      ON_KW "on"
      WHITESPACE " "
      NAME_REF
        IDENT "alttype_cluster_pkey"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "indexrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "indisclustered"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_index"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "indrelid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'alttype_cluster'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      CAST_EXPR
        CAST_EXPR
          NAME_REF
            IDENT "indexrelid"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alttype_cluster"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "indexrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "indisclustered"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_index"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "indrelid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'alttype_cluster'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      CAST_EXPR
        CAST_EXPR
          NAME_REF
            IDENT "indexrelid"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alttype_cluster"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- Check that attaching or detaching a partitioned partition correctly leads"
    WHITESPACE "\n"
    COMMENT "-- to its partitions' constraint being updated to reflect the parent's"
    WHITESPACE "\n"
    COMMENT "-- newly added/removed constraint"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "target_parted"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attach_parted"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "attach_parted_part1"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attach_parted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- insert a row directly into the leaf partition so that its partition"
  WHITESPACE "\n"
  COMMENT "-- constraint is built and stored in the relcache"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attach_parted_part1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- the following better invalidate the partition constraint of the leaf"
  WHITESPACE "\n"
  COMMENT "-- partition too..."
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "target_parted"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "attach"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "attach_parted"
      WHITESPACE " "
      FOR_KW "for"
      WHITESPACE " "
      VALUES_KW "values"
      WHITESPACE " "
      IN_KW "in"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ...such that the following insert fails"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attach_parted_part1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ...and doesn't when the partition is detached along with its own partition"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "target_parted"
    WHITESPACE " "
    DETACH_PARTITION
      DETACH_KW "detach"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "attach_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "attach_parted_part1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test altering table having publication"
  WHITESPACE "\n"
  CREATE_SCHEMA_STMT
    CREATE_KW "create"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    NAME
      IDENT "alter1"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_SCHEMA_STMT
    CREATE_KW "create"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    NAME
      IDENT "alter2"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "t1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "client_min_messages"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'ERROR'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_PUBLICATION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    PUBLICATION_KW "publication"
    WHITESPACE " "
    NAME
      IDENT "pub1"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    COMMA ","
    WHITESPACE " "
    TABLES_KW "tables"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    NAME_REF
      IDENT "alter2"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "client_min_messages"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter1"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    SET_SCHEMA
      SET_KW "set"
      WHITESPACE " "
      SCHEMA_KW "schema"
      WHITESPACE " "
      NAME_REF
        IDENT "alter2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_PUBLICATION_STMT
    DROP_KW "drop"
    WHITESPACE " "
    PUBLICATION_KW "publication"
    WHITESPACE " "
    NAME_REF
      IDENT "pub1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_SCHEMA_STMT
    DROP_KW "drop"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    NAME
      IDENT "alter1"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_SCHEMA_STMT
    DROP_KW "drop"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    NAME
      IDENT "alter2"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n"
---
ERROR@12719: expected VALID_KW
ERROR@12719: expected SEMICOLON
ERROR@12720: expected command, found IDENT
ERROR@15268: expected R_PAREN
ERROR@15268: expected SEMICOLON
ERROR@15269: expected command, found NOT_KW
ERROR@15273: expected command, found VALID_KW
ERROR@15278: expected command, found R_PAREN
ERROR@15683: expected R_PAREN
ERROR@15684: expected command, found OFF_KW
ERROR@15687: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@15687: expected SEMICOLON
ERROR@15687: expected command, found R_PAREN
ERROR@15885: expected R_PAREN
ERROR@15886: expected command, found OFF_KW
ERROR@15889: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@15889: expected SEMICOLON
ERROR@15889: expected command, found R_PAREN
ERROR@15988: expected R_PAREN
ERROR@15989: expected command, found OFF_KW
ERROR@15992: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@15992: expected SEMICOLON
ERROR@15992: expected command, found R_PAREN
ERROR@16211: expected R_PAREN
ERROR@16212: expected command, found OFF_KW
ERROR@16215: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@16215: expected SEMICOLON
ERROR@16215: expected command, found R_PAREN
ERROR@33822: expected FOREIGN_KW
ERROR@33822: expected KEY_KW
ERROR@33822: expected column list
ERROR@33822: expected REFERENCES_KW
ERROR@33826: expected SEMICOLON
ERROR@33827: expected command, found NULL_KW
ERROR@33832: expected command, found IDENT
ERROR@33835: expected command, found NOT_KW
ERROR@33839: expected command, found VALID_KW
ERROR@33940: expected FOREIGN_KW
ERROR@33940: expected KEY_KW
ERROR@33940: expected column list
ERROR@33940: expected REFERENCES_KW
ERROR@33944: expected SEMICOLON
ERROR@33945: expected command, found NULL_KW
ERROR@33950: expected command, found IDENT
ERROR@38443: expected L_PAREN
ERROR@38448: expected R_PAREN
ERROR@38448: expected SEMICOLON
ERROR@38449: expected command, found OIDS_KW
ERROR@42440: expected command, found INT_NUMBER
ERROR@42443: expected command, found INT_NUMBER
ERROR@42446: expected command, found INT_NUMBER
ERROR@42495: expected command, found INT_NUMBER
ERROR@42498: expected command, found INT_NUMBER
ERROR@42635: expected command, found INT_NUMBER
ERROR@42638: expected command, found INT_NUMBER
ERROR@43987: expected NULL_KW
ERROR@43987: expected SEMICOLON
ERROR@43988: expected command, found IDENT
ERROR@44078: expected NULL_KW
ERROR@44078: expected SEMICOLON
ERROR@44079: expected command, found IDENT
ERROR@44088: expected command, found IDENT
ERROR@59471: expected R_PAREN
ERROR@59472: expected command, found OFF_KW
ERROR@59475: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@59475: expected SEMICOLON
ERROR@59475: expected command, found R_PAREN
ERROR@59632: expected R_PAREN
ERROR@59633: expected command, found OFF_KW
ERROR@59636: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@59636: expected SEMICOLON
ERROR@59636: expected command, found R_PAREN
ERROR@67262: expected type name
ERROR@67262: expected SEMICOLON
ERROR@67262: expected command, found DOT
ERROR@67263: expected command, found IDENT
ERROR@67270: expected command, found INTEGER_KW
ERROR@67278: expected command, found CHECK_KW
ERROR@67284: expected command, found L_PAREN
ERROR@67285: expected command, found VALUE_KW
ERROR@67291: expected command, found R_ANGLE
ERROR@67293: expected command, found INT_NUMBER
ERROR@67294: expected command, found R_PAREN
ERROR@67380: expected R_PAREN
ERROR@67380: expected function option
ERROR@67380: expected SEMICOLON
ERROR@67380: expected command, found DOT
ERROR@67381: expected command, found IDENT
ERROR@67386: expected command, found COMMA
ERROR@67388: expected command, found IDENT
ERROR@67394: expected command, found DOT
ERROR@67395: expected command, found IDENT
ERROR@67400: expected command, found R_PAREN
ERROR@67402: expected command, found RETURNS_KW
ERROR@67410: expected command, found BOOLEAN_KW
ERROR@67418: expected command, found LANGUAGE_KW
ERROR@67427: expected command, found SQL_KW
ERROR@67431: expected command, found AS_KW
ERROR@67434: expected command, found STRING
ERROR@68763: expected R_PAREN
ERROR@68763: expected function option
ERROR@68763: expected SEMICOLON
ERROR@68763: expected command, found DOT
ERROR@68764: expected command, found IDENT
ERROR@68769: expected command, found COMMA
ERROR@68771: expected command, found IDENT
ERROR@68777: expected command, found DOT
ERROR@68778: expected command, found IDENT
ERROR@68783: expected command, found R_PAREN
ERROR@68795: expected EQ
ERROR@71700: expected type name
ERROR@74909: expected FOREIGN_KW
ERROR@74909: expected KEY_KW
ERROR@74909: expected column list
ERROR@74909: expected REFERENCES_KW
ERROR@74913: expected R_PAREN
ERROR@74913: expected SEMICOLON
ERROR@74914: expected command, found NULL_KW
ERROR@74919: expected command, found IDENT
ERROR@74921: expected command, found COMMA
ERROR@74925: expected command, found IDENT
ERROR@74938: expected command, found INT_KW
ERROR@74942: expected command, found CHECK_KW
ERROR@74948: expected command, found L_PAREN
ERROR@74949: expected command, found IDENT
ERROR@74962: expected command, found R_ANGLE
ERROR@74964: expected command, found INT_NUMBER
ERROR@74965: expected command, found R_PAREN
ERROR@74966: expected command, found COMMA
ERROR@74970: expected command, found IDENT
ERROR@74982: expected command, found INT_KW
ERROR@74985: expected command, found COMMA
ERROR@74989: expected command, found CONSTRAINT_KW
ERROR@75000: expected command, found IDENT
ERROR@75016: expected command, found PRIMARY_KW
ERROR@75024: expected command, found KEY_KW
ERROR@75028: expected command, found L_PAREN
ERROR@75029: expected command, found IDENT
ERROR@75031: expected command, found R_PAREN
ERROR@75032: expected command, found R_PAREN
ERROR@86438: expected name
ERROR@86438: expected type name
ERROR@86447: expected SEMICOLON
ERROR@86448: expected command, found IDENT
ERROR@91452: expected R_PAREN
ERROR@91452: expected SEMICOLON
ERROR@91453: expected command, found NO_KW
ERROR@91456: expected command, found INHERIT_KW
ERROR@91463: expected command, found COMMA
ERROR@91466: expected command, found IDENT
ERROR@91468: expected command, found CHAR_KW
ERROR@91472: expected command, found L_PAREN
ERROR@91473: expected command, found INT_NUMBER
ERROR@91474: expected command, found R_PAREN
ERROR@91476: expected command, found COLLATE_KW
ERROR@91484: expected command, found IDENT
ERROR@91487: expected command, found COMMA
ERROR@91490: expected command, found CONSTRAINT_KW
ERROR@91501: expected command, found IDENT
ERROR@91509: expected command, found CHECK_KW
ERROR@91515: expected command, found L_PAREN
ERROR@91516: expected command, found IDENT
ERROR@91518: expected command, found R_ANGLE
ERROR@91520: expected command, found INT_NUMBER
ERROR@91521: expected command, found R_PAREN
ERROR@91523: expected command, found R_PAREN

---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/tsrf.sql
---
SOURCE_FILE
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- tsrf - targetlist set returning function tests"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  COMMENT "-- simple srf"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- parallel iteration"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "3"
              COMMA ","
              LITERAL
                INT_NUMBER "5"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- parallel iteration, different number of rows"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "4"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- srf, with SRF argument"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "generate_series"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    INT_NUMBER "1"
                  COMMA ","
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "3"
                  R_PAREN ")"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- but we've traditionally rejected the same in FROM"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- srf, with two SRF arguments"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  IDENT "generate_series"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    INT_NUMBER "1"
                  COMMA ","
                  LITERAL
                    INT_NUMBER "3"
                  R_PAREN ")"
              COMMA ","
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "generate_series"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    INT_NUMBER "2"
                  COMMA ","
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "4"
                  R_PAREN ")"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check proper nesting of SRFs in different expressions"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "generate_series"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    INT_NUMBER "1"
                  COMMA ","
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "3"
                  R_PAREN ")"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "2"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "4"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "generate_series"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    INT_NUMBER "1"
                  COMMA ","
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "3"
                  R_PAREN ")"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "2"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "4"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "few"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "dataa"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "datab"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "few"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'foo'"
      R_PAREN ")"
      COMMA ","
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'bar'"
      R_PAREN ")"
      COMMA ","
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'b'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'bar'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- SRF with a provably-dummy relation"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "unnest"
            ARG_LIST
              L_PAREN "("
              ARRAY_EXPR
                ARRAY_KW "ARRAY"
                L_BRACK "["
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "2"
                R_BRACK "]"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "unnest"
            ARG_LIST
              L_PAREN "("
              ARRAY_EXPR
                ARRAY_KW "ARRAY"
                L_BRACK "["
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "2"
                R_BRACK "]"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- SRF shouldn't prevent upper query from recognizing lower as dummy"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "f1"
      COMMA ","
      WHITESPACE "\n  "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                CALL_EXPR
                  NAME_REF
                    IDENT "unnest"
                  ARG_LIST
                    L_PAREN "("
                    ARRAY_EXPR
                      ARRAY_KW "ARRAY"
                      L_BRACK "["
                      LITERAL
                        INT_NUMBER "1"
                      COMMA ","
                      LITERAL
                        INT_NUMBER "2"
                      R_BRACK "]"
                    R_PAREN ")"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "few"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "f2"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            LITERAL
              FALSE_KW "false"
          WHITESPACE " "
          OFFSET_CLAUSE
            OFFSET_KW "OFFSET"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "ss"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "f1"
      COMMA ","
      WHITESPACE "\n  "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                CALL_EXPR
                  NAME_REF
                    IDENT "unnest"
                  ARG_LIST
                    L_PAREN "("
                    ARRAY_EXPR
                      ARRAY_KW "ARRAY"
                      L_BRACK "["
                      LITERAL
                        INT_NUMBER "1"
                      COMMA ","
                      LITERAL
                        INT_NUMBER "2"
                      R_BRACK "]"
                    R_PAREN ")"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "few"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "f2"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            LITERAL
              FALSE_KW "false"
          WHITESPACE " "
          OFFSET_CLAUSE
            OFFSET_KW "OFFSET"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "ss"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- SRF output order of sorting is maintained, if SRF is not referenced"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "few"
            DOT "."
            NAME_REF
              IDENT "id"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "g"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "id"
      WHITESPACE " "
      DESC_KW "DESC"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- but SRFs can be referenced in sort"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "few"
            DOT "."
            NAME_REF
              IDENT "id"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "g"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "id"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "g"
      WHITESPACE " "
      DESC_KW "DESC"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "few"
            DOT "."
            NAME_REF
              IDENT "id"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "g"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "id"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
      WHITESPACE " "
      DESC_KW "DESC"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- it's weird to have ORDER BYs that increase the number of results"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "few"
            DOT "."
            NAME_REF
              IDENT "id"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "id"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
      WHITESPACE " "
      DESC_KW "DESC"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- SRFs are computed after aggregation"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_hashagg"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- stable output order"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "few"
            DOT "."
            NAME_REF
              IDENT "dataa"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "id"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "id"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "unnest"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'{1,1,3}'"
                COLON2 "::"
                ARRAY_TYPE
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          INT_KW "int"
                  L_BRACK "["
                  R_BRACK "]"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "few"
          DOT "."
          NAME_REF
            IDENT "id"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "few"
        DOT "."
        NAME_REF
          IDENT "dataa"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- unless referenced in GROUP BY clause"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "few"
            DOT "."
            NAME_REF
              IDENT "dataa"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "id"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "id"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "unnest"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'{1,1,3}'"
                COLON2 "::"
                ARRAY_TYPE
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          INT_KW "int"
                  L_BRACK "["
                  R_BRACK "]"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "few"
          DOT "."
          NAME_REF
            IDENT "id"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "few"
        DOT "."
        NAME_REF
          IDENT "dataa"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "unnest"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'{1,1,3}'"
            COLON2 "::"
            ARRAY_TYPE
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      INT_KW "int"
              L_BRACK "["
              R_BRACK "]"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "few"
            DOT "."
            NAME_REF
              IDENT "dataa"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "id"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "id"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "unnest"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'{1,1,3}'"
                COLON2 "::"
                ARRAY_TYPE
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          INT_KW "int"
                  L_BRACK "["
                  R_BRACK "]"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "few"
          DOT "."
          NAME_REF
            IDENT "id"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "few"
        DOT "."
        NAME_REF
          IDENT "dataa"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "5"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_hashagg"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check HAVING works when GROUP BY does [not] reference SRF output"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "dataa"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
    WHITESPACE " "
    HAVING_CLAUSE
      HAVING_KW "HAVING"
      WHITESPACE " "
      BIN_EXPR
        CALL_EXPR
          NAME_REF
            IDENT "count"
          ARG_LIST
            L_PAREN "("
            STAR "*"
            R_PAREN ")"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "dataa"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
    WHITESPACE " "
    HAVING_CLAUSE
      HAVING_KW "HAVING"
      WHITESPACE " "
      BIN_EXPR
        CALL_EXPR
          NAME_REF
            IDENT "count"
          ARG_LIST
            L_PAREN "("
            STAR "*"
            R_PAREN ")"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- it's weird to have GROUP BYs that increase the number of results"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "few"
            DOT "."
            NAME_REF
              IDENT "dataa"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "dataa"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'a'"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "few"
        DOT "."
        NAME_REF
          IDENT "dataa"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "few"
            DOT "."
            NAME_REF
              IDENT "dataa"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "dataa"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'a'"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "few"
        DOT "."
        NAME_REF
          IDENT "dataa"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "unnest"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'{1,1,3}'"
            COLON2 "::"
            ARRAY_TYPE
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      INT_KW "int"
              L_BRACK "["
              R_BRACK "]"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- SRFs are not allowed if they'd need to be conditionally executed"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "q1"
        COMMA ","
        WHITESPACE " "
        TARGET
          CASE_EXPR
            CASE_KW "case"
            WHITESPACE " "
            WHEN_CLAUSE
              WHEN_KW "when"
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "q1"
                WHITESPACE " "
                R_ANGLE ">"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "0"
              WHITESPACE " "
              THEN_KW "then"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "generate_series"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    INT_NUMBER "1"
                  COMMA ","
                  LITERAL
                    INT_NUMBER "3"
                  R_PAREN ")"
            WHITESPACE " "
            ELSE_KW "else"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
            WHITESPACE " "
            END_KW "end"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "int8_tbl"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "q1"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              COALESCE_KW "coalesce"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  IDENT "generate_series"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    INT_NUMBER "1"
                  COMMA ","
                  LITERAL
                    INT_NUMBER "3"
                  R_PAREN ")"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "int8_tbl"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- SRFs are not allowed in aggregate arguments"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  IDENT "generate_series"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    INT_NUMBER "1"
                  COMMA ","
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "3"
                  R_PAREN ")"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ... unless they're within a sub-select"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                PAREN_EXPR
                  L_PAREN "("
                  BIN_EXPR
                    LITERAL
                      INT_NUMBER "3"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    CALL_EXPR
                      NAME_REF
                        ANY_KW "ANY"
                      L_PAREN "("
                      SELECT
                        SELECT_CLAUSE
                          SELECT_KW "SELECT"
                          WHITESPACE " "
                          TARGET_LIST
                            TARGET
                              CALL_EXPR
                                NAME_REF
                                  IDENT "generate_series"
                                ARG_LIST
                                  L_PAREN "("
                                  LITERAL
                                    INT_NUMBER "1"
                                  COMMA ","
                                  LITERAL
                                    INT_NUMBER "4"
                                  R_PAREN ")"
                      R_PAREN ")"
                  R_PAREN ")"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        INT_KW "int"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                PAREN_EXPR
                  L_PAREN "("
                  BIN_EXPR
                    LITERAL
                      INT_NUMBER "3"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    CALL_EXPR
                      NAME_REF
                        ANY_KW "ANY"
                      L_PAREN "("
                      SELECT
                        SELECT_CLAUSE
                          SELECT_KW "SELECT"
                          WHITESPACE " "
                          TARGET_LIST
                            TARGET
                              CALL_EXPR
                                NAME_REF
                                  IDENT "lag"
                                ARG_LIST
                                  L_PAREN "("
                                  NAME_REF
                                    IDENT "x"
                                  R_PAREN ")"
                                WHITESPACE " "
                                OVER_CLAUSE
                                  OVER_KW "over"
                                  L_PAREN "("
                                  WINDOW_DEF
                                    ORDER_BY_CLAUSE
                                      ORDER_KW "order"
                                      WHITESPACE " "
                                      BY_KW "by"
                                      WHITESPACE " "
                                      NAME_REF
                                        IDENT "x"
                                  R_PAREN ")"
                        WHITESPACE "\n                    "
                        FROM_CLAUSE
                          FROM_KW "FROM"
                          WHITESPACE " "
                          CALL_EXPR
                            NAME_REF
                              IDENT "generate_series"
                            ARG_LIST
                              L_PAREN "("
                              LITERAL
                                INT_NUMBER "1"
                              COMMA ","
                              LITERAL
                                INT_NUMBER "4"
                              R_PAREN ")"
                          WHITESPACE " "
                          ALIAS
                            NAME
                              IDENT "x"
                      R_PAREN ")"
                  R_PAREN ")"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        INT_KW "int"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- SRFs are not allowed in window function arguments, either"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  IDENT "generate_series"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    INT_NUMBER "1"
                  COMMA ","
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "3"
                  R_PAREN ")"
              R_PAREN ")"
            WHITESPACE " "
            OVER_CLAUSE
              OVER_KW "OVER"
              L_PAREN "("
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- SRFs are normally computed after window functions"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "id"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "lag"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "id"
              R_PAREN ")"
            WHITESPACE " "
            OVER_CLAUSE
              OVER_KW "OVER"
              L_PAREN "("
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
            WHITESPACE " "
            OVER_CLAUSE
              OVER_KW "OVER"
              L_PAREN "("
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- unless referencing SRFs"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "SUM"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  IDENT "count"
                ARG_LIST
                  L_PAREN "("
                  STAR "*"
                  R_PAREN ")"
              R_PAREN ")"
            WHITESPACE " "
            OVER_CLAUSE
              OVER_KW "OVER"
              L_PAREN "("
              WINDOW_DEF
                PARTITION_KW "PARTITION"
                WHITESPACE " "
                BY_KW "BY"
                WHITESPACE " "
                CALL_EXPR
                  NAME_REF
                    IDENT "generate_series"
                  ARG_LIST
                    L_PAREN "("
                    LITERAL
                      INT_NUMBER "1"
                    COMMA ","
                    LITERAL
                      INT_NUMBER "3"
                    R_PAREN ")"
                WHITESPACE " "
                ORDER_BY_CLAUSE
                  ORDER_KW "ORDER"
                  WHITESPACE " "
                  BY_KW "BY"
                  WHITESPACE " "
                  CALL_EXPR
                    NAME_REF
                      IDENT "generate_series"
                    ARG_LIST
                      L_PAREN "("
                      LITERAL
                        INT_NUMBER "1"
                      COMMA ","
                      LITERAL
                        INT_NUMBER "3"
                      R_PAREN ")"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "g"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "g"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- sorting + grouping"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "few"
            DOT "."
            NAME_REF
              IDENT "dataa"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "id"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "id"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "few"
        DOT "."
        NAME_REF
          IDENT "dataa"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- grouping sets are a bit special, they produce NULLs in columns not actually NULL"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_hashagg"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      FALSE_KW "false"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "dataa"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "datab"
          WHITESPACE " "
          NAME
            IDENT "b"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "2"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "g"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      CUBE_KW "CUBE"
      TUPLE_EXPR
        L_PAREN "("
        NAME_REF
          IDENT "dataa"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "datab"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "dataa"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "datab"
          WHITESPACE " "
          NAME
            IDENT "b"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "2"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "g"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      CUBE_KW "CUBE"
      TUPLE_EXPR
        L_PAREN "("
        NAME_REF
          IDENT "dataa"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "datab"
        R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "dataa"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "dataa"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "datab"
          WHITESPACE " "
          NAME
            IDENT "b"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "2"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "g"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      CUBE_KW "CUBE"
      TUPLE_EXPR
        L_PAREN "("
        NAME_REF
          IDENT "dataa"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "datab"
        R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "g"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "dataa"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "datab"
          WHITESPACE " "
          NAME
            IDENT "b"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "2"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "g"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      CUBE_KW "CUBE"
      TUPLE_EXPR
        L_PAREN "("
        NAME_REF
          IDENT "dataa"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "datab"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "g"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "dataa"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "datab"
          WHITESPACE " "
          NAME
            IDENT "b"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "2"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "g"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      CUBE_KW "CUBE"
      TUPLE_EXPR
        L_PAREN "("
        NAME_REF
          IDENT "dataa"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "datab"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "g"
        R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "dataa"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "dataa"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "datab"
          WHITESPACE " "
          NAME
            IDENT "b"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "2"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "g"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      CUBE_KW "CUBE"
      TUPLE_EXPR
        L_PAREN "("
        NAME_REF
          IDENT "dataa"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "datab"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "g"
        R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "g"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_hashagg"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- case with degenerate ORDER BY"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            STRING "'foo'"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "f"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "2"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "g"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            STRING "'foo'"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "f"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "2"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "g"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- data modification"
  WHITESPACE "\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "fewmore"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "generate_series"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                LITERAL
                  INT_NUMBER "3"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              DATA_KW "data"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "fewmore"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "4"
          COMMA ","
          LITERAL
            INT_NUMBER "5"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "fewmore"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- SRFs are not allowed in UPDATE (they once were, but it was nonsense)"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "fewmore"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      DATA_KW "data"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "generate_series"
      ARG_LIST
        L_PAREN "("
        LITERAL
          INT_NUMBER "4"
        COMMA ","
        LITERAL
          INT_NUMBER "9"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- SRFs are not allowed in RETURNING"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "fewmore"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "generate_series"
      ARG_LIST
        L_PAREN "("
        LITERAL
          INT_NUMBER "1"
        COMMA ","
        LITERAL
          INT_NUMBER "3"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- nor standalone VALUES (but surely this is a bug?)"
  WHITESPACE "\n"
  SELECT
    VALUES_KW "VALUES"
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "generate_series"
      ARG_LIST
        L_PAREN "("
        LITERAL
          INT_NUMBER "1"
        COMMA ","
        LITERAL
          INT_NUMBER "2"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- We allow tSRFs that are not at top level"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "int4mul"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  IDENT "generate_series"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    INT_NUMBER "1"
                  COMMA ","
                  LITERAL
                    INT_NUMBER "2"
                  R_PAREN ")"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "10"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "generate_series"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                LITERAL
                  INT_NUMBER "3"
                R_PAREN ")"
            WHITESPACE " "
            IS_DISTINCT_FROM
              IS_KW "IS"
              WHITESPACE " "
              DISTINCT_KW "DISTINCT"
              WHITESPACE " "
              FROM_KW "FROM"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- but SRFs in function RTEs must be at top level (annoying restriction)"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "int4mul"
        ARG_LIST
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "2"
              R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- DISTINCT ON is evaluated before tSRF evaluation if SRF is not"
  WHITESPACE "\n"
  COMMENT "-- referenced either in ORDER BY or in the DISTINCT ON list. The ORDER"
  WHITESPACE "\n"
  COMMENT "-- BY reference can be implicitly generated, if there's no other ORDER BY."
  WHITESPACE "\n\n"
  COMMENT "-- implicit reference (via implicit ORDER) to all columns"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        L_PAREN "("
        NAME_REF
          IDENT "a"
        R_PAREN ")"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "b"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "g"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          COMMA ","
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "4"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "5"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "5"
          COMMA ","
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- unreferenced in DISTINCT ON or ORDER BY"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        L_PAREN "("
        NAME_REF
          IDENT "a"
        R_PAREN ")"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "b"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "g"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          COMMA ","
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "4"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "5"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "5"
          COMMA ","
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "b"
          R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      DESC_KW "DESC"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- referenced in ORDER BY"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        L_PAREN "("
        NAME_REF
          IDENT "a"
        R_PAREN ")"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "b"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "g"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          COMMA ","
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "4"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "5"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "5"
          COMMA ","
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "b"
          R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      DESC_KW "DESC"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "g"
      WHITESPACE " "
      DESC_KW "DESC"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- referenced in ORDER BY and DISTINCT ON"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        L_PAREN "("
        NAME_REF
          IDENT "a"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "b"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "g"
        R_PAREN ")"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "b"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "g"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          COMMA ","
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "4"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "5"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "5"
          COMMA ","
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "b"
          R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      DESC_KW "DESC"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "g"
      WHITESPACE " "
      DESC_KW "DESC"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- only SRF mentioned in DISTINCT ON"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        L_PAREN "("
        NAME_REF
          IDENT "g"
        R_PAREN ")"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "b"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "g"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          COMMA ","
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "4"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "5"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "5"
          COMMA ","
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- LIMIT / OFFSET is evaluated after SRF evaluation"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "2"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "r"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          R_PAREN ")"
    WHITESPACE " "
    LIMIT_CLAUSE
      LIMIT_KW "LIMIT"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
    WHITESPACE " "
    OFFSET_CLAUSE
      OFFSET_KW "OFFSET"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- SRFs are not allowed in LIMIT."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "1"
    WHITESPACE " "
    LIMIT_CLAUSE
      LIMIT_KW "LIMIT"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- tSRF in correlated subquery, referencing table outside"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    CALL_EXPR
                      NAME_REF
                        IDENT "generate_series"
                      ARG_LIST
                        L_PAREN "("
                        LITERAL
                          INT_NUMBER "1"
                        COMMA ","
                        LITERAL
                          INT_NUMBER "3"
                        R_PAREN ")"
              WHITESPACE " "
              LIMIT_CLAUSE
                LIMIT_KW "LIMIT"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "1"
              WHITESPACE " "
              OFFSET_CLAUSE
                OFFSET_KW "OFFSET"
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "few"
                  DOT "."
                  NAME_REF
                    IDENT "id"
            R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "few"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- tSRF in correlated subquery, referencing SRF outside"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    CALL_EXPR
                      NAME_REF
                        IDENT "generate_series"
                      ARG_LIST
                        L_PAREN "("
                        LITERAL
                          INT_NUMBER "1"
                        COMMA ","
                        LITERAL
                          INT_NUMBER "3"
                        R_PAREN ")"
              WHITESPACE " "
              LIMIT_CLAUSE
                LIMIT_KW "LIMIT"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "1"
              WHITESPACE " "
              OFFSET_CLAUSE
                OFFSET_KW "OFFSET"
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "g"
                  DOT "."
                  NAME_REF
                    IDENT "i"
            R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "g"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "i"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Operators can return sets too"
  WHITESPACE "\n"
  CREATE_OPERATOR_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      PIPE "|"
      AT "@"
      PIPE "|"
    WHITESPACE " "
    L_PAREN "("
    NAME
      PROCEDURE_KW "PROCEDURE"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "unnest"
    COMMA ","
    WHITESPACE " "
    NAME
      IDENT "RIGHTARG"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "ANYARRAY"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          PREFIX_EXPR
            CUSTOM_OP
              PIPE "|"
              AT "@"
              PIPE "|"
            ARRAY_EXPR
              ARRAY_KW "ARRAY"
              L_BRACK "["
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "2"
              COMMA ","
              LITERAL
                INT_NUMBER "3"
              R_BRACK "]"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Some fun cases involving duplicate SRF calls"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "x"
        COMMA ","
        WHITESPACE " "
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "generate_series"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                LITERAL
                  INT_NUMBER "3"
                R_PAREN ")"
            WHITESPACE " "
            PLUS "+"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "xp1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "x"
        COMMA ","
        WHITESPACE " "
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "generate_series"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                LITERAL
                  INT_NUMBER "3"
                R_PAREN ")"
            WHITESPACE " "
            PLUS "+"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "xp1"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "generate_series"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                LITERAL
                  INT_NUMBER "3"
                R_PAREN ")"
            PLUS "+"
            LITERAL
              INT_NUMBER "1"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "generate_series"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                LITERAL
                  INT_NUMBER "3"
                R_PAREN ")"
            PLUS "+"
            LITERAL
              INT_NUMBER "1"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that SRFs of same nesting level run in lockstep"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "x"
        COMMA ","
        WHITESPACE " "
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "generate_series"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "3"
                COMMA ","
                LITERAL
                  INT_NUMBER "6"
                R_PAREN ")"
            WHITESPACE " "
            PLUS "+"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "y"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "x"
        COMMA ","
        WHITESPACE " "
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "generate_series"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "3"
                COMMA ","
                LITERAL
                  INT_NUMBER "6"
                R_PAREN ")"
            WHITESPACE " "
            PLUS "+"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "y"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Clean up"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "few"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "fewmore"
  SEMICOLON ";"
  WHITESPACE "\n"
---
ERROR@647: expected R_PAREN
ERROR@648: expected command, found OFF_KW
ERROR@651: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@651: expected SEMICOLON
ERROR@651: expected command, found R_PAREN
ERROR@983: expected R_PAREN
ERROR@984: expected command, found OFF_KW
ERROR@987: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@987: expected SEMICOLON
ERROR@987: expected command, found R_PAREN
ERROR@1180: expected R_PAREN
ERROR@1181: expected command, found OFF_KW
ERROR@1184: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@1184: expected SEMICOLON
ERROR@1184: expected command, found R_PAREN
ERROR@4730: expected R_PAREN
ERROR@4731: expected command, found OFF_KW
ERROR@4734: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@4734: expected SEMICOLON
ERROR@4734: expected command, found R_PAREN
ERROR@7360: expected R_PAREN
ERROR@7361: expected command, found OFF_KW
ERROR@7364: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@7364: expected SEMICOLON
ERROR@7364: expected command, found R_PAREN
ERROR@7523: expected R_PAREN
ERROR@7524: expected command, found OFF_KW
ERROR@7527: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@7527: expected SEMICOLON
ERROR@7527: expected command, found R_PAREN
ERROR@7732: expected R_PAREN
ERROR@7733: expected command, found OFF_KW
ERROR@7736: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@7736: expected SEMICOLON
ERROR@7736: expected command, found R_PAREN

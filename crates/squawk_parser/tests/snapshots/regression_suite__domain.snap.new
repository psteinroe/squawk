---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/domain.sql
---
SOURCE_FILE
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test domains."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  COMMENT "-- Test Comment / Drop"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "domaindroptest"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT_STMT
    COMMENT_KW "comment"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domaindroptest"
    WHITESPACE " "
    IS_KW "is"
    WHITESPACE " "
    LITERAL
      STRING "'About to drop this..'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "dependenttypetest"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "domaindroptest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fail because of dependent type"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domaindroptest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domaindroptest"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- this should fail because already gone"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domaindroptest"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- some error cases"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "d_fail"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "no_such_type"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "d_fail"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    WHITESPACE " "
    REFERENCES_CONSTRAINT
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "cc"
      WHITESPACE " "
      REFERENCES_KW "REFERENCES"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "this_table_not_exists"
      L_PAREN "("
      NAME_REF
        IDENT "i"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "d_fail"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    WHITESPACE " "
    NOT_NULL_CONSTRAINT
      NOT_KW "not"
      WHITESPACE " "
      NULL_KW "null"
  WHITESPACE " "
  ERROR
    NO_KW "no"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "d_fail"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    WHITESPACE " "
    NOT_NULL_CONSTRAINT
      NOT_KW "not"
      WHITESPACE " "
      NULL_KW "null"
    WHITESPACE " "
    NULL_CONSTRAINT
      NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "d_fail"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    WHITESPACE " "
    NOT_NULL_CONSTRAINT
      NOT_KW "not"
      WHITESPACE " "
      NULL_KW "null"
    WHITESPACE " "
    DEFAULT_CONSTRAINT
      DEFAULT_KW "default"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
    WHITESPACE " "
    DEFAULT_CONSTRAINT
      DEFAULT_KW "default"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "d_fail"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    WHITESPACE " "
    DEFAULT_CONSTRAINT
      DEFAULT_KW "DEFAULT"
      WHITESPACE " "
      BIN_EXPR
        LITERAL
          INT_NUMBER "3"
        WHITESPACE " "
        PLUS "+"
        WHITESPACE " "
        LITERAL
          STRING "'h'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "d_fail"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    WHITESPACE " "
    COLLATE
      COLLATE_KW "collate"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "\"C\""
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "d_fail"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "anyelement"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "d_fail"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    WHITESPACE " "
    UNIQUE_CONSTRAINT
      UNIQUE_KW "unique"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "d_fail"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    WHITESPACE " "
    PRIMARY_KEY_CONSTRAINT
      PRIMARY_KW "PRIMARY"
      WHITESPACE " "
      KEY_KW "key"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "d_fail"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    WHITESPACE " "
    GENERATED_CONSTRAINT
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "cc"
      WHITESPACE " "
      GENERATED_KW "generated"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      DEFAULT_KW "default"
      WHITESPACE " "
      AS_KW "as"
      WHITESPACE " "
      IDENTITY_KW "identity"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "d_fail"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    WHITESPACE " "
    CHECK_CONSTRAINT
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "cc"
      WHITESPACE " "
      CHECK_KW "check"
      WHITESPACE " "
      L_PAREN "("
      SELECT
        VALUES_KW "values"
        WHITESPACE " "
        ERROR
          R_ANGLE ">"
        WHITESPACE " "
        ERROR
          INT_NUMBER "1"
        ERROR
          R_PAREN ")"
        WHITESPACE " "
        ERROR
          NO_KW "no"
        WHITESPACE " "
        ERROR
          INHERIT_KW "inherit"
        ERROR
          SEMICOLON ";"
        WHITESPACE "\n"
        ERROR
          CREATE_KW "create"
        WHITESPACE " "
        ERROR
          DOMAIN_KW "domain"
        WHITESPACE " "
        ERROR
          IDENT "d_fail"
        WHITESPACE " "
        ERROR
          AS_KW "as"
        WHITESPACE " "
        ERROR
          IDENT "int4"
        WHITESPACE " "
        ERROR
          CONSTRAINT_KW "constraint"
        WHITESPACE " "
        ERROR
          IDENT "cc"
        WHITESPACE " "
        ERROR
          CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          ERROR
            R_ANGLE ">"
          WHITESPACE " "
          ERROR
            INT_NUMBER "1"
          ERROR
            R_PAREN ")"
          WHITESPACE " "
          ERROR
            DEFERRABLE_KW "deferrable"
          ERROR
            SEMICOLON ";"
          WHITESPACE "\n\n"
          COMMENT "-- Test domain input."
          WHITESPACE "\n\n"
          COMMENT "-- Note: the point of checking both INSERT and COPY FROM is that INSERT"
          WHITESPACE "\n"
          COMMENT "-- exercises CoerceToDomain while COPY exercises domain_in."
          WHITESPACE "\n\n"
          ERROR
            CREATE_KW "create"
          WHITESPACE " "
          ERROR
            DOMAIN_KW "domain"
          WHITESPACE " "
          ERROR
            IDENT "domainvarchar"
          WHITESPACE " "
          ERROR
            VARCHAR_KW "varchar"
          L_PAREN "("
          LITERAL
            INT_NUMBER "5"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "domainnumeric"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            NUMERIC_KW "numeric"
      L_PAREN "("
      ARG_LIST
        ARG
          LITERAL
            INT_NUMBER "8"
        COMMA ","
        ARG
          LITERAL
            INT_NUMBER "2"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "domainint4"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "domaintext"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test explicit coercions --- these should succeed (and truncate)"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_KW "cast"
            L_PAREN "("
            LITERAL
              STRING "'123456'"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "domainvarchar"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_KW "cast"
            L_PAREN "("
            LITERAL
              STRING "'12345'"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "domainvarchar"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test tables using domains"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "basictest"
    WHITESPACE "\n           "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "testint4"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "domainint4"
      WHITESPACE "\n           "
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "testtext"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "domaintext"
      WHITESPACE "\n           "
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "testvarchar"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "domainvarchar"
      WHITESPACE "\n           "
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "testnumeric"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "domainnumeric"
      WHITESPACE "\n           "
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "basictest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'88'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'haha'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'short'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'123.12'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "      "
  COMMENT "-- Good"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "basictest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'88'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'haha'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'short text'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'123.12'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- Bad varchar"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "basictest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'88'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'haha'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'short'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'123.1212'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "    "
  COMMENT "-- Truncate numeric"
  WHITESPACE "\n\n"
  COMMENT "-- Test copy"
  WHITESPACE "\n\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "basictest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check that domains inherit operations from base types"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "testtext"
            WHITESPACE " "
            CUSTOM_OP
              PIPE "|"
              PIPE "|"
            WHITESPACE " "
            NAME_REF
              IDENT "testvarchar"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "concat"
        COMMA ","
        WHITESPACE " "
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "testnumeric"
            WHITESPACE " "
            PLUS "+"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "42"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "sum"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "basictest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check that union/case/coalesce type resolution handles domains properly"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_typeof"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  COALESCE_KW "coalesce"
                ARG_LIST
                  L_PAREN "("
                  CAST_EXPR
                    LITERAL
                      INT_NUMBER "4"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "domainint4"
                  COMMA ","
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "7"
                  R_PAREN ")"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_typeof"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  COALESCE_KW "coalesce"
                ARG_LIST
                  L_PAREN "("
                  CAST_EXPR
                    LITERAL
                      INT_NUMBER "4"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "domainint4"
                  COMMA ","
                  WHITESPACE " "
                  CAST_EXPR
                    LITERAL
                      INT_NUMBER "7"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "domainint4"
                  R_PAREN ")"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "basictest"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domainvarchar"
    WHITESPACE " "
    RESTRICT_KW "restrict"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domainnumeric"
    WHITESPACE " "
    RESTRICT_KW "restrict"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domainint4"
    WHITESPACE " "
    RESTRICT_KW "restrict"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domaintext"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- Test non-error-throwing input"
  WHITESPACE "\n\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "positiveint"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    WHITESPACE " "
    CHECK_CONSTRAINT
      CHECK_KW "check"
      L_PAREN "("
      BIN_EXPR
        NAME_REF
          VALUE_KW "value"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "weirdfloat"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "float8"
    WHITESPACE " "
    CHECK_CONSTRAINT
      CHECK_KW "check"
      L_PAREN "("
      BIN_EXPR
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            LITERAL
              INT_NUMBER "1"
            WHITESPACE " "
            SLASH "/"
            WHITESPACE " "
            NAME_REF
              VALUE_KW "value"
          R_PAREN ")"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_input_is_valid"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'1'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'positiveint'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_input_is_valid"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'junk'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'positiveint'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_input_is_valid"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'-1'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'positiveint'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "pg_input_error_info"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'junk'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'positiveint'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "pg_input_error_info"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'-1'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'positiveint'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "pg_input_error_info"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'junk'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'weirdfloat'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "pg_input_error_info"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'0.01'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'weirdfloat'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- We currently can't trap errors raised in the CHECK expression itself"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "pg_input_error_info"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'0'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'weirdfloat'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "positiveint"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "weirdfloat"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- Test domains over array types"
  WHITESPACE "\n\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "domainint4arr"
    WHITESPACE " "
    ARRAY_TYPE
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "int4"
      L_BRACK "["
      LITERAL
        INT_NUMBER "1"
      R_BRACK "]"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "domainchar4arr"
    WHITESPACE " "
    ARRAY_TYPE
      CHAR_TYPE
        VARCHAR_KW "varchar"
        L_PAREN "("
        ARG_LIST
          ARG
            LITERAL
              INT_NUMBER "4"
          R_PAREN ")"
      L_BRACK "["
      LITERAL
        INT_NUMBER "2"
      R_BRACK "]"
      L_BRACK "["
      LITERAL
        INT_NUMBER "3"
      R_BRACK "]"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "domarrtest"
    WHITESPACE "\n           "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "testint4arr"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "domainint4arr"
      WHITESPACE "\n           "
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "testchar4arr"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "domainchar4arr"
      WHITESPACE "\n            "
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domarrtest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'{2,2}'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'{{\"a\",\"b\"},{\"c\",\"d\"}}'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domarrtest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'{{2,2},{2,2}}'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'{{\"a\",\"b\"}}'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domarrtest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'{2,2}'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'{{\"a\",\"b\"},{\"c\",\"d\"},{\"e\",\"f\"}}'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domarrtest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'{2,2}'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'{{\"a\"},{\"c\"}}'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domarrtest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        NULL_KW "NULL"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'{{\"a\",\"b\",\"c\"},{\"d\",\"e\",\"f\"}}'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domarrtest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        NULL_KW "NULL"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'{{\"toolong\",\"b\",\"c\"},{\"d\",\"e\",\"f\"}}'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domarrtest"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        INDEX_EXPR
          NAME_REF
            IDENT "testint4arr"
          L_BRACK "["
          LITERAL
            INT_NUMBER "1"
          R_BRACK "]"
      COMMA ","
      WHITESPACE " "
      COLUMN
        INDEX_EXPR
          NAME_REF
            IDENT "testint4arr"
          L_BRACK "["
          LITERAL
            INT_NUMBER "3"
          R_BRACK "]"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      LITERAL
        INT_NUMBER "22"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "domarrtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          INDEX_EXPR
            NAME_REF
              IDENT "testint4arr"
            L_BRACK "["
            LITERAL
              INT_NUMBER "1"
            R_BRACK "]"
        COMMA ","
        WHITESPACE " "
        TARGET
          INDEX_EXPR
            NAME_REF
              IDENT "testchar4arr"
            L_BRACK "["
            LITERAL
              INT_NUMBER "2"
            COLON ":"
            LITERAL
              INT_NUMBER "2"
            R_BRACK "]"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "domarrtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_dims"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "testint4arr"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_dims"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "testchar4arr"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "domarrtest"
  SEMICOLON ";"
  WHITESPACE "\n\n\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "domarrtest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domarrtest"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE "\n  "
    NAME_REF
      IDENT "testint4arr"
    BIN_EXPR
      ARRAY_EXPR
        L_BRACK "["
        LITERAL
          INT_NUMBER "1"
        R_BRACK "]"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      BIN_EXPR
        INDEX_EXPR
          NAME_REF
            IDENT "testint4arr"
          L_BRACK "["
          LITERAL
            INT_NUMBER "1"
          R_BRACK "]"
        WHITESPACE " "
        PLUS "+"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
    COMMA ","
    WHITESPACE "\n  "
    NAME_REF
      IDENT "testint4arr"
    BIN_EXPR
      ARRAY_EXPR
        L_BRACK "["
        LITERAL
          INT_NUMBER "3"
        R_BRACK "]"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      BIN_EXPR
        INDEX_EXPR
          NAME_REF
            IDENT "testint4arr"
          L_BRACK "["
          LITERAL
            INT_NUMBER "3"
          R_BRACK "]"
        WHITESPACE " "
        MINUS "-"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "testchar4arr"
        WHITESPACE " "
        IS_KW "is"
        WHITESPACE " "
        LITERAL
          NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "domarrtest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "testchar4arr"
        WHITESPACE " "
        IS_KW "is"
        WHITESPACE " "
        LITERAL
          NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domarrtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domainint4arr"
    WHITESPACE " "
    RESTRICT_KW "restrict"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domainchar4arr"
    WHITESPACE " "
    RESTRICT_KW "restrict"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "dia"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    ARRAY_TYPE
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
      L_BRACK "["
      R_BRACK "]"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'{1,2,3}'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "dia"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_dims"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'{1,2,3}'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "dia"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_typeof"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'{1,2,3}'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "dia"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_typeof"
            ARG_LIST
              L_PAREN "("
              BIN_EXPR
                CAST_EXPR
                  LITERAL
                    STRING "'{1,2,3}'"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "dia"
                WHITESPACE " "
                CUSTOM_OP
                  PIPE "|"
                  PIPE "|"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "42"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- should be int[] not dia"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dia"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- Test domains over composites"
  WHITESPACE "\n\n"
  CREATE_TYPE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "comptype"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "r"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "float8"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "i"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "float8"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "dcomptype"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "comptype"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dcomptable"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "d1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "dcomptype"
        WHITESPACE " "
        UNIQUE_CONSTRAINT
          UNIQUE_KW "unique"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      CAST_EXPR
        CALL_EXPR
          NAME_REF
            ROW_KW "row"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "2"
            R_PAREN ")"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "dcomptype"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      CAST_EXPR
        CALL_EXPR
          NAME_REF
            ROW_KW "row"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "3"
            COMMA ","
            LITERAL
              INT_NUMBER "4"
            R_PAREN ")"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "comptype"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      CAST_EXPR
        CALL_EXPR
          NAME_REF
            ROW_KW "row"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "2"
            R_PAREN ")"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "dcomptype"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail on uniqueness"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        FIELD_EXPR
          NAME_REF
            IDENT "d1"
          DOT "."
          NAME_REF
            IDENT "r"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "11"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "dcomptable"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            PAREN_EXPR
              L_PAREN "("
              NAME_REF
                IDENT "d1"
              R_PAREN ")"
            DOT "."
            NAME_REF
              IDENT "r"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            PAREN_EXPR
              L_PAREN "("
              NAME_REF
                IDENT "d1"
              R_PAREN ")"
            DOT "."
            NAME_REF
              IDENT "i"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            PAREN_EXPR
              L_PAREN "("
              NAME_REF
                IDENT "d1"
              R_PAREN ")"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "dcomptable"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "d1"
    ERROR
      DOT "."
  ERROR
    IDENT "r"
  WHITESPACE " "
  ERROR
    EQ "="
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "d1"
  ERROR
    R_PAREN ")"
  ERROR
    DOT "."
  ERROR
    IDENT "r"
  WHITESPACE " "
  ERROR
    PLUS "+"
  WHITESPACE " "
  ERROR
    INT_NUMBER "1"
  WHITESPACE " "
  ERROR
    WHERE_KW "where"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "d1"
  ERROR
    R_PAREN ")"
  ERROR
    DOT "."
  ERROR
    IDENT "i"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "dcomptable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptype"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "c1"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          FIELD_EXPR
            PAREN_EXPR
              L_PAREN "("
              NAME_REF
                VALUE_KW "value"
              R_PAREN ")"
            DOT "."
            NAME_REF
              IDENT "r"
          WHITESPACE " "
          LTEQ "<="
          WHITESPACE " "
          FIELD_EXPR
            PAREN_EXPR
              L_PAREN "("
              NAME_REF
                VALUE_KW "value"
              R_PAREN ")"
            DOT "."
            NAME_REF
              IDENT "i"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptype"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "c2"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          FIELD_EXPR
            PAREN_EXPR
              L_PAREN "("
              NAME_REF
                VALUE_KW "value"
              R_PAREN ")"
            DOT "."
            NAME_REF
              IDENT "r"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          FIELD_EXPR
            PAREN_EXPR
              L_PAREN "("
              NAME_REF
                VALUE_KW "value"
              R_PAREN ")"
            DOT "."
            NAME_REF
              IDENT "i"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CALL_EXPR
              NAME_REF
                ROW_KW "row"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "2"
                COMMA ","
                LITERAL
                  INT_NUMBER "1"
                R_PAREN ")"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "dcomptype"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      CAST_EXPR
        CALL_EXPR
          NAME_REF
            ROW_KW "row"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "2"
            R_PAREN ")"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "comptype"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      CAST_EXPR
        CALL_EXPR
          NAME_REF
            ROW_KW "row"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "2"
            COMMA ","
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "comptype"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        FIELD_EXPR
          NAME_REF
            IDENT "d1"
          DOT "."
          NAME_REF
            IDENT "r"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "99"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        FIELD_EXPR
          NAME_REF
            IDENT "d1"
          DOT "."
          NAME_REF
            IDENT "r"
      COMMA ","
      WHITESPACE " "
      COLUMN
        FIELD_EXPR
          NAME_REF
            IDENT "d1"
          DOT "."
          NAME_REF
            IDENT "i"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "99"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "100"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        FIELD_EXPR
          NAME_REF
            IDENT "d1"
          DOT "."
          NAME_REF
            IDENT "r"
      COMMA ","
      WHITESPACE " "
      COLUMN
        FIELD_EXPR
          NAME_REF
            IDENT "d1"
          DOT "."
          NAME_REF
            IDENT "i"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "100"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "99"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "d1"
    ERROR
      DOT "."
  ERROR
    IDENT "r"
  WHITESPACE " "
  ERROR
    EQ "="
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "d1"
  ERROR
    R_PAREN ")"
  ERROR
    DOT "."
  ERROR
    IDENT "r"
  WHITESPACE " "
  ERROR
    PLUS "+"
  WHITESPACE " "
  ERROR
    INT_NUMBER "1"
  WHITESPACE " "
  ERROR
    WHERE_KW "where"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "d1"
  ERROR
    R_PAREN ")"
  ERROR
    DOT "."
  ERROR
    IDENT "i"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "d1"
    ERROR
      DOT "."
  ERROR
    IDENT "r"
  WHITESPACE " "
  ERROR
    EQ "="
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "d1"
  ERROR
    R_PAREN ")"
  ERROR
    DOT "."
  ERROR
    IDENT "r"
  WHITESPACE " "
  ERROR
    MINUS "-"
  WHITESPACE " "
  ERROR
    INT_NUMBER "1"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "d1"
  ERROR
    DOT "."
  ERROR
    IDENT "i"
  WHITESPACE " "
  ERROR
    EQ "="
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "d1"
  ERROR
    R_PAREN ")"
  ERROR
    DOT "."
  ERROR
    IDENT "i"
  WHITESPACE " "
  ERROR
    PLUS "+"
  WHITESPACE " "
  ERROR
    INT_NUMBER "1"
  WHITESPACE " "
  ERROR
    WHERE_KW "where"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "d1"
  ERROR
    R_PAREN ")"
  ERROR
    DOT "."
  ERROR
    IDENT "i"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "dcomptable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "d1"
    ERROR
      DOT "."
  ERROR
    IDENT "r"
  WHITESPACE " "
  ERROR
    EQ "="
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "d1"
  ERROR
    R_PAREN ")"
  ERROR
    DOT "."
  ERROR
    IDENT "r"
  WHITESPACE " "
  ERROR
    MINUS "-"
  WHITESPACE " "
  ERROR
    INT_NUMBER "1"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "d1"
  ERROR
    DOT "."
  ERROR
    IDENT "i"
  WHITESPACE " "
  ERROR
    EQ "="
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "d1"
  ERROR
    R_PAREN ")"
  ERROR
    DOT "."
  ERROR
    IDENT "i"
  WHITESPACE " "
  ERROR
    PLUS "+"
  WHITESPACE " "
  ERROR
    INT_NUMBER "1"
  WHITESPACE " "
  ERROR
    WHERE_KW "where"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "d1"
  ERROR
    R_PAREN ")"
  ERROR
    DOT "."
  ERROR
    IDENT "i"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_RULE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    RULE_KW "rule"
    WHITESPACE " "
    NAME
      IDENT "silly"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    DELETE_KW "delete"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    INSTEAD_KW "instead"
    WHITESPACE "\n  "
    UPDATE_STMT
      UPDATE_KW "update"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "dcomptable"
      WHITESPACE " "
      SET_KW "set"
      WHITESPACE " "
      NAME_REF
        IDENT "d1"
      ERROR
        DOT "."
  ERROR
    IDENT "r"
  WHITESPACE " "
  ERROR
    EQ "="
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "d1"
  ERROR
    R_PAREN ")"
  ERROR
    DOT "."
  ERROR
    IDENT "r"
  WHITESPACE " "
  ERROR
    MINUS "-"
  WHITESPACE " "
  ERROR
    INT_NUMBER "1"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "d1"
  ERROR
    DOT "."
  ERROR
    IDENT "i"
  WHITESPACE " "
  ERROR
    EQ "="
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "d1"
  ERROR
    R_PAREN ")"
  ERROR
    DOT "."
  ERROR
    IDENT "i"
  WHITESPACE " "
  ERROR
    PLUS "+"
  WHITESPACE " "
  ERROR
    INT_NUMBER "1"
  WHITESPACE " "
  ERROR
    WHERE_KW "where"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "d1"
  ERROR
    R_PAREN ")"
  ERROR
    DOT "."
  ERROR
    IDENT "i"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "makedcomp"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "r"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "float8"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "i"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "float8"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "dcomptype"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          STRING "'select row(r, i)'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "makedcomp"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "2"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "makedcomp"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "2"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "makedcomp"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "m"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "m"
        COMMA ","
        WHITESPACE " "
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "m"
            WHITESPACE " "
            IS_NOT
              IS_KW "is"
              WHITESPACE " "
              NOT_KW "not"
            WHITESPACE " "
            LITERAL
              NULL_KW "null"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "makedcomp"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "m"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_FUNCTION_STMT
    DROP_KW "drop"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "makedcomp"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "float8"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          IDENT "float8"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TYPE_STMT
    DROP_KW "drop"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comptype"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- check altering and dropping columns used by domain constraints"
  WHITESPACE "\n"
  CREATE_TYPE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "comptype"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "r"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "float8"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "i"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "float8"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "dcomptype"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "comptype"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptype"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "c1"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          FIELD_EXPR
            PAREN_EXPR
              L_PAREN "("
              NAME_REF
                VALUE_KW "value"
              R_PAREN ")"
            DOT "."
            NAME_REF
              IDENT "r"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT_STMT
    COMMENT_KW "comment"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONSTRAINT_KW "constraint"
    WHITESPACE " "
    NAME_REF
      IDENT "c1"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptype"
    WHITESPACE " "
    IS_KW "is"
    WHITESPACE " "
    LITERAL
      STRING "'random commentary'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CALL_EXPR
              NAME_REF
                ROW_KW "row"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "0"
                COMMA ","
                LITERAL
                  INT_NUMBER "1"
                R_PAREN ")"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "dcomptype"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comptype"
    WHITESPACE " "
    ALTER_KW "alter"
    WHITESPACE " "
    ATTRIBUTE_KW "attribute"
    WHITESPACE " "
    NAME_REF
      IDENT "r"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    CHAR_TYPE
      VARCHAR_KW "varchar"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comptype"
    WHITESPACE " "
    ALTER_KW "alter"
    WHITESPACE " "
    ATTRIBUTE_KW "attribute"
    WHITESPACE " "
    NAME_REF
      IDENT "r"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BIGINT_KW "bigint"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comptype"
    WHITESPACE " "
    DROP_KW "drop"
    WHITESPACE " "
    ATTRIBUTE_KW "attribute"
    WHITESPACE " "
    NAME_REF
      IDENT "r"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comptype"
    WHITESPACE " "
    DROP_KW "drop"
    WHITESPACE " "
    ATTRIBUTE_KW "attribute"
    WHITESPACE " "
    NAME_REF
      IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "obj_description"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "oid"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'pg_constraint'"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "contypid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'dcomptype'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regtype"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- check comment is still there"
  WHITESPACE "\n\n"
  DROP_TYPE_STMT
    DROP_KW "drop"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comptype"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- Test domains over arrays of composite"
  WHITESPACE "\n\n"
  CREATE_TYPE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "comptype"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "r"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "float8"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "i"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "float8"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "dcomptypea"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    ARRAY_TYPE
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "comptype"
      L_BRACK "["
      R_BRACK "]"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dcomptable"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "d1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "dcomptypea"
        WHITESPACE " "
        UNIQUE_CONSTRAINT
          UNIQUE_KW "unique"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      CAST_EXPR
        ARRAY_EXPR
          ARRAY_KW "array"
          L_BRACK "["
          CALL_EXPR
            NAME_REF
              ROW_KW "row"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "2"
              R_PAREN ")"
          R_BRACK "]"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "dcomptypea"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      CAST_EXPR
        ARRAY_EXPR
          ARRAY_KW "array"
          L_BRACK "["
          CALL_EXPR
            NAME_REF
              ROW_KW "row"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "3"
              COMMA ","
              LITERAL
                INT_NUMBER "4"
              R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              ROW_KW "row"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "5"
              COMMA ","
              LITERAL
                INT_NUMBER "6"
              R_PAREN ")"
          R_BRACK "]"
        COLON2 "::"
        ARRAY_TYPE
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "comptype"
          L_BRACK "["
          R_BRACK "]"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      ARRAY_EXPR
        ARRAY_KW "array"
        L_BRACK "["
        CAST_EXPR
          CALL_EXPR
            NAME_REF
              ROW_KW "row"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "7"
              COMMA ","
              LITERAL
                INT_NUMBER "8"
              R_PAREN ")"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "comptype"
        COMMA ","
        WHITESPACE " "
        CAST_EXPR
          CALL_EXPR
            NAME_REF
              ROW_KW "row"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "9"
              COMMA ","
              LITERAL
                INT_NUMBER "10"
              R_PAREN ")"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "comptype"
        R_BRACK "]"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      CAST_EXPR
        ARRAY_EXPR
          ARRAY_KW "array"
          L_BRACK "["
          CALL_EXPR
            NAME_REF
              ROW_KW "row"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "2"
              R_PAREN ")"
          R_BRACK "]"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "dcomptypea"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail on uniqueness"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        INDEX_EXPR
          NAME_REF
            IDENT "d1"
          L_BRACK "["
          LITERAL
            INT_NUMBER "1"
          R_BRACK "]"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      CALL_EXPR
        NAME_REF
          ROW_KW "row"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "9"
          COMMA ","
          LITERAL
            INT_NUMBER "10"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        FIELD_EXPR
          INDEX_EXPR
            NAME_REF
              IDENT "d1"
            L_BRACK "["
            LITERAL
              INT_NUMBER "1"
            R_BRACK "]"
          DOT "."
          NAME_REF
            IDENT "r"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "11"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "dcomptable"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          INDEX_EXPR
            NAME_REF
              IDENT "d1"
            L_BRACK "["
            LITERAL
              INT_NUMBER "2"
            R_BRACK "]"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            INDEX_EXPR
              NAME_REF
                IDENT "d1"
              L_BRACK "["
              LITERAL
                INT_NUMBER "1"
              R_BRACK "]"
            DOT "."
            NAME_REF
              IDENT "r"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            INDEX_EXPR
              NAME_REF
                IDENT "d1"
              L_BRACK "["
              LITERAL
                INT_NUMBER "1"
              R_BRACK "]"
            DOT "."
            NAME_REF
              IDENT "i"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "dcomptable"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "d1"
    BIN_EXPR
      ARRAY_EXPR
        L_BRACK "["
        LITERAL
          INT_NUMBER "2"
        R_BRACK "]"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          ROW_KW "row"
        ARG_LIST
          L_PAREN "("
          FIELD_EXPR
            INDEX_EXPR
              NAME_REF
                IDENT "d1"
              L_BRACK "["
              LITERAL
                INT_NUMBER "2"
              R_BRACK "]"
            DOT "."
            NAME_REF
              IDENT "i"
          COMMA ","
          WHITESPACE " "
          FIELD_EXPR
            INDEX_EXPR
              NAME_REF
                IDENT "d1"
              L_BRACK "["
              LITERAL
                INT_NUMBER "2"
              R_BRACK "]"
            DOT "."
            NAME_REF
              IDENT "r"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "dcomptable"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "d1"
    BIN_EXPR
      FIELD_EXPR
        ARRAY_EXPR
          L_BRACK "["
          LITERAL
            INT_NUMBER "1"
          R_BRACK "]"
        DOT "."
        NAME_REF
          IDENT "r"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          INDEX_EXPR
            NAME_REF
              IDENT "d1"
            L_BRACK "["
            LITERAL
              INT_NUMBER "1"
            R_BRACK "]"
          DOT "."
          NAME_REF
            IDENT "r"
        WHITESPACE " "
        PLUS "+"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          INDEX_EXPR
            NAME_REF
              IDENT "d1"
            L_BRACK "["
            LITERAL
              INT_NUMBER "1"
            R_BRACK "]"
          DOT "."
          NAME_REF
            IDENT "i"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "dcomptable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptypea"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "c1"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          FIELD_EXPR
            INDEX_EXPR
              NAME_REF
                VALUE_KW "value"
              L_BRACK "["
              LITERAL
                INT_NUMBER "1"
              R_BRACK "]"
            DOT "."
            NAME_REF
              IDENT "r"
          WHITESPACE " "
          LTEQ "<="
          WHITESPACE " "
          FIELD_EXPR
            INDEX_EXPR
              NAME_REF
                VALUE_KW "value"
              L_BRACK "["
              LITERAL
                INT_NUMBER "1"
              R_BRACK "]"
            DOT "."
            NAME_REF
              IDENT "i"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptypea"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "c2"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          FIELD_EXPR
            INDEX_EXPR
              NAME_REF
                VALUE_KW "value"
              L_BRACK "["
              LITERAL
                INT_NUMBER "1"
              R_BRACK "]"
            DOT "."
            NAME_REF
              IDENT "r"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          FIELD_EXPR
            INDEX_EXPR
              NAME_REF
                VALUE_KW "value"
              L_BRACK "["
              LITERAL
                INT_NUMBER "1"
              R_BRACK "]"
            DOT "."
            NAME_REF
              IDENT "i"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            ARRAY_EXPR
              ARRAY_KW "array"
              L_BRACK "["
              CALL_EXPR
                NAME_REF
                  ROW_KW "row"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    INT_NUMBER "2"
                  COMMA ","
                  LITERAL
                    INT_NUMBER "1"
                  R_PAREN ")"
              R_BRACK "]"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "dcomptypea"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      CAST_EXPR
        ARRAY_EXPR
          ARRAY_KW "array"
          L_BRACK "["
          CALL_EXPR
            NAME_REF
              ROW_KW "row"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "2"
              R_PAREN ")"
          R_BRACK "]"
        COLON2 "::"
        ARRAY_TYPE
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "comptype"
          L_BRACK "["
          R_BRACK "]"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      CAST_EXPR
        ARRAY_EXPR
          ARRAY_KW "array"
          L_BRACK "["
          CALL_EXPR
            NAME_REF
              ROW_KW "row"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "2"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
          R_BRACK "]"
        COLON2 "::"
        ARRAY_TYPE
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "comptype"
          L_BRACK "["
          R_BRACK "]"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        FIELD_EXPR
          INDEX_EXPR
            NAME_REF
              IDENT "d1"
            L_BRACK "["
            LITERAL
              INT_NUMBER "1"
            R_BRACK "]"
          DOT "."
          NAME_REF
            IDENT "r"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "99"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        FIELD_EXPR
          INDEX_EXPR
            NAME_REF
              IDENT "d1"
            L_BRACK "["
            LITERAL
              INT_NUMBER "1"
            R_BRACK "]"
          DOT "."
          NAME_REF
            IDENT "r"
      COMMA ","
      WHITESPACE " "
      COLUMN
        FIELD_EXPR
          INDEX_EXPR
            NAME_REF
              IDENT "d1"
            L_BRACK "["
            LITERAL
              INT_NUMBER "1"
            R_BRACK "]"
          DOT "."
          NAME_REF
            IDENT "i"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "99"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "100"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        FIELD_EXPR
          INDEX_EXPR
            NAME_REF
              IDENT "d1"
            L_BRACK "["
            LITERAL
              INT_NUMBER "1"
            R_BRACK "]"
          DOT "."
          NAME_REF
            IDENT "r"
      COMMA ","
      WHITESPACE " "
      COLUMN
        FIELD_EXPR
          INDEX_EXPR
            NAME_REF
              IDENT "d1"
            L_BRACK "["
            LITERAL
              INT_NUMBER "1"
            R_BRACK "]"
          DOT "."
          NAME_REF
            IDENT "i"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "100"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "99"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "d1"
    BIN_EXPR
      FIELD_EXPR
        ARRAY_EXPR
          L_BRACK "["
          LITERAL
            INT_NUMBER "1"
          R_BRACK "]"
        DOT "."
        NAME_REF
          IDENT "r"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          INDEX_EXPR
            NAME_REF
              IDENT "d1"
            L_BRACK "["
            LITERAL
              INT_NUMBER "1"
            R_BRACK "]"
          DOT "."
          NAME_REF
            IDENT "r"
        WHITESPACE " "
        PLUS "+"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          INDEX_EXPR
            NAME_REF
              IDENT "d1"
            L_BRACK "["
            LITERAL
              INT_NUMBER "1"
            R_BRACK "]"
          DOT "."
          NAME_REF
            IDENT "i"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "d1"
    BIN_EXPR
      FIELD_EXPR
        ARRAY_EXPR
          L_BRACK "["
          LITERAL
            INT_NUMBER "1"
          R_BRACK "]"
        DOT "."
        NAME_REF
          IDENT "r"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          INDEX_EXPR
            NAME_REF
              IDENT "d1"
            L_BRACK "["
            LITERAL
              INT_NUMBER "1"
            R_BRACK "]"
          DOT "."
          NAME_REF
            IDENT "r"
        WHITESPACE " "
        MINUS "-"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "d1"
    BIN_EXPR
      FIELD_EXPR
        ARRAY_EXPR
          L_BRACK "["
          LITERAL
            INT_NUMBER "1"
          R_BRACK "]"
        DOT "."
        NAME_REF
          IDENT "i"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          INDEX_EXPR
            NAME_REF
              IDENT "d1"
            L_BRACK "["
            LITERAL
              INT_NUMBER "1"
            R_BRACK "]"
          DOT "."
          NAME_REF
            IDENT "i"
        WHITESPACE " "
        PLUS "+"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          INDEX_EXPR
            NAME_REF
              IDENT "d1"
            L_BRACK "["
            LITERAL
              INT_NUMBER "1"
            R_BRACK "]"
          DOT "."
          NAME_REF
            IDENT "i"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "dcomptable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "d1"
    BIN_EXPR
      FIELD_EXPR
        ARRAY_EXPR
          L_BRACK "["
          LITERAL
            INT_NUMBER "1"
          R_BRACK "]"
        DOT "."
        NAME_REF
          IDENT "r"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          INDEX_EXPR
            NAME_REF
              IDENT "d1"
            L_BRACK "["
            LITERAL
              INT_NUMBER "1"
            R_BRACK "]"
          DOT "."
          NAME_REF
            IDENT "r"
        WHITESPACE " "
        MINUS "-"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "d1"
    BIN_EXPR
      FIELD_EXPR
        ARRAY_EXPR
          L_BRACK "["
          LITERAL
            INT_NUMBER "1"
          R_BRACK "]"
        DOT "."
        NAME_REF
          IDENT "i"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          INDEX_EXPR
            NAME_REF
              IDENT "d1"
            L_BRACK "["
            LITERAL
              INT_NUMBER "1"
            R_BRACK "]"
          DOT "."
          NAME_REF
            IDENT "i"
        WHITESPACE " "
        PLUS "+"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
    WHITESPACE "\n    "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          INDEX_EXPR
            NAME_REF
              IDENT "d1"
            L_BRACK "["
            LITERAL
              INT_NUMBER "1"
            R_BRACK "]"
          DOT "."
          NAME_REF
            IDENT "i"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_RULE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    RULE_KW "rule"
    WHITESPACE " "
    NAME
      IDENT "silly"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    DELETE_KW "delete"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    DO_KW "do"
    WHITESPACE " "
    INSTEAD_KW "instead"
    WHITESPACE "\n  "
    UPDATE_STMT
      UPDATE_KW "update"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "dcomptable"
      WHITESPACE " "
      SET_KW "set"
      WHITESPACE " "
      NAME_REF
        IDENT "d1"
      BIN_EXPR
        FIELD_EXPR
          ARRAY_EXPR
            L_BRACK "["
            LITERAL
              INT_NUMBER "1"
            R_BRACK "]"
          DOT "."
          NAME_REF
            IDENT "r"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            INDEX_EXPR
              NAME_REF
                IDENT "d1"
              L_BRACK "["
              LITERAL
                INT_NUMBER "1"
              R_BRACK "]"
            DOT "."
            NAME_REF
              IDENT "r"
          WHITESPACE " "
          MINUS "-"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "d1"
      BIN_EXPR
        FIELD_EXPR
          ARRAY_EXPR
            L_BRACK "["
            LITERAL
              INT_NUMBER "1"
            R_BRACK "]"
          DOT "."
          NAME_REF
            IDENT "i"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            INDEX_EXPR
              NAME_REF
                IDENT "d1"
              L_BRACK "["
              LITERAL
                INT_NUMBER "1"
              R_BRACK "]"
            DOT "."
            NAME_REF
              IDENT "i"
          WHITESPACE " "
          PLUS "+"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1"
      WHITESPACE "\n    "
      WHERE_CLAUSE
        WHERE_KW "where"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            INDEX_EXPR
              NAME_REF
                IDENT "d1"
              L_BRACK "["
              LITERAL
                INT_NUMBER "1"
              R_BRACK "]"
            DOT "."
            NAME_REF
              IDENT "i"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TYPE_STMT
    DROP_KW "drop"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comptype"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- Test arrays over domains"
  WHITESPACE "\n\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "posint"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    WHITESPACE " "
    CHECK_CONSTRAINT
      CHECK_KW "check"
      WHITESPACE " "
      L_PAREN "("
      BIN_EXPR
        NAME_REF
          VALUE_KW "value"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "pitable"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        ARRAY_TYPE
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "posint"
          L_BRACK "["
          R_BRACK "]"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pitable"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      ARRAY_EXPR
        ARRAY_KW "array"
        L_BRACK "["
        LITERAL
          INT_NUMBER "42"
        R_BRACK "]"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pitable"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      ARRAY_EXPR
        ARRAY_KW "array"
        L_BRACK "["
        PREFIX_EXPR
          MINUS "-"
          LITERAL
            INT_NUMBER "1"
        R_BRACK "]"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pitable"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        STRING "'{0}'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pitable"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "f1"
    BIN_EXPR
      ARRAY_EXPR
        L_BRACK "["
        LITERAL
          INT_NUMBER "1"
        R_BRACK "]"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      BIN_EXPR
        INDEX_EXPR
          NAME_REF
            IDENT "f1"
          L_BRACK "["
          LITERAL
            INT_NUMBER "1"
          R_BRACK "]"
        WHITESPACE " "
        PLUS "+"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pitable"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "f1"
    BIN_EXPR
      ARRAY_EXPR
        L_BRACK "["
        LITERAL
          INT_NUMBER "1"
        R_BRACK "]"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pitable"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pitable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "vc4"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    CHAR_TYPE
      VARCHAR_KW "varchar"
      L_PAREN "("
      ARG_LIST
        ARG
          LITERAL
            INT_NUMBER "4"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "vc4table"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        ARRAY_TYPE
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "vc4"
          L_BRACK "["
          R_BRACK "]"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vc4table"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      ARRAY_EXPR
        ARRAY_KW "array"
        L_BRACK "["
        LITERAL
          STRING "'too long'"
        R_BRACK "]"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vc4table"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      CAST_EXPR
        ARRAY_EXPR
          ARRAY_KW "array"
          L_BRACK "["
          LITERAL
            STRING "'too long'"
          R_BRACK "]"
        COLON2 "::"
        ARRAY_TYPE
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "vc4"
          L_BRACK "["
          R_BRACK "]"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- cast truncates"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "vc4table"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vc4table"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TYPE_STMT
    DROP_KW "drop"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vc4"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- You can sort of fake arrays-of-arrays by putting a domain in between"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "dposinta"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    ARRAY_TYPE
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "posint"
      L_BRACK "["
      R_BRACK "]"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dposintatable"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        ARRAY_TYPE
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "dposinta"
          L_BRACK "["
          R_BRACK "]"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dposintatable"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      ARRAY_EXPR
        ARRAY_KW "array"
        L_BRACK "["
        ARRAY_EXPR
          ARRAY_KW "array"
          L_BRACK "["
          LITERAL
            INT_NUMBER "42"
          R_BRACK "]"
        R_BRACK "]"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dposintatable"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      ARRAY_EXPR
        ARRAY_KW "array"
        L_BRACK "["
        CAST_EXPR
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              INT_NUMBER "42"
            R_BRACK "]"
          COLON2 "::"
          ARRAY_TYPE
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "posint"
            L_BRACK "["
            R_BRACK "]"
        R_BRACK "]"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- still fail"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dposintatable"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      ARRAY_EXPR
        ARRAY_KW "array"
        L_BRACK "["
        CAST_EXPR
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              INT_NUMBER "42"
            R_BRACK "]"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "dposinta"
        R_BRACK "]"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- but this works"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "f1"
        COMMA ","
        WHITESPACE " "
        TARGET
          INDEX_EXPR
            NAME_REF
              IDENT "f1"
            L_BRACK "["
            LITERAL
              INT_NUMBER "1"
            R_BRACK "]"
        COMMA ","
        WHITESPACE " "
        TARGET
          INDEX_EXPR
            PAREN_EXPR
              L_PAREN "("
              INDEX_EXPR
                NAME_REF
                  IDENT "f1"
                L_BRACK "["
                LITERAL
                  INT_NUMBER "1"
                R_BRACK "]"
              R_PAREN ")"
            L_BRACK "["
            LITERAL
              INT_NUMBER "1"
            R_BRACK "]"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "dposintatable"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_typeof"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "f1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "dposintatable"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_typeof"
            ARG_LIST
              L_PAREN "("
              INDEX_EXPR
                NAME_REF
                  IDENT "f1"
                L_BRACK "["
                LITERAL
                  INT_NUMBER "1"
                R_BRACK "]"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "dposintatable"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_typeof"
            ARG_LIST
              L_PAREN "("
              INDEX_EXPR
                INDEX_EXPR
                  NAME_REF
                    IDENT "f1"
                  L_BRACK "["
                  LITERAL
                    INT_NUMBER "1"
                  R_BRACK "]"
                L_BRACK "["
                LITERAL
                  INT_NUMBER "1"
                R_BRACK "]"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "dposintatable"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_typeof"
            ARG_LIST
              L_PAREN "("
              INDEX_EXPR
                PAREN_EXPR
                  L_PAREN "("
                  INDEX_EXPR
                    NAME_REF
                      IDENT "f1"
                    L_BRACK "["
                    LITERAL
                      INT_NUMBER "1"
                    R_BRACK "]"
                  R_PAREN ")"
                L_BRACK "["
                LITERAL
                  INT_NUMBER "1"
                R_BRACK "]"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "dposintatable"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dposintatable"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "f1"
    BIN_EXPR
      ARRAY_EXPR
        L_BRACK "["
        LITERAL
          INT_NUMBER "2"
        R_BRACK "]"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      ARRAY_EXPR
        ARRAY_KW "array"
        L_BRACK "["
        LITERAL
          INT_NUMBER "99"
        R_BRACK "]"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "f1"
        COMMA ","
        WHITESPACE " "
        TARGET
          INDEX_EXPR
            NAME_REF
              IDENT "f1"
            L_BRACK "["
            LITERAL
              INT_NUMBER "1"
            R_BRACK "]"
        COMMA ","
        WHITESPACE " "
        TARGET
          INDEX_EXPR
            PAREN_EXPR
              L_PAREN "("
              INDEX_EXPR
                NAME_REF
                  IDENT "f1"
                L_BRACK "["
                LITERAL
                  INT_NUMBER "2"
                R_BRACK "]"
              R_PAREN ")"
            L_BRACK "["
            LITERAL
              INT_NUMBER "1"
            R_BRACK "]"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "dposintatable"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- it'd be nice if you could do something like this, but for now you can't:"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dposintatable"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "f1"
    BIN_EXPR
      INDEX_EXPR
        ARRAY_EXPR
          L_BRACK "["
          LITERAL
            INT_NUMBER "2"
          R_BRACK "]"
        L_BRACK "["
        LITERAL
          INT_NUMBER "1"
        R_BRACK "]"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      ARRAY_EXPR
        ARRAY_KW "array"
        L_BRACK "["
        LITERAL
          INT_NUMBER "97"
        R_BRACK "]"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- maybe someday we can make this syntax work:"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dposintatable"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "f1"
  ERROR
    L_BRACK "["
  ERROR
    INT_NUMBER "2"
  ERROR
    R_BRACK "]"
  ERROR
    R_PAREN ")"
  ERROR
    L_BRACK "["
  ERROR
    INT_NUMBER "1"
  ERROR
    R_BRACK "]"
  WHITESPACE " "
  ERROR
    EQ "="
  WHITESPACE " "
  ERROR
    ARRAY_KW "array"
  ERROR
    L_BRACK "["
  ERROR
    INT_NUMBER "98"
  ERROR
    R_BRACK "]"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dposintatable"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "posint"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- Test arrays over domains of composite"
  WHITESPACE "\n\n"
  CREATE_TYPE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "comptype"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "cf1"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "cf2"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "dcomptype"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "comptype"
    WHITESPACE " "
    CHECK_CONSTRAINT
      CHECK_KW "check"
      WHITESPACE " "
      L_PAREN "("
      BIN_EXPR
        FIELD_EXPR
          PAREN_EXPR
            L_PAREN "("
            NAME_REF
              VALUE_KW "value"
            R_PAREN ")"
          DOT "."
          NAME_REF
            IDENT "cf1"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dcomptable"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        ARRAY_TYPE
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "dcomptype"
          L_BRACK "["
          R_BRACK "]"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "f1"
    BIN_EXPR
      FIELD_EXPR
        ARRAY_EXPR
          L_BRACK "["
          LITERAL
            INT_NUMBER "1"
          R_BRACK "]"
        DOT "."
        NAME_REF
          IDENT "cf2"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "5"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "f1"
    BIN_EXPR
      FIELD_EXPR
        ARRAY_EXPR
          L_BRACK "["
          LITERAL
            INT_NUMBER "1"
          R_BRACK "]"
        DOT "."
        NAME_REF
          IDENT "cf1"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PREFIX_EXPR
        MINUS "-"
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "f1"
    BIN_EXPR
      FIELD_EXPR
        ARRAY_EXPR
          L_BRACK "["
          LITERAL
            INT_NUMBER "1"
          R_BRACK "]"
        DOT "."
        NAME_REF
          IDENT "cf1"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- if there's no constraints, a different code path is taken:"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptype"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "dcomptype_check"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "f1"
    BIN_EXPR
      FIELD_EXPR
        ARRAY_EXPR
          L_BRACK "["
          LITERAL
            INT_NUMBER "1"
          R_BRACK "]"
        DOT "."
        NAME_REF
          IDENT "cf1"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PREFIX_EXPR
        MINUS "-"
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- now ok"
  WHITESPACE "\n"
  SELECT
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcomptable"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TYPE_STMT
    DROP_KW "drop"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "comptype"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- Test not-null restrictions"
  WHITESPACE "\n\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "dnotnull"
    WHITESPACE " "
    CHAR_TYPE
      VARCHAR_KW "varchar"
      L_PAREN "("
      ARG_LIST
        ARG
          LITERAL
            INT_NUMBER "15"
        R_PAREN ")"
    WHITESPACE " "
    NOT_NULL_CONSTRAINT
      NOT_KW "NOT"
      WHITESPACE " "
      NULL_KW "NULL"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "dnull"
    WHITESPACE "    "
    CHAR_TYPE
      VARCHAR_KW "varchar"
      L_PAREN "("
      ARG_LIST
        ARG
          LITERAL
            INT_NUMBER "15"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "dcheck"
    WHITESPACE "   "
    CHAR_TYPE
      VARCHAR_KW "varchar"
      L_PAREN "("
      ARG_LIST
        ARG
          LITERAL
            INT_NUMBER "15"
        R_PAREN ")"
    WHITESPACE " "
    NOT_NULL_CONSTRAINT
      NOT_KW "NOT"
      WHITESPACE " "
      NULL_KW "NULL"
    WHITESPACE " "
    CHECK_CONSTRAINT
      CHECK_KW "CHECK"
      WHITESPACE " "
      L_PAREN "("
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              VALUE_KW "VALUE"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'a'"
          WHITESPACE " "
          OR_KW "OR"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              VALUE_KW "VALUE"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'c'"
        WHITESPACE " "
        OR_KW "OR"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            VALUE_KW "VALUE"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'d'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "nulltest"
    WHITESPACE "\n           "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "col1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "dnotnull"
      WHITESPACE "\n           "
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "col2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "dnotnull"
        WHITESPACE " "
        NULL_CONSTRAINT
          NULL_KW "NULL"
      WHITESPACE "  "
      COMMENT "-- NOT NULL in the domain cannot be overridden"
      WHITESPACE "\n           "
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "col3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "dnull"
        WHITESPACE "    "
        NOT_NULL_CONSTRAINT
          NOT_KW "NOT"
          WHITESPACE " "
          NULL_KW "NULL"
      WHITESPACE "\n           "
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "col4"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "dnull"
      WHITESPACE "\n           "
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "col5"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "dcheck"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CHECK_KW "CHECK"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "col5"
            WHITESPACE " "
            IN_KW "IN"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                STRING "'c'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'d'"
              R_PAREN ")"
          R_PAREN ")"
      WHITESPACE "\n           "
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "nulltest"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "nulltest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'a'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'b'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'c'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'d'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'c'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- Good"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "nulltest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'a'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'b'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'c'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'d'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        NULL_KW "NULL"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "nulltest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'a'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'b'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'c'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'d'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "nulltest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        NULL_KW "NULL"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'b'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'c'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'d'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'d'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "nulltest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'a'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        NULL_KW "NULL"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'c'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'d'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'c'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "nulltest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'a'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'b'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        NULL_KW "NULL"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'d'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'c'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "nulltest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'a'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'b'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'c'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        NULL_KW "NULL"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'d'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- Good"
  WHITESPACE "\n\n"
  COMMENT "-- Test copy"
  WHITESPACE "\n\n\n"
  COMMENT "-- Last row is bad"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "nulltest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test out coerced (casted) constraints"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_KW "cast"
            L_PAREN "("
            LITERAL
              STRING "'1'"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "dnotnull"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_KW "cast"
            L_PAREN "("
            LITERAL
              NULL_KW "NULL"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "dnotnull"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_KW "cast"
            L_PAREN "("
            CAST_EXPR
              CAST_KW "cast"
              L_PAREN "("
              LITERAL
                NULL_KW "NULL"
              WHITESPACE " "
              AS_KW "as"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "dnull"
              R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "dnotnull"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_KW "cast"
            L_PAREN "("
            NAME_REF
              IDENT "col4"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "dnotnull"
            R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "nulltest"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n\n"
  COMMENT "-- cleanup"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "nulltest"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dnotnull"
    WHITESPACE " "
    RESTRICT_KW "restrict"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dnull"
    WHITESPACE " "
    RESTRICT_KW "restrict"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dcheck"
    WHITESPACE " "
    RESTRICT_KW "restrict"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "ddef1"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    WHITESPACE " "
    DEFAULT_CONSTRAINT
      DEFAULT_KW "DEFAULT"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "ddef2"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "oid"
    WHITESPACE " "
    DEFAULT_CONSTRAINT
      DEFAULT_KW "DEFAULT"
      WHITESPACE " "
      LITERAL
        STRING "'12'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Type mixing, function returns int8"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "ddef3"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            TEXT_KW "text"
    WHITESPACE " "
    DEFAULT_CONSTRAINT
      DEFAULT_KW "DEFAULT"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "5"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_SEQUENCE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    SEQUENCE_KW "sequence"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "ddef4_seq"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "ddef4"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    WHITESPACE " "
    DEFAULT_CONSTRAINT
      DEFAULT_KW "DEFAULT"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "nextval"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'ddef4_seq'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "ddef5"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            NUMERIC_KW "numeric"
      L_PAREN "("
      ARG_LIST
        ARG
          LITERAL
            INT_NUMBER "8"
        COMMA ","
        ARG
          LITERAL
            INT_NUMBER "2"
        R_PAREN ")"
    WHITESPACE " "
    NOT_NULL_CONSTRAINT
      NOT_KW "NOT"
      WHITESPACE " "
      NULL_KW "NULL"
    WHITESPACE " "
    DEFAULT_CONSTRAINT
      DEFAULT_KW "DEFAULT"
      WHITESPACE " "
      LITERAL
        STRING "'12.12'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "defaulttest"
    WHITESPACE "\n            "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "col1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "ddef1"
      WHITESPACE "\n            "
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "col2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "ddef2"
      WHITESPACE "\n            "
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "col3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "ddef3"
      WHITESPACE "\n            "
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "col4"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "ddef4"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      WHITESPACE "\n            "
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "col5"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "ddef1"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "NOT"
          WHITESPACE " "
          NULL_KW "NULL"
        WHITESPACE " "
        DEFAULT_CONSTRAINT
          DEFAULT_KW "DEFAULT"
          WHITESPACE " "
          LITERAL
            NULL_KW "NULL"
      WHITESPACE "\n            "
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "col6"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "ddef2"
        WHITESPACE " "
        DEFAULT_CONSTRAINT
          DEFAULT_KW "DEFAULT"
          WHITESPACE " "
          LITERAL
            STRING "'88'"
      WHITESPACE "\n            "
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "col7"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "ddef4"
        WHITESPACE " "
        DEFAULT_CONSTRAINT
          DEFAULT_KW "DEFAULT"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "8000"
      WHITESPACE "\n            "
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "col8"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "ddef5"
      WHITESPACE "\n            "
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "defaulttest"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "col4"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails, col5 defaults to null"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "defaulttest"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "col5"
      WHITESPACE " "
      DROP_DEFAULT
        DROP_KW "drop"
        WHITESPACE " "
        DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "defaulttest"
    WHITESPACE " "
    DEFAULT_KW "default"
    WHITESPACE " "
    VALUES_KW "values"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- succeeds, inserts domain default"
  WHITESPACE "\n"
  COMMENT "-- We used to treat SET DEFAULT NULL as equivalent to DROP DEFAULT; wrong"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "defaulttest"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "col5"
      WHITESPACE " "
      SET_DEFAULT
        SET_KW "set"
        WHITESPACE " "
        DEFAULT_KW "default"
        WHITESPACE " "
        LITERAL
          NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "defaulttest"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "col4"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "defaulttest"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "col5"
      WHITESPACE " "
      DROP_DEFAULT
        DROP_KW "drop"
        WHITESPACE " "
        DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "defaulttest"
    WHITESPACE " "
    DEFAULT_KW "default"
    WHITESPACE " "
    VALUES_KW "values"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "defaulttest"
    WHITESPACE " "
    DEFAULT_KW "default"
    WHITESPACE " "
    VALUES_KW "values"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test defaults with copy"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "defaulttest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "defaulttest"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test ALTER DOMAIN .. NOT NULL"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "dnotnulltest"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INTEGER_KW "integer"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "domnotnull"
    WHITESPACE "\n"
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "col1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "dnotnulltest"
      WHITESPACE "\n"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "col2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "dnotnulltest"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domnotnull"
    WHITESPACE " "
    DEFAULT_KW "default"
    WHITESPACE " "
    VALUES_KW "values"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dnotnulltest"
    WHITESPACE " "
    SET_NOT_NULL
      SET_KW "set"
      WHITESPACE " "
      NOT_KW "not"
      WHITESPACE " "
      NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domnotnull"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "col1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "5"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dnotnulltest"
    WHITESPACE " "
    SET_NOT_NULL
      SET_KW "set"
      WHITESPACE " "
      NOT_KW "not"
      WHITESPACE " "
      NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domnotnull"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "col2"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "6"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dnotnulltest"
    WHITESPACE " "
    SET_NOT_NULL
      SET_KW "set"
      WHITESPACE " "
      NOT_KW "not"
      WHITESPACE " "
      NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domnotnull"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "col1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dnotnulltest"
    WHITESPACE " "
    DROP_NOT_NULL
      DROP_KW "drop"
      WHITESPACE " "
      NOT_KW "not"
      WHITESPACE " "
      NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domnotnull"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "col1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domnotnull"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "col1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "5"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- these constraints can also be added and removed by name"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dnotnulltest"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      NOT_NULL_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "dnotnulltest_notnull"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domnotnull"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "col1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\t\t"
  COMMENT "-- fails"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_constraintdef"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "oid"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE "\n "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "contypid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'dnotnulltest'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regtype"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dnotnulltest"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "dnotnulltest_notnull"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domnotnull"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "col1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dnotnulltest"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test ALTER DOMAIN .. DEFAULT .."
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "domdeftest"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "col1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "ddef1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domdeftest"
    WHITESPACE " "
    DEFAULT_KW "default"
    WHITESPACE " "
    VALUES_KW "values"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "domdeftest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddef1"
    WHITESPACE " "
    SET_DEFAULT
      SET_KW "set"
      WHITESPACE " "
      DEFAULT_KW "default"
      WHITESPACE " "
      LITERAL
        STRING "'42'"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domdeftest"
    WHITESPACE " "
    DEFAULT_KW "default"
    WHITESPACE " "
    VALUES_KW "values"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "domdeftest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddef1"
    WHITESPACE " "
    DROP_DEFAULT
      DROP_KW "drop"
      WHITESPACE " "
      DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domdeftest"
    WHITESPACE " "
    DEFAULT_KW "default"
    WHITESPACE " "
    VALUES_KW "values"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "domdeftest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domdeftest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test ALTER DOMAIN .. CONSTRAINT .."
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "con"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INTEGER_KW "integer"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "domcontest"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "col1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "con"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domcontest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domcontest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "con"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "t"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            VALUE_KW "VALUE"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "con"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "t"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            VALUE_KW "VALUE"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "34"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "con"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            VALUE_KW "VALUE"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domcontest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      PREFIX_EXPR
        MINUS "-"
        LITERAL
          INT_NUMBER "5"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domcontest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "42"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domcontest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "con"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "t"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domcontest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      PREFIX_EXPR
        MINUS "-"
        LITERAL
          INT_NUMBER "5"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fails"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domcontest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "42"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "con"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "nonexistent"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "con"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      IF_EXISTS
        IF_KW "if"
        WHITESPACE " "
        EXISTS_KW "exists"
      WHITESPACE " "
      NAME_REF
        IDENT "nonexistent"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- not-null constraints"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "connotnull"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INTEGER_KW "integer"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "domconnotnulltest"
    WHITESPACE "\n"
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "col1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "connotnull"
      WHITESPACE "\n"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "col2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "connotnull"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domconnotnulltest"
    WHITESPACE " "
    DEFAULT_KW "default"
    WHITESPACE " "
    VALUES_KW "values"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "connotnull"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      NOT_NULL_CONSTRAINT
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domconnotnulltest"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "col1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "5"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "connotnull"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      NOT_NULL_CONSTRAINT
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domconnotnulltest"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "col2"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "6"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "connotnull"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      NOT_NULL_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "constr1"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "contypid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'connotnull'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "contype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'n'"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "connotnull"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      NOT_NULL_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "constr1bis"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- redundant"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "contypid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'connotnull'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "contype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'n'"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domconnotnulltest"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "col1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails"
  WHITESPACE "\n\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "connotnull"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "constr1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domconnotnulltest"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "col1"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "connotnull"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domconnotnulltest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test ALTER DOMAIN .. CONSTRAINT .. NOT VALID"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "things"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "INT"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "thethings"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "stuff"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "things"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "thethings"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "stuff"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "55"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    DOMAIN_KW "DOMAIN"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "things"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "meow"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            VALUE_KW "VALUE"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "11"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    DOMAIN_KW "DOMAIN"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "things"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "meow"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            VALUE_KW "VALUE"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "11"
        R_PAREN ")"
      WHITESPACE " "
      NOT_KW "NOT"
      WHITESPACE " "
      VALID_KW "VALID"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    DOMAIN_KW "DOMAIN"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "things"
    WHITESPACE " "
    VALIDATE_CONSTRAINT
      VALIDATE_KW "VALIDATE"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "meow"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "thethings"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "stuff"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    DOMAIN_KW "DOMAIN"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "things"
    WHITESPACE " "
    VALIDATE_CONSTRAINT
      VALIDATE_KW "VALIDATE"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "meow"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Confirm ALTER DOMAIN with RULES."
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "domtab"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "col1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "dom"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INTEGER_KW "integer"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "domview"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CAST_EXPR
              CAST_KW "cast"
              L_PAREN "("
              NAME_REF
                IDENT "col1"
              WHITESPACE " "
              AS_KW "as"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "dom"
              R_PAREN ")"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "domtab"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domtab"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "col1"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domtab"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "col1"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "domview"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dom"
    WHITESPACE " "
    SET_NOT_NULL
      SET_KW "set"
      WHITESPACE " "
      NOT_KW "not"
      WHITESPACE " "
      NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "domview"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dom"
    WHITESPACE " "
    DROP_NOT_NULL
      DROP_KW "drop"
      WHITESPACE " "
      NOT_KW "not"
      WHITESPACE " "
      NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "domview"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dom"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "domchkgt6"
        WHITESPACE " "
        CHECK_KW "check"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            VALUE_KW "value"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "6"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "domview"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail"
  WHITESPACE "\n\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dom"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "domchkgt6"
      WHITESPACE " "
      RESTRICT_KW "restrict"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "domview"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- cleanup"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddef1"
    WHITESPACE " "
    RESTRICT_KW "restrict"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddef2"
    WHITESPACE " "
    RESTRICT_KW "restrict"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddef3"
    WHITESPACE " "
    RESTRICT_KW "restrict"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddef4"
    WHITESPACE " "
    RESTRICT_KW "restrict"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddef5"
    WHITESPACE " "
    RESTRICT_KW "restrict"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_SEQUENCE_STMT
    DROP_KW "drop"
    WHITESPACE " "
    SEQUENCE_KW "sequence"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddef4_seq"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test domains over domains"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "vchar4"
    WHITESPACE " "
    CHAR_TYPE
      VARCHAR_KW "varchar"
      L_PAREN "("
      ARG_LIST
        ARG
          LITERAL
            INT_NUMBER "4"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "dinter"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "vchar4"
    WHITESPACE " "
    CHECK_CONSTRAINT
      CHECK_KW "check"
      WHITESPACE " "
      L_PAREN "("
      BIN_EXPR
        CALL_EXPR
          NAME_REF
            SUBSTRING_KW "substring"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              VALUE_KW "VALUE"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'x'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "dtop"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "dinter"
    WHITESPACE " "
    CHECK_CONSTRAINT
      CHECK_KW "check"
      WHITESPACE " "
      L_PAREN "("
      BIN_EXPR
        CALL_EXPR
          NAME_REF
            SUBSTRING_KW "substring"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              VALUE_KW "VALUE"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "2"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'1'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'x123'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "dtop"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'x1234'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "dtop"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- explicit coercion should truncate"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'y1234'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "dtop"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'y123'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "dtop"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'yz23'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "dtop"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'xz23'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "dtop"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dtest"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "dtop"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dtest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        STRING "'x123'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dtest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        STRING "'x1234'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail, implicit coercion"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dtest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        STRING "'y1234'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail, implicit coercion"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dtest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        STRING "'y123'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dtest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        STRING "'yz23'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dtest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        STRING "'xz23'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "vchar4"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Make sure that constraints of newly-added domain columns are"
  WHITESPACE "\n"
  COMMENT "-- enforced correctly, even if there's no default value for the new"
  WHITESPACE "\n"
  COMMENT "-- column. Per bug #1433"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "str_domain"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            TEXT_KW "text"
    WHITESPACE " "
    NOT_NULL_CONSTRAINT
      NOT_KW "not"
      WHITESPACE " "
      NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "domain_test"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domain_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domain_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- should fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domain_test"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "str_domain"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "str_domain2"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            TEXT_KW "text"
    WHITESPACE " "
    CHECK_CONSTRAINT
      CHECK_KW "check"
      WHITESPACE " "
      L_PAREN "("
      BIN_EXPR
        NAME_REF
          VALUE_KW "value"
        WHITESPACE " "
        NEQB "<>"
        WHITESPACE " "
        LITERAL
          STRING "'foo'"
      R_PAREN ")"
    WHITESPACE " "
    DEFAULT_CONSTRAINT
      DEFAULT_KW "default"
      WHITESPACE " "
      LITERAL
        STRING "'foo'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- should fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "domain_test"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "d"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "str_domain2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that domain constraints on prepared statement parameters of"
  WHITESPACE "\n"
  COMMENT "-- unknown type are enforced correctly."
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "pos_int"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    WHITESPACE " "
    CHECK_CONSTRAINT
      CHECK_KW "check"
      WHITESPACE " "
      L_PAREN "("
      BIN_EXPR
        NAME_REF
          VALUE_KW "value"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
      R_PAREN ")"
    WHITESPACE " "
    NOT_NULL_CONSTRAINT
      NOT_KW "not"
      WHITESPACE " "
      NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  PREPARE_STMT
    PREPARE_KW "prepare"
    WHITESPACE " "
    NAME
      IDENT "s1"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              CAST_EXPR
                LITERAL
                  PARAM "$1"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "pos_int"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "10"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "\"is_ten\""
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "s1"
    ARG_LIST
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "s1"
    ARG_LIST
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- should fail"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "s1"
    ARG_LIST
      L_PAREN "("
      LITERAL
        NULL_KW "NULL"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- should fail"
  WHITESPACE "\n\n"
  COMMENT "-- Check that domain constraints on plpgsql function parameters, results,"
  WHITESPACE "\n"
  COMMENT "-- and local variables are enforced correctly."
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "doubledecrement"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "p1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "pos_int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "pos_int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\ndeclare v pos_int;\nbegin\n    return p1;\nend$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "doubledecrement"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail because of implicit null assignment"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "doubledecrement"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "p1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "pos_int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "pos_int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\ndeclare v pos_int := 0;\nbegin\n    return p1;\nend$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "doubledecrement"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail at initialization assignment"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "doubledecrement"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "p1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "pos_int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "pos_int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\ndeclare v pos_int := 1;\nbegin\n    v := p1 - 1;\n    return v - 1;\nend$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "doubledecrement"
            ARG_LIST
              L_PAREN "("
              LITERAL
                NULL_KW "null"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail before call"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "doubledecrement"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "0"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail before call"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "doubledecrement"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail at assignment to v"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "doubledecrement"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "2"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail at return"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "doubledecrement"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- good"
  WHITESPACE "\n\n"
  COMMENT "-- Check that ALTER DOMAIN tests columns of derived types"
  WHITESPACE "\n\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "posint"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Currently, this doesn't work for composite types, but verify it complains"
  WHITESPACE "\n"
  CREATE_TYPE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "ddtest1"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "f1"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "posint"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "ddtest2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "ddtest1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddtest2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      CALL_EXPR
        NAME_REF
          ROW_KW "row"
        ARG_LIST
          L_PAREN "("
          PREFIX_EXPR
            MINUS "-"
            LITERAL
              INT_NUMBER "1"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "posint"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "c1"
        WHITESPACE " "
        CHECK_KW "check"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            VALUE_KW "value"
          WHITESPACE " "
          GTEQ ">="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddtest2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Likewise for domains within arrays of composite"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "ddtest2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        ARRAY_TYPE
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "ddtest1"
          L_BRACK "["
          R_BRACK "]"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddtest2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        STRING "'{(-1)}'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "posint"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "c1"
        WHITESPACE " "
        CHECK_KW "check"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            VALUE_KW "value"
          WHITESPACE " "
          GTEQ ">="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddtest2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Likewise for domains within domains over composite"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "ddtest1d"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "ddtest1"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "ddtest2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "ddtest1d"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddtest2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        STRING "'(-1)'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "posint"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "c1"
        WHITESPACE " "
        CHECK_KW "check"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            VALUE_KW "value"
          WHITESPACE " "
          GTEQ ">="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddtest2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddtest1d"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Likewise for domains within domains over array of composite"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "ddtest1d"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    ARRAY_TYPE
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "ddtest1"
      L_BRACK "["
      R_BRACK "]"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "ddtest2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "ddtest1d"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddtest2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        STRING "'{(-1)}'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "posint"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "c1"
        WHITESPACE " "
        CHECK_KW "check"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            VALUE_KW "value"
          WHITESPACE " "
          GTEQ ">="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddtest2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddtest1d"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Doesn't work for ranges, either"
  WHITESPACE "\n"
  CREATE_TYPE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rposint"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    RANGE_KW "range"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "subtype"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "posint"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "ddtest2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "rposint"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddtest2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        STRING "'(-1,3]'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "posint"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "c1"
        WHITESPACE " "
        CHECK_KW "check"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            VALUE_KW "value"
          WHITESPACE " "
          GTEQ ">="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddtest2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TYPE_STMT
    DROP_KW "drop"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rposint"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "posint"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "c1"
        WHITESPACE " "
        CHECK_KW "check"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            VALUE_KW "value"
          WHITESPACE " "
          GTEQ ">="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "posint2"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "posint"
    WHITESPACE " "
    CHECK_CONSTRAINT
      CHECK_KW "check"
      WHITESPACE " "
      L_PAREN "("
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            VALUE_KW "value"
          WHITESPACE " "
          PERCENT "%"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "2"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "ddtest2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "posint2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddtest2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "11"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddtest2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      PREFIX_EXPR
        MINUS "-"
        LITERAL
          INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddtest2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "posint"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "c2"
        WHITESPACE " "
        CHECK_KW "check"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            VALUE_KW "value"
          WHITESPACE " "
          GTEQ ">="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "posint"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "c2"
        WHITESPACE " "
        CHECK_KW "check"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            VALUE_KW "value"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- OK"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddtest2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TYPE_STMT
    DROP_KW "drop"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddtest1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "posint"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Check enforcement of domain-related typmod in plpgsql (bug #5717)"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "array_elem_check"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              NUMERIC_KW "numeric"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\ndeclare\n  x numeric(4,2)[1];\nbegin\n  x[1] := $1;\n  return x[1];\nend$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_elem_check"
            ARG_LIST
              L_PAREN "("
              LITERAL
                FLOAT_NUMBER "121.00"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_elem_check"
            ARG_LIST
              L_PAREN "("
              LITERAL
                FLOAT_NUMBER "1.23456"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "mynums"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    ARRAY_TYPE
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              NUMERIC_KW "numeric"
        L_PAREN "("
        ARG_LIST
          ARG
            LITERAL
              INT_NUMBER "4"
          COMMA ","
          ARG
            LITERAL
              INT_NUMBER "2"
          R_PAREN ")"
      L_BRACK "["
      LITERAL
        INT_NUMBER "1"
      R_BRACK "]"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "array_elem_check"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              NUMERIC_KW "numeric"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\ndeclare\n  x mynums;\nbegin\n  x[1] := $1;\n  return x[1];\nend$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_elem_check"
            ARG_LIST
              L_PAREN "("
              LITERAL
                FLOAT_NUMBER "121.00"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_elem_check"
            ARG_LIST
              L_PAREN "("
              LITERAL
                FLOAT_NUMBER "1.23456"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "mynums2"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "mynums"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "array_elem_check"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              NUMERIC_KW "numeric"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\ndeclare\n  x mynums2;\nbegin\n  x[1] := $1;\n  return x[1];\nend$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_elem_check"
            ARG_LIST
              L_PAREN "("
              LITERAL
                FLOAT_NUMBER "121.00"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_elem_check"
            ARG_LIST
              L_PAREN "("
              LITERAL
                FLOAT_NUMBER "1.23456"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_FUNCTION_STMT
    DROP_KW "drop"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "array_elem_check"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Check enforcement of array-level domain constraints"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "orderedpair"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    ARRAY_TYPE
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
      L_BRACK "["
      LITERAL
        INT_NUMBER "2"
      R_BRACK "]"
    WHITESPACE " "
    CHECK_CONSTRAINT
      CHECK_KW "check"
      WHITESPACE " "
      L_PAREN "("
      BIN_EXPR
        INDEX_EXPR
          NAME_REF
            VALUE_KW "value"
          L_BRACK "["
          LITERAL
            INT_NUMBER "1"
          R_BRACK "]"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        INDEX_EXPR
          NAME_REF
            VALUE_KW "value"
          L_BRACK "["
          LITERAL
            INT_NUMBER "2"
          R_BRACK "]"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            ARRAY_EXPR
              ARRAY_KW "array"
              L_BRACK "["
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "2"
              R_BRACK "]"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "orderedpair"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            ARRAY_EXPR
              ARRAY_KW "array"
              L_BRACK "["
              LITERAL
                INT_NUMBER "2"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              R_BRACK "]"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "orderedpair"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "op"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "orderedpair"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "op"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      ARRAY_EXPR
        ARRAY_KW "array"
        L_BRACK "["
        LITERAL
          INT_NUMBER "1"
        COMMA ","
        LITERAL
          INT_NUMBER "2"
        R_BRACK "]"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "op"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      ARRAY_EXPR
        ARRAY_KW "array"
        L_BRACK "["
        LITERAL
          INT_NUMBER "2"
        COMMA ","
        LITERAL
          INT_NUMBER "1"
        R_BRACK "]"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "op"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "f1"
    BIN_EXPR
      ARRAY_EXPR
        L_BRACK "["
        LITERAL
          INT_NUMBER "2"
        R_BRACK "]"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "op"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "f1"
    BIN_EXPR
      ARRAY_EXPR
        L_BRACK "["
        LITERAL
          INT_NUMBER "2"
        R_BRACK "]"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "op"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "array_elem_check"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\ndeclare\n  x orderedpair := '{1,2}';\nbegin\n  x[2] := $1;\n  return x[2];\nend$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_elem_check"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_elem_check"
            ARG_LIST
              L_PAREN "("
              PREFIX_EXPR
                MINUS "-"
                LITERAL
                  INT_NUMBER "1"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_FUNCTION_STMT
    DROP_KW "drop"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "array_elem_check"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Check enforcement of changing constraints in plpgsql"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "di"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dom_check"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "di"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\ndeclare d di;\nbegin\n  d := $1::di;\n  return d;\nend\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "immutable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "dom_check"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "0"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "di"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "pos"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            VALUE_KW "value"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "dom_check"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "0"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "di"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "pos"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "dom_check"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "0"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- implicit cast during assignment is a separate code path, test that too"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dom_check"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "di"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\ndeclare d di;\nbegin\n  d := $1;\n  return d;\nend\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "immutable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "dom_check"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "0"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "di"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "pos"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            VALUE_KW "value"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "dom_check"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "0"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "di"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "pos"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "dom_check"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "0"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_FUNCTION_STMT
    DROP_KW "drop"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dom_check"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "di"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Check use of a (non-inline-able) SQL function in a domain constraint;"
  WHITESPACE "\n"
  COMMENT "-- this has caused issues in the past"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "sql_is_distinct_from"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "anyelement"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          IDENT "anyelement"
      R_PAREN ")"
    WHITESPACE "\n"
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              BOOLEAN_KW "boolean"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE "\n"
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          STRING "'select $1 is distinct from $2 limit 1'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "inotnull"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    WHITESPACE "\n  "
    CHECK_CONSTRAINT
      CHECK_KW "check"
      WHITESPACE " "
      L_PAREN "("
      CALL_EXPR
        NAME_REF
          IDENT "sql_is_distinct_from"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            VALUE_KW "value"
          COMMA ","
          WHITESPACE " "
          LITERAL
            NULL_KW "null"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            LITERAL
              INT_NUMBER "1"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "inotnull"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            LITERAL
              NULL_KW "null"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "inotnull"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dom_table"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "inotnull"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dom_table"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'1'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dom_table"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dom_table"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dom_table"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inotnull"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "drop"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "sql_is_distinct_from"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "anyelement"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          IDENT "anyelement"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Renaming"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "testdomain1"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "testdomain1"
    WHITESPACE " "
    RENAME_TO
      RENAME_KW "rename"
      WHITESPACE " "
      TO_KW "to"
      WHITESPACE " "
      NAME
        IDENT "testdomain2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TYPE_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "testdomain2"
    WHITESPACE " "
    RENAME_KW "rename"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    NAME
      IDENT "testdomain3"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- alter type also works"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "testdomain3"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Renaming domain constraints"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "testdomain1"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    WHITESPACE " "
    CHECK_CONSTRAINT
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "unsigned"
      WHITESPACE " "
      CHECK_KW "check"
      WHITESPACE " "
      L_PAREN "("
      BIN_EXPR
        NAME_REF
          VALUE_KW "value"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "testdomain1"
    WHITESPACE " "
    RENAME_CONSTRAINT
      RENAME_KW "rename"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "unsigned"
      WHITESPACE " "
      TO_KW "to"
      WHITESPACE " "
      NAME
        IDENT "unsigned_foo"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "alter"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "testdomain1"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "unsigned_foo"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "testdomain1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Get the base type of a domain"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "mytext"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "mytext_child_1"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "mytext"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_basetype"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'mytext'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regtype"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_basetype"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'mytext_child_1'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regtype"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_basetype"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- expect NULL not error"
  WHITESPACE "\n\n"
  DROP_DOMAIN_STMT
    DROP_KW "drop"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mytext"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Explicit enforceability specification not allowed"
  WHITESPACE "\n"
  COMMENT "---"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    DOMAIN_KW "DOMAIN"
    WHITESPACE " "
    NAME
      IDENT "constraint_enforced_dom"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    WHITESPACE " "
    CHECK_CONSTRAINT
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "the_constraint"
      WHITESPACE " "
      CHECK_KW "CHECK"
      WHITESPACE " "
      L_PAREN "("
      BIN_EXPR
        NAME_REF
          VALUE_KW "value"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
      R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "ENFORCED"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    DOMAIN_KW "DOMAIN"
    WHITESPACE " "
    NAME
      IDENT "constraint_not_enforced_dom"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    WHITESPACE " "
    CHECK_CONSTRAINT
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "the_constraint"
      WHITESPACE " "
      CHECK_KW "CHECK"
      WHITESPACE " "
      L_PAREN "("
      BIN_EXPR
        NAME_REF
          VALUE_KW "value"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
      R_PAREN ")"
    WHITESPACE " "
    NOT_NULL_CONSTRAINT
      NOT_KW "NOT"
  WHITESPACE " "
  ERROR
    IDENT "ENFORCED"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    DOMAIN_KW "DOMAIN"
    WHITESPACE " "
    NAME
      IDENT "constraint_enforced_dom"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- XXX misleading error messages"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    DOMAIN_KW "DOMAIN"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "constraint_enforced_dom"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "the_constraint"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            VALUE_KW "value"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "ENFORCED"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_DOMAIN_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    DOMAIN_KW "DOMAIN"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "constraint_enforced_dom"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "the_constraint"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            VALUE_KW "value"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
      WHITESPACE " "
      NOT_KW "NOT"
  WHITESPACE " "
  ERROR
    IDENT "ENFORCED"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_DOMAIN_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    DOMAIN_KW "DOMAIN"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "constraint_enforced_dom"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Information schema"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "information_schema"
        DOT "."
        NAME_REF
          IDENT "column_domain_usage"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "domain_name"
        WHITESPACE " "
        IN_KW "IN"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            STRING "'con'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'dom'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'pos_int'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'things'"
          R_PAREN ")"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "domain_name"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "information_schema"
        DOT "."
        NAME_REF
          IDENT "domain_constraints"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "domain_name"
        WHITESPACE " "
        IN_KW "IN"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            STRING "'con'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'dom'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'pos_int'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'things'"
          R_PAREN ")"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "constraint_name"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "information_schema"
        DOT "."
        NAME_REF
          IDENT "domains"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "domain_name"
        WHITESPACE " "
        IN_KW "IN"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            STRING "'con'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'dom'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'pos_int'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'things'"
          R_PAREN ")"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "domain_name"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "information_schema"
        DOT "."
        NAME_REF
          IDENT "check_constraints"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        TUPLE_EXPR
          L_PAREN "("
          NAME_REF
            IDENT "constraint_schema"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "constraint_name"
          R_PAREN ")"
        WHITESPACE "\n        "
        IN_KW "IN"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "constraint_schema"
                COMMA ","
                WHITESPACE " "
                TARGET
                  NAME_REF
                    IDENT "constraint_name"
            WHITESPACE "\n            "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "information_schema"
                DOT "."
                NAME_REF
                  IDENT "domain_constraints"
            WHITESPACE "\n            "
            WHERE_CLAUSE
              WHERE_KW "WHERE"
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "domain_name"
                WHITESPACE " "
                IN_KW "IN"
                WHITESPACE " "
                TUPLE_EXPR
                  L_PAREN "("
                  LITERAL
                    STRING "'con'"
                  COMMA ","
                  WHITESPACE " "
                  LITERAL
                    STRING "'dom'"
                  COMMA ","
                  WHITESPACE " "
                  LITERAL
                    STRING "'pos_int'"
                  COMMA ","
                  WHITESPACE " "
                  LITERAL
                    STRING "'things'"
                  R_PAREN ")"
          R_PAREN ")"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "constraint_name"
  SEMICOLON ";"
  WHITESPACE "\n"
---
ERROR@544: expected SEMICOLON
ERROR@545: expected command, found NO_KW
ERROR@548: expected command, found INHERIT_KW
ERROR@991: expected L_PAREN
ERROR@993: expected L_PAREN
ERROR@994: expected L_PAREN
ERROR@996: expected L_PAREN
ERROR@999: expected L_PAREN
ERROR@1006: expected L_PAREN
ERROR@1008: expected L_PAREN
ERROR@1015: expected L_PAREN
ERROR@1022: expected L_PAREN
ERROR@1029: expected L_PAREN
ERROR@1032: expected L_PAREN
ERROR@1037: expected L_PAREN
ERROR@1048: expected L_PAREN
ERROR@1051: expected L_PAREN
ERROR@1065: expected L_PAREN
ERROR@1067: expected L_PAREN
ERROR@1068: expected L_PAREN
ERROR@1070: expected L_PAREN
ERROR@1080: expected L_PAREN
ERROR@1239: expected L_PAREN
ERROR@1246: expected L_PAREN
ERROR@1253: expected L_PAREN
ERROR@1267: expected L_PAREN
ERROR@1277: expected R_PAREN
ERROR@1277: expected R_PAREN
ERROR@4141: expected EQ
ERROR@4180: expected EQ
ERROR@5076: expected EQ
ERROR@5076: expected an expression, found DOT
ERROR@5077: expected expression
ERROR@5077: expected SEMICOLON
ERROR@5077: expected command, found IDENT
ERROR@5079: expected command, found EQ
ERROR@5081: expected command, found L_PAREN
ERROR@5082: expected command, found IDENT
ERROR@5084: expected command, found R_PAREN
ERROR@5085: expected command, found DOT
ERROR@5086: expected command, found IDENT
ERROR@5088: expected command, found PLUS
ERROR@5090: expected command, found INT_NUMBER
ERROR@5092: expected command, found WHERE_KW
ERROR@5098: expected command, found L_PAREN
ERROR@5099: expected command, found IDENT
ERROR@5101: expected command, found R_PAREN
ERROR@5102: expected command, found DOT
ERROR@5103: expected command, found IDENT
ERROR@5105: expected command, found R_ANGLE
ERROR@5107: expected command, found INT_NUMBER
ERROR@5623: expected EQ
ERROR@5623: expected an expression, found DOT
ERROR@5624: expected expression
ERROR@5624: expected SEMICOLON
ERROR@5624: expected command, found IDENT
ERROR@5626: expected command, found EQ
ERROR@5628: expected command, found L_PAREN
ERROR@5629: expected command, found IDENT
ERROR@5631: expected command, found R_PAREN
ERROR@5632: expected command, found DOT
ERROR@5633: expected command, found IDENT
ERROR@5635: expected command, found PLUS
ERROR@5637: expected command, found INT_NUMBER
ERROR@5639: expected command, found WHERE_KW
ERROR@5645: expected command, found L_PAREN
ERROR@5646: expected command, found IDENT
ERROR@5648: expected command, found R_PAREN
ERROR@5649: expected command, found DOT
ERROR@5650: expected command, found IDENT
ERROR@5652: expected command, found R_ANGLE
ERROR@5654: expected command, found INT_NUMBER
ERROR@5690: expected EQ
ERROR@5690: expected an expression, found DOT
ERROR@5691: expected expression
ERROR@5691: expected SEMICOLON
ERROR@5691: expected command, found IDENT
ERROR@5693: expected command, found EQ
ERROR@5695: expected command, found L_PAREN
ERROR@5696: expected command, found IDENT
ERROR@5698: expected command, found R_PAREN
ERROR@5699: expected command, found DOT
ERROR@5700: expected command, found IDENT
ERROR@5702: expected command, found MINUS
ERROR@5704: expected command, found INT_NUMBER
ERROR@5705: expected command, found COMMA
ERROR@5707: expected command, found IDENT
ERROR@5709: expected command, found DOT
ERROR@5710: expected command, found IDENT
ERROR@5712: expected command, found EQ
ERROR@5714: expected command, found L_PAREN
ERROR@5715: expected command, found IDENT
ERROR@5717: expected command, found R_PAREN
ERROR@5718: expected command, found DOT
ERROR@5719: expected command, found IDENT
ERROR@5721: expected command, found PLUS
ERROR@5723: expected command, found INT_NUMBER
ERROR@5725: expected command, found WHERE_KW
ERROR@5731: expected command, found L_PAREN
ERROR@5732: expected command, found IDENT
ERROR@5734: expected command, found R_PAREN
ERROR@5735: expected command, found DOT
ERROR@5736: expected command, found IDENT
ERROR@5738: expected command, found R_ANGLE
ERROR@5740: expected command, found INT_NUMBER
ERROR@5793: expected R_PAREN
ERROR@5794: expected command, found OFF_KW
ERROR@5797: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@5797: expected SEMICOLON
ERROR@5797: expected command, found R_PAREN
ERROR@5825: expected EQ
ERROR@5825: expected an expression, found DOT
ERROR@5826: expected expression
ERROR@5826: expected SEMICOLON
ERROR@5826: expected command, found IDENT
ERROR@5828: expected command, found EQ
ERROR@5830: expected command, found L_PAREN
ERROR@5831: expected command, found IDENT
ERROR@5833: expected command, found R_PAREN
ERROR@5834: expected command, found DOT
ERROR@5835: expected command, found IDENT
ERROR@5837: expected command, found MINUS
ERROR@5839: expected command, found INT_NUMBER
ERROR@5840: expected command, found COMMA
ERROR@5842: expected command, found IDENT
ERROR@5844: expected command, found DOT
ERROR@5845: expected command, found IDENT
ERROR@5847: expected command, found EQ
ERROR@5849: expected command, found L_PAREN
ERROR@5850: expected command, found IDENT
ERROR@5852: expected command, found R_PAREN
ERROR@5853: expected command, found DOT
ERROR@5854: expected command, found IDENT
ERROR@5856: expected command, found PLUS
ERROR@5858: expected command, found INT_NUMBER
ERROR@5860: expected command, found WHERE_KW
ERROR@5866: expected command, found L_PAREN
ERROR@5867: expected command, found IDENT
ERROR@5869: expected command, found R_PAREN
ERROR@5870: expected command, found DOT
ERROR@5871: expected command, found IDENT
ERROR@5873: expected command, found R_ANGLE
ERROR@5875: expected command, found INT_NUMBER
ERROR@5960: expected EQ
ERROR@5960: expected an expression, found DOT
ERROR@5961: expected expression
ERROR@5961: expected SEMICOLON
ERROR@5961: expected command, found IDENT
ERROR@5963: expected command, found EQ
ERROR@5965: expected command, found L_PAREN
ERROR@5966: expected command, found IDENT
ERROR@5968: expected command, found R_PAREN
ERROR@5969: expected command, found DOT
ERROR@5970: expected command, found IDENT
ERROR@5972: expected command, found MINUS
ERROR@5974: expected command, found INT_NUMBER
ERROR@5975: expected command, found COMMA
ERROR@5977: expected command, found IDENT
ERROR@5979: expected command, found DOT
ERROR@5980: expected command, found IDENT
ERROR@5982: expected command, found EQ
ERROR@5984: expected command, found L_PAREN
ERROR@5985: expected command, found IDENT
ERROR@5987: expected command, found R_PAREN
ERROR@5988: expected command, found DOT
ERROR@5989: expected command, found IDENT
ERROR@5991: expected command, found PLUS
ERROR@5993: expected command, found INT_NUMBER
ERROR@5995: expected command, found WHERE_KW
ERROR@6001: expected command, found L_PAREN
ERROR@6002: expected command, found IDENT
ERROR@6004: expected command, found R_PAREN
ERROR@6005: expected command, found DOT
ERROR@6006: expected command, found IDENT
ERROR@6008: expected command, found R_ANGLE
ERROR@6010: expected command, found INT_NUMBER
ERROR@7709: expected EQ
ERROR@7788: expected EQ
ERROR@8387: expected EQ
ERROR@8459: expected EQ
ERROR@8482: expected EQ
ERROR@8573: expected R_PAREN
ERROR@8574: expected command, found OFF_KW
ERROR@8577: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@8577: expected SEMICOLON
ERROR@8577: expected command, found R_PAREN
ERROR@8605: expected EQ
ERROR@8628: expected EQ
ERROR@8753: expected EQ
ERROR@8776: expected EQ
ERROR@9138: expected EQ
ERROR@9176: expected EQ
ERROR@10123: expected EQ
ERROR@10292: expected EQ
ERROR@10387: expected R_PAREN
ERROR@10387: expected EQ
ERROR@10387: expected SEMICOLON
ERROR@10387: expected command, found L_BRACK
ERROR@10388: expected command, found INT_NUMBER
ERROR@10389: expected command, found R_BRACK
ERROR@10390: expected command, found R_PAREN
ERROR@10391: expected command, found L_BRACK
ERROR@10392: expected command, found INT_NUMBER
ERROR@10393: expected command, found R_BRACK
ERROR@10395: expected command, found EQ
ERROR@10397: expected command, found ARRAY_KW
ERROR@10402: expected command, found L_BRACK
ERROR@10403: expected command, found INT_NUMBER
ERROR@10405: expected command, found R_BRACK
ERROR@10717: expected EQ
ERROR@10772: expected EQ
ERROR@10819: expected EQ
ERROR@10992: expected EQ
ERROR@23152: expected EQ
ERROR@23177: expected EQ
ERROR@25791: expected SEMICOLON
ERROR@25792: expected command, found IDENT
ERROR@25898: expected NULL_KW
ERROR@25898: expected SEMICOLON
ERROR@25899: expected command, found IDENT
ERROR@26072: expected SEMICOLON
ERROR@26073: expected command, found IDENT
ERROR@26171: expected VALID_KW
ERROR@26171: expected SEMICOLON
ERROR@26172: expected command, found IDENT

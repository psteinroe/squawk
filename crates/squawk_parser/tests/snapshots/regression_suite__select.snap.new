---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/select.sql
---
SOURCE_FILE
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- SELECT"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  COMMENT "-- btree index"
  WHITESPACE "\n"
  COMMENT "-- awk '{if($1<10){print;}else{next;}}' onek.data | sort +0n -1"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
    WHITESPACE "\n   "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "onek"
          DOT "."
          NAME_REF
            IDENT "unique1"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10"
    WHITESPACE "\n   "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "onek"
        DOT "."
        NAME_REF
          IDENT "unique1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- awk '{if($1<20){print $1,$14;}else{next;}}' onek.data | sort +0nr -1"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "onek"
            DOT "."
            NAME_REF
              IDENT "unique1"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "onek"
            DOT "."
            NAME_REF
              IDENT "stringu1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
    WHITESPACE "\n   "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "onek"
          DOT "."
          NAME_REF
            IDENT "unique1"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "20"
    WHITESPACE "\n   "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "unique1"
      WHITESPACE " "
      USING_KW "using"
      WHITESPACE " "
      R_ANGLE ">"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- awk '{if($1>980){print $1,$14;}else{next;}}' onek.data | sort +1d -2"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "onek"
            DOT "."
            NAME_REF
              IDENT "unique1"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "onek"
            DOT "."
            NAME_REF
              IDENT "stringu1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
    WHITESPACE "\n   "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "onek"
          DOT "."
          NAME_REF
            IDENT "unique1"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "980"
    WHITESPACE "\n   "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "stringu1"
      WHITESPACE " "
      USING_KW "using"
      WHITESPACE " "
      L_ANGLE "<"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- awk '{if($1>980){print $1,$16;}else{next;}}' onek.data |"
  WHITESPACE "\n"
  COMMENT "-- sort +1d -2 +0nr -1"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "onek"
            DOT "."
            NAME_REF
              IDENT "unique1"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "onek"
            DOT "."
            NAME_REF
              IDENT "string4"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
    WHITESPACE "\n   "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "onek"
          DOT "."
          NAME_REF
            IDENT "unique1"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "980"
    WHITESPACE "\n   "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "string4"
      WHITESPACE " "
      USING_KW "using"
      WHITESPACE " "
      L_ANGLE "<"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "unique1"
      WHITESPACE " "
      USING_KW "using"
      WHITESPACE " "
      R_ANGLE ">"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- awk '{if($1>980){print $1,$16;}else{next;}}' onek.data |"
  WHITESPACE "\n"
  COMMENT "-- sort +1dr -2 +0n -1"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "onek"
            DOT "."
            NAME_REF
              IDENT "unique1"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "onek"
            DOT "."
            NAME_REF
              IDENT "string4"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
    WHITESPACE "\n   "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "onek"
          DOT "."
          NAME_REF
            IDENT "unique1"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "980"
    WHITESPACE "\n   "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "string4"
      WHITESPACE " "
      USING_KW "using"
      WHITESPACE " "
      R_ANGLE ">"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "unique1"
      WHITESPACE " "
      USING_KW "using"
      WHITESPACE " "
      L_ANGLE "<"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- awk '{if($1<20){print $1,$16;}else{next;}}' onek.data |"
  WHITESPACE "\n"
  COMMENT "-- sort +0nr -1 +1d -2"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "onek"
            DOT "."
            NAME_REF
              IDENT "unique1"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "onek"
            DOT "."
            NAME_REF
              IDENT "string4"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
    WHITESPACE "\n   "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "onek"
          DOT "."
          NAME_REF
            IDENT "unique1"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "20"
    WHITESPACE "\n   "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "unique1"
      WHITESPACE " "
      USING_KW "using"
      WHITESPACE " "
      R_ANGLE ">"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "string4"
      WHITESPACE " "
      USING_KW "using"
      WHITESPACE " "
      L_ANGLE "<"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- awk '{if($1<20){print $1,$16;}else{next;}}' onek.data |"
  WHITESPACE "\n"
  COMMENT "-- sort +0n -1 +1dr -2"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "onek"
            DOT "."
            NAME_REF
              IDENT "unique1"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "onek"
            DOT "."
            NAME_REF
              IDENT "string4"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
    WHITESPACE "\n   "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "onek"
          DOT "."
          NAME_REF
            IDENT "unique1"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "20"
    WHITESPACE "\n   "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "unique1"
      WHITESPACE " "
      USING_KW "using"
      WHITESPACE " "
      L_ANGLE "<"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "string4"
      WHITESPACE " "
      USING_KW "using"
      WHITESPACE " "
      R_ANGLE ">"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- test partial btree indexes"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- As of 7.2, planner probably won't pick an indexscan without stats,"
  WHITESPACE "\n"
  COMMENT "-- so ANALYZE first.  Also, we want to prevent it from picking a bitmapscan"
  WHITESPACE "\n"
  COMMENT "-- followed by sort, because that could hide index ordering problems."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  ANALYZE_STMT
    ANALYZE_KW "ANALYZE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "onek2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_bitmapscan"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_sort"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- awk '{if($1<10){print $0;}else{next;}}' onek.data | sort +0n -1"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "onek2"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "onek2"
          DOT "."
          NAME_REF
            IDENT "unique1"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- awk '{if($1<20){print $1,$14;}else{next;}}' onek.data | sort +0nr -1"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "onek2"
            DOT "."
            NAME_REF
              IDENT "unique1"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "onek2"
            DOT "."
            NAME_REF
              IDENT "stringu1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek2"
    WHITESPACE "\n    "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "onek2"
          DOT "."
          NAME_REF
            IDENT "unique1"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "20"
    WHITESPACE "\n    "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "unique1"
      WHITESPACE " "
      USING_KW "using"
      WHITESPACE " "
      R_ANGLE ">"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- awk '{if($1>980){print $1,$14;}else{next;}}' onek.data | sort +1d -2"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "onek2"
            DOT "."
            NAME_REF
              IDENT "unique1"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "onek2"
            DOT "."
            NAME_REF
              IDENT "stringu1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek2"
    WHITESPACE "\n   "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "onek2"
          DOT "."
          NAME_REF
            IDENT "unique1"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "980"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_bitmapscan"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_sort"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- awk '{print $1,$2;}' person.data |"
  WHITESPACE "\n"
  COMMENT "-- awk '{if(NF!=2){print $3,$2;}else{print;}}' - emp.data |"
  WHITESPACE "\n"
  COMMENT "-- awk '{if(NF!=2){print $3,$2;}else{print;}}' - student.data |"
  WHITESPACE "\n"
  COMMENT "-- awk 'BEGIN{FS=\"      \";}{if(NF!=2){print $4,$5;}else{print;}}' - stud_emp.data"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- SELECT name, age FROM person*; ??? check if different"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              NAME_KW "name"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "age"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "person"
      STAR "*"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "p"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- awk '{print $1,$2;}' person.data |"
  WHITESPACE "\n"
  COMMENT "-- awk '{if(NF!=2){print $3,$2;}else{print;}}' - emp.data |"
  WHITESPACE "\n"
  COMMENT "-- awk '{if(NF!=2){print $3,$2;}else{print;}}' - student.data |"
  WHITESPACE "\n"
  COMMENT "-- awk 'BEGIN{FS=\"      \";}{if(NF!=1){print $4,$5;}else{print;}}' - stud_emp.data |"
  WHITESPACE "\n"
  COMMENT "-- sort +1nr -2"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              NAME_KW "name"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "age"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "person"
      STAR "*"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "p"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "age"
      WHITESPACE " "
      USING_KW "using"
      WHITESPACE " "
      R_ANGLE ">"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        NAME_KW "name"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test some cases involving whole-row Var referencing a subquery"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "foo"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  INT_NUMBER "1"
          WHITESPACE " "
          OFFSET_CLAUSE
            OFFSET_KW "offset"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "foo"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "foo"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  NULL_KW "null"
          WHITESPACE " "
          OFFSET_CLAUSE
            OFFSET_KW "offset"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "foo"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "foo"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  STRING "'xyzzy'"
              COMMA ","
              TARGET
                LITERAL
                  INT_NUMBER "1"
              COMMA ","
              TARGET
                LITERAL
                  NULL_KW "null"
          WHITESPACE " "
          OFFSET_CLAUSE
            OFFSET_KW "offset"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "foo"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test VALUES lists"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
      COMMA ","
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          L_PAREN "("
          LITERAL
            INT_NUMBER "147"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'RFAAAA'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "931"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'VJAAAA'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "v"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "i"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME
              IDENT "j"
          R_PAREN ")"
    WHITESPACE "\n    "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "onek"
            DOT "."
            NAME_REF
              IDENT "unique1"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "v"
            DOT "."
            NAME_REF
              IDENT "i"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "onek"
            DOT "."
            NAME_REF
              IDENT "stringu1"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "v"
            DOT "."
            NAME_REF
              IDENT "j"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- a more complex case"
  WHITESPACE "\n"
  COMMENT "-- looks like we're coding lisp :-)"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
      COMMA ","
      WHITESPACE "\n  "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "select"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    NAME_REF
                      IDENT "i"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "from"
                WHITESPACE "\n    "
                PAREN_EXPR
                  L_PAREN "("
                  SELECT
                    VALUES_KW "values"
                    L_PAREN "("
                    LITERAL
                      INT_NUMBER "10000"
                    R_PAREN ")"
                    COMMA ","
                    WHITESPACE " "
                    L_PAREN "("
                    LITERAL
                      INT_NUMBER "2"
                    R_PAREN ")"
                    COMMA ","
                    WHITESPACE " "
                    L_PAREN "("
                    LITERAL
                      INT_NUMBER "389"
                    R_PAREN ")"
                    COMMA ","
                    WHITESPACE " "
                    L_PAREN "("
                    LITERAL
                      INT_NUMBER "1000"
                    R_PAREN ")"
                    COMMA ","
                    WHITESPACE " "
                    L_PAREN "("
                    LITERAL
                      INT_NUMBER "2000"
                    R_PAREN ")"
                    COMMA ","
                    WHITESPACE " "
                    L_PAREN "("
                    PAREN_EXPR
                      L_PAREN "("
                      SELECT
                        SELECT_CLAUSE
                          SELECT_KW "select"
                          WHITESPACE " "
                          TARGET_LIST
                            TARGET
                              LITERAL
                                INT_NUMBER "10029"
                      R_PAREN ")"
                    R_PAREN ")"
                  R_PAREN ")"
                WHITESPACE " "
                ALIAS
                  AS_KW "as"
                  WHITESPACE " "
                  NAME
                    IDENT "foo"
                  COLUMN_LIST
                    L_PAREN "("
                    COLUMN
                      NAME
                        IDENT "i"
                    R_PAREN ")"
              WHITESPACE "\n    "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "i"
                WHITESPACE " "
                ASC_KW "asc"
              WHITESPACE " "
              LIMIT_CLAUSE
                LIMIT_KW "limit"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "1"
            R_PAREN ")"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "bar"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "i"
          R_PAREN ")"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "onek"
          DOT "."
          NAME_REF
            IDENT "unique1"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "bar"
          DOT "."
          NAME_REF
            IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- try VALUES in a subquery"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
    WHITESPACE "\n    "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        TUPLE_EXPR
          L_PAREN "("
          NAME_REF
            IDENT "unique1"
          COMMA ","
          NAME_REF
            IDENT "ten"
          R_PAREN ")"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            VALUES_KW "values"
            WHITESPACE " "
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "1"
            R_PAREN ")"
            COMMA ","
            WHITESPACE " "
            L_PAREN "("
            LITERAL
              INT_NUMBER "20"
            COMMA ","
            LITERAL
              INT_NUMBER "0"
            R_PAREN ")"
            COMMA ","
            WHITESPACE " "
            L_PAREN "("
            LITERAL
              INT_NUMBER "99"
            COMMA ","
            LITERAL
              INT_NUMBER "9"
            R_PAREN ")"
            COMMA ","
            WHITESPACE " "
            L_PAREN "("
            LITERAL
              INT_NUMBER "17"
            COMMA ","
            LITERAL
              INT_NUMBER "99"
            R_PAREN ")"
          R_PAREN ")"
    WHITESPACE "\n    "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "unique1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- VALUES is also legal as a standalone query or a set-operation member"
  WHITESPACE "\n"
  SELECT
    VALUES_KW "VALUES"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      INT_NUMBER "2"
    R_PAREN ")"
    COMMA ","
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    BIN_EXPR
      LITERAL
        INT_NUMBER "4"
      PLUS "+"
      LITERAL
        INT_NUMBER "4"
    R_PAREN ")"
    COMMA ","
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "7"
    COMMA ","
    LITERAL
      FLOAT_NUMBER "77.7"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMPOUND_SELECT
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      BIN_EXPR
        LITERAL
          INT_NUMBER "4"
        PLUS "+"
        LITERAL
          INT_NUMBER "4"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "7"
      COMMA ","
      LITERAL
        FLOAT_NUMBER "77.7"
      R_PAREN ")"
    WHITESPACE "\n"
    UNION_KW "UNION"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE "\n"
    COMPOUND_SELECT
      SELECT
        SELECT_CLAUSE
          SELECT_KW "SELECT"
          WHITESPACE " "
          TARGET_LIST
            TARGET
              BIN_EXPR
                LITERAL
                  INT_NUMBER "2"
                PLUS "+"
                LITERAL
                  INT_NUMBER "2"
            COMMA ","
            WHITESPACE " "
            TARGET
              LITERAL
                INT_NUMBER "57"
      WHITESPACE "\n"
      UNION_KW "UNION"
      WHITESPACE " "
      ALL_KW "ALL"
      WHITESPACE "\n"
      SELECT
        TABLE_KW "TABLE"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "int8_tbl"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- corner case: VALUES with no columns"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "nocols"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "nocols"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "nocols"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "n"
      COMMA ","
      WHITESPACE " "
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          L_PAREN "("
          FIELD_EXPR
            NAME_REF
              IDENT "n"
            DOT "."
            STAR "*"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test ORDER BY options"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "foo"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "foo"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "42"
      R_PAREN ")"
      COMMA ","
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
      COMMA ","
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
      COMMA ","
      L_PAREN "("
      LITERAL
        INT_NUMBER "7"
      R_PAREN ")"
      COMMA ","
      L_PAREN "("
      LITERAL
        NULL_KW "null"
      R_PAREN ")"
      COMMA ","
      L_PAREN "("
      LITERAL
        NULL_KW "null"
      R_PAREN ")"
      COMMA ","
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
      WHITESPACE " "
      ASC_KW "ASC"
  SEMICOLON ";"
  WHITESPACE "\t"
  COMMENT "-- same thing"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
      WHITESPACE " "
      NULLS_KW "NULLS"
      WHITESPACE " "
      FIRST_KW "FIRST"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
      WHITESPACE " "
      DESC_KW "DESC"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
      WHITESPACE " "
      DESC_KW "DESC"
      WHITESPACE " "
      NULLS_KW "NULLS"
      WHITESPACE " "
      LAST_KW "LAST"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check if indexscans do the right things"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "fooi"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "foo"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "f1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_sort"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      FALSE_KW "false"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
      WHITESPACE " "
      NULLS_KW "NULLS"
      WHITESPACE " "
      FIRST_KW "FIRST"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
      WHITESPACE " "
      DESC_KW "DESC"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
      WHITESPACE " "
      DESC_KW "DESC"
      WHITESPACE " "
      NULLS_KW "NULLS"
      WHITESPACE " "
      LAST_KW "LAST"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_INDEX_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "fooi"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "fooi"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "foo"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "f1"
      WHITESPACE " "
      DESC_KW "DESC"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
      WHITESPACE " "
      NULLS_KW "NULLS"
      WHITESPACE " "
      FIRST_KW "FIRST"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
      WHITESPACE " "
      DESC_KW "DESC"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
      WHITESPACE " "
      DESC_KW "DESC"
      WHITESPACE " "
      NULLS_KW "NULLS"
      WHITESPACE " "
      LAST_KW "LAST"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_INDEX_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "fooi"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "fooi"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "foo"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "f1"
      WHITESPACE " "
      DESC_KW "DESC"
      WHITESPACE " "
      NULLS_KW "NULLS"
      WHITESPACE " "
      LAST_KW "LAST"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
      WHITESPACE " "
      NULLS_KW "NULLS"
      WHITESPACE " "
      FIRST_KW "FIRST"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
      WHITESPACE " "
      DESC_KW "DESC"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
      WHITESPACE " "
      DESC_KW "DESC"
      WHITESPACE " "
      NULLS_KW "NULLS"
      WHITESPACE " "
      LAST_KW "LAST"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test planning of some cases with partial indexes"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  COMMENT "-- partial index is usable"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "unique2"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "11"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "stringu1"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'ATAAAA'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "unique2"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "11"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "stringu1"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'ATAAAA'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- actually run the query with an analyze to use the partial index"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    COMMA ","
  WHITESPACE " "
  ANALYZE_STMT
    ANALYZE_KW "analyze"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          ON_KW "on"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "timing"
  WHITESPACE " "
  ERROR
    OFF_KW "off"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "summary"
  WHITESPACE " "
  ERROR
    OFF_KW "off"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "buffers"
  WHITESPACE " "
  ERROR
    OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "unique2"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "11"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "stringu1"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'ATAAAA'"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "unique2"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "unique2"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "11"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "stringu1"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'ATAAAA'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "unique2"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "unique2"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "11"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "stringu1"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'ATAAAA'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- partial index predicate implies clause, so no need for retest"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "unique2"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "11"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "stringu1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            STRING "'B'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "unique2"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "11"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "stringu1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            STRING "'B'"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "unique2"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "unique2"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "11"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "stringu1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            STRING "'B'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "unique2"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "unique2"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "11"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "stringu1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            STRING "'B'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- but if it's an update target, must retest anyway"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "unique2"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "unique2"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "11"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "stringu1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            STRING "'B'"
    WHITESPACE " "
    LOCKING_CLAUSE
      FOR_KW "for"
      WHITESPACE " "
      UPDATE_KW "update"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "unique2"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "unique2"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "11"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "stringu1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            STRING "'B'"
    WHITESPACE " "
    LOCKING_CLAUSE
      FOR_KW "for"
      WHITESPACE " "
      UPDATE_KW "update"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- partial index is not applicable"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "unique2"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "unique2"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "11"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "stringu1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            STRING "'C'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "unique2"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "unique2"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "11"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "stringu1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            STRING "'C'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- partial index implies clause, but bitmap scan must recheck predicate anyway"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_indexscan"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "unique2"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "unique2"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "11"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "stringu1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            STRING "'B'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "unique2"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "unique2"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "11"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "stringu1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            STRING "'B'"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_indexscan"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- check multi-index cases too"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "unique1"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "unique2"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek2"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              NAME_REF
                IDENT "unique2"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "11"
            WHITESPACE " "
            OR_KW "or"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "unique1"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
          R_PAREN ")"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "stringu1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            STRING "'B'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "unique1"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "unique2"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek2"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              NAME_REF
                IDENT "unique2"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "11"
            WHITESPACE " "
            OR_KW "or"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "unique1"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
          R_PAREN ")"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "stringu1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            STRING "'B'"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "unique1"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "unique2"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek2"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              NAME_REF
                IDENT "unique2"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "11"
            WHITESPACE " "
            AND_KW "and"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "stringu1"
              WHITESPACE " "
              L_ANGLE "<"
              WHITESPACE " "
              LITERAL
                STRING "'B'"
          R_PAREN ")"
        WHITESPACE " "
        OR_KW "or"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "unique1"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "unique1"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "unique2"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek2"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              NAME_REF
                IDENT "unique2"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "11"
            WHITESPACE " "
            AND_KW "and"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "stringu1"
              WHITESPACE " "
              L_ANGLE "<"
              WHITESPACE " "
              LITERAL
                STRING "'B'"
          R_PAREN ")"
        WHITESPACE " "
        OR_KW "or"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "unique1"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test some corner cases that have been known to confuse the planner"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  COMMENT "-- ORDER BY on a constant doesn't really need any sorting"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "1"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "x"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- But ORDER BY on a set-valued expression does"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "sillysrf"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE "\n  "
        LITERAL
          STRING "'values (1),(10),(2),($1)'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "immutable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sillysrf"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "42"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sillysrf"
            ARG_LIST
              L_PAREN "("
              PREFIX_EXPR
                MINUS "-"
                LITERAL
                  INT_NUMBER "1"
              R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_FUNCTION_STMT
    DROP_KW "drop"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "sillysrf"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- X = X isn't a no-op, it's effectively X IS NOT NULL assuming = is strict"
  WHITESPACE "\n"
  COMMENT "-- (see bug #5084)"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            NULL_KW "null"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "k"
          R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "k"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        NAME_REF
          IDENT "k"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "k"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            NULL_KW "null"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "k"
          R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "k"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        NAME_REF
          IDENT "k"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test partitioned tables with no partitions, which should be handled the"
    WHITESPACE "\n"
    COMMENT "-- same as the non-inheritance case when expanding its RTE."
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "list_parted_tbl"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "list_parted_tbl1"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted_tbl"
    WHITESPACE "\n  "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    L_PAREN "("
    NAME_REF
      IDENT "b"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "list_parted_tbl"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted_tbl"
  SEMICOLON ";"
  WHITESPACE "\n"
---
ERROR@5160: expected R_PAREN
ERROR@5161: expected command, found OFF_KW
ERROR@5164: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@5164: expected SEMICOLON
ERROR@5164: expected command, found R_PAREN
ERROR@5375: expected R_PAREN
ERROR@5376: expected command, found OFF_KW
ERROR@5379: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@5379: expected SEMICOLON
ERROR@5379: expected command, found COMMA
ERROR@5399: expected SEMICOLON
ERROR@5400: expected command, found OFF_KW
ERROR@5403: expected command, found COMMA
ERROR@5405: expected command, found IDENT
ERROR@5413: expected command, found OFF_KW
ERROR@5416: expected command, found COMMA
ERROR@5418: expected command, found IDENT
ERROR@5426: expected command, found OFF_KW
ERROR@5429: expected command, found R_PAREN
ERROR@5509: expected R_PAREN
ERROR@5510: expected command, found OFF_KW
ERROR@5513: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@5513: expected SEMICOLON
ERROR@5513: expected command, found R_PAREN
ERROR@5734: expected R_PAREN
ERROR@5735: expected command, found OFF_KW
ERROR@5738: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@5738: expected SEMICOLON
ERROR@5738: expected command, found R_PAREN
ERROR@5872: expected R_PAREN
ERROR@5873: expected command, found OFF_KW
ERROR@5876: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@5876: expected SEMICOLON
ERROR@5876: expected command, found R_PAREN
ERROR@6074: expected R_PAREN
ERROR@6075: expected command, found OFF_KW
ERROR@6078: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@6078: expected SEMICOLON
ERROR@6078: expected command, found R_PAREN
ERROR@6281: expected R_PAREN
ERROR@6282: expected command, found OFF_KW
ERROR@6285: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@6285: expected SEMICOLON
ERROR@6285: expected command, found R_PAREN
ERROR@6539: expected R_PAREN
ERROR@6540: expected command, found OFF_KW
ERROR@6543: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@6543: expected SEMICOLON
ERROR@6543: expected command, found R_PAREN
ERROR@6744: expected R_PAREN
ERROR@6745: expected command, found OFF_KW
ERROR@6748: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@6748: expected SEMICOLON
ERROR@6748: expected command, found R_PAREN
ERROR@6950: expected R_PAREN
ERROR@6951: expected command, found OFF_KW
ERROR@6954: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@6954: expected SEMICOLON
ERROR@6954: expected command, found R_PAREN
ERROR@8077: expected R_PAREN
ERROR@8078: expected command, found OFF_KW
ERROR@8081: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@8081: expected SEMICOLON
ERROR@8081: expected command, found R_PAREN

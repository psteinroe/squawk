---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/alter_operator.sql
---
SOURCE_FILE
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "alter_op_test_fn"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BOOLEAN_KW "boolean"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BOOLEAN_KW "boolean"
      R_PAREN ")"
    WHITESPACE "\n"
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              BOOLEAN_KW "boolean"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$ SELECT NULL::BOOLEAN; $$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "IMMUTABLE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "customcontsel"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "internal"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          IDENT "oid"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          IDENT "internal"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      R_PAREN ")"
    WHITESPACE "\n"
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "float8"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'contsel'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "internal"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        STABLE_KW "STABLE"
      WHITESPACE " "
      STRICT_FUNC_OPTION
        STRICT_KW "STRICT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_OPERATOR_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n    "
    NAME
      IDENT "LEFTARG"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE "\n    "
    NAME
      IDENT "RIGHTARG"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE "\n    "
    NAME
      PROCEDURE_KW "PROCEDURE"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter_op_test_fn"
    COMMA ","
    WHITESPACE "\n    "
    NAME
      IDENT "COMMUTATOR"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    COMMA ","
    WHITESPACE "\n    "
    NAME
      IDENT "NEGATOR"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    CUSTOM_OP
      BANG "!"
      EQ "="
      EQ "="
    COMMA ","
    WHITESPACE "\n    "
    NAME
      RESTRICT_KW "RESTRICT"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "customcontsel"
    COMMA ","
    WHITESPACE "\n    "
    NAME
      JOIN_KW "JOIN"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "contjoinsel"
    COMMA ","
    WHITESPACE "\n    "
    NAME
      IDENT "HASHES"
    COMMA ","
    WHITESPACE " "
    NAME
      IDENT "MERGES"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_describe_object"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "refclassid"
              COMMA ","
              NAME_REF
                IDENT "refobjid"
              COMMA ","
              NAME_REF
                IDENT "refobjsubid"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            REF_KW "ref"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "deptype"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_depend"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "classid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'pg_operator'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n      "
        BIN_EXPR
          NAME_REF
            IDENT "objid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'===(bool,bool)'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regoperator"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test resetting and setting restrict and join attributes."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      RESTRICT_KW "RESTRICT"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NONE_KW "NONE"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      JOIN_KW "JOIN"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NONE_KW "NONE"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "oprrest"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "oprjoin"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "oprname"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'==='"
          WHITESPACE "\n  "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "oprleft"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                STRING "'boolean'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regtype"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "oprright"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'boolean'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_describe_object"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "refclassid"
              COMMA ","
              NAME_REF
                IDENT "refobjid"
              COMMA ","
              NAME_REF
                IDENT "refobjsubid"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            REF_KW "ref"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "deptype"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_depend"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "classid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'pg_operator'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n      "
        BIN_EXPR
          NAME_REF
            IDENT "objid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'===(bool,bool)'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regoperator"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      RESTRICT_KW "RESTRICT"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "contsel"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      JOIN_KW "JOIN"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "contjoinsel"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "oprrest"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "oprjoin"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "oprname"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'==='"
          WHITESPACE "\n  "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "oprleft"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                STRING "'boolean'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regtype"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "oprright"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'boolean'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_describe_object"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "refclassid"
              COMMA ","
              NAME_REF
                IDENT "refobjid"
              COMMA ","
              NAME_REF
                IDENT "refobjsubid"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            REF_KW "ref"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "deptype"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_depend"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "classid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'pg_operator'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n      "
        BIN_EXPR
          NAME_REF
            IDENT "objid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'===(bool,bool)'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regoperator"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      RESTRICT_KW "RESTRICT"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NONE_KW "NONE"
    COMMA ","
    WHITESPACE " "
    NAME
      JOIN_KW "JOIN"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NONE_KW "NONE"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "oprrest"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "oprjoin"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "oprname"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'==='"
          WHITESPACE "\n  "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "oprleft"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                STRING "'boolean'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regtype"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "oprright"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'boolean'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_describe_object"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "refclassid"
              COMMA ","
              NAME_REF
                IDENT "refobjid"
              COMMA ","
              NAME_REF
                IDENT "refobjsubid"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            REF_KW "ref"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "deptype"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_depend"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "classid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'pg_operator'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n      "
        BIN_EXPR
          NAME_REF
            IDENT "objid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'===(bool,bool)'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regoperator"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      RESTRICT_KW "RESTRICT"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "customcontsel"
    COMMA ","
    WHITESPACE " "
    NAME
      JOIN_KW "JOIN"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "contjoinsel"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "oprrest"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "oprjoin"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "oprname"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'==='"
          WHITESPACE "\n  "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "oprleft"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                STRING "'boolean'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regtype"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "oprright"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'boolean'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_describe_object"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "refclassid"
              COMMA ","
              NAME_REF
                IDENT "refobjid"
              COMMA ","
              NAME_REF
                IDENT "refobjsubid"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            REF_KW "ref"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "deptype"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_depend"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "classid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'pg_operator'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n      "
        BIN_EXPR
          NAME_REF
            IDENT "objid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'===(bool,bool)'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regoperator"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test invalid options."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      RESTRICT_KW "RESTRICT"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "non_existent_func"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      JOIN_KW "JOIN"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "non_existent_func"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- invalid: non-lowercase quoted identifiers"
  WHITESPACE "\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      AMP "&"
    WHITESPACE " "
    L_PAREN "("
    BIT_TYPE
      BIT_KW "bit"
    COMMA ","
    WHITESPACE " "
    BIT_TYPE
      BIT_KW "bit"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "\"Restrict\""
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "_int_contsel"
    COMMA ","
    WHITESPACE " "
    NAME
      IDENT "\"Join\""
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "_int_contjoinsel"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test permission check. Must be owner to ALTER OPERATOR."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_USER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    NAME
      IDENT "regress_alter_op_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_alter_op_user"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      RESTRICT_KW "RESTRICT"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NONE_KW "NONE"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test setting commutator, negator, merges, and hashes attributes,"
  WHITESPACE "\n"
  COMMENT "-- which can only be set if not already set"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "alter_op_test_fn_bool_real"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BOOLEAN_KW "boolean"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                REAL_KW "real"
      R_PAREN ")"
    WHITESPACE "\n"
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              BOOLEAN_KW "boolean"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$ SELECT NULL::BOOLEAN; $$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "IMMUTABLE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "alter_op_test_fn_real_bool"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                REAL_KW "real"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BOOLEAN_KW "boolean"
      R_PAREN ")"
    WHITESPACE "\n"
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              BOOLEAN_KW "boolean"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$ SELECT NULL::BOOLEAN; $$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "IMMUTABLE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- operator"
  WHITESPACE "\n"
  CREATE_OPERATOR_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n    "
    NAME
      IDENT "LEFTARG"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE "\n    "
    NAME
      IDENT "RIGHTARG"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    COMMA ","
    WHITESPACE "\n    "
    NAME
      PROCEDURE_KW "PROCEDURE"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter_op_test_fn_bool_real"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- commutator"
  WHITESPACE "\n"
  CREATE_OPERATOR_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n    "
    NAME
      IDENT "LEFTARG"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    COMMA ","
    WHITESPACE "\n    "
    NAME
      IDENT "RIGHTARG"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE "\n    "
    NAME
      PROCEDURE_KW "PROCEDURE"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter_op_test_fn_real_bool"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- negator"
  WHITESPACE "\n"
  CREATE_OPERATOR_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      BANG "!"
      EQ "="
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n    "
    NAME
      IDENT "LEFTARG"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE "\n    "
    NAME
      IDENT "RIGHTARG"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    COMMA ","
    WHITESPACE "\n    "
    NAME
      PROCEDURE_KW "PROCEDURE"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter_op_test_fn_bool_real"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- No-op setting already false hashes and merges to false works"
  WHITESPACE "\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "MERGES"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "HASHES"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test setting merges and hashes"
  WHITESPACE "\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "MERGES"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "HASHES"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "oprcanmerge"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "oprcanhash"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "oprname"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'==='"
          WHITESPACE "\n  "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "oprleft"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                STRING "'boolean'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regtype"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "oprright"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'real'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test setting commutator"
  WHITESPACE "\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "COMMUTATOR"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
      EQ "="
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that oprcom has been set on both the operator and commutator,"
  WHITESPACE "\n"
  COMMENT "-- that they reference each other, and that the operator used is the existing"
  WHITESPACE "\n"
  COMMENT "-- one we created and not a new shell operator."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "op"
            DOT "."
            NAME_REF
              IDENT "oprname"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "operator_name"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "com"
            DOT "."
            NAME_REF
              IDENT "oprname"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "commutator_name"
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "com"
            DOT "."
            NAME_REF
              IDENT "oprcode"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "commutator_func"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "op"
      WHITESPACE "\n  "
      JOIN
        INNER_KW "INNER"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_operator"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "com"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "op"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "com"
                DOT "."
                NAME_REF
                  IDENT "oprcom"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "op"
                DOT "."
                NAME_REF
                  IDENT "oprcom"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "com"
                DOT "."
                NAME_REF
                  IDENT "oid"
          R_PAREN ")"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "op"
              DOT "."
              NAME_REF
                IDENT "oprname"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'==='"
          WHITESPACE "\n  "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "op"
              DOT "."
              NAME_REF
                IDENT "oprleft"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                STRING "'boolean'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regtype"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "op"
            DOT "."
            NAME_REF
              IDENT "oprright"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'real'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Cannot set self as negator"
  WHITESPACE "\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "NEGATOR"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test setting negator"
  WHITESPACE "\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "NEGATOR"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    CUSTOM_OP
      BANG "!"
      EQ "="
      EQ "="
      EQ "="
      EQ "="
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that oprnegate has been set on both the operator and negator,"
  WHITESPACE "\n"
  COMMENT "-- that they reference each other, and that the operator used is the existing"
  WHITESPACE "\n"
  COMMENT "-- one we created and not a new shell operator."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "op"
            DOT "."
            NAME_REF
              IDENT "oprname"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "operator_name"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "neg"
            DOT "."
            NAME_REF
              IDENT "oprname"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "negator_name"
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "neg"
            DOT "."
            NAME_REF
              IDENT "oprcode"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "negator_func"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "op"
      WHITESPACE "\n  "
      JOIN
        INNER_KW "INNER"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_operator"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "neg"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "op"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "neg"
                DOT "."
                NAME_REF
                  IDENT "oprnegate"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "op"
                DOT "."
                NAME_REF
                  IDENT "oprnegate"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "neg"
                DOT "."
                NAME_REF
                  IDENT "oid"
          R_PAREN ")"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "op"
              DOT "."
              NAME_REF
                IDENT "oprname"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'==='"
          WHITESPACE "\n  "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "op"
              DOT "."
              NAME_REF
                IDENT "oprleft"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                STRING "'boolean'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regtype"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "op"
            DOT "."
            NAME_REF
              IDENT "oprright"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'real'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test that no-op set succeeds"
  WHITESPACE "\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "NEGATOR"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    CUSTOM_OP
      BANG "!"
      EQ "="
      EQ "="
      EQ "="
      EQ "="
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "COMMUTATOR"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
      EQ "="
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "MERGES"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "HASHES"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that the final state of the operator is as we expect"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "oprcanmerge"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "oprcanhash"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_describe_object"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'pg_operator'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "oprcom"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "commutator"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_describe_object"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'pg_operator'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "oprnegate"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "negator"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "oprname"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'==='"
          WHITESPACE "\n  "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "oprleft"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                STRING "'boolean'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regtype"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "oprright"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'real'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Cannot change commutator, negator, merges, and hashes when already set"
  WHITESPACE "\n\n"
  CREATE_OPERATOR_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      AT "@"
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n    "
    NAME
      IDENT "LEFTARG"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    COMMA ","
    WHITESPACE "\n    "
    NAME
      IDENT "RIGHTARG"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE "\n    "
    NAME
      PROCEDURE_KW "PROCEDURE"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter_op_test_fn_real_bool"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_OPERATOR_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      AT "@"
      BANG "!"
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n    "
    NAME
      IDENT "LEFTARG"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE "\n    "
    NAME
      IDENT "RIGHTARG"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    COMMA ","
    WHITESPACE "\n    "
    NAME
      PROCEDURE_KW "PROCEDURE"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "alter_op_test_fn_bool_real"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "COMMUTATOR"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    CUSTOM_OP
      AT "@"
      EQ "="
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "NEGATOR"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    CUSTOM_OP
      AT "@"
      BANG "!"
      EQ "="
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "MERGES"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "HASHES"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Cannot set an operator that already has a commutator as the commutator"
  WHITESPACE "\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      AT "@"
      EQ "="
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "COMMUTATOR"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Cannot set an operator that already has a negator as the negator"
  WHITESPACE "\n"
  ALTER_OPERATOR_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      AT "@"
      BANG "!"
      EQ "="
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    R_PAREN ")"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "NEGATOR"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check no changes made"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "oprcanmerge"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "oprcanhash"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_describe_object"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'pg_operator'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "oprcom"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "commutator"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_describe_object"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'pg_operator'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "oprnegate"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "negator"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "oprname"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'==='"
          WHITESPACE "\n  "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "oprleft"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                STRING "'boolean'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regtype"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "oprright"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'real'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Clean up"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  DROP_USER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_alter_op_user"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_OPERATOR_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_OPERATOR_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_OPERATOR_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      EQ "="
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_OPERATOR_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      BANG "!"
      EQ "="
      EQ "="
      EQ "="
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_OPERATOR_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      AT "@"
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_OPERATOR_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      AT "@"
      BANG "!"
      EQ "="
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BOOLEAN_KW "boolean"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            REAL_KW "real"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "customcontsel"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "internal"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          IDENT "oid"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          IDENT "internal"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alter_op_test_fn"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BOOLEAN_KW "boolean"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BOOLEAN_KW "boolean"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alter_op_test_fn_bool_real"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BOOLEAN_KW "boolean"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                REAL_KW "real"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "alter_op_test_fn_real_bool"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                REAL_KW "real"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BOOLEAN_KW "boolean"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"

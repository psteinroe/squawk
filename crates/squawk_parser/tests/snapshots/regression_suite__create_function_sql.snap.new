---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/create_function_sql.sql
---
SOURCE_FILE
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- CREATE_FUNCTION_SQL"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Assorted tests using SQL-language functions"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  COMMENT "-- All objects made in this test are in temp_func_test schema"
  WHITESPACE "\n\n"
  CREATE_USER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    NAME
      IDENT "regress_unpriv_user"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_SCHEMA_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SCHEMA_KW "SCHEMA"
    WHITESPACE " "
    NAME
      IDENT "temp_func_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    SCHEMA_KW "SCHEMA"
    WHITESPACE " "
    NAME_REF
      IDENT "temp_func_test"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "public"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "search_path"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "temp_func_test"
    COMMA ","
    WHITESPACE " "
    IDENT "public"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Make sanity checks on the pg_proc entries created by CREATE FUNCTION"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- ARGUMENT and RETURN TYPES"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_A_1"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          IDENT "date"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "bool"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        LITERAL
          STRING "'sql'"
      WHITESPACE "\n       "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT $1 = ''abcd'' AND $2 > ''2001-01-01'''"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_A_2"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          TEXT_KW "text"
  ERROR
    L_BRACK "["
  ERROR
    R_BRACK "]"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    RETURNS_KW "RETURNS"
  WHITESPACE " "
  ERROR
    INT_KW "int"
  WHITESPACE " "
  ERROR
    LANGUAGE_KW "LANGUAGE"
  WHITESPACE " "
  ERROR
    STRING "'sql'"
  WHITESPACE "\n       "
  ERROR
    AS_KW "AS"
  WHITESPACE " "
  ERROR
    STRING "'SELECT $1[1]::int'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_A_3"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "bool"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        LITERAL
          STRING "'sql'"
      WHITESPACE "\n       "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT false'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "prorettype"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "proargtypes"
            COLON2 "::"
            ARRAY_TYPE
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regtype"
              L_BRACK "["
              R_BRACK "]"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
    WHITESPACE "\n       "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "oid"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'functest_A_1'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          COMMA ","
          WHITESPACE "\n                     "
          CAST_EXPR
            LITERAL
              STRING "'functest_A_2'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          COMMA ","
          WHITESPACE "\n                     "
          CAST_EXPR
            LITERAL
              STRING "'functest_A_3'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "proname"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "functest_A_1"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'abcd'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'2020-01-01'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "functest_A_2"
            ARG_LIST
              L_PAREN "("
              ARRAY_EXPR
                ARRAY_KW "ARRAY"
                L_BRACK "["
                LITERAL
                  STRING "'1'"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  STRING "'2'"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  STRING "'3'"
                R_BRACK "]"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "functest_A_3"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- IMMUTABLE | STABLE | VOLATILE"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_B_1"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "bool"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        LITERAL
          STRING "'sql'"
      WHITESPACE "\n       "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT $1 > 0'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_B_2"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "bool"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        LITERAL
          STRING "'sql'"
      WHITESPACE "\n       "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "IMMUTABLE"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT $1 > 0'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_B_3"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "bool"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        LITERAL
          STRING "'sql'"
      WHITESPACE "\n       "
      VOLATILITY_FUNC_OPTION
        STABLE_KW "STABLE"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT $1 = 0'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_B_4"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "bool"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        LITERAL
          STRING "'sql'"
      WHITESPACE "\n       "
      VOLATILITY_FUNC_OPTION
        VOLATILE_KW "VOLATILE"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT $1 < 0'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "provolatile"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
    WHITESPACE "\n       "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "oid"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'functest_B_1'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          COMMA ","
          WHITESPACE "\n                     "
          CAST_EXPR
            LITERAL
              STRING "'functest_B_2'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          COMMA ","
          WHITESPACE "\n                     "
          CAST_EXPR
            LITERAL
              STRING "'functest_B_3'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          COMMA ","
          WHITESPACE "\n\t\t     "
          CAST_EXPR
            LITERAL
              STRING "'functest_B_4'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "proname"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_FUNCTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest_B_2"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    FUNC_OPTION_LIST
      VOLATILITY_FUNC_OPTION
        VOLATILE_KW "VOLATILE"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_FUNCTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest_B_3"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    FUNC_OPTION_LIST
      COST_FUNC_OPTION
        COST_KW "COST"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "100"
  SEMICOLON ";"
  WHITESPACE "\t"
  COMMENT "-- unrelated change, no effect"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "provolatile"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
    WHITESPACE "\n       "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "oid"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'functest_B_1'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          COMMA ","
          WHITESPACE "\n                     "
          CAST_EXPR
            LITERAL
              STRING "'functest_B_2'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          COMMA ","
          WHITESPACE "\n                     "
          CAST_EXPR
            LITERAL
              STRING "'functest_B_3'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          COMMA ","
          WHITESPACE "\n\t\t     "
          CAST_EXPR
            LITERAL
              STRING "'functest_B_4'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "proname"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- SECURITY DEFINER | INVOKER"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_C_1"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "bool"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        LITERAL
          STRING "'sql'"
      WHITESPACE "\n       "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT $1 > 0'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_C_2"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "bool"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        LITERAL
          STRING "'sql'"
      WHITESPACE "\n       "
      SECURITY_FUNC_OPTION
        SECURITY_KW "SECURITY"
        WHITESPACE " "
        DEFINER_KW "DEFINER"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT $1 = 0'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_C_3"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "bool"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        LITERAL
          STRING "'sql'"
      WHITESPACE "\n       "
      SECURITY_FUNC_OPTION
        SECURITY_KW "SECURITY"
        WHITESPACE " "
        INVOKER_KW "INVOKER"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT $1 < 0'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "prosecdef"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
    WHITESPACE "\n       "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "oid"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'functest_C_1'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          COMMA ","
          WHITESPACE "\n                     "
          CAST_EXPR
            LITERAL
              STRING "'functest_C_2'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          COMMA ","
          WHITESPACE "\n                     "
          CAST_EXPR
            LITERAL
              STRING "'functest_C_3'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "proname"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_FUNCTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest_C_1"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    FUNC_OPTION_LIST
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "IMMUTABLE"
  SEMICOLON ";"
  WHITESPACE "\t"
  COMMENT "-- unrelated change, no effect"
  WHITESPACE "\n"
  ALTER_FUNCTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest_C_2"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    FUNC_OPTION_LIST
      SECURITY_FUNC_OPTION
        SECURITY_KW "SECURITY"
        WHITESPACE " "
        INVOKER_KW "INVOKER"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_FUNCTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest_C_3"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    FUNC_OPTION_LIST
      SECURITY_FUNC_OPTION
        SECURITY_KW "SECURITY"
        WHITESPACE " "
        DEFINER_KW "DEFINER"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "prosecdef"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
    WHITESPACE "\n       "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "oid"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'functest_C_1'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          COMMA ","
          WHITESPACE "\n                     "
          CAST_EXPR
            LITERAL
              STRING "'functest_C_2'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          COMMA ","
          WHITESPACE "\n                     "
          CAST_EXPR
            LITERAL
              STRING "'functest_C_3'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "proname"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- LEAKPROOF"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_E_1"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "bool"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        LITERAL
          STRING "'sql'"
      WHITESPACE "\n       "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT $1 > 100'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_E_2"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "bool"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        LITERAL
          STRING "'sql'"
      WHITESPACE "\n       "
      LEAKPROOF_FUNC_OPTION
        LEAKPROOF_KW "LEAKPROOF"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT $1 > 100'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "proleakproof"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
    WHITESPACE "\n       "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "oid"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'functest_E_1'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          COMMA ","
          WHITESPACE "\n                     "
          CAST_EXPR
            LITERAL
              STRING "'functest_E_2'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "proname"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_FUNCTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest_E_1"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LEAKPROOF_FUNC_OPTION
        LEAKPROOF_KW "LEAKPROOF"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_FUNCTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest_E_2"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    FUNC_OPTION_LIST
      VOLATILITY_FUNC_OPTION
        STABLE_KW "STABLE"
  SEMICOLON ";"
  WHITESPACE "\t"
  COMMENT "-- unrelated change, no effect"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "proleakproof"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
    WHITESPACE "\n       "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "oid"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'functest_E_1'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          COMMA ","
          WHITESPACE "\n                     "
          CAST_EXPR
            LITERAL
              STRING "'functest_E_2'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "proname"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_FUNCTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest_E_2"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LEAKPROOF_FUNC_OPTION
        NOT_KW "NOT"
        WHITESPACE " "
        LEAKPROOF_KW "LEAKPROOF"
  SEMICOLON ";"
  WHITESPACE "\t"
  COMMENT "-- remove leakproof attribute"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "proleakproof"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
    WHITESPACE "\n       "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "oid"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'functest_E_1'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          COMMA ","
          WHITESPACE "\n                     "
          CAST_EXPR
            LITERAL
              STRING "'functest_E_2'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "proname"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- it takes superuser privilege to turn on leakproof, but not to turn off"
  WHITESPACE "\n"
  ALTER_FUNCTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest_E_1"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    OWNER_KW "OWNER"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_unpriv_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_FUNCTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest_E_2"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    OWNER_KW "OWNER"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_unpriv_user"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_unpriv_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "search_path"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "temp_func_test"
    COMMA ","
    WHITESPACE " "
    IDENT "public"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_FUNCTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest_E_1"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LEAKPROOF_FUNC_OPTION
        NOT_KW "NOT"
        WHITESPACE " "
        LEAKPROOF_KW "LEAKPROOF"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_FUNCTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest_E_2"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LEAKPROOF_FUNC_OPTION
        LEAKPROOF_KW "LEAKPROOF"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_E_3"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "bool"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        LITERAL
          STRING "'sql'"
      WHITESPACE "\n       "
      LEAKPROOF_FUNC_OPTION
        LEAKPROOF_KW "LEAKPROOF"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT $1 < 200'"
  SEMICOLON ";"
  WHITESPACE "\t"
  COMMENT "-- fail"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- CALLED ON NULL INPUT | RETURNS NULL ON NULL INPUT | STRICT"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_F_1"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "bool"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        LITERAL
          STRING "'sql'"
      WHITESPACE "\n       "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT $1 > 50'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_F_2"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "bool"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        LITERAL
          STRING "'sql'"
      WHITESPACE "\n       "
      STRICT_FUNC_OPTION
        CALLED_KW "CALLED"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        NULL_KW "NULL"
        WHITESPACE " "
        INPUT_KW "INPUT"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT $1 = 50'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_F_3"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "bool"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        LITERAL
          STRING "'sql'"
      WHITESPACE "\n       "
      STRICT_FUNC_OPTION
        RETURNS_KW "RETURNS"
        WHITESPACE " "
        NULL_KW "NULL"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        NULL_KW "NULL"
        WHITESPACE " "
        INPUT_KW "INPUT"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT $1 < 50'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_F_4"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "bool"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        LITERAL
          STRING "'sql'"
      WHITESPACE "\n       "
      STRICT_FUNC_OPTION
        STRICT_KW "STRICT"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT $1 = 50'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "proisstrict"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
    WHITESPACE "\n       "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "oid"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'functest_F_1'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          COMMA ","
          WHITESPACE "\n                     "
          CAST_EXPR
            LITERAL
              STRING "'functest_F_2'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          COMMA ","
          WHITESPACE "\n                     "
          CAST_EXPR
            LITERAL
              STRING "'functest_F_3'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          COMMA ","
          WHITESPACE "\n                     "
          CAST_EXPR
            LITERAL
              STRING "'functest_F_4'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "proname"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_FUNCTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest_F_1"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    FUNC_OPTION_LIST
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "IMMUTABLE"
  SEMICOLON ";"
  WHITESPACE "\t"
  COMMENT "-- unrelated change, no effect"
  WHITESPACE "\n"
  ALTER_FUNCTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest_F_2"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    FUNC_OPTION_LIST
      STRICT_FUNC_OPTION
        STRICT_KW "STRICT"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_FUNCTION_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest_F_3"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    FUNC_OPTION_LIST
      STRICT_FUNC_OPTION
        CALLED_KW "CALLED"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        NULL_KW "NULL"
        WHITESPACE " "
        INPUT_KW "INPUT"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "proisstrict"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
    WHITESPACE "\n       "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "oid"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'functest_F_1'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          COMMA ","
          WHITESPACE "\n                     "
          CAST_EXPR
            LITERAL
              STRING "'functest_F_2'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          COMMA ","
          WHITESPACE "\n                     "
          CAST_EXPR
            LITERAL
              STRING "'functest_F_3'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          COMMA ","
          WHITESPACE "\n                     "
          CAST_EXPR
            LITERAL
              STRING "'functest_F_4'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "proname"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- pg_get_functiondef tests"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_functiondef"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'functest_A_1'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regproc"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_functiondef"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'functest_B_3'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regproc"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_functiondef"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'functest_C_3'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regproc"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_functiondef"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'functest_F_2'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regproc"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- SQL-standard body"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_S_1"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "date"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              BOOLEAN_KW "boolean"
    WHITESPACE "\n    "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE "\n    "
      RETURN_FUNC_OPTION
        RETURN_KW "RETURN"
        WHITESPACE " "
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'abcd'"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "b"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              STRING "'2001-01-01'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_S_2"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "a"
        WHITESPACE " "
        ARRAY_TYPE
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
          L_BRACK "["
          R_BRACK "]"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE "\n    "
    FUNC_OPTION_LIST
      RETURN_FUNC_OPTION
        RETURN_KW "RETURN"
        WHITESPACE " "
        CAST_EXPR
          INDEX_EXPR
            NAME_REF
              IDENT "a"
            L_BRACK "["
            LITERAL
              INT_NUMBER "1"
            R_BRACK "]"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  INT_KW "int"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_S_3"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              BOOLEAN_KW "boolean"
    WHITESPACE "\n    "
    FUNC_OPTION_LIST
      RETURN_FUNC_OPTION
        RETURN_KW "RETURN"
        WHITESPACE " "
        LITERAL
          FALSE_KW "false"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_S_3a"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              BOOLEAN_KW "boolean"
    WHITESPACE "\n    "
    FUNC_OPTION_LIST
      BEGIN_FUNC_OPTION
        BEGIN_KW "BEGIN"
        WHITESPACE " "
        ATOMIC_KW "ATOMIC"
        WHITESPACE "\n        "
        SEMICOLON ";"
        SEMICOLON ";"
        ERROR
          RETURN_KW "RETURN"
        WHITESPACE " "
        ERROR
          FALSE_KW "false"
        SEMICOLON ";"
        SEMICOLON ";"
        WHITESPACE "\n    "
        END_KW "END"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_S_10"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "date"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              BOOLEAN_KW "boolean"
    WHITESPACE "\n    "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE "\n    "
      BEGIN_FUNC_OPTION
        BEGIN_KW "BEGIN"
        WHITESPACE " "
        ATOMIC_KW "ATOMIC"
        WHITESPACE "\n        "
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                BIN_EXPR
                  BIN_EXPR
                    NAME_REF
                      IDENT "a"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    LITERAL
                      STRING "'abcd'"
                  WHITESPACE " "
                  AND_KW "AND"
                  WHITESPACE " "
                  BIN_EXPR
                    NAME_REF
                      IDENT "b"
                    WHITESPACE " "
                    R_ANGLE ">"
                    WHITESPACE " "
                    LITERAL
                      STRING "'2001-01-01'"
        SEMICOLON ";"
        WHITESPACE "\n    "
        END_KW "END"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_S_13"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              BOOLEAN_KW "boolean"
    WHITESPACE "\n    "
    FUNC_OPTION_LIST
      BEGIN_FUNC_OPTION
        BEGIN_KW "BEGIN"
        WHITESPACE " "
        ATOMIC_KW "ATOMIC"
        WHITESPACE "\n        "
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  INT_NUMBER "1"
        SEMICOLON ";"
        WHITESPACE "\n        "
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  FALSE_KW "false"
        SEMICOLON ";"
        WHITESPACE "\n    "
        END_KW "END"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check display of function arguments in sub-SELECT"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "i"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_S_16"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "void"
    WHITESPACE "\n    "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE "\n    "
      BEGIN_FUNC_OPTION
        BEGIN_KW "BEGIN"
        WHITESPACE " "
        ATOMIC_KW "ATOMIC"
        WHITESPACE "\n        "
        INSERT_STMT
          INSERT_KW "INSERT"
          WHITESPACE " "
          INTO_KW "INTO"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "functest1"
          WHITESPACE " "
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  BIN_EXPR
                    NAME_REF
                      IDENT "a"
                    WHITESPACE " "
                    PLUS "+"
                    WHITESPACE " "
                    LITERAL
                      PARAM "$2"
        SEMICOLON ";"
        WHITESPACE "\n    "
        END_KW "END"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- error: duplicate function body"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_S_xxx"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE "\n    "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE "\n    "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$ SELECT x * 2 $$"
      WHITESPACE "\n    "
      RETURN_FUNC_OPTION
        RETURN_KW "RETURN"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "x"
          WHITESPACE " "
          STAR "*"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "3"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- polymorphic arguments not allowed in this form"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_S_xx"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anyarray"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "anyelement"
    WHITESPACE "\n    "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE "\n    "
      RETURN_FUNC_OPTION
        RETURN_KW "RETURN"
        WHITESPACE " "
        INDEX_EXPR
          NAME_REF
            IDENT "x"
          L_BRACK "["
          LITERAL
            INT_NUMBER "1"
          R_BRACK "]"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check reporting of parse-analysis errors"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_S_xx"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "date"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              BOOLEAN_KW "boolean"
    WHITESPACE "\n    "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE "\n    "
      RETURN_FUNC_OPTION
        RETURN_KW "RETURN"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "x"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- tricky parsing"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_S_15"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              BOOLEAN_KW "boolean"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE "\n"
      BEGIN_FUNC_OPTION
        BEGIN_KW "BEGIN"
        WHITESPACE " "
        ATOMIC_KW "ATOMIC"
        WHITESPACE "\n    "
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                CASE_EXPR
                  CASE_KW "case"
                  WHITESPACE " "
                  WHEN_CLAUSE
                    WHEN_KW "when"
                    WHITESPACE " "
                    BIN_EXPR
                      BIN_EXPR
                        NAME_REF
                          IDENT "x"
                        WHITESPACE " "
                        PERCENT "%"
                        WHITESPACE " "
                        LITERAL
                          INT_NUMBER "2"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      LITERAL
                        INT_NUMBER "0"
                    WHITESPACE " "
                    THEN_KW "then"
                    WHITESPACE " "
                    LITERAL
                      TRUE_KW "true"
                  WHITESPACE " "
                  ELSE_KW "else"
                  WHITESPACE " "
                  LITERAL
                    FALSE_KW "false"
                  WHITESPACE " "
                  END_KW "end"
        SEMICOLON ";"
        WHITESPACE "\n"
        END_KW "END"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "functest_S_1"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'abcd'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'2020-01-01'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "functest_S_2"
            ARG_LIST
              L_PAREN "("
              ARRAY_EXPR
                ARRAY_KW "ARRAY"
                L_BRACK "["
                LITERAL
                  STRING "'1'"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  STRING "'2'"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  STRING "'3'"
                R_BRACK "]"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "functest_S_3"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "functest_S_10"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'abcd'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'2020-01-01'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "functest_S_13"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_functiondef"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'functest_S_1'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regproc"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_functiondef"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'functest_S_2'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regproc"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_functiondef"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'functest_S_3'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regproc"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_functiondef"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'functest_S_3a'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regproc"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_functiondef"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'functest_S_10'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regproc"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_functiondef"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'functest_S_13'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regproc"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_functiondef"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'functest_S_15'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regproc"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_functiondef"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'functest_S_16'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regproc"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest1"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- test with views"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest3"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functestv3"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "functest3"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_S_14"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              BIGINT_KW "bigint"
    WHITESPACE "\n    "
    FUNC_OPTION_LIST
      RETURN_FUNC_OPTION
        RETURN_KW "RETURN"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  CALL_EXPR
                    NAME_REF
                      IDENT "count"
                    ARG_LIST
                      L_PAREN "("
                      STAR "*"
                      R_PAREN ")"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "functestv3"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "functest_S_14"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest3"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- information_schema tests"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_IS_1"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PARAM_DEFAULT
          DEFAULT_KW "default"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
        WHITESPACE " "
        PARAM_DEFAULT
          DEFAULT_KW "default"
          WHITESPACE " "
          LITERAL
            STRING "'foo'"
      R_PAREN ")"
    WHITESPACE "\n    "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE "\n    "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE "\n    "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT $1 + $2'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_IS_2"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        NAME
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PARAM_DEFAULT
          DEFAULT_KW "default"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1"
      R_PAREN ")"
    WHITESPACE "\n    "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE "\n    "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE "\n    "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT $1'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_IS_3"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PARAM_DEFAULT
          DEFAULT_KW "default"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      PARAM
        PARAM_OUT
          OUT_KW "out"
        WHITESPACE " "
        NAME
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE "\n    "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE "\n    "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE "\n    "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT $1'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "routine_name"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "ordinal_position"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "parameter_name"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "parameter_default"
    WHITESPACE "\n    "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "information_schema"
        DOT "."
        NAME_REF
          IDENT "parameters"
      WHITESPACE " "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "information_schema"
          DOT "."
          NAME_REF
            ROUTINES_KW "routines"
        WHITESPACE " "
        USING_CLAUSE
          USING_KW "USING"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            NAME_REF
              IDENT "specific_schema"
            COMMA ","
            WHITESPACE " "
            NAME_REF
              IDENT "specific_name"
            R_PAREN ")"
    WHITESPACE "\n    "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "routine_schema"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'temp_func_test'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "routine_name"
          WHITESPACE " "
          CUSTOM_OP
            TILDE "~"
          WHITESPACE " "
          LITERAL
            STRING "'^functest_is_'"
    WHITESPACE "\n    "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest_IS_1"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          TEXT_KW "text"
      R_PAREN ")"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest_IS_2"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest_IS_3"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- routine usage views"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_IS_4a"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT 1'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_IS_4b"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PARAM_DEFAULT
          DEFAULT_KW "DEFAULT"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "functest_IS_4a"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT x'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_SEQUENCE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SEQUENCE_KW "SEQUENCE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest1"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_IS_5"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PARAM_DEFAULT
          DEFAULT_KW "DEFAULT"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "nextval"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'functest1'"
              R_PAREN ")"
      R_PAREN ")"
    WHITESPACE "\n    "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE "\n    "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE "\n    "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT x'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_IS_6"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE "\n    "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE "\n    "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE "\n    "
      RETURN_FUNC_OPTION
        RETURN_KW "RETURN"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "nextval"
          ARG_LIST
            L_PAREN "("
            LITERAL
              STRING "'functest1'"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_IS_7"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE "\n    "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE "\n    "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE "\n    "
      RETURN_FUNC_OPTION
        RETURN_KW "RETURN"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  CALL_EXPR
                    NAME_REF
                      IDENT "count"
                    ARG_LIST
                      L_PAREN "("
                      NAME_REF
                        IDENT "a"
                      R_PAREN ")"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "functest2"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "r0"
            DOT "."
            NAME_REF
              IDENT "routine_name"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "r1"
            DOT "."
            NAME_REF
              IDENT "routine_name"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "information_schema"
        DOT "."
        NAME_REF
          IDENT "routine_routine_usage"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "rru"
      WHITESPACE "\n       "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "information_schema"
          DOT "."
          NAME_REF
            ROUTINES_KW "routines"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "r0"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "r0"
            DOT "."
            NAME_REF
              IDENT "specific_name"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "rru"
            DOT "."
            NAME_REF
              IDENT "specific_name"
      WHITESPACE "\n       "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "information_schema"
          DOT "."
          NAME_REF
            ROUTINES_KW "routines"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "r1"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "r1"
            DOT "."
            NAME_REF
              IDENT "specific_name"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "rru"
            DOT "."
            NAME_REF
              IDENT "routine_name"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "r0"
            DOT "."
            NAME_REF
              IDENT "routine_schema"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'temp_func_test'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n        "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "r1"
            DOT "."
            NAME_REF
              IDENT "routine_schema"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'temp_func_test'"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "routine_name"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "sequence_name"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "information_schema"
        DOT "."
        NAME_REF
          IDENT "routine_sequence_usage"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "routine_schema"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'temp_func_test'"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "routine_name"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "table_name"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "column_name"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "information_schema"
        DOT "."
        NAME_REF
          IDENT "routine_column_usage"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "routine_schema"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'temp_func_test'"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "routine_name"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "table_name"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "information_schema"
        DOT "."
        NAME_REF
          IDENT "routine_table_usage"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "routine_schema"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'temp_func_test'"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest_IS_4a"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_SEQUENCE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    SEQUENCE_KW "SEQUENCE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest1"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest2"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- overload"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_B_2"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "bool"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        LITERAL
          STRING "'sql'"
      WHITESPACE "\n       "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "IMMUTABLE"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT $1 > 0'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest_b_1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest_b_1"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- error, not found"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest_b_2"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- error, ambiguous"
  WHITESPACE "\n\n\n"
  COMMENT "-- CREATE OR REPLACE tests"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest1"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT $1'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "OR"
      WHITESPACE " "
      REPLACE_KW "REPLACE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest1"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE " "
      WINDOW_FUNC_OPTION
        WINDOW_KW "WINDOW"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT $1'"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_PROCEDURE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "OR"
      WHITESPACE " "
      REPLACE_KW "REPLACE"
    WHITESPACE " "
    PROCEDURE_KW "PROCEDURE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest1"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT $1'"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest1"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- early shutdown of set-returning functions"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_srf0"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      SETOF_KW "SETOF"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE "\n"
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$ SELECT i FROM generate_series(1, 100) i $$"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "functest_srf0"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
    WHITESPACE " "
    LIMIT_CLAUSE
      LIMIT_KW "LIMIT"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "5"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- inlining of set-returning functions"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest3"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_sri1"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      SETOF_KW "SETOF"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE "\n"
      VOLATILITY_FUNC_OPTION
        STABLE_KW "STABLE"
      WHITESPACE "\n"
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'\n    SELECT * FROM functest3;\n'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "functest_sri1"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "functest_sri1"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "functest_sri2"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      SETOF_KW "SETOF"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE "\n"
      VOLATILITY_FUNC_OPTION
        STABLE_KW "STABLE"
      WHITESPACE "\n"
      BEGIN_FUNC_OPTION
        BEGIN_KW "BEGIN"
        WHITESPACE " "
        ATOMIC_KW "ATOMIC"
        WHITESPACE "\n    "
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "functest3"
        SEMICOLON ";"
        WHITESPACE "\n"
        END_KW "END"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "functest_sri2"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "functest_sri2"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "functest3"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- Check behavior of VOID-returning SQL functions"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "voidtest1"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "VOID"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$ SELECT a + 1 $$"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "voidtest1"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "42"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "voidtest2"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "VOID"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$ SELECT voidtest1(a + b) $$"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "voidtest2"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "11"
              COMMA ","
              LITERAL
                INT_NUMBER "22"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- currently, we can inline voidtest2 but not voidtest1"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "voidtest2"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "11"
              COMMA ","
              LITERAL
                INT_NUMBER "22"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "sometable"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "voidtest3"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "VOID"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$ INSERT INTO sometable VALUES(a + 1) $$"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "voidtest3"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "17"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "voidtest4"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "VOID"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$ INSERT INTO sometable VALUES(a - 1) RETURNING f1 $$"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "voidtest4"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "39"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "sometable"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "voidtest5"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      SETOF_KW "SETOF"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "VOID"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$ SELECT generate_series(1, a) $$"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        STABLE_KW "STABLE"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "voidtest5"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- DDL within a SQL function can now affect later statements in the function;"
  WHITESPACE "\n"
  COMMENT "-- though that doesn't work if check_function_bodies is on."
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "check_function_bodies"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "create_and_insert"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "VOID"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\n  create table ddl_test (f1 int);\n  insert into ddl_test values (1.2);\n$$"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "create_and_insert"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddl_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "alter_and_insert"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "VOID"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\n  alter table ddl_test alter column f1 type numeric;\n  insert into ddl_test values (1.2);\n$$"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "alter_and_insert"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ddl_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "check_function_bodies"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Regression tests for bugs:"
  WHITESPACE "\n\n"
  COMMENT "-- Check that arguments that are R/W expanded datums aren't corrupted by"
  WHITESPACE "\n"
  COMMENT "-- multiple uses.  This test knows that array_append() returns a R/W datum"
  WHITESPACE "\n"
  COMMENT "-- and will modify a R/W array input in-place.  We use SETOF to prevent"
  WHITESPACE "\n"
  COMMENT "-- inlining of the SQL function."
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "double_append"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "anyarray"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          IDENT "anyelement"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      SETOF_KW "SETOF"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "anyarray"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "IMMUTABLE"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$ SELECT array_append($1, $2) || array_append($1, $2) $$"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "double_append"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  IDENT "array_append"
                ARG_LIST
                  L_PAREN "("
                  ARRAY_EXPR
                    ARRAY_KW "ARRAY"
                    L_BRACK "["
                    NAME_REF
                      IDENT "q1"
                    R_BRACK "]"
                  COMMA ","
                  WHITESPACE " "
                  NAME_REF
                    IDENT "q2"
                  R_PAREN ")"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "q3"
              R_PAREN ")"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "2"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "4"
          COMMA ","
          LITERAL
            INT_NUMBER "5"
          COMMA ","
          LITERAL
            INT_NUMBER "6"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "q1"
          COMMA ","
          COLUMN
            NAME
              IDENT "q2"
          COMMA ","
          COLUMN
            NAME
              IDENT "q3"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Things that shouldn't work:"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test1"
    WHITESPACE " "
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE "\n    "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT ''not an integer'';'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test1"
    WHITESPACE " "
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE "\n    "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'not even SQL'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test1"
    WHITESPACE " "
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE "\n    "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT 1, 2, 3;'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test1"
    WHITESPACE " "
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE "\n    "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'SELECT $2;'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test1"
    WHITESPACE " "
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE "\n    "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'a'"
        COMMA ","
        WHITESPACE " "
        LITERAL
          STRING "'b'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test1"
    WHITESPACE " "
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE "\n    "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "''"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- make sure empty-body case is handled at execution time, too"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "check_function_bodies"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test1"
    WHITESPACE " "
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "anyelement"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "anyarray"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        SQL_KW "SQL"
      WHITESPACE "\n    "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "''"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "test1"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "0"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "check_function_bodies"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Cleanup"
  WHITESPACE "\n"
  DROP_SCHEMA_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    SCHEMA_KW "SCHEMA"
    WHITESPACE " "
    NAME
      IDENT "temp_func_test"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_USER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_unpriv_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "search_path"
  SEMICOLON ";"
  WHITESPACE "\n"
---
ERROR@572: expected type name
ERROR@572: expected R_PAREN
ERROR@572: expected function option
ERROR@572: expected SEMICOLON
ERROR@572: expected command, found L_BRACK
ERROR@573: expected command, found R_BRACK
ERROR@574: expected command, found R_PAREN
ERROR@576: expected command, found RETURNS_KW
ERROR@584: expected command, found INT_KW
ERROR@588: expected command, found LANGUAGE_KW
ERROR@597: expected command, found STRING
ERROR@610: expected command, found AS_KW
ERROR@613: expected command, found STRING
ERROR@6095: expected command, found RETURN_KW
ERROR@6102: expected command, found FALSE_KW
ERROR@11400: expected R_PAREN
ERROR@11401: expected command, found OFF_KW
ERROR@11404: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@11404: expected SEMICOLON
ERROR@11404: expected command, found R_PAREN
ERROR@11610: expected R_PAREN
ERROR@11611: expected command, found OFF_KW
ERROR@11614: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@11614: expected SEMICOLON
ERROR@11614: expected command, found R_PAREN
ERROR@12041: expected R_PAREN
ERROR@12042: expected command, found OFF_KW
ERROR@12045: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@12045: expected SEMICOLON
ERROR@12045: expected command, found R_PAREN

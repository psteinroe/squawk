---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/memoize.sql
---
SOURCE_FILE
  COMMENT "-- Perform tests on the Memoize node."
  WHITESPACE "\n\n"
  COMMENT "-- The cache hits/misses/evictions from the Memoize node can vary between"
  WHITESPACE "\n"
  COMMENT "-- machines.  Let's just replace the number with an 'N'.  In order to allow us"
  WHITESPACE "\n"
  COMMENT "-- to perform validation when the measure was zero, we replace a zero value"
  WHITESPACE "\n"
  COMMENT "-- with \"Zero\".  All other numbers are replaced with 'N'."
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "explain_memoize"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "query"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "hide_hitmiss"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "bool"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TEXT_KW "text"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$\ndeclare\n    ln text;\nbegin\n    for ln in\n        execute format('explain (analyze, costs off, summary off, timing off, buffers off) %s',\n            query)\n    loop\n        if hide_hitmiss = true then\n                ln := regexp_replace(ln, 'Hits: 0', 'Hits: Zero');\n                ln := regexp_replace(ln, 'Hits: \\d+', 'Hits: N');\n                ln := regexp_replace(ln, 'Misses: 0', 'Misses: Zero');\n                ln := regexp_replace(ln, 'Misses: \\d+', 'Misses: N');\n        end if;\n        ln := regexp_replace(ln, 'Evictions: 0', 'Evictions: Zero');\n        ln := regexp_replace(ln, 'Evictions: \\d+', 'Evictions: N');\n        ln := regexp_replace(ln, 'Memory Usage: \\d+', 'Memory Usage: N');\n        ln := regexp_replace(ln, 'Heap Fetches: \\d+', 'Heap Fetches: N');\n        ln := regexp_replace(ln, 'loops=\\d+', 'loops=N');\n        ln := regexp_replace(ln, 'Index Searches: \\d+', 'Index Searches: N');\n        return next ln;\n    end loop;\nend;\n$$"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we get a memoize node on the inner side of the nested loop"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_hashjoin"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_bitmapscan"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "explain_memoize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'\nSELECT COUNT(*),AVG(t1.unique1) FROM tenk1 t1\nINNER JOIN tenk1 t2 ON t1.unique1 = t2.twenty\nWHERE t2.unique1 < 1000;'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- And check we get the expected results."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "AVG"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "unique1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t1"
      WHITESPACE "\n"
      JOIN
        INNER_KW "INNER"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "tenk1"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "t2"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "unique1"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "twenty"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "t2"
          DOT "."
          NAME_REF
            IDENT "unique1"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1000"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Try with LATERAL joins"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "explain_memoize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'\nSELECT COUNT(*),AVG(t2.unique1) FROM tenk1 t1,\nLATERAL (SELECT t2.unique1 FROM tenk1 t2\n         WHERE t1.twenty = t2.unique1 OFFSET 0) t2\nWHERE t1.unique1 < 1000;'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- And check we get the expected results."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "AVG"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "t2"
                DOT "."
                NAME_REF
                  IDENT "unique1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE "\n"
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                FIELD_EXPR
                  NAME_REF
                    IDENT "t2"
                  DOT "."
                  NAME_REF
                    IDENT "unique1"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "tenk1"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "t2"
          WHITESPACE "\n         "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "twenty"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "t2"
                DOT "."
                NAME_REF
                  IDENT "unique1"
          WHITESPACE " "
          OFFSET_CLAUSE
            OFFSET_KW "OFFSET"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "t1"
          DOT "."
          NAME_REF
            IDENT "unique1"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1000"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Try with LATERAL joins"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "explain_memoize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'\nSELECT COUNT(*),AVG(t2.t1two) FROM tenk1 t1 LEFT JOIN\nLATERAL (\n    SELECT t1.two as t1two, * FROM tenk1 t2 WHERE t2.unique1 < 4 OFFSET 0\n) t2\nON t1.two = t2.two\nWHERE t1.unique1 < 10;'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- And check we get the expected results."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "AVG"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "t2"
                DOT "."
                NAME_REF
                  IDENT "t1two"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t1"
      WHITESPACE " "
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE "\n"
        LATERAL_KW "LATERAL"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          WHITESPACE "\n    "
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t1"
                    DOT "."
                    NAME_REF
                      IDENT "two"
                  WHITESPACE " "
                  AS_KW "as"
                  WHITESPACE " "
                  NAME
                    IDENT "t1two"
                COMMA ","
                WHITESPACE " "
                TARGET
                  STAR "*"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "tenk1"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "t2"
            WHITESPACE " "
            WHERE_CLAUSE
              WHERE_KW "WHERE"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "t2"
                  DOT "."
                  NAME_REF
                    IDENT "unique1"
                WHITESPACE " "
                L_ANGLE "<"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "4"
            WHITESPACE " "
            OFFSET_CLAUSE
              OFFSET_KW "OFFSET"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
          WHITESPACE "\n"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "t2"
        WHITESPACE "\n"
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "two"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "two"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "t1"
          DOT "."
          NAME_REF
            IDENT "unique1"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Try with LATERAL references within PlaceHolderVars"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "explain_memoize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'\nSELECT COUNT(*), AVG(t1.twenty) FROM tenk1 t1 LEFT JOIN\nLATERAL (SELECT t1.two+1 AS c1, t2.unique1 AS c2 FROM tenk1 t2) s ON TRUE\nWHERE s.c1 = s.c2 AND t1.unique1 < 1000;'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- And check we get the expected results."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "AVG"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "twenty"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t1"
      WHITESPACE " "
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE "\n"
        LATERAL_KW "LATERAL"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "t1"
                      DOT "."
                      NAME_REF
                        IDENT "two"
                    PLUS "+"
                    LITERAL
                      INT_NUMBER "1"
                  WHITESPACE " "
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "c1"
                COMMA ","
                WHITESPACE " "
                TARGET
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t2"
                    DOT "."
                    NAME_REF
                      IDENT "unique1"
                  WHITESPACE " "
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "c2"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "tenk1"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "t2"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "s"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        LITERAL
          TRUE_KW "TRUE"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "s"
            DOT "."
            NAME_REF
              IDENT "c1"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "s"
            DOT "."
            NAME_REF
              IDENT "c2"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "unique1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1000"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we do not omit the cache keys from PlaceHolderVars"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "explain_memoize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'\nSELECT COUNT(*), AVG(t1.twenty) FROM tenk1 t1 LEFT JOIN\nLATERAL (SELECT t1.twenty AS c1, t2.unique1 AS c2, t2.two FROM tenk1 t2) s\nON t1.two = s.two\nWHERE s.c1 = s.c2 AND t1.unique1 < 1000;'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- And check we get the expected results."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "AVG"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "twenty"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t1"
      WHITESPACE " "
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE "\n"
        LATERAL_KW "LATERAL"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t1"
                    DOT "."
                    NAME_REF
                      IDENT "twenty"
                  WHITESPACE " "
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "c1"
                COMMA ","
                WHITESPACE " "
                TARGET
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t2"
                    DOT "."
                    NAME_REF
                      IDENT "unique1"
                  WHITESPACE " "
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "c2"
                COMMA ","
                WHITESPACE " "
                TARGET
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t2"
                    DOT "."
                    NAME_REF
                      IDENT "two"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "tenk1"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "t2"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "s"
        WHITESPACE "\n"
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "two"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "s"
            DOT "."
            NAME_REF
              IDENT "two"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "s"
            DOT "."
            NAME_REF
              IDENT "c1"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "s"
            DOT "."
            NAME_REF
              IDENT "c2"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "unique1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1000"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_mergejoin"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test for varlena datatype with expr evaluation"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "expr_key"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NUMERIC_KW "numeric"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "t"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "expr_key"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "t"
      R_PAREN ")"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CAST_EXPR
              NAME_REF
                IDENT "d1"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      NUMERIC_KW "numeric"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              NAME_REF
                IDENT "d1"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          WHITESPACE "\n    "
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  CALL_EXPR
                    NAME_REF
                      IDENT "round"
                    ARG_LIST
                      L_PAREN "("
                      CAST_EXPR
                        PAREN_EXPR
                          L_PAREN "("
                          BIN_EXPR
                            NAME_REF
                              IDENT "d"
                            WHITESPACE " "
                            SLASH "/"
                            WHITESPACE " "
                            CALL_EXPR
                              NAME_REF
                                IDENT "pi"
                              ARG_LIST
                                L_PAREN "("
                                R_PAREN ")"
                          R_PAREN ")"
                        COLON2 "::"
                        PATH_TYPE
                          PATH
                            PATH_SEGMENT
                              NAME_REF
                                NUMERIC_KW "numeric"
                      COMMA ","
                      WHITESPACE " "
                      LITERAL
                        INT_NUMBER "7"
                      R_PAREN ")"
                  WHITESPACE " "
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "d1"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "generate_series"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    INT_NUMBER "1"
                  COMMA ","
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "20"
                  R_PAREN ")"
              WHITESPACE " "
              ALIAS
                AS_KW "AS"
                WHITESPACE " "
                NAME
                  IDENT "d"
          WHITESPACE "\n"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "t"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- duplicate rows so we get some cache hits"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "expr_key"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "expr_key"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "expr_key_idx_x_t"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "expr_key"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "x"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "t"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  VACUUM_STMT
    VACUUM_KW "VACUUM"
    WHITESPACE " "
    ANALYZE_KW "ANALYZE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "expr_key"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we get we get a cache miss and hit for each of the 20 distinct values"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "explain_memoize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'\nSELECT * FROM expr_key t1 INNER JOIN expr_key t2\nON t1.x = t2.t::numeric AND t1.t::numeric = t2.x;'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "expr_key"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Reduce work_mem and hash_mem_multiplier so that we see some cache evictions"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "work_mem"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    LITERAL
      STRING "'64kB'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "hash_mem_multiplier"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    LITERAL
      FLOAT_NUMBER "1.0"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Ensure we get some evictions.  We're unable to validate the hits and misses"
  WHITESPACE "\n"
  COMMENT "-- here as the number of entries that fit in the cache at once will vary"
  WHITESPACE "\n"
  COMMENT "-- between different machines."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "explain_memoize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'\nSELECT COUNT(*),AVG(t1.unique1) FROM tenk1 t1\nINNER JOIN tenk1 t2 ON t1.unique1 = t2.thousand\nWHERE t2.unique1 < 1200;'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                TRUE_KW "true"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "flt"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                FLOAT_KW "float"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "flt_f_idx"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "flt"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "f"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "flt"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      CAST_EXPR
        LITERAL
          STRING "'-0.0'"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                FLOAT_KW "float"
      R_PAREN ")"
      COMMA ","
      L_PAREN "("
      CAST_EXPR
        LITERAL
          STRING "'+0.0'"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                FLOAT_KW "float"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ANALYZE_STMT
    ANALYZE_KW "ANALYZE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "flt"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure memoize operates in logical mode"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "explain_memoize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'\nSELECT * FROM flt f1 INNER JOIN flt f2 ON f1.f = f2.f;'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure memoize operates in binary mode"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "explain_memoize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'\nSELECT * FROM flt f1 INNER JOIN flt f2 ON f1.f >= f2.f;'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "flt"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Exercise Memoize in binary mode with a large fixed width type and a"
    WHITESPACE "\n"
    COMMENT "-- varlena type."
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "strtest"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "n"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NAME_KW "name"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "t"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "strtest_n_idx"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "strtest"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "strtest_t_idx"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "strtest"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "t"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "strtest"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'one'"
      COMMA ","
      LITERAL
        STRING "'one'"
      R_PAREN ")"
      COMMA ","
      L_PAREN "("
      LITERAL
        STRING "'two'"
      COMMA ","
      LITERAL
        STRING "'two'"
      R_PAREN ")"
      COMMA ","
      L_PAREN "("
      LITERAL
        STRING "'three'"
      COMMA ","
      CALL_EXPR
        NAME_REF
          IDENT "repeat"
        ARG_LIST
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              IDENT "fipshash"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'three'"
              R_PAREN ")"
          COMMA ","
          LITERAL
            INT_NUMBER "100"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- duplicate rows so we get some cache hits"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "strtest"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "strtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  ANALYZE_STMT
    ANALYZE_KW "ANALYZE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "strtest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we get 3 hits and 3 misses"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "explain_memoize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'\nSELECT * FROM strtest s1 INNER JOIN strtest s2 ON s1.n >= s2.n;'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we get 3 hits and 3 misses"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "explain_memoize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'\nSELECT * FROM strtest s1 INNER JOIN strtest s2 ON s1.t >= s2.t;'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "strtest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure memoize works with partitionwise join"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_partitionwise_join"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "on"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "prt"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    RANGE_KW "RANGE"
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "prt_p1"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "prt"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "10"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "prt_p2"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "prt"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "10"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "20"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "prt"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "prt"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "iprt_p1_a"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "prt_p1"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "iprt_p2_a"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "prt_p2"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ANALYZE_STMT
    ANALYZE_KW "ANALYZE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "prt"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "explain_memoize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'\nSELECT * FROM prt t1 INNER JOIN prt t2 ON t1.a = t2.a;'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure memoize works with parameterized union-all Append path"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_partitionwise_join"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "explain_memoize"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'\nSELECT * FROM prt_p1 t1 INNER JOIN\n(SELECT * FROM prt_p1 UNION ALL SELECT * FROM prt_p2) t2\nON t1.a = t2.a;'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                FALSE_KW "false"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "prt"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_partitionwise_join"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Exercise Memoize code that flushes the cache when a parameter changes which"
  WHITESPACE "\n"
  COMMENT "-- is not part of the cache key."
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we get a Memoize plan"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "unique1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t0"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "unique1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "3"
        WHITESPACE "\n  "
        AND_KW "AND"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            EXISTS_KW "EXISTS"
          WHITESPACE " "
          ARG_LIST
            L_PAREN "("
            WHITESPACE "\n\t"
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    LITERAL
                      INT_NUMBER "1"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                NAME_REF
                  IDENT "tenk1"
                WHITESPACE " "
                ALIAS
                  NAME
                    IDENT "t1"
                WHITESPACE "\n\t"
                JOIN
                  INNER_KW "INNER"
                  WHITESPACE " "
                  JOIN_KW "JOIN"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "tenk1"
                  WHITESPACE " "
                  ALIAS
                    NAME
                      IDENT "t2"
                  WHITESPACE " "
                  ON_KW "ON"
                  WHITESPACE " "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "t1"
                      DOT "."
                      NAME_REF
                        IDENT "unique1"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "t2"
                      DOT "."
                      NAME_REF
                        IDENT "hundred"
              WHITESPACE "\n\t"
              WHERE_CLAUSE
                WHERE_KW "WHERE"
                WHITESPACE " "
                BIN_EXPR
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "t0"
                      DOT "."
                      NAME_REF
                        IDENT "ten"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "t1"
                      DOT "."
                      NAME_REF
                        IDENT "twenty"
                  WHITESPACE " "
                  AND_KW "AND"
                  WHITESPACE " "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "t0"
                      DOT "."
                      NAME_REF
                        IDENT "two"
                    WHITESPACE " "
                    NEQB "<>"
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "t2"
                      DOT "."
                      NAME_REF
                        IDENT "four"
              WHITESPACE " "
              OFFSET_CLAUSE
                OFFSET_KW "OFFSET"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "0"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure the above query returns the correct result"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "unique1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t0"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "unique1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "3"
        WHITESPACE "\n  "
        AND_KW "AND"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            EXISTS_KW "EXISTS"
          WHITESPACE " "
          ARG_LIST
            L_PAREN "("
            WHITESPACE "\n\t"
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    LITERAL
                      INT_NUMBER "1"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                NAME_REF
                  IDENT "tenk1"
                WHITESPACE " "
                ALIAS
                  NAME
                    IDENT "t1"
                WHITESPACE "\n\t"
                JOIN
                  INNER_KW "INNER"
                  WHITESPACE " "
                  JOIN_KW "JOIN"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "tenk1"
                  WHITESPACE " "
                  ALIAS
                    NAME
                      IDENT "t2"
                  WHITESPACE " "
                  ON_KW "ON"
                  WHITESPACE " "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "t1"
                      DOT "."
                      NAME_REF
                        IDENT "unique1"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "t2"
                      DOT "."
                      NAME_REF
                        IDENT "hundred"
              WHITESPACE "\n\t"
              WHERE_CLAUSE
                WHERE_KW "WHERE"
                WHITESPACE " "
                BIN_EXPR
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "t0"
                      DOT "."
                      NAME_REF
                        IDENT "ten"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "t1"
                      DOT "."
                      NAME_REF
                        IDENT "twenty"
                  WHITESPACE " "
                  AND_KW "AND"
                  WHITESPACE " "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "t0"
                      DOT "."
                      NAME_REF
                        IDENT "two"
                    WHITESPACE " "
                    NEQB "<>"
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "t2"
                      DOT "."
                      NAME_REF
                        IDENT "four"
              WHITESPACE " "
              OFFSET_CLAUSE
                OFFSET_KW "OFFSET"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "0"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_mergejoin"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "work_mem"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "hash_mem_multiplier"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_bitmapscan"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_hashjoin"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test parallel plans with Memoize"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "min_parallel_table_scan_size"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "parallel_setup_cost"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "parallel_tuple_cost"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "max_parallel_workers_per_gather"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we get a parallel plan."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "AVG"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "t2"
                DOT "."
                NAME_REF
                  IDENT "unique1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE "\n"
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                FIELD_EXPR
                  NAME_REF
                    IDENT "t2"
                  DOT "."
                  NAME_REF
                    IDENT "unique1"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "tenk1"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "t2"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "twenty"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "t2"
                DOT "."
                NAME_REF
                  IDENT "unique1"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "t1"
          DOT "."
          NAME_REF
            IDENT "unique1"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1000"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- And ensure the parallel plan gives us the correct results."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "AVG"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "t2"
                DOT "."
                NAME_REF
                  IDENT "unique1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE "\n"
      LATERAL_KW "LATERAL"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                FIELD_EXPR
                  NAME_REF
                    IDENT "t2"
                  DOT "."
                  NAME_REF
                    IDENT "unique1"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "tenk1"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "t2"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "twenty"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "t2"
                DOT "."
                NAME_REF
                  IDENT "unique1"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "t1"
          DOT "."
          NAME_REF
            IDENT "unique1"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1000"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "max_parallel_workers_per_gather"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "parallel_tuple_cost"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "parallel_setup_cost"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "min_parallel_table_scan_size"
  SEMICOLON ";"
  WHITESPACE "\n"
---
ERROR@6116: expected config value, got ON_KW
ERROR@6116: expected SEMICOLON
ERROR@6117: expected command, found ON_KW
ERROR@7032: expected R_PAREN
ERROR@7033: expected command, found OFF_KW
ERROR@7036: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@7036: expected SEMICOLON
ERROR@7036: expected command, found R_PAREN
ERROR@7843: expected R_PAREN
ERROR@7844: expected command, found OFF_KW
ERROR@7847: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@7847: expected SEMICOLON
ERROR@7847: expected command, found R_PAREN

---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/rowsecurity.sql
---
SOURCE_FILE
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test of Row-level security feature"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  COMMENT "-- Clean up in case a prior regression run failed"
  WHITESPACE "\n\n"
  COMMENT "-- Suppress NOTICE messages when users/groups don't exist"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "client_min_messages"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    LITERAL
      STRING "'warning'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_USER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_USER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_USER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_USER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_rls_dave"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_USER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_rls_exempt_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_rls_group1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_rls_group2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_SCHEMA_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    SCHEMA_KW "SCHEMA"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    NAME
      IDENT "regress_rls_schema"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "client_min_messages"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- initial setup"
  WHITESPACE "\n"
  CREATE_USER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    NAME
      IDENT "regress_rls_alice"
    WHITESPACE " "
    IDENT "NOLOGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_USER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    NAME
      IDENT "regress_rls_bob"
    WHITESPACE " "
    IDENT "NOLOGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_USER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    NAME
      IDENT "regress_rls_carol"
    WHITESPACE " "
    IDENT "NOLOGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_USER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    NAME
      IDENT "regress_rls_dave"
    WHITESPACE " "
    IDENT "NOLOGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_USER_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    NAME
      IDENT "regress_rls_exempt_user"
    WHITESPACE " "
    IDENT "BYPASSRLS"
    WHITESPACE " "
    IDENT "NOLOGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_ROLE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME
      IDENT "regress_rls_group1"
    WHITESPACE " "
    IDENT "NOLOGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_ROLE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME
      IDENT "regress_rls_group2"
    WHITESPACE " "
    IDENT "NOLOGIN"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    IDENT "regress_rls_group1"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    IDENT "regress_rls_group2"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_SCHEMA_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SCHEMA_KW "SCHEMA"
    WHITESPACE " "
    NAME
      IDENT "regress_rls_schema"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    SCHEMA_KW "SCHEMA"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_rls_schema"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    IDENT "public"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "search_path"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    IDENT "regress_rls_schema"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- setup of malicious function"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "OR"
      WHITESPACE " "
      REPLACE_KW "REPLACE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "f_leak"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "bool"
    WHITESPACE "\n    "
    FUNC_OPTION_LIST
      COST_FUNC_OPTION
        COST_KW "COST"
        WHITESPACE " "
        LITERAL
          FLOAT_NUMBER "0.0000001"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE "\n    "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'BEGIN RAISE NOTICE ''f_leak => %'', $1; RETURN true; END'"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "f_leak"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "public"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- BASIC Row-Level Security Scenario"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "uaccount"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "pguser"
        WHITESPACE "      "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NAME_KW "name"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      COMMA ","
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "seclv"
        WHITESPACE "       "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "uaccount"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "public"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "uaccount"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        STRING "'regress_rls_alice'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "99"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        STRING "'regress_rls_carol'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        STRING "'regress_rls_dave'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "category"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "cid"
        WHITESPACE "        "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      COMMA ","
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "cname"
        WHITESPACE "      "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "category"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "public"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "category"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'novel'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "22"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'science fiction'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "33"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'technology'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "44"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'manga'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          DOCUMENT_KW "document"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "did"
        WHITESPACE "         "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      COMMA ","
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "cid"
        WHITESPACE "         "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        REFERENCES_CONSTRAINT
          REFERENCES_KW "references"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "category"
          L_PAREN "("
          NAME_REF
            IDENT "cid"
          R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "dlevel"
        WHITESPACE "      "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      COMMA ","
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "dauthor"
        WHITESPACE "     "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NAME_KW "name"
      COMMA ","
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "dtitle"
        WHITESPACE "      "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "public"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE "\n    "
      L_PAREN "("
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'my first novel'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'my second novel'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "22"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'my science fiction'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      WHITESPACE " "
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "44"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'my first manga'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      WHITESPACE " "
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "44"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'my second manga'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      WHITESPACE " "
      LITERAL
        INT_NUMBER "6"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "22"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_carol'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'great science fiction'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      WHITESPACE " "
      LITERAL
        INT_NUMBER "7"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "33"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_carol'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'great technology book'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      WHITESPACE " "
      LITERAL
        INT_NUMBER "8"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "44"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_carol'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'great manga'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      WHITESPACE " "
      LITERAL
        INT_NUMBER "9"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "22"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_dave'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'awesome science fiction'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "33"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_dave'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'awesome technology book'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- user's security level must be higher than or equal to document's"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    IDENT "PERMISSIVE"
    WHITESPACE "\n    "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "dlevel"
      WHITESPACE " "
      LTEQ "<="
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "seclv"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "uaccount"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "pguser"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              NAME_REF
                CURRENT_USER_KW "current_user"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- try to create a policy of bogus type"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    IDENT "UGLY"
    WHITESPACE "\n    "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "dlevel"
      WHITESPACE " "
      LTEQ "<="
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "seclv"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "uaccount"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "pguser"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              NAME_REF
                CURRENT_USER_KW "current_user"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- but Dave isn't allowed to anything at cid 50 or above"
  WHITESPACE "\n"
  COMMENT "-- this is to make sure that we sort the policies by name first"
  WHITESPACE "\n"
  COMMENT "-- when applying WITH CHECK, a later INSERT by Dave should fail due"
  WHITESPACE "\n"
  COMMENT "-- to p1r first"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p2r"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    IDENT "RESTRICTIVE"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_dave"
    WHITESPACE "\n    "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      BIN_EXPR
        NAME_REF
          IDENT "cid"
        WHITESPACE " "
        NEQB "<>"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "44"
      WHITESPACE " "
      AND_KW "AND"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "cid"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "50"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- and Dave isn't allowed to see manga documents"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1r"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    IDENT "RESTRICTIVE"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_dave"
    WHITESPACE "\n    "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "cid"
      WHITESPACE " "
      NEQB "<>"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "44"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_policies"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "schemaname"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'regress_rls_schema'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "tablename"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'document'"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "policyname"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- viewpoint from regress_rls_bob"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
      WHITESPACE " "
      JOIN
        NATURAL_KW "NATURAL"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "category"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- try a sampled version"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
      WHITESPACE " "
      TABLESAMPLE_KW "TABLESAMPLE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "BERNOULLI"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "50"
          R_PAREN ")"
      WHITESPACE " "
      REPEATABLE_KW "REPEATABLE"
      PAREN_EXPR
        L_PAREN "("
        LITERAL
          INT_NUMBER "0"
        R_PAREN ")"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- viewpoint from regress_rls_carol"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
      WHITESPACE " "
      JOIN
        NATURAL_KW "NATURAL"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "category"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- try a sampled version"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
      WHITESPACE " "
      TABLESAMPLE_KW "TABLESAMPLE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "BERNOULLI"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "50"
          R_PAREN ")"
      WHITESPACE " "
      REPEATABLE_KW "REPEATABLE"
      PAREN_EXPR
        L_PAREN "("
        LITERAL
          INT_NUMBER "0"
        R_PAREN ")"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
      WHITESPACE " "
      JOIN
        NATURAL_KW "NATURAL"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "category"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- viewpoint from regress_rls_dave"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_dave"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
      WHITESPACE " "
      JOIN
        NATURAL_KW "NATURAL"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "category"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
      WHITESPACE " "
      JOIN
        NATURAL_KW "NATURAL"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "category"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- 44 would technically fail for both p2r and p1r, but we should get an error"
  WHITESPACE "\n"
  COMMENT "-- back from p1r for this because it sorts first"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "100"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "44"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_dave'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'testing sorting of policies'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n"
  COMMENT "-- Just to see a p2r error"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "100"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "55"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_dave'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'testing sorting of policies'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n\n"
  COMMENT "-- only owner can change policies"
  WHITESPACE "\n"
  ALTER_POLICY_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    NAME_REF
      DOCUMENT_KW "document"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "    "
  COMMENT "--fail"
  WHITESPACE "\n"
  DROP_POLICY_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
  SEMICOLON ";"
  WHITESPACE "                  "
  COMMENT "--fail"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_POLICY_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    NAME_REF
      DOCUMENT_KW "document"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "dauthor"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      NAME_REF
        CURRENT_USER_KW "current_user"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- viewpoint from regress_rls_bob again"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
      WHITESPACE " "
      JOIN
        NATURAL_KW "NATURAL"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "category"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- viewpoint from rls_regres_carol again"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
      WHITESPACE " "
      JOIN
        NATURAL_KW "NATURAL"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "category"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
      WHITESPACE " "
      JOIN
        NATURAL_KW "NATURAL"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "category"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- interaction of FK/PK constraints"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p2"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "category"
    WHITESPACE "\n    "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    CASE_EXPR
      CASE_KW "CASE"
      WHITESPACE " "
      WHEN_CLAUSE
        WHEN_KW "WHEN"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            CURRENT_USER_KW "current_user"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'regress_rls_bob'"
        WHITESPACE " "
        THEN_KW "THEN"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "cid"
          WHITESPACE " "
          IN_KW "IN"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              INT_NUMBER "11"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "33"
            R_PAREN ")"
      WHITESPACE "\n           "
      WHEN_CLAUSE
        WHEN_KW "WHEN"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            CURRENT_USER_KW "current_user"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'regress_rls_carol'"
        WHITESPACE " "
        THEN_KW "THEN"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "cid"
          WHITESPACE " "
          IN_KW "IN"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              INT_NUMBER "22"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "44"
            R_PAREN ")"
      WHITESPACE "\n           "
      ELSE_KW "ELSE"
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
      WHITESPACE " "
      END_KW "END"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "category"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- cannot delete PK referenced by invisible FK"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "d"
      WHITESPACE " "
      JOIN
        FULL_KW "FULL"
        WHITESPACE " "
        OUTER_KW "OUTER"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "category"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "c"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "d"
            DOT "."
            NAME_REF
              IDENT "cid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            NAME_REF
              IDENT "cid"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "d"
        DOT "."
        NAME_REF
          IDENT "did"
      COMMA ","
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "c"
        DOT "."
        NAME_REF
          IDENT "cid"
  SEMICOLON ";"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "category"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "cid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "33"
  SEMICOLON ";"
  WHITESPACE "    "
  COMMENT "-- fails with FK violation"
  WHITESPACE "\n\n"
  COMMENT "-- can insert FK referencing invisible PK"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "d"
      WHITESPACE " "
      JOIN
        FULL_KW "FULL"
        WHITESPACE " "
        OUTER_KW "OUTER"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "category"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "c"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "d"
            DOT "."
            NAME_REF
              IDENT "cid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            NAME_REF
              IDENT "cid"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "d"
        DOT "."
        NAME_REF
          IDENT "did"
      COMMA ","
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "c"
        DOT "."
        NAME_REF
          IDENT "cid"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "33"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        CURRENT_USER_KW "current_user"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'hoge'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- UNIQUE or PRIMARY KEY constraint violation DOES reveal presence of row"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "8"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "44"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'my third manga'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- Must fail with unique violation, revealing presence of did we can't see"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "did"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "8"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- and confirm we can't see it"
  WHITESPACE "\n\n"
  COMMENT "-- RLS policies are checked before constraints"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "8"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "44"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_carol'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'my third manga'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- Should fail with RLS check violation, not duplicate key violation"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "did"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "8"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "dauthor"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'regress_rls_carol'"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "did"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "5"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- Should fail with RLS check violation, not duplicate key violation"
  WHITESPACE "\n\n"
  COMMENT "-- database superuser does bypass RLS policy when enabled"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "category"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- database superuser does bypass RLS policy when disabled"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "category"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- database non-superuser with bypass privilege can bypass RLS policy when disabled"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_exempt_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "category"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- RLS policy does not apply to table owner when RLS enabled."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "category"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- RLS policy does not apply to table owner when RLS disabled."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "category"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Table inheritance and RLS policy"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "t1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "junk1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    DROP_COLUMN
      DROP_KW "DROP"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "junk1"
  SEMICOLON ";"
  WHITESPACE "    "
  COMMENT "-- just a disturbing factor"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "public"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "t2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                FLOAT_KW "float"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t2"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "public"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "t3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t3"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "INHERIT"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t3"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "public"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "PUBLIC"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PERCENT "%"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- be even number"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p2"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t2"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "PUBLIC"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PERCENT "%"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- be odd number"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t2"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- reference to system column"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "tableoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "t1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- reference to whole-row reference"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "t1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "t1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- for share/update lock"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
    WHITESPACE " "
    LOCKING_CLAUSE
      FOR_KW "FOR"
      WHITESPACE " "
      SHARE_KW "SHARE"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
    WHITESPACE " "
    LOCKING_CLAUSE
      FOR_KW "FOR"
      WHITESPACE " "
      SHARE_KW "SHARE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
    WHITESPACE " "
    LOCKING_CLAUSE
      FOR_KW "FOR"
      WHITESPACE " "
      SHARE_KW "SHARE"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
    WHITESPACE " "
    LOCKING_CLAUSE
      FOR_KW "FOR"
      WHITESPACE " "
      SHARE_KW "SHARE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- union all query"
  WHITESPACE "\n"
  COMPOUND_SELECT
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "a"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "b"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              NAME_REF
                IDENT "tableoid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "t2"
    WHITESPACE " "
    UNION_KW "UNION"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "a"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "b"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              NAME_REF
                IDENT "tableoid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "t3"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  COMPOUND_SELECT
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "a"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "b"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              NAME_REF
                IDENT "tableoid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "t2"
    WHITESPACE " "
    UNION_KW "UNION"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "a"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "b"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              NAME_REF
                IDENT "tableoid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "t3"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- superuser is allowed to bypass RLS checks"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- non-superuser with bypass privilege can bypass RLS policy when disabled"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_exempt_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Partitioned Tables"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_document"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "did"
        WHITESPACE "         "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "cid"
        WHITESPACE "         "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "dlevel"
        WHITESPACE "      "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      COMMA ","
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "dauthor"
        WHITESPACE "     "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NAME_KW "name"
      COMMA ","
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "dtitle"
        WHITESPACE "      "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    RANGE_KW "RANGE"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "cid"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_document"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "public"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Create partitions for document categories"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_document_fiction"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_document"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "11"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "12"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_document_satire"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_document"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "55"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "56"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_document_nonfiction"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_document"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    VALUES_KW "VALUES"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "99"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "100"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_document_fiction"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "public"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_document_satire"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "public"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_document_nonfiction"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "public"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE "\n    "
      L_PAREN "("
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'my first novel'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'my second novel'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "99"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'my science textbook'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      WHITESPACE " "
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "55"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'my first satire'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      WHITESPACE " "
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "99"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'my history book'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      WHITESPACE " "
      LITERAL
        INT_NUMBER "6"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_carol'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'great science fiction'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      WHITESPACE " "
      LITERAL
        INT_NUMBER "7"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "99"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_carol'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'great technology book'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      WHITESPACE " "
      LITERAL
        INT_NUMBER "8"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "55"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_carol'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'great satire'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      WHITESPACE " "
      LITERAL
        INT_NUMBER "9"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_dave'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'awesome science fiction'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "99"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_dave'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'awesome technology book'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_document"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Create policy on parent"
  WHITESPACE "\n"
  COMMENT "-- user's security level must be higher than or equal to document's"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "pp1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_document"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    IDENT "PERMISSIVE"
    WHITESPACE "\n    "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "dlevel"
      WHITESPACE " "
      LTEQ "<="
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "seclv"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "uaccount"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "pguser"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              NAME_REF
                CURRENT_USER_KW "current_user"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Dave is only allowed to see cid < 55"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "pp1r"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_document"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    IDENT "RESTRICTIVE"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_dave"
    WHITESPACE "\n    "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "cid"
      WHITESPACE " "
      L_ANGLE "<"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "55"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_policies"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "schemaname"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'regress_rls_schema'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "tablename"
          WHITESPACE " "
          LIKE_KW "like"
          WHITESPACE " "
          LITERAL
            STRING "'%part_document%'"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "policyname"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- viewpoint from regress_rls_bob"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- viewpoint from regress_rls_carol"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- viewpoint from regress_rls_dave"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_dave"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- pp1 ERROR"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "100"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_dave'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'testing pp1'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n"
  COMMENT "-- pp1r ERROR"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "100"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "99"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_dave'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'testing pp1r'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n\n"
  COMMENT "-- Show that RLS policy does not apply for direct inserts to children"
  WHITESPACE "\n"
  COMMENT "-- This should fail with RLS POLICY pp1r violation."
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "100"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "55"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_dave'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'testing RLS with partitions'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n"
  COMMENT "-- But this should succeed."
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_document_satire"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "100"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "55"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_dave'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'testing RLS with partitions'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- success"
  WHITESPACE "\n"
  COMMENT "-- We still cannot see the row using the parent"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- But we can if we look directly"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_document_satire"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Turn on RLS and create policy on child to show RLS is checked before constraints"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_document_satire"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "pp3"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_document_satire"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    IDENT "RESTRICTIVE"
    WHITESPACE "\n    "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "cid"
      WHITESPACE " "
      L_ANGLE "<"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "55"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- This should fail with RLS violation now."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_dave"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_document_satire"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "101"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "55"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_dave'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'testing RLS with partitions'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n"
  COMMENT "-- And now we cannot see directly into the partition either, due to RLS"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_document_satire"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- The parent looks same as before"
  WHITESPACE "\n"
  COMMENT "-- viewpoint from regress_rls_dave"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- viewpoint from regress_rls_carol"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- only owner can change policies"
  WHITESPACE "\n"
  ALTER_POLICY_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "pp1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    NAME_REF
      IDENT "part_document"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "    "
  COMMENT "--fail"
  WHITESPACE "\n"
  DROP_POLICY_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "pp1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_document"
  SEMICOLON ";"
  WHITESPACE "                  "
  COMMENT "--fail"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_POLICY_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "pp1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    NAME_REF
      IDENT "part_document"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "dauthor"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      NAME_REF
        CURRENT_USER_KW "current_user"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- viewpoint from regress_rls_bob again"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- viewpoint from rls_regres_carol again"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "dtitle"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- database superuser does bypass RLS policy when enabled"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_document"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_document_satire"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- database non-superuser with bypass privilege can bypass RLS policy when disabled"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_exempt_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_document"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_document_satire"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- RLS policy does not apply to table owner when RLS enabled."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_document"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_document_satire"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- When RLS disabled, other users get ERROR."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_dave"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_document"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "part_document_satire"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "did"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check behavior with a policy that uses a SubPlan not an InitPlan."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "pp3"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_document"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    IDENT "RESTRICTIVE"
    WHITESPACE "\n    "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    PAREN_EXPR
      L_PAREN "("
      SELECT
        SELECT_CLAUSE
          SELECT_KW "SELECT"
          WHITESPACE " "
          TARGET_LIST
            TARGET
              BIN_EXPR
                NAME_REF
                  IDENT "dlevel"
                WHITESPACE " "
                LTEQ "<="
                WHITESPACE " "
                NAME_REF
                  IDENT "seclv"
        WHITESPACE " "
        FROM_CLAUSE
          FROM_KW "FROM"
          WHITESPACE " "
          NAME_REF
            IDENT "uaccount"
        WHITESPACE " "
        WHERE_CLAUSE
          WHERE_KW "WHERE"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "pguser"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            NAME_REF
              CURRENT_USER_KW "current_user"
      R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "100"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_carol'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'testing pp3'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n\n"
  COMMENT "----- Dependencies -----"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dependee"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dependent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "d1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dependent"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE "\n    "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "PUBLIC"
    WHITESPACE "\n    "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "x"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                FIELD_EXPR
                  NAME_REF
                    IDENT "d"
                  DOT "."
                  NAME_REF
                    IDENT "x"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "dependee"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "d"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "d"
                DOT "."
                NAME_REF
                  IDENT "y"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              NAME_REF
                IDENT "y"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dependee"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- Should fail without CASCADE due to dependency on row security qual?"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dependee"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "dependent"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- After drop, should be unqualified"
  WHITESPACE "\n\n"
  COMMENT "-----   RECURSION    ----"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Simple recursion"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rec1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "r1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rec1"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "x"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                FIELD_EXPR
                  NAME_REF
                    IDENT "r"
                  DOT "."
                  NAME_REF
                    IDENT "x"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "rec1"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "r"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "y"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "r"
                DOT "."
                NAME_REF
                  IDENT "y"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rec1"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rec1"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail, direct recursion"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Mutual recursion"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rec2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_POLICY_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "r1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    NAME_REF
      IDENT "rec1"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "x"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "a"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "rec2"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "b"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              NAME_REF
                IDENT "y"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "r2"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rec2"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "x"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "rec1"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "y"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              NAME_REF
                IDENT "b"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rec2"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rec1"
  SEMICOLON ";"
  WHITESPACE "    "
  COMMENT "-- fail, mutual recursion"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Mutual recursion via views"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rec1v"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "rec1"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rec2v"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "rec2"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_POLICY_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "r1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    NAME_REF
      IDENT "rec1"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "x"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "a"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "rec2v"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "b"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              NAME_REF
                IDENT "y"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_POLICY_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "r2"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    NAME_REF
      IDENT "rec2"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "x"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "rec1v"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "y"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              NAME_REF
                IDENT "b"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rec1"
  SEMICOLON ";"
  WHITESPACE "    "
  COMMENT "-- fail, mutual recursion via views"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Mutual recursion via .s.b views"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rec1v"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rec2v"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rec1v"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "security_barrier"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "rec1"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rec2v"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "security_barrier"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "rec2"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "r1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rec1"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "x"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "a"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "rec2v"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "b"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              NAME_REF
                IDENT "y"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "r2"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rec2"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "x"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "rec1v"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "y"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              NAME_REF
                IDENT "b"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rec1"
  SEMICOLON ";"
  WHITESPACE "    "
  COMMENT "-- fail, mutual recursion via s.b. views"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- recursive RLS and VIEWs in policy"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "s1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "s1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "x"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "public"
                DOT "."
                NAME_REF
                  IDENT "fipshash"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  NAME_REF
                    IDENT "x"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          TEXT_KW "text"
                R_PAREN ")"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            PREFIX_EXPR
              MINUS "-"
              LITERAL
                INT_NUMBER "10"
            COMMA ","
            LITERAL
              INT_NUMBER "10"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "x"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "s2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "s2"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "x"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "public"
                DOT "."
                NAME_REF
                  IDENT "fipshash"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  NAME_REF
                    IDENT "x"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          TEXT_KW "text"
                R_PAREN ")"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            PREFIX_EXPR
              MINUS "-"
              LITERAL
                INT_NUMBER "6"
            COMMA ","
            LITERAL
              INT_NUMBER "6"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "x"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "s1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "s2"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "s1"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      IN_KW "in"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "x"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "s2"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "where"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "y"
              WHITESPACE " "
              LIKE_KW "like"
              WHITESPACE " "
              LITERAL
                STRING "'%2f%'"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p2"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "s2"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "x"
      WHITESPACE " "
      IN_KW "in"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "a"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "s1"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "where"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "b"
              WHITESPACE " "
              LIKE_KW "like"
              WHITESPACE " "
              LITERAL
                STRING "'%22%'"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p3"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "s1"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    INSERT_KW "INSERT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    CHECK_KW "CHECK"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "a"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "s1"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "s1"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "s2"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "v2"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "s2"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "y"
          WHITESPACE " "
          LIKE_KW "like"
          WHITESPACE " "
          LITERAL
            STRING "'%af%'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "s1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail (infinite recursion)"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "s1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'foo'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail (infinite recursion)"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_POLICY_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p3"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "s1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_POLICY_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p2"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    NAME_REF
      IDENT "s2"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      BIN_EXPR
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PERCENT "%"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "s1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\t"
  COMMENT "-- OK"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ONLY_KW "only"
      WHITESPACE " "
      NAME_REF
        IDENT "s1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_POLICY_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    NAME_REF
      IDENT "s1"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      IN_KW "in"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "x"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "v2"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- using VIEW in RLS policy"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "s1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\t"
  COMMENT "-- OK"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "s1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    NAME_REF
                      IDENT "x"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                NAME_REF
                  IDENT "s1"
              WHITESPACE " "
              LIMIT_CLAUSE
                LIMIT_KW "LIMIT"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "1"
            R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "xx"
        COMMA ","
        WHITESPACE " "
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "s2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        LIKE_KW "like"
        WHITESPACE " "
        LITERAL
          STRING "'%28%'"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    NAME_REF
                      IDENT "x"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                NAME_REF
                  IDENT "s1"
              WHITESPACE " "
              LIMIT_CLAUSE
                LIMIT_KW "LIMIT"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "1"
            R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "xx"
        COMMA ","
        WHITESPACE " "
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "s2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        LIKE_KW "like"
        WHITESPACE " "
        LITERAL
          STRING "'%28%'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_POLICY_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p2"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    NAME_REF
      IDENT "s2"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "x"
      WHITESPACE " "
      IN_KW "in"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "a"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "s1"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "where"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "b"
              WHITESPACE " "
              LIKE_KW "like"
              WHITESPACE " "
              LITERAL
                STRING "'%d2%'"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "s1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\t"
  COMMENT "-- fail (infinite recursion via view)"
  WHITESPACE "\n\n"
  COMMENT "-- prepared statement with regress_rls_alice privilege"
  WHITESPACE "\n"
  PREPARE_STMT
    PREPARE_KW "PREPARE"
    WHITESPACE " "
    NAME
      IDENT "p1"
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "t1"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          LTEQ "<="
          WHITESPACE " "
          LITERAL
            PARAM "$1"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "p1"
    ARG_LIST
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "p1"
    ARG_LIST
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- superuser is allowed to bypass RLS checks"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- plan cache should be invalidated"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "p1"
    ARG_LIST
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "p1"
    ARG_LIST
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  PREPARE_STMT
    PREPARE_KW "PREPARE"
    WHITESPACE " "
    NAME
      IDENT "p2"
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "t1"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            PARAM "$1"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "p2"
    ARG_LIST
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "p2"
    ARG_LIST
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- also, case when privilege switch from superuser"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "p2"
    ARG_LIST
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "p2"
    ARG_LIST
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- UPDATE / DELETE and Row-level security"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    ONLY_KW "only"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      LITERAL
        STRING "'_updt'"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    ONLY_KW "only"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      LITERAL
        STRING "'_updt'"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- returning clause with system column"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    ONLY_KW "only"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    CAST_EXPR
      NAME_REF
        IDENT "tableoid"
      COLON2 "::"
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "regclass"
    COMMA ","
    WHITESPACE " "
    STAR "*"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    CAST_EXPR
      NAME_REF
        IDENT "tableoid"
      COLON2 "::"
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "regclass"
    COMMA ","
    WHITESPACE " "
    STAR "*"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- updates with from clause"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t2"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    EQ "="
    FIELD_EXPR
      NAME_REF
        IDENT "t2"
      DOT "."
      NAME_REF
        IDENT "b"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t3"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t2"
                DOT "."
                NAME_REF
                  IDENT "a"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
            WHITESPACE " "
            AND_KW "and"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t3"
                DOT "."
                NAME_REF
                  IDENT "a"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "f_leak"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "t2"
                DOT "."
                NAME_REF
                  IDENT "b"
              R_PAREN ")"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "f_leak"
          ARG_LIST
            L_PAREN "("
            FIELD_EXPR
              NAME_REF
                IDENT "t3"
              DOT "."
              NAME_REF
                IDENT "b"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t2"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    EQ "="
    FIELD_EXPR
      NAME_REF
        IDENT "t2"
      DOT "."
      NAME_REF
        IDENT "b"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t3"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t2"
                DOT "."
                NAME_REF
                  IDENT "a"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
            WHITESPACE " "
            AND_KW "and"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t3"
                DOT "."
                NAME_REF
                  IDENT "a"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "f_leak"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "t2"
                DOT "."
                NAME_REF
                  IDENT "b"
              R_PAREN ")"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "f_leak"
          ARG_LIST
            L_PAREN "("
            FIELD_EXPR
              NAME_REF
                IDENT "t3"
              DOT "."
              NAME_REF
                IDENT "b"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    EQ "="
    FIELD_EXPR
      NAME_REF
        IDENT "t1"
      DOT "."
      NAME_REF
        IDENT "b"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "a"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
            WHITESPACE " "
            AND_KW "and"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t2"
                DOT "."
                NAME_REF
                  IDENT "a"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "f_leak"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "b"
              R_PAREN ")"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "f_leak"
          ARG_LIST
            L_PAREN "("
            FIELD_EXPR
              NAME_REF
                IDENT "t2"
              DOT "."
              NAME_REF
                IDENT "b"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    EQ "="
    FIELD_EXPR
      NAME_REF
        IDENT "t1"
      DOT "."
      NAME_REF
        IDENT "b"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "a"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
            WHITESPACE " "
            AND_KW "and"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t2"
                DOT "."
                NAME_REF
                  IDENT "a"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "f_leak"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "b"
              R_PAREN ")"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "f_leak"
          ARG_LIST
            L_PAREN "("
            FIELD_EXPR
              NAME_REF
                IDENT "t2"
              DOT "."
              NAME_REF
                IDENT "b"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t2"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    EQ "="
    FIELD_EXPR
      NAME_REF
        IDENT "t2"
      DOT "."
      NAME_REF
        IDENT "b"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "a"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
            WHITESPACE " "
            AND_KW "and"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t2"
                DOT "."
                NAME_REF
                  IDENT "a"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "f_leak"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "b"
              R_PAREN ")"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "f_leak"
          ARG_LIST
            L_PAREN "("
            FIELD_EXPR
              NAME_REF
                IDENT "t2"
              DOT "."
              NAME_REF
                IDENT "b"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t2"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    EQ "="
    FIELD_EXPR
      NAME_REF
        IDENT "t2"
      DOT "."
      NAME_REF
        IDENT "b"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "a"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
            WHITESPACE " "
            AND_KW "and"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t2"
                DOT "."
                NAME_REF
                  IDENT "a"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "3"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "f_leak"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "b"
              R_PAREN ")"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "f_leak"
          ARG_LIST
            L_PAREN "("
            FIELD_EXPR
              NAME_REF
                IDENT "t2"
              DOT "."
              NAME_REF
                IDENT "b"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- updates with from clause self join"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t2"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "t2_1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "t2_2"
      DOT "."
      NAME_REF
        IDENT "b"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t2"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t2_2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "t2_1"
                  DOT "."
                  NAME_REF
                    IDENT "a"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "3"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "t2_2"
                  DOT "."
                  NAME_REF
                    IDENT "a"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "t2_1"
                  DOT "."
                  NAME_REF
                    IDENT "a"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t2_2"
                DOT "."
                NAME_REF
                  IDENT "b"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "t2_1"
                DOT "."
                NAME_REF
                  IDENT "b"
          WHITESPACE "\n"
          AND_KW "AND"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "f_leak"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "t2_1"
                DOT "."
                NAME_REF
                  IDENT "b"
              R_PAREN ")"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "f_leak"
          ARG_LIST
            L_PAREN "("
            FIELD_EXPR
              NAME_REF
                IDENT "t2_2"
              DOT "."
              NAME_REF
                IDENT "b"
            R_PAREN ")"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "t2_1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "t2_2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t2"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "t2_1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "t2_2"
      DOT "."
      NAME_REF
        IDENT "b"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t2"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t2_2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "t2_1"
                  DOT "."
                  NAME_REF
                    IDENT "a"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "3"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "t2_2"
                  DOT "."
                  NAME_REF
                    IDENT "a"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "t2_1"
                  DOT "."
                  NAME_REF
                    IDENT "a"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t2_2"
                DOT "."
                NAME_REF
                  IDENT "b"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "t2_1"
                DOT "."
                NAME_REF
                  IDENT "b"
          WHITESPACE "\n"
          AND_KW "AND"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "f_leak"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "t2_1"
                DOT "."
                NAME_REF
                  IDENT "b"
              R_PAREN ")"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "f_leak"
          ARG_LIST
            L_PAREN "("
            FIELD_EXPR
              NAME_REF
                IDENT "t2_2"
              DOT "."
              NAME_REF
                IDENT "b"
            R_PAREN ")"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "t2_1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "t2_2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "t1_1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "t1_2"
      DOT "."
      NAME_REF
        IDENT "b"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t1_2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "t1_1"
                  DOT "."
                  NAME_REF
                    IDENT "a"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "4"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "t1_2"
                  DOT "."
                  NAME_REF
                    IDENT "a"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "t1_1"
                  DOT "."
                  NAME_REF
                    IDENT "a"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1_2"
                DOT "."
                NAME_REF
                  IDENT "b"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "t1_1"
                DOT "."
                NAME_REF
                  IDENT "b"
          WHITESPACE "\n"
          AND_KW "AND"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "f_leak"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "t1_1"
                DOT "."
                NAME_REF
                  IDENT "b"
              R_PAREN ")"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "f_leak"
          ARG_LIST
            L_PAREN "("
            FIELD_EXPR
              NAME_REF
                IDENT "t1_2"
              DOT "."
              NAME_REF
                IDENT "b"
            R_PAREN ")"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "t1_1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "t1_2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "t1_1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "t1_2"
      DOT "."
      NAME_REF
        IDENT "b"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t1_2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "t1_1"
                  DOT "."
                  NAME_REF
                    IDENT "a"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "4"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "t1_2"
                  DOT "."
                  NAME_REF
                    IDENT "a"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "t1_1"
                  DOT "."
                  NAME_REF
                    IDENT "a"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1_2"
                DOT "."
                NAME_REF
                  IDENT "b"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "t1_1"
                DOT "."
                NAME_REF
                  IDENT "b"
          WHITESPACE "\n"
          AND_KW "AND"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "f_leak"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "t1_1"
                DOT "."
                NAME_REF
                  IDENT "b"
              R_PAREN ")"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "f_leak"
          ARG_LIST
            L_PAREN "("
            FIELD_EXPR
              NAME_REF
                IDENT "t1_2"
              DOT "."
              NAME_REF
                IDENT "b"
            R_PAREN ")"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "t1_1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "t1_2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      NAME_REF
        IDENT "b"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    ONLY_KW "only"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    ONLY_KW "only"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    CAST_EXPR
      NAME_REF
        IDENT "tableoid"
      COLON2 "::"
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "regclass"
    COMMA ","
    WHITESPACE " "
    STAR "*"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    CAST_EXPR
      NAME_REF
        IDENT "tableoid"
      COLON2 "::"
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "regclass"
    COMMA ","
    WHITESPACE " "
    STAR "*"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- S.b. view on top of Row-level security"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "b1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "b1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "x"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "public"
                DOT "."
                NAME_REF
                  IDENT "fipshash"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  NAME_REF
                    IDENT "x"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          TEXT_KW "text"
                R_PAREN ")"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            PREFIX_EXPR
              MINUS "-"
              LITERAL
                INT_NUMBER "10"
            COMMA ","
            LITERAL
              INT_NUMBER "10"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "x"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "b1"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PERCENT "%"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "b1"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "b1"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bv1"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "security_barrier"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "b1"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    CHECK_KW "CHECK"
    WHITESPACE " "
    OPTION_KW "OPTION"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bv1"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "bv1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "bv1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bv1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      PREFIX_EXPR
        MINUS "-"
        LITERAL
          INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'xxx'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- should fail view WCO"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bv1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'xxx'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- should fail RLS check"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bv1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "12"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'xxx'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- ok"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bv1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'yyy'"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "4"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "f_leak"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "b"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bv1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'yyy'"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "4"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "f_leak"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "b"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bv1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "6"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "f_leak"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "b"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bv1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "6"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "f_leak"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "b"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "b1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- INSERT ... ON CONFLICT DO UPDATE and Row-level security"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_POLICY_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_POLICY_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p1r"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p2"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    INSERT_KW "INSERT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    CHECK_KW "CHECK"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "dauthor"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      NAME_REF
        CURRENT_USER_KW "current_user"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p3"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE "\n  "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "cid"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "cid"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "category"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "cname"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'novel'"
        R_PAREN ")"
    R_PAREN ")"
    WHITESPACE "\n  "
    WITH_KW "WITH"
    WHITESPACE " "
    CHECK_KW "CHECK"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "dauthor"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      NAME_REF
        CURRENT_USER_KW "current_user"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Exists..."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "did"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ...so violates actual WITH CHECK OPTION within UPDATE (not INSERT, since"
  WHITESPACE "\n"
  COMMENT "-- alternative UPDATE path happens to be taken):"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "cid"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "category"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "cname"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'novel'"
        R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_carol'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'my first novel'"
      R_PAREN ")"
    WHITESPACE "\n    "
    ON_KW "ON"
    WHITESPACE " "
    CONFLICT_KW "CONFLICT"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "did"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "DO"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dtitle"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "EXCLUDED"
      DOT "."
      NAME_REF
        IDENT "dtitle"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "dauthor"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "EXCLUDED"
      DOT "."
      NAME_REF
        IDENT "dauthor"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Violates USING qual for UPDATE policy p3."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- UPDATE path is taken, but UPDATE fails purely because *existing* row to be"
  WHITESPACE "\n"
  COMMENT "-- updated is not a \"novel\"/cid 11 (row is not leaked, even though we have"
  WHITESPACE "\n"
  COMMENT "-- SELECT privileges sufficient to see the row in this instance):"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "33"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "22"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'okay science fiction'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- preparation for next statement"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "33"
      COMMA ","
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "cid"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "category"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "cname"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'novel'"
        R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Some novel, replaces sci-fi'"
      R_PAREN ")"
    WHITESPACE " "
    COMMENT "-- takes UPDATE path"
    WHITESPACE "\n    "
    ON_KW "ON"
    WHITESPACE " "
    CONFLICT_KW "CONFLICT"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "did"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "DO"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dtitle"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "EXCLUDED"
      DOT "."
      NAME_REF
        IDENT "dtitle"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Fine (we UPDATE, since INSERT WCOs and UPDATE security barrier quals + WCOs"
  WHITESPACE "\n"
  COMMENT "-- not violated):"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "cid"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "category"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "cname"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'novel'"
        R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'my first novel'"
      R_PAREN ")"
    WHITESPACE "\n    "
    ON_KW "ON"
    WHITESPACE " "
    CONFLICT_KW "CONFLICT"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "did"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "DO"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dtitle"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "EXCLUDED"
      DOT "."
      NAME_REF
        IDENT "dtitle"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Fine (we INSERT, so \"cid = 33\" (\"technology\") isn't evaluated):"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "78"
      COMMA ","
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "cid"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "category"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "cname"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'novel'"
        R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'some technology novel'"
      R_PAREN ")"
    WHITESPACE "\n    "
    ON_KW "ON"
    WHITESPACE " "
    CONFLICT_KW "CONFLICT"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "did"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "DO"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dtitle"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "EXCLUDED"
      DOT "."
      NAME_REF
        IDENT "dtitle"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "cid"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "33"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Fine (same query, but we UPDATE, so \"cid = 33\", (\"technology\") is not the"
  WHITESPACE "\n"
  COMMENT "-- case in respect of *existing* tuple):"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "78"
      COMMA ","
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "cid"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "category"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "cname"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'novel'"
        R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'some technology novel'"
      R_PAREN ")"
    WHITESPACE "\n    "
    ON_KW "ON"
    WHITESPACE " "
    CONFLICT_KW "CONFLICT"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "did"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "DO"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dtitle"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "EXCLUDED"
      DOT "."
      NAME_REF
        IDENT "dtitle"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "cid"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "33"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Same query a third time, but now fails due to existing tuple finally not"
  WHITESPACE "\n"
  COMMENT "-- passing quals:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "78"
      COMMA ","
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "cid"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "category"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "cname"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'novel'"
        R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'some technology novel'"
      R_PAREN ")"
    WHITESPACE "\n    "
    ON_KW "ON"
    WHITESPACE " "
    CONFLICT_KW "CONFLICT"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "did"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "DO"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dtitle"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "EXCLUDED"
      DOT "."
      NAME_REF
        IDENT "dtitle"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "cid"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "33"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Don't fail just because INSERT doesn't satisfy WITH CHECK option that"
  WHITESPACE "\n"
  COMMENT "-- originated as a barrier/USING() qual from the UPDATE.  Note that the UPDATE"
  WHITESPACE "\n"
  COMMENT "-- path *isn't* taken, and so UPDATE-related policy does not apply:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "79"
      COMMA ","
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "cid"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "category"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "cname"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'technology'"
        R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'technology book, can only insert'"
      R_PAREN ")"
    WHITESPACE "\n    "
    ON_KW "ON"
    WHITESPACE " "
    CONFLICT_KW "CONFLICT"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "did"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "DO"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dtitle"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "EXCLUDED"
      DOT "."
      NAME_REF
        IDENT "dtitle"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- But this time, the same statement fails, because the UPDATE path is taken,"
  WHITESPACE "\n"
  COMMENT "-- and updating the row just inserted falls afoul of security barrier qual"
  WHITESPACE "\n"
  COMMENT "-- (enforced as WCO) -- what we might have updated target tuple to is"
  WHITESPACE "\n"
  COMMENT "-- irrelevant, in fact."
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "79"
      COMMA ","
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "cid"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "category"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "cname"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'technology'"
        R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'technology book, can only insert'"
      R_PAREN ")"
    WHITESPACE "\n    "
    ON_KW "ON"
    WHITESPACE " "
    CONFLICT_KW "CONFLICT"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "did"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "DO"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dtitle"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "EXCLUDED"
      DOT "."
      NAME_REF
        IDENT "dtitle"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test default USING qual enforced as WCO"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_POLICY_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_POLICY_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p2"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_POLICY_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p3"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p3_with_default"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE "\n  "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "cid"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "cid"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "category"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "cname"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'novel'"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Just because WCO-style enforcement of USING quals occurs with"
  WHITESPACE "\n"
  COMMENT "-- existing/target tuple does not mean that the implementation can be allowed"
  WHITESPACE "\n"
  COMMENT "-- to fail to also enforce this qual against the final tuple appended to"
  WHITESPACE "\n"
  COMMENT "-- relation (since in the absence of an explicit WCO, this is also interpreted"
  WHITESPACE "\n"
  COMMENT "-- as an UPDATE/ALL WCO in general)."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- UPDATE path is taken here (fails due to existing tuple).  Note that this is"
  WHITESPACE "\n"
  COMMENT "-- not reported as a \"USING expression\", because it's an RLS UPDATE check that originated as"
  WHITESPACE "\n"
  COMMENT "-- a USING qual for the purposes of RLS in general, as opposed to an explicit"
  WHITESPACE "\n"
  COMMENT "-- USING qual that is ordinarily a security barrier.  We leave it up to the"
  WHITESPACE "\n"
  COMMENT "-- UPDATE to make this fail:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "79"
      COMMA ","
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "cid"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "category"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "cname"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'technology'"
        R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'technology book, can only insert'"
      R_PAREN ")"
    WHITESPACE "\n    "
    ON_KW "ON"
    WHITESPACE " "
    CONFLICT_KW "CONFLICT"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "did"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "DO"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dtitle"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "EXCLUDED"
      DOT "."
      NAME_REF
        IDENT "dtitle"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- UPDATE path is taken here.  Existing tuple passes, since its cid"
  WHITESPACE "\n"
  COMMENT "-- corresponds to \"novel\", but default USING qual is enforced against"
  WHITESPACE "\n"
  COMMENT "-- post-UPDATE tuple too (as always when updating with a policy that lacks an"
  WHITESPACE "\n"
  COMMENT "-- explicit WCO), and so this fails:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "cid"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "category"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "cname"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'technology'"
        R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'my first novel'"
      R_PAREN ")"
    WHITESPACE "\n    "
    ON_KW "ON"
    WHITESPACE " "
    CONFLICT_KW "CONFLICT"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "did"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "DO"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "cid"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "EXCLUDED"
      DOT "."
      NAME_REF
        IDENT "cid"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "dtitle"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "EXCLUDED"
      DOT "."
      NAME_REF
        IDENT "dtitle"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_POLICY_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p3_with_default"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test ALL policies with ON CONFLICT DO UPDATE (much the same as existing UPDATE"
  WHITESPACE "\n"
  COMMENT "-- tests)"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p3_with_all"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE "\n  "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "cid"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "cid"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "category"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "cname"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'novel'"
        R_PAREN ")"
    R_PAREN ")"
    WHITESPACE "\n  "
    WITH_KW "WITH"
    WHITESPACE " "
    CHECK_KW "CHECK"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "dauthor"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      NAME_REF
        CURRENT_USER_KW "current_user"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Fails, since ALL WCO is enforced in insert path:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "80"
      COMMA ","
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "cid"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "category"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "cname"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'novel'"
        R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_carol'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'my first novel'"
      R_PAREN ")"
    WHITESPACE "\n    "
    ON_KW "ON"
    WHITESPACE " "
    CONFLICT_KW "CONFLICT"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "did"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "DO"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dtitle"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "EXCLUDED"
      DOT "."
      NAME_REF
        IDENT "dtitle"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "cid"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "33"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Fails, since ALL policy USING qual is enforced (existing, target tuple is in"
  WHITESPACE "\n"
  COMMENT "-- violation, since it has the \"manga\" cid):"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "cid"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "category"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "cname"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'novel'"
        R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'my first novel'"
      R_PAREN ")"
    WHITESPACE "\n    "
    ON_KW "ON"
    WHITESPACE " "
    CONFLICT_KW "CONFLICT"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "did"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "DO"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dtitle"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    FIELD_EXPR
      NAME_REF
        IDENT "EXCLUDED"
      DOT "."
      NAME_REF
        IDENT "dtitle"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Fails, since ALL WCO are enforced:"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "cid"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "category"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "cname"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'novel'"
        R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'my first novel'"
      R_PAREN ")"
    WHITESPACE "\n    "
    ON_KW "ON"
    WHITESPACE " "
    CONFLICT_KW "CONFLICT"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "did"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "DO"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dauthor"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'regress_rls_carol'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- MERGE"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_POLICY_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p3_with_all"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "dnotes"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TEXT_KW "text"
      WHITESPACE " "
      DEFAULT_CONSTRAINT
        DEFAULT_KW "DEFAULT"
        WHITESPACE " "
        LITERAL
          STRING "''"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- all documents are readable"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- one may insert documents only authored by them"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p2"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    INSERT_KW "INSERT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    CHECK_KW "CHECK"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "dauthor"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      NAME_REF
        CURRENT_USER_KW "current_user"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- one may only update documents in 'novel' category and new dlevel must be > 0"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p3"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE "\n  "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "cid"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "cid"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "category"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "cname"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'novel'"
        R_PAREN ")"
    R_PAREN ")"
    WHITESPACE "\n  "
    WITH_KW "WITH"
    WHITESPACE " "
    CHECK_KW "CHECK"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "dlevel"
      WHITESPACE " "
      R_ANGLE ">"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- one may only delete documents in 'manga' category"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p4"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    DELETE_KW "DELETE"
    WHITESPACE "\n  "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "cid"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "cid"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "category"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "cname"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'manga'"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Fails, since update violates WITH CHECK qual on dlevel"
  WHITESPACE "\n"
  MERGE_STMT
    MERGE_KW "MERGE"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "d"
    WHITESPACE "\n"
    USING_CLAUSE
      USING_KW "USING"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  INT_NUMBER "1"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "sdid"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
      WHITESPACE "\n"
      ON_KW "ON"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "did"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "s"
          DOT "."
          NAME_REF
            IDENT "sdid"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dnotes"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "dnotes"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      LITERAL
        STRING "' notes added by merge1 '"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "dlevel"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Should be OK since USING and WITH CHECK quals pass"
  WHITESPACE "\n"
  MERGE_STMT
    MERGE_KW "MERGE"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "d"
    WHITESPACE "\n"
    USING_CLAUSE
      USING_KW "USING"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  INT_NUMBER "1"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "sdid"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
      WHITESPACE "\n"
      ON_KW "ON"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "did"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "s"
          DOT "."
          NAME_REF
            IDENT "sdid"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dnotes"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "dnotes"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      LITERAL
        STRING "' notes added by merge2 '"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Even when dlevel is updated explicitly, but to the existing value"
  WHITESPACE "\n"
  MERGE_STMT
    MERGE_KW "MERGE"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "d"
    WHITESPACE "\n"
    USING_CLAUSE
      USING_KW "USING"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  INT_NUMBER "1"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "sdid"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
      WHITESPACE "\n"
      ON_KW "ON"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "did"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "s"
          DOT "."
          NAME_REF
            IDENT "sdid"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dnotes"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "dnotes"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      LITERAL
        STRING "' notes added by merge3 '"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "dlevel"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- There is a MATCH for did = 3, but UPDATE's USING qual does not allow"
  WHITESPACE "\n"
  COMMENT "-- updating an item in category 'science fiction'"
  WHITESPACE "\n"
  MERGE_STMT
    MERGE_KW "MERGE"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "d"
    WHITESPACE "\n"
    USING_CLAUSE
      USING_KW "USING"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  INT_NUMBER "3"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "sdid"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
      WHITESPACE "\n"
      ON_KW "ON"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "did"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "s"
          DOT "."
          NAME_REF
            IDENT "sdid"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dnotes"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "dnotes"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      LITERAL
        STRING "' notes added by merge '"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- The same thing with DELETE action, but fails again because no permissions"
  WHITESPACE "\n"
  COMMENT "-- to delete items in 'science fiction' category that did 3 belongs to."
  WHITESPACE "\n"
  MERGE_STMT
    MERGE_KW "MERGE"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "d"
    WHITESPACE "\n"
    USING_CLAUSE
      USING_KW "USING"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  INT_NUMBER "3"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "sdid"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
      WHITESPACE "\n"
      ON_KW "ON"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "did"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "s"
          DOT "."
          NAME_REF
            IDENT "sdid"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    DELETE_KW "DELETE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Document with did 4 belongs to 'manga' category which is allowed for"
  WHITESPACE "\n"
  COMMENT "-- deletion. But this fails because the UPDATE action is matched first and"
  WHITESPACE "\n"
  COMMENT "-- UPDATE policy does not allow updation in the category."
  WHITESPACE "\n"
  MERGE_STMT
    MERGE_KW "MERGE"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "d"
    WHITESPACE "\n"
    USING_CLAUSE
      USING_KW "USING"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  INT_NUMBER "4"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "sdid"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
      WHITESPACE "\n"
      ON_KW "ON"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "did"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "s"
          DOT "."
          NAME_REF
            IDENT "sdid"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    AND_KW "AND"
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "dnotes"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        STRING "''"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dnotes"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "dnotes"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      LITERAL
        STRING "' notes added by merge '"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    DELETE_KW "DELETE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- UPDATE action is not matched this time because of the WHEN qual."
  WHITESPACE "\n"
  COMMENT "-- DELETE still fails because role regress_rls_bob does not have SELECT"
  WHITESPACE "\n"
  COMMENT "-- privileges on 'manga' category row in the category table."
  WHITESPACE "\n"
  MERGE_STMT
    MERGE_KW "MERGE"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "d"
    WHITESPACE "\n"
    USING_CLAUSE
      USING_KW "USING"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  INT_NUMBER "4"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "sdid"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
      WHITESPACE "\n"
      ON_KW "ON"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "did"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "s"
          DOT "."
          NAME_REF
            IDENT "sdid"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    AND_KW "AND"
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "dnotes"
      WHITESPACE " "
      NEQB "<>"
      WHITESPACE " "
      LITERAL
        STRING "''"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dnotes"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "dnotes"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      LITERAL
        STRING "' notes added by merge '"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    DELETE_KW "DELETE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- OK if DELETE is replaced with DO NOTHING"
  WHITESPACE "\n"
  MERGE_STMT
    MERGE_KW "MERGE"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "d"
    WHITESPACE "\n"
    USING_CLAUSE
      USING_KW "USING"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  INT_NUMBER "4"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "sdid"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
      WHITESPACE "\n"
      ON_KW "ON"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "did"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "s"
          DOT "."
          NAME_REF
            IDENT "sdid"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    AND_KW "AND"
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "dnotes"
      WHITESPACE " "
      NEQB "<>"
      WHITESPACE " "
      LITERAL
        STRING "''"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dnotes"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "dnotes"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      LITERAL
        STRING "' notes added by merge '"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    DO_KW "DO"
    WHITESPACE " "
    NOTHING_KW "NOTHING"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "did"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "4"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Switch to regress_rls_carol role and try the DELETE again. It should succeed"
  WHITESPACE "\n"
  COMMENT "-- this time"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  MERGE_STMT
    MERGE_KW "MERGE"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "d"
    WHITESPACE "\n"
    USING_CLAUSE
      USING_KW "USING"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  INT_NUMBER "4"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "sdid"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
      WHITESPACE "\n"
      ON_KW "ON"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "did"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "s"
          DOT "."
          NAME_REF
            IDENT "sdid"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    AND_KW "AND"
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "dnotes"
      WHITESPACE " "
      NEQB "<>"
      WHITESPACE " "
      LITERAL
        STRING "''"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dnotes"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "dnotes"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      LITERAL
        STRING "' notes added by merge '"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    DELETE_KW "DELETE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Switch back to regress_rls_bob role"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Try INSERT action. This fails because we are trying to insert"
  WHITESPACE "\n"
  COMMENT "-- dauthor = regress_rls_dave and INSERT's WITH CHECK does not allow"
  WHITESPACE "\n"
  COMMENT "-- that"
  WHITESPACE "\n"
  MERGE_STMT
    MERGE_KW "MERGE"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "d"
    WHITESPACE "\n"
    USING_CLAUSE
      USING_KW "USING"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  INT_NUMBER "12"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "sdid"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
      WHITESPACE "\n"
      ON_KW "ON"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "did"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "s"
          DOT "."
          NAME_REF
            IDENT "sdid"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    DELETE_KW "DELETE"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    NOT_KW "NOT"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    INSERT_KW "INSERT"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "12"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_dave'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'another novel'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- This should be fine"
  WHITESPACE "\n"
  MERGE_STMT
    MERGE_KW "MERGE"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "d"
    WHITESPACE "\n"
    USING_CLAUSE
      USING_KW "USING"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  INT_NUMBER "12"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "sdid"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
      WHITESPACE "\n"
      ON_KW "ON"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "did"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "s"
          DOT "."
          NAME_REF
            IDENT "sdid"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    DELETE_KW "DELETE"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    NOT_KW "NOT"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    INSERT_KW "INSERT"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "12"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'another novel'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ok"
  WHITESPACE "\n"
  MERGE_STMT
    MERGE_KW "MERGE"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "d"
    WHITESPACE "\n"
    USING_CLAUSE
      USING_KW "USING"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  INT_NUMBER "1"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "sdid"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
      WHITESPACE "\n"
      ON_KW "ON"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "did"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "s"
          DOT "."
          NAME_REF
            IDENT "sdid"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dnotes"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "dnotes"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      LITERAL
        STRING "' notes added by merge4 '"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    NOT_KW "NOT"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    INSERT_KW "INSERT"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "12"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'another novel'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- drop and create a new SELECT policy which prevents us from reading"
  WHITESPACE "\n"
  COMMENT "-- any document except with category 'novel'"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_POLICY_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE "\n  "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "cid"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "cid"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "category"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "cname"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'novel'"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- MERGE can no longer see the matching row and hence attempts the"
  WHITESPACE "\n"
  COMMENT "-- NOT MATCHED action, which results in unique key violation"
  WHITESPACE "\n"
  MERGE_STMT
    MERGE_KW "MERGE"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "d"
    WHITESPACE "\n"
    USING_CLAUSE
      USING_KW "USING"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  INT_NUMBER "7"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "sdid"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
      WHITESPACE "\n"
      ON_KW "ON"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "did"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "s"
          DOT "."
          NAME_REF
            IDENT "sdid"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dnotes"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "dnotes"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      LITERAL
        STRING "' notes added by merge5 '"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    NOT_KW "NOT"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    INSERT_KW "INSERT"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "12"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'another novel'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- UPDATE action fails if new row is not visible"
  WHITESPACE "\n"
  MERGE_STMT
    MERGE_KW "MERGE"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "d"
    WHITESPACE "\n"
    USING_CLAUSE
      USING_KW "USING"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  INT_NUMBER "1"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "sdid"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
      WHITESPACE "\n"
      ON_KW "ON"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "did"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "s"
          DOT "."
          NAME_REF
            IDENT "sdid"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dnotes"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "dnotes"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      LITERAL
        STRING "' notes added by merge6 '"
    COMMA ","
    WHITESPACE "\n\t\t\t   "
    NAME_REF
      IDENT "cid"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PAREN_EXPR
      L_PAREN "("
      SELECT
        SELECT_CLAUSE
          SELECT_KW "SELECT"
          WHITESPACE " "
          TARGET_LIST
            TARGET
              NAME_REF
                IDENT "cid"
        WHITESPACE " "
        FROM_CLAUSE
          FROM_KW "from"
          WHITESPACE " "
          NAME_REF
            IDENT "category"
        WHITESPACE " "
        WHERE_CLAUSE
          WHERE_KW "WHERE"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "cname"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'technology'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- but OK if new row is visible"
  WHITESPACE "\n"
  MERGE_STMT
    MERGE_KW "MERGE"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "d"
    WHITESPACE "\n"
    USING_CLAUSE
      USING_KW "USING"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  INT_NUMBER "1"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "sdid"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
      WHITESPACE "\n"
      ON_KW "ON"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "did"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "s"
          DOT "."
          NAME_REF
            IDENT "sdid"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dnotes"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "dnotes"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      LITERAL
        STRING "' notes added by merge7 '"
    COMMA ","
    WHITESPACE "\n\t\t\t   "
    NAME_REF
      IDENT "cid"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PAREN_EXPR
      L_PAREN "("
      SELECT
        SELECT_CLAUSE
          SELECT_KW "SELECT"
          WHITESPACE " "
          TARGET_LIST
            TARGET
              NAME_REF
                IDENT "cid"
        WHITESPACE " "
        FROM_CLAUSE
          FROM_KW "from"
          WHITESPACE " "
          NAME_REF
            IDENT "category"
        WHITESPACE " "
        WHERE_CLAUSE
          WHERE_KW "WHERE"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "cname"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'novel'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- OK to insert a new row that is not visible"
  WHITESPACE "\n"
  MERGE_STMT
    MERGE_KW "MERGE"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "d"
    WHITESPACE "\n"
    USING_CLAUSE
      USING_KW "USING"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  INT_NUMBER "13"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "sdid"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
      WHITESPACE "\n"
      ON_KW "ON"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "did"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "s"
          DOT "."
          NAME_REF
            IDENT "sdid"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dnotes"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "dnotes"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      LITERAL
        STRING "' notes added by merge8 '"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    NOT_KW "NOT"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    INSERT_KW "INSERT"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "13"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "44"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'new manga'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "did"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "13"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- but not OK if RETURNING is used"
  WHITESPACE "\n"
  MERGE_STMT
    MERGE_KW "MERGE"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "d"
    WHITESPACE "\n"
    USING_CLAUSE
      USING_KW "USING"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  INT_NUMBER "14"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "sdid"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
      WHITESPACE "\n"
      ON_KW "ON"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "did"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "s"
          DOT "."
          NAME_REF
            IDENT "sdid"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dnotes"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "dnotes"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      LITERAL
        STRING "' notes added by merge9 '"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    NOT_KW "NOT"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    INSERT_KW "INSERT"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "14"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "44"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'new manga'"
      R_PAREN ")"
    WHITESPACE "\n"
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- but OK if new row is visible"
  WHITESPACE "\n"
  MERGE_STMT
    MERGE_KW "MERGE"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "d"
    WHITESPACE "\n"
    USING_CLAUSE
      USING_KW "USING"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  INT_NUMBER "14"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "sdid"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
      WHITESPACE "\n"
      ON_KW "ON"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "did"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "s"
          DOT "."
          NAME_REF
            IDENT "sdid"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "dnotes"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "dnotes"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      LITERAL
        STRING "' notes added by merge10 '"
    WHITESPACE "\n"
    WHEN_KW "WHEN"
    WHITESPACE " "
    NOT_KW "NOT"
    WHITESPACE " "
    MATCHED_KW "MATCHED"
    WHITESPACE " "
    THEN_KW "THEN"
    WHITESPACE "\n\t"
    INSERT_KW "INSERT"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "14"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'new novel'"
      R_PAREN ")"
    WHITESPACE "\n"
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- drop the restrictive SELECT policy so that we can look at the"
  WHITESPACE "\n"
  COMMENT "-- final state of the table"
  WHITESPACE "\n"
  DROP_POLICY_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          DOCUMENT_KW "document"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Just check everything went per plan"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        DOCUMENT_KW "document"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- ROLE/GROUP"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "z1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "z2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "z1"
    COMMA ","
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "z2"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_group1"
    COMMA ","
    WHITESPACE " "
    IDENT "regress_rls_group2"
    COMMA ","
    WHITESPACE "\n    "
    IDENT "regress_rls_bob"
    COMMA ","
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "z1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'aba'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'bbb'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'ccc'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'dad'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "z1"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_group1"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PERCENT "%"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p2"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "z1"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_group2"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PERCENT "%"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "z1"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "z1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "z1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  PREPARE_STMT
    PREPARE_KW "PREPARE"
    WHITESPACE " "
    NAME
      IDENT "plancache_test"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "z1"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "f_leak"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "b"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "plancache_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  PREPARE_STMT
    PREPARE_KW "PREPARE"
    WHITESPACE " "
    NAME
      IDENT "plancache_test2"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      WITH_CLAUSE
        WITH_KW "WITH"
        WHITESPACE " "
        WITH_TABLE
          NAME
            IDENT "q"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          MATERIALIZED_KW "MATERIALIZED"
          WHITESPACE " "
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  STAR "*"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "z1"
            WHITESPACE " "
            WHERE_CLAUSE
              WHERE_KW "WHERE"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "f_leak"
                ARG_LIST
                  L_PAREN "("
                  NAME_REF
                    IDENT "b"
                  R_PAREN ")"
          R_PAREN ")"
      WHITESPACE " "
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "q"
        COMMA ","
        NAME_REF
          IDENT "z2"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "plancache_test2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  PREPARE_STMT
    PREPARE_KW "PREPARE"
    WHITESPACE " "
    NAME
      IDENT "plancache_test3"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      WITH_CLAUSE
        WITH_KW "WITH"
        WHITESPACE " "
        WITH_TABLE
          NAME
            IDENT "q"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          MATERIALIZED_KW "MATERIALIZED"
          WHITESPACE " "
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  STAR "*"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "z2"
          R_PAREN ")"
      WHITESPACE " "
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "q"
        COMMA ","
        NAME_REF
          IDENT "z1"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "f_leak"
          ARG_LIST
            L_PAREN "("
            FIELD_EXPR
              NAME_REF
                IDENT "z1"
              DOT "."
              NAME_REF
                IDENT "b"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "plancache_test3"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_ROLE_STMT
    SET_KW "SET"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    IDENT "regress_rls_group1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "z1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "z1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "plancache_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "plancache_test2"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "plancache_test3"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "z1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "z1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "plancache_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "plancache_test2"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "plancache_test3"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_ROLE_STMT
    SET_KW "SET"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    IDENT "regress_rls_group2"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "z1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "z1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "plancache_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "plancache_test2"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "plancache_test3"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Views should follow policy for view owner."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- View and Table owner are the same."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rls_view"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "z1"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "f_leak"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "b"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_view"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Query as role that is not owner of view or table.  Should return all records."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Query as view/table owner.  Should return all records."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- View and Table owners are different."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rls_view"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "z1"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "f_leak"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "b"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_view"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Query as role that is not owner of view but is owner of table."
  WHITESPACE "\n"
  COMMENT "-- Should return records based on view owner policies."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Query as role that is not owner of table but is owner of view."
  WHITESPACE "\n"
  COMMENT "-- Should return records based on view owner policies."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Query as role that is not the owner of the table or view without permissions."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail - permission denied."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail - permission denied."
  WHITESPACE "\n\n"
  COMMENT "-- Query as role that is not the owner of the table or view with permissions."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_view"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Policy requiring access to another table."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "z1_blacklist"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "z1_blacklist"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p3"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "z1"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    IDENT "RESTRICTIVE"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      NOT_IN
        NOT_KW "NOT"
        WHITESPACE " "
        IN_KW "IN"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "a"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "z1_blacklist"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Query as role that is not owner of table but is owner of view without permissions."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail - permission denied."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail - permission denied."
  WHITESPACE "\n\n"
  COMMENT "-- Query as role that is not the owner of the table or view without permissions."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail - permission denied."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail - permission denied."
  WHITESPACE "\n\n"
  COMMENT "-- Query as role that is not owner of table but is owner of view with permissions."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "z1_blacklist"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Query as role that is not the owner of the table or view with permissions."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  REVOKE_STMT
    REVOKE_KW "REVOKE"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "z1_blacklist"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_POLICY_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p3"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "z1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Security invoker views should follow policy for current user."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- View and table owner are the same."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rls_view"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "security_invoker"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n    "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "z1"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "f_leak"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "b"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_view"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_view"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Query as table owner.  Should return all records."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Queries as other users."
  WHITESPACE "\n"
  COMMENT "-- Should return records based on current user's policies."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- View and table owners are different."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rls_view"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "security_invoker"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n    "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "z1"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "f_leak"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "b"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_view"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_view"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Query as table owner.  Should return all records."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Queries as other users."
  WHITESPACE "\n"
  COMMENT "-- Should return records based on current user's policies."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Policy requiring access to another table."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p3"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "z1"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    IDENT "RESTRICTIVE"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      NOT_IN
        NOT_KW "NOT"
        WHITESPACE " "
        IN_KW "IN"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "a"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "z1_blacklist"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Query as role that is not owner of table but is owner of view without permissions."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail - permission denied."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail - permission denied."
  WHITESPACE "\n\n"
  COMMENT "-- Query as role that is not the owner of the table or view without permissions."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail - permission denied."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail - permission denied."
  WHITESPACE "\n\n"
  COMMENT "-- Query as role that is not owner of table but is owner of view with permissions."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "z1_blacklist"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Query as role that is not the owner of the table or view without permissions."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail - permission denied."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail - permission denied."
  WHITESPACE "\n\n"
  COMMENT "-- Query as role that is not the owner of the table or view with permissions."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "z1_blacklist"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Command specific"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "x1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "x1"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "PUBLIC"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "x1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'abc'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'bcd'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'cde'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_carol'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'def'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_carol'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'efg'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "6"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'fgh'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "7"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'fgh'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_carol'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "8"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'fgh'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_carol'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p0"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "x1"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      NAME_REF
        CURRENT_USER_KW "current_user"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "x1"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PERCENT "%"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p2"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "x1"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    INSERT_KW "INSERT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    CHECK_KW "CHECK"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PERCENT "%"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p3"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "x1"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PERCENT "%"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p4"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "x1"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    DELETE_KW "DELETE"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      L_ANGLE "<"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "8"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "x1"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "x1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      ASC_KW "ASC"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "x1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      LITERAL
        STRING "'_updt'"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "x1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      ASC_KW "ASC"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "x1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      LITERAL
        STRING "'_updt'"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "x1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Duplicate Policy Names"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "y1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "y2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "y1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "y2"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "y1"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PERCENT "%"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p2"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "y1"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      R_ANGLE ">"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "y1"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PERCENT "%"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "--fail"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "y2"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PERCENT "%"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "--OK"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "y1"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "y2"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Expression structure with SBV"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Create view as table owner.  RLS should NOT be applied."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rls_sbv"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "security_barrier"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n    "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "y1"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "f_leak"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "b"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_sbv"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_sbv"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Create view as role that does not own table.  RLS should be applied."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rls_sbv"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "security_barrier"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n    "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "y1"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "f_leak"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "b"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_sbv"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_sbv"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Expression structure"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "y2"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "x"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "public"
                DOT "."
                NAME_REF
                  IDENT "fipshash"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  NAME_REF
                    IDENT "x"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          TEXT_KW "text"
                R_PAREN ")"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "0"
            COMMA ","
            LITERAL
              INT_NUMBER "20"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "x"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p2"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "y2"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PERCENT "%"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "3"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p3"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "y2"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PERCENT "%"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "4"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "y2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "y2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Qual push-down of leaky functions, when not referring to table"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "y2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'abc'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "y2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'abc'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_qual_pushdown"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "abc"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_qual_pushdown"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'abc'"
      R_PAREN ")"
      COMMA ","
      L_PAREN "("
      LITERAL
        STRING "'def'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "y2"
      WHITESPACE " "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "test_qual_pushdown"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "b"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            NAME_REF
              IDENT "abc"
          R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "abc"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "y2"
      WHITESPACE " "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "test_qual_pushdown"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "b"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            NAME_REF
              IDENT "abc"
          R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "abc"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "y2"
      WHITESPACE " "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "test_qual_pushdown"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "b"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            NAME_REF
              IDENT "abc"
          R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "y2"
      WHITESPACE " "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "test_qual_pushdown"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "b"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            NAME_REF
              IDENT "abc"
          R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "f_leak"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_qual_pushdown"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Plancache invalidate on user change."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "t1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_bob"
    COMMA ","
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_bob"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      PAREN_EXPR
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          PERCENT "%"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "2"
        R_PAREN ")"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p2"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_carol"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      PAREN_EXPR
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          PERCENT "%"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "4"
        R_PAREN ")"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Prepare as regress_rls_bob"
  WHITESPACE "\n"
  SET_ROLE_STMT
    SET_KW "SET"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  PREPARE_STMT
    PREPARE_KW "PREPARE"
    WHITESPACE " "
    NAME
      IDENT "role_inval"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Check plan"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "role_inval"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Change to regress_rls_carol"
  WHITESPACE "\n"
  SET_ROLE_STMT
    SET_KW "SET"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Check plan- should be different"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "role_inval"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Change back to regress_rls_bob"
  WHITESPACE "\n"
  SET_ROLE_STMT
    SET_KW "SET"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Check plan- should be back to original"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  EXECUTE_STMT
    EXECUTE_KW "EXECUTE"
    WHITESPACE " "
    NAME_REF
      IDENT "role_inval"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- CTE and RLS"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "t1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PERCENT "%"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "x"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "public"
                DOT "."
                NAME_REF
                  IDENT "fipshash"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  NAME_REF
                    IDENT "x"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          TEXT_KW "text"
                R_PAREN ")"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "0"
            COMMA ","
            LITERAL
              INT_NUMBER "20"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "x"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    WITH_CLAUSE
      WITH_KW "WITH"
      WHITESPACE " "
      WITH_TABLE
        NAME
          IDENT "cte1"
        WHITESPACE " "
        AS_KW "AS"
        WHITESPACE " "
        MATERIALIZED_KW "MATERIALIZED"
        WHITESPACE " "
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "t1"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "f_leak"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "b"
                R_PAREN ")"
        R_PAREN ")"
    WHITESPACE " "
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "cte1"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    WITH_CLAUSE
      WITH_KW "WITH"
      WHITESPACE " "
      WITH_TABLE
        NAME
          IDENT "cte1"
        WHITESPACE " "
        AS_KW "AS"
        WHITESPACE " "
        MATERIALIZED_KW "MATERIALIZED"
        WHITESPACE " "
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "t1"
          WHITESPACE " "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "f_leak"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "b"
                R_PAREN ")"
        R_PAREN ")"
    WHITESPACE " "
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "cte1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    WITH_CLAUSE
      WITH_KW "WITH"
      WHITESPACE " "
      WITH_TABLE
        NAME
          IDENT "cte1"
        WHITESPACE " "
        AS_KW "AS"
        WHITESPACE " "
        L_PAREN "("
        UPDATE_STMT
          UPDATE_KW "UPDATE"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "t1"
          WHITESPACE " "
          SET_KW "SET"
          WHITESPACE " "
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            PLUS "+"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1"
          WHITESPACE " "
          RETURNING_KW "RETURNING"
          WHITESPACE " "
          STAR "*"
        R_PAREN ")"
    WHITESPACE " "
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "cte1"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail"
  WHITESPACE "\n"
  SELECT
    WITH_CLAUSE
      WITH_KW "WITH"
      WHITESPACE " "
      WITH_TABLE
        NAME
          IDENT "cte1"
        WHITESPACE " "
        AS_KW "AS"
        WHITESPACE " "
        L_PAREN "("
        UPDATE_STMT
          UPDATE_KW "UPDATE"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "t1"
          WHITESPACE " "
          SET_KW "SET"
          WHITESPACE " "
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          RETURNING_KW "RETURNING"
          WHITESPACE " "
          STAR "*"
        R_PAREN ")"
    WHITESPACE " "
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "cte1"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--ok"
  WHITESPACE "\n\n"
  SELECT
    WITH_CLAUSE
      WITH_KW "WITH"
      WHITESPACE " "
      WITH_TABLE
        NAME
          IDENT "cte1"
        WHITESPACE " "
        AS_KW "AS"
        WHITESPACE " "
        L_PAREN "("
        INSERT_STMT
          INSERT_KW "INSERT"
          WHITESPACE " "
          INTO_KW "INTO"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "t1"
          WHITESPACE " "
          SELECT
            VALUES_KW "VALUES"
            WHITESPACE " "
            L_PAREN "("
            LITERAL
              INT_NUMBER "21"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'Fail'"
            R_PAREN ")"
          WHITESPACE " "
          RETURNING_KW "RETURNING"
          WHITESPACE " "
          STAR "*"
        R_PAREN ")"
    WHITESPACE " "
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "cte1"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail"
  WHITESPACE "\n"
  SELECT
    WITH_CLAUSE
      WITH_KW "WITH"
      WHITESPACE " "
      WITH_TABLE
        NAME
          IDENT "cte1"
        WHITESPACE " "
        AS_KW "AS"
        WHITESPACE " "
        L_PAREN "("
        INSERT_STMT
          INSERT_KW "INSERT"
          WHITESPACE " "
          INTO_KW "INTO"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "t1"
          WHITESPACE " "
          SELECT
            VALUES_KW "VALUES"
            WHITESPACE " "
            L_PAREN "("
            LITERAL
              INT_NUMBER "20"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'Success'"
            R_PAREN ")"
          WHITESPACE " "
          RETURNING_KW "RETURNING"
          WHITESPACE " "
          STAR "*"
        R_PAREN ")"
    WHITESPACE " "
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "cte1"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--ok"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Rename Policy"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_POLICY_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    NAME_REF
      IDENT "t1"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    NAME
      IDENT "p1"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "polname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "relname"
    WHITESPACE "\n    "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_policy"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "pol"
      WHITESPACE "\n    "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_class"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "pc"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "pc"
              DOT "."
              NAME_REF
                IDENT "oid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "pol"
              DOT "."
              NAME_REF
                IDENT "polrelid"
          R_PAREN ")"
    WHITESPACE "\n    "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "relname"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'t1'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_POLICY_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    NAME_REF
      IDENT "t1"
    WHITESPACE " "
    RENAME_KW "RENAME"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    NAME
      IDENT "p2"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--ok"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "polname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "relname"
    WHITESPACE "\n    "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_policy"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "pol"
      WHITESPACE "\n    "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_class"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "pc"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "pc"
              DOT "."
              NAME_REF
                IDENT "oid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "pol"
              DOT "."
              NAME_REF
                IDENT "polrelid"
          R_PAREN ")"
    WHITESPACE "\n    "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "relname"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'t1'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Check INSERT SELECT"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "t2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t2"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "t1"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t2"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "t1"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t2"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t2"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "t3"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t3"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT_INTO_STMT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    INTO_CLAUSE
      INTO_KW "INTO"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME
            IDENT "t4"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t4"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- RLS with JOIN"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "blog"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "author"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "post"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          COMMENT_KW "comment"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "blog_id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "message"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "blog"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          COMMENT_KW "comment"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "blog_1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "blog"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      BIN_EXPR
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PERCENT "%"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "blog"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "blog"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'alice'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'blog #1'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'bob'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'blog #1'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'alice'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'blog #2'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'alice'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'blog #3'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'john'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'blog #1'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          COMMENT_KW "comment"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'cool blog'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'fun blog'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'crazy blog'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'what?'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'insane!'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'who did it?'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Check RLS JOIN with Non-RLS."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "id"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "author"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "message"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "blog"
      WHITESPACE " "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          COMMENT_KW "comment"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "id"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          NAME_REF
            IDENT "blog_id"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Check Non-RLS JOIN with RLS."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "id"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "author"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "message"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        COMMENT_KW "comment"
      WHITESPACE " "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "blog"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "id"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          NAME_REF
            IDENT "blog_id"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "comment_1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          COMMENT_KW "comment"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "blog_id"
      WHITESPACE " "
      L_ANGLE "<"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "4"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          COMMENT_KW "comment"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Check RLS JOIN RLS"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "id"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "author"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "message"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "blog"
      WHITESPACE " "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          COMMENT_KW "comment"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "id"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          NAME_REF
            IDENT "blog_id"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "id"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "author"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "message"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        COMMENT_KW "comment"
      WHITESPACE " "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "blog"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "id"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          NAME_REF
            IDENT "blog_id"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "blog"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          COMMENT_KW "comment"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Default Deny Policy"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_POLICY_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p2"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    OWNER_TO
      OWNER_KW "OWNER"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that default deny does not apply to superuser."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that default deny does not apply to table owner."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that default deny applies to non-owner/non-superuser when RLS on."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- COPY TO/FROM"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "copy_t"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copy_t"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "copy_t"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PERCENT "%"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "copy_t"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "copy_t"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_bob"
    COMMA ","
    WHITESPACE " "
    IDENT "regress_rls_exempt_user"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "copy_t"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "x"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "public"
                DOT "."
                NAME_REF
                  IDENT "fipshash"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  NAME_REF
                    IDENT "x"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          TEXT_KW "text"
                R_PAREN ")"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "0"
            COMMA ","
            LITERAL
              INT_NUMBER "10"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "x"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check COPY TO as Superuser/owner."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "copy_t"
      WHITESPACE " "
      ORDER_BY_CLAUSE
        ORDER_KW "ORDER"
        WHITESPACE " "
        BY_KW "BY"
        WHITESPACE " "
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        ASC_KW "ASC"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NAME
      DELIMITER_KW "DELIMITER"
    WHITESPACE " "
    LITERAL
      STRING "','"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "copy_t"
      WHITESPACE " "
      ORDER_BY_CLAUSE
        ORDER_KW "ORDER"
        WHITESPACE " "
        BY_KW "BY"
        WHITESPACE " "
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        ASC_KW "ASC"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NAME
      DELIMITER_KW "DELIMITER"
    WHITESPACE " "
    LITERAL
      STRING "','"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check COPY TO as user with permissions."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "copy_t"
      WHITESPACE " "
      ORDER_BY_CLAUSE
        ORDER_KW "ORDER"
        WHITESPACE " "
        BY_KW "BY"
        WHITESPACE " "
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        ASC_KW "ASC"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NAME
      DELIMITER_KW "DELIMITER"
    WHITESPACE " "
    LITERAL
      STRING "','"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail - would be affected by RLS"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "copy_t"
      WHITESPACE " "
      ORDER_BY_CLAUSE
        ORDER_KW "ORDER"
        WHITESPACE " "
        BY_KW "BY"
        WHITESPACE " "
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        ASC_KW "ASC"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NAME
      DELIMITER_KW "DELIMITER"
    WHITESPACE " "
    LITERAL
      STRING "','"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--ok"
  WHITESPACE "\n\n"
  COMMENT "-- Check COPY TO as user with permissions and BYPASSRLS"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_exempt_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "copy_t"
      WHITESPACE " "
      ORDER_BY_CLAUSE
        ORDER_KW "ORDER"
        WHITESPACE " "
        BY_KW "BY"
        WHITESPACE " "
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        ASC_KW "ASC"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NAME
      DELIMITER_KW "DELIMITER"
    WHITESPACE " "
    LITERAL
      STRING "','"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--ok"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "copy_t"
      WHITESPACE " "
      ORDER_BY_CLAUSE
        ORDER_KW "ORDER"
        WHITESPACE " "
        BY_KW "BY"
        WHITESPACE " "
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        ASC_KW "ASC"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NAME
      DELIMITER_KW "DELIMITER"
    WHITESPACE " "
    LITERAL
      STRING "','"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--ok"
  WHITESPACE "\n\n"
  COMMENT "-- Check COPY TO as user without permissions. SET row_security TO OFF;"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "copy_t"
      WHITESPACE " "
      ORDER_BY_CLAUSE
        ORDER_KW "ORDER"
        WHITESPACE " "
        BY_KW "BY"
        WHITESPACE " "
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        ASC_KW "ASC"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NAME
      DELIMITER_KW "DELIMITER"
    WHITESPACE " "
    LITERAL
      STRING "','"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail - would be affected by RLS"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "copy_t"
      WHITESPACE " "
      ORDER_BY_CLAUSE
        ORDER_KW "ORDER"
        WHITESPACE " "
        BY_KW "BY"
        WHITESPACE " "
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        ASC_KW "ASC"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NAME
      DELIMITER_KW "DELIMITER"
    WHITESPACE " "
    LITERAL
      STRING "','"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail - permission denied"
  WHITESPACE "\n\n"
  COMMENT "-- Check COPY relation TO; keep it just one row to avoid reordering issues"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copy_rel_to"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "copy_rel_to"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PERCENT "%"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "copy_rel_to"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "copy_rel_to"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_bob"
    COMMA ","
    WHITESPACE " "
    IDENT "regress_rls_exempt_user"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "copy_rel_to"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "public"
          DOT "."
          NAME_REF
            IDENT "fipshash"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'1'"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check COPY TO as Superuser/owner."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copy_rel_to"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NAME
      DELIMITER_KW "DELIMITER"
    WHITESPACE " "
    LITERAL
      STRING "','"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copy_rel_to"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NAME
      DELIMITER_KW "DELIMITER"
    WHITESPACE " "
    LITERAL
      STRING "','"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check COPY TO as user with permissions."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copy_rel_to"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NAME
      DELIMITER_KW "DELIMITER"
    WHITESPACE " "
    LITERAL
      STRING "','"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail - would be affected by RLS"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copy_rel_to"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NAME
      DELIMITER_KW "DELIMITER"
    WHITESPACE " "
    LITERAL
      STRING "','"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--ok"
  WHITESPACE "\n\n"
  COMMENT "-- Check COPY TO as user with permissions and BYPASSRLS"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_exempt_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copy_rel_to"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NAME
      DELIMITER_KW "DELIMITER"
    WHITESPACE " "
    LITERAL
      STRING "','"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--ok"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copy_rel_to"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NAME
      DELIMITER_KW "DELIMITER"
    WHITESPACE " "
    LITERAL
      STRING "','"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--ok"
  WHITESPACE "\n\n"
  COMMENT "-- Check COPY TO as user without permissions. SET row_security TO OFF;"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copy_rel_to"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NAME
      DELIMITER_KW "DELIMITER"
    WHITESPACE " "
    LITERAL
      STRING "','"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail - permission denied"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copy_rel_to"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NAME
      DELIMITER_KW "DELIMITER"
    WHITESPACE " "
    LITERAL
      STRING "','"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail - permission denied"
  WHITESPACE "\n\n"
  COMMENT "-- Check behavior with a child table."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copy_rel_to_child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "copy_rel_to"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "copy_rel_to_child"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'one'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'two'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check COPY TO as Superuser/owner."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copy_rel_to"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NAME
      DELIMITER_KW "DELIMITER"
    WHITESPACE " "
    LITERAL
      STRING "','"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copy_rel_to"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NAME
      DELIMITER_KW "DELIMITER"
    WHITESPACE " "
    LITERAL
      STRING "','"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check COPY TO as user with permissions."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copy_rel_to"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NAME
      DELIMITER_KW "DELIMITER"
    WHITESPACE " "
    LITERAL
      STRING "','"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail - would be affected by RLS"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copy_rel_to"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NAME
      DELIMITER_KW "DELIMITER"
    WHITESPACE " "
    LITERAL
      STRING "','"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--ok"
  WHITESPACE "\n\n"
  COMMENT "-- Check COPY TO as user with permissions and BYPASSRLS"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_exempt_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copy_rel_to"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NAME
      DELIMITER_KW "DELIMITER"
    WHITESPACE " "
    LITERAL
      STRING "','"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--ok"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copy_rel_to"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NAME
      DELIMITER_KW "DELIMITER"
    WHITESPACE " "
    LITERAL
      STRING "','"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--ok"
  WHITESPACE "\n\n"
  COMMENT "-- Check COPY TO as user without permissions. SET row_security TO OFF;"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copy_rel_to"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NAME
      DELIMITER_KW "DELIMITER"
    WHITESPACE " "
    LITERAL
      STRING "','"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail - permission denied"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "copy_rel_to"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    STDOUT_KW "STDOUT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    NAME
      DELIMITER_KW "DELIMITER"
    WHITESPACE " "
    LITERAL
      STRING "','"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fail - permission denied"
  WHITESPACE "\n\n"
  COMMENT "-- Check COPY FROM as Superuser/owner."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check COPY FROM as user with permissions."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Check COPY FROM as user with permissions and BYPASSRLS"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_exempt_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check COPY FROM as user without permissions."
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "OFF"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "copy_t"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "copy_rel_to"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check WHERE CURRENT OF"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "current_check"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "currentid"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "payload"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "rlsuser"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "current_check"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "PUBLIC"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "current_check"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'abc'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'bcd'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'cde'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'def'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'regress_rls_bob'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "current_check"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      BIN_EXPR
        NAME_REF
          IDENT "currentid"
        WHITESPACE " "
        PERCENT "%"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p2"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "current_check"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    DELETE_KW "DELETE"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      BIN_EXPR
        NAME_REF
          IDENT "currentid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "4"
      WHITESPACE " "
      AND_KW "AND"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "rlsuser"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        NAME_REF
          CURRENT_USER_KW "current_user"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p3"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "current_check"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "currentid"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "4"
    R_PAREN ")"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    CHECK_KW "CHECK"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "rlsuser"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      NAME_REF
        CURRENT_USER_KW "current_user"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "current_check"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Can SELECT even rows"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "current_check"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Cannot UPDATE row 2"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "current_check"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "payload"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "payload"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      LITERAL
        STRING "'_new'"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "currentid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DECLARE_STMT
    DECLARE_KW "DECLARE"
    WHITESPACE " "
    NAME
      IDENT "current_check_cursor"
    WHITESPACE " "
    SCROLL_KW "SCROLL"
    WHITESPACE " "
    CURSOR_KW "CURSOR"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "current_check"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Returns rows that can be seen according to SELECT policy, like plain SELECT"
  WHITESPACE "\n"
  COMMENT "-- above (even rows)"
  WHITESPACE "\n"
  FETCH_STMT
    FETCH_KW "FETCH"
    WHITESPACE " "
    ABSOLUTE_KW "ABSOLUTE"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    NAME
      IDENT "current_check_cursor"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Still cannot UPDATE row 2 through cursor"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "current_check"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "payload"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "payload"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      LITERAL
        STRING "'_new'"
    WHITESPACE " "
    WHERE_KW "WHERE"
    WHITESPACE " "
    CURRENT_KW "CURRENT"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    IDENT "current_check_cursor"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Can update row 4 through cursor, which is the next visible row"
  WHITESPACE "\n"
  FETCH_STMT
    FETCH_KW "FETCH"
    WHITESPACE " "
    RELATIVE_KW "RELATIVE"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    NAME
      IDENT "current_check_cursor"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "current_check"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "payload"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "payload"
      WHITESPACE " "
      CUSTOM_OP
        PIPE "|"
        PIPE "|"
      WHITESPACE " "
      LITERAL
        STRING "'_new'"
    WHITESPACE " "
    WHERE_KW "WHERE"
    WHITESPACE " "
    CURRENT_KW "CURRENT"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    IDENT "current_check_cursor"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "current_check"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Plan should be a subquery TID scan"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "current_check"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "payload"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NAME_REF
      IDENT "payload"
    WHITESPACE " "
    WHERE_KW "WHERE"
    WHITESPACE " "
    CURRENT_KW "CURRENT"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    IDENT "current_check_cursor"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Similarly can only delete row 4"
  WHITESPACE "\n"
  FETCH_STMT
    FETCH_KW "FETCH"
    WHITESPACE " "
    ABSOLUTE_KW "ABSOLUTE"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    NAME
      IDENT "current_check_cursor"
  SEMICOLON ";"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "current_check"
    WHITESPACE " "
    WHERE_KW "WHERE"
    WHITESPACE " "
    CURRENT_KW "CURRENT"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    IDENT "current_check_cursor"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  FETCH_STMT
    FETCH_KW "FETCH"
    WHITESPACE " "
    RELATIVE_KW "RELATIVE"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    NAME
      IDENT "current_check_cursor"
  SEMICOLON ";"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "current_check"
    WHITESPACE " "
    WHERE_KW "WHERE"
    WHITESPACE " "
    CURRENT_KW "CURRENT"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    IDENT "current_check_cursor"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "current_check"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that RLS filters that are tidquals don't override WHERE CURRENT OF"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "current_check_2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "current_check_2"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'Apple'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "current_check_2"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "current_check_2"
    WHITESPACE " "
    FORCE_RLS
      FORCE_KW "FORCE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- policy must accept ctid = (InvalidBlockNumber,0) since updates check it"
  WHITESPACE "\n"
  COMMENT "-- before assigning a ctid to the new row"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "current_check_2"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    IDENT "PERMISSIVE"
    WHITESPACE "\n  "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "ctid"
      WHITESPACE " "
      IN_KW "IN"
      WHITESPACE " "
      TUPLE_EXPR
        L_PAREN "("
        LITERAL
          STRING "'(0,1)'"
        COMMA ","
        WHITESPACE " "
        LITERAL
          STRING "'(0,2)'"
        COMMA ","
        WHITESPACE " "
        LITERAL
          STRING "'(4294967295,0)'"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "ctid"
        COMMA ","
        WHITESPACE " "
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "current_check_2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DECLARE_STMT
    DECLARE_KW "DECLARE"
    WHITESPACE " "
    NAME
      IDENT "current_check_cursor"
    WHITESPACE " "
    CURSOR_KW "CURSOR"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "current_check_2"
  SEMICOLON ";"
  WHITESPACE "\n"
  FETCH_STMT
    FETCH_KW "FETCH"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    NAME
      IDENT "current_check_cursor"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "current_check_2"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'Manzana'"
    WHITESPACE " "
    WHERE_KW "WHERE"
    WHITESPACE " "
    CURRENT_KW "CURRENT"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    IDENT "current_check_cursor"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "current_check_2"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'Manzana'"
    WHITESPACE " "
    WHERE_KW "WHERE"
    WHITESPACE " "
    CURRENT_KW "CURRENT"
    WHITESPACE " "
    OF_KW "OF"
    WHITESPACE " "
    IDENT "current_check_cursor"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "ctid"
        COMMA ","
        WHITESPACE " "
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "current_check_2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- check pg_stats view filtering"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "ON"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  ANALYZE_STMT
    ANALYZE_KW "ANALYZE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "current_check"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Stats visible"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "row_security_active"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'current_check'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "attname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "most_common_vals"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stats"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "tablename"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'current_check'"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Stats not visible"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "row_security_active"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'current_check'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "attname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "most_common_vals"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stats"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "tablename"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'current_check'"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Collation support"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "coll_t"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      CAST_EXPR
        LITERAL
          STRING "'bar'"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "coll_p"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "coll_t"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      L_ANGLE "<"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        BIN_EXPR
          CAST_EXPR
            LITERAL
              STRING "'foo'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          WHITESPACE " "
          COLLATE_KW "COLLATE"
          WHITESPACE " "
          NAME_REF
            IDENT "\"C\""
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "coll_t"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "coll_t"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          INDEX_EXPR
            PAREN_EXPR
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  IDENT "string_to_array"
                ARG_LIST
                  L_PAREN "("
                  NAME_REF
                    IDENT "polqual"
                  COMMA ","
                  WHITESPACE " "
                  LITERAL
                    STRING "':'"
                  R_PAREN ")"
              R_PAREN ")"
            L_BRACK "["
            LITERAL
              INT_NUMBER "7"
            R_BRACK "]"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "inputcollid"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_policy"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "polrelid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'coll_t'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "coll_t"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Shared Object Dependencies"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_ROLE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME
      IDENT "regress_rls_eve"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_ROLE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME
      IDENT "regress_rls_frank"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tbl1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      CAST_EXPR
        LITERAL
          STRING "'bar'"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tbl1"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_eve"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "P"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tbl1"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_eve"
    COMMA ","
    WHITESPACE " "
    IDENT "regress_rls_frank"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "refclassid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "deptype"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_depend"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "classid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'pg_policy'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        WHITESPACE "\n  "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "refobjid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'tbl1'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "refclassid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "deptype"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_shdepend"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "classid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'pg_policy'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        WHITESPACE "\n  "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "refobjid"
          WHITESPACE " "
          IN_KW "IN"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            CAST_EXPR
              LITERAL
                STRING "'regress_rls_eve'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regrole"
            COMMA ","
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                STRING "'regress_rls_frank'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regrole"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SAVEPOINT_STMT
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_rls_eve"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fails due to dependency on POLICY p"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_POLICY_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    NAME_REF
      IDENT "tbl1"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_frank"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SAVEPOINT_STMT
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_rls_eve"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fails due to dependency on GRANT SELECT"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  REVOKE_STMT
    REVOKE_KW "REVOKE"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tbl1"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    IDENT "regress_rls_eve"
  SEMICOLON ";"
  WHITESPACE "\n"
  SAVEPOINT_STMT
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_rls_eve"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--succeeds"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SAVEPOINT_STMT
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_rls_frank"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "--fails due to dependency on POLICY p"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_POLICY_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tbl1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SAVEPOINT_STMT
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_rls_frank"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- succeeds"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- cleanup"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Policy expression handling"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "t"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      CAST_EXPR
        LITERAL
          STRING "'bar'"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    CALL_EXPR
      NAME_REF
        IDENT "max"
      ARG_LIST
        L_PAREN "("
        NAME_REF
          IDENT "c"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fails: aggregate functions are not allowed in policy expressions"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Non-target relations are only subject to SELECT policies"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "r1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "r2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "20"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "20"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p2"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    INSERT_KW "INSERT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    CHECK_KW "CHECK"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p3"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p4"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    DELETE_KW "DELETE"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "r1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "r2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- r2 is read-only"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- Not allowed"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "2"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- Updates nothing"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- Deletes nothing"
  WHITESPACE "\n\n"
  COMMENT "-- r2 can be used as a non-target relation in DML"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "a"
              WHITESPACE " "
              PLUS "+"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- OK"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      FIELD_EXPR
        NAME_REF
          IDENT "r2"
        DOT "."
        NAME_REF
          IDENT "a"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "r2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "r1"
          DOT "."
          NAME_REF
            IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "r2"
          DOT "."
          NAME_REF
            IDENT "a"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- OK"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    USING_CLAUSE
      USING_KW "USING"
      WHITESPACE " "
      NAME_REF
        IDENT "r2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "r1"
          DOT "."
          NAME_REF
            IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "r2"
            DOT "."
            NAME_REF
              IDENT "a"
          WHITESPACE " "
          PLUS "+"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "2"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- OK"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "r1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "r2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- FORCE ROW LEVEL SECURITY applies RLS to owners too"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    EQ "="
  WHITESPACE " "
  ERROR
    ON_KW "on"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "r1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "20"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    FORCE_RLS
      FORCE_KW "FORCE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- No error, but no rows"
  WHITESPACE "\n"
  SELECT
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- RLS error"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- No error (unable to see any rows to update)"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- No error (unable to see any rows to delete)"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- these all fail, would be affected by RLS"
  WHITESPACE "\n"
  SELECT
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- FORCE ROW LEVEL SECURITY does not break RI"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    EQ "="
  WHITESPACE " "
  ERROR
    ON_KW "on"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "r1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "r2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        REFERENCES_CONSTRAINT
          REFERENCES_KW "REFERENCES"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "r1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "20"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "20"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Create policies on r2 which prevent the"
  WHITESPACE "\n"
  COMMENT "-- owner from seeing any rows, but RI should"
  WHITESPACE "\n"
  COMMENT "-- still see them."
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    FORCE_RLS
      FORCE_KW "FORCE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Errors due to rows in r2"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Reset r2 to no-RLS"
  WHITESPACE "\n"
  DROP_POLICY_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    NO_FORCE_RLS
      NO_KW "NO"
      WHITESPACE " "
      FORCE_KW "FORCE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    DISABLE_RLS
      DISABLE_KW "DISABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- clean out r2 for INSERT test below"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Change r1 to not allow rows to be seen"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    FORCE_RLS
      FORCE_KW "FORCE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- No rows seen"
  WHITESPACE "\n"
  SELECT
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- No error, RI still sees that row exists in r1"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Ensure cascaded DELETE works"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "r1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "r2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        REFERENCES_CONSTRAINT
          REFERENCES_KW "REFERENCES"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "r1"
          WHITESPACE " "
          ON_KW "ON"
          WHITESPACE " "
          DELETE_KW "DELETE"
          WHITESPACE " "
          CASCADE_KW "CASCADE"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "20"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "20"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Create policies on r2 which prevent the"
  WHITESPACE "\n"
  COMMENT "-- owner from seeing any rows, but RI should"
  WHITESPACE "\n"
  COMMENT "-- still see them."
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    FORCE_RLS
      FORCE_KW "FORCE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Deletes all records from both"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Remove FORCE from r2"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    NO_FORCE_RLS
      NO_KW "NO"
      WHITESPACE " "
      FORCE_KW "FORCE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- As owner, we now bypass RLS"
  WHITESPACE "\n"
  COMMENT "-- verify no rows in r2 now"
  WHITESPACE "\n"
  SELECT
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Ensure cascaded UPDATE works"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "r1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "r2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        REFERENCES_CONSTRAINT
          REFERENCES_KW "REFERENCES"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "r1"
          WHITESPACE " "
          ON_KW "ON"
          WHITESPACE " "
          UPDATE_KW "UPDATE"
          WHITESPACE " "
          CASCADE_KW "CASCADE"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "20"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "20"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Create policies on r2 which prevent the"
  WHITESPACE "\n"
  COMMENT "-- owner from seeing any rows, but RI should"
  WHITESPACE "\n"
  COMMENT "-- still see them."
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    FORCE_RLS
      FORCE_KW "FORCE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Updates records in both"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "a"
      PLUS "+"
      LITERAL
        INT_NUMBER "5"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Remove FORCE from r2"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
    WHITESPACE " "
    NO_FORCE_RLS
      NO_KW "NO"
      WHITESPACE " "
      FORCE_KW "FORCE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- As owner, we now bypass RLS"
  WHITESPACE "\n"
  COMMENT "-- verify records in r2 updated"
  WHITESPACE "\n"
  SELECT
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test INSERT+RETURNING applies SELECT policies as"
  WHITESPACE "\n"
  COMMENT "-- WithCheckOptions (meaning an error is thrown)"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    EQ "="
  WHITESPACE " "
  ERROR
    ON_KW "on"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "r1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p2"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    INSERT_KW "INSERT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    CHECK_KW "CHECK"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    FORCE_RLS
      FORCE_KW "FORCE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Works fine"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "20"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- No error, but no rows"
  WHITESPACE "\n"
  SELECT
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- fail, would be affected by RLS"
  WHITESPACE "\n"
  SELECT
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    EQ "="
  WHITESPACE " "
  ERROR
    ON_KW "on"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Error"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "20"
      R_PAREN ")"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test UPDATE+RETURNING applies SELECT policies as"
  WHITESPACE "\n"
  COMMENT "-- WithCheckOptions (meaning an error is thrown)"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    EQ "="
  WHITESPACE " "
  ERROR
    ON_KW "on"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "r1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      L_ANGLE "<"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "20"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p2"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      L_ANGLE "<"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "20"
    R_PAREN ")"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    CHECK_KW "CHECK"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p3"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    INSERT_KW "INSERT"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    CHECK_KW "CHECK"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    FORCE_RLS
      FORCE_KW "FORCE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Works fine"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "30"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Show updated rows"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    NO_FORCE_RLS
      NO_KW "NO"
      WHITESPACE " "
      FORCE_KW "FORCE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- reset value in r1 for test with RETURNING"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Verify row reset"
  WHITESPACE "\n"
  SELECT
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    FORCE_RLS
      FORCE_KW "FORCE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Error"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "30"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- UPDATE path of INSERT ... ON CONFLICT DO UPDATE should also error out"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
    WHITESPACE "\n    "
    ON_KW "ON"
    WHITESPACE " "
    CONFLICT_KW "CONFLICT"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "DO"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "30"
    WHITESPACE " "
    RETURNING_KW "RETURNING"
    WHITESPACE " "
    STAR "*"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Should still error out without RETURNING (use of arbiter always requires"
  WHITESPACE "\n"
  COMMENT "-- SELECT permissions)"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
    WHITESPACE "\n    "
    ON_KW "ON"
    WHITESPACE " "
    CONFLICT_KW "CONFLICT"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    DO_KW "DO"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "30"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
    WHITESPACE "\n    "
    ON_KW "ON"
    WHITESPACE " "
    CONFLICT_KW "CONFLICT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    CONSTRAINT_KW "CONSTRAINT"
    WHITESPACE " "
    NAME_REF
      IDENT "r1_pkey"
    WHITESPACE " "
    DO_KW "DO"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "30"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test policies using virtual generated columns"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "row_security"
    WHITESPACE " "
    EQ "="
  WHITESPACE " "
  ERROR
    ON_KW "on"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "r1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        GENERATED_CONSTRAINT
          GENERATED_KW "GENERATED"
          WHITESPACE " "
          ALWAYS_KW "ALWAYS"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            STAR "*"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "10"
          R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "VIRTUAL"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
      WHITESPACE " "
      GENERATED_CONSTRAINT
        GENERATED_KW "GENERATED"
        WHITESPACE " "
        ALWAYS_KW "ALWAYS"
        WHITESPACE " "
        AS_KW "AS"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          STAR "*"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "100"
        R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "VIRTUAL"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p0"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      BIN_EXPR
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        STAR "*"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      NAME_REF
        IDENT "c"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    IDENT "RESTRICTIVE"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      R_ANGLE ">"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p2"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    IDENT "RESTRICTIVE"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "c"
        R_PAREN ")"
      WHITESPACE " "
      L_ANGLE "<"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "400"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    FORCE_RLS
      FORCE_KW "FORCE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Should fail p1"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Should fail p2"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- OK"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "r1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "r1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check dependency handling"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dep1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dep2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "dep_p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dep1"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_bob"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "c1"
      WHITESPACE " "
      R_ANGLE ">"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                CALL_EXPR
                  NAME_REF
                    IDENT "max"
                  ARG_LIST
                    L_PAREN "("
                    FIELD_EXPR
                      NAME_REF
                        IDENT "dep2"
                      DOT "."
                      NAME_REF
                        IDENT "c1"
                    R_PAREN ")"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "dep2"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_POLICY_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "dep_p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    NAME_REF
      IDENT "dep1"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_bob"
    COMMA ","
    IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Should return one"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "count"
              ARG_LIST
                L_PAREN "("
                STAR "*"
                R_PAREN ")"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_depend"
    WHITESPACE "\n\t\t\t\t   "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "objid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    NAME_REF
                      IDENT "oid"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                NAME_REF
                  IDENT "pg_policy"
              WHITESPACE " "
              WHERE_CLAUSE
                WHERE_KW "WHERE"
                WHITESPACE " "
                BIN_EXPR
                  NAME_REF
                    IDENT "polname"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    STRING "'dep_p1'"
            R_PAREN ")"
        WHITESPACE "\n\t\t\t\t\t "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "refobjid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    NAME_REF
                      IDENT "oid"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                NAME_REF
                  IDENT "pg_class"
              WHITESPACE " "
              WHERE_CLAUSE
                WHERE_KW "WHERE"
                WHITESPACE " "
                BIN_EXPR
                  NAME_REF
                    IDENT "relname"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    STRING "'dep2'"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_POLICY_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "dep_p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    NAME_REF
      IDENT "dep1"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Should return one"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "count"
              ARG_LIST
                L_PAREN "("
                STAR "*"
                R_PAREN ")"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_shdepend"
    WHITESPACE "\n\t\t\t\t   "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "objid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    NAME_REF
                      IDENT "oid"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                NAME_REF
                  IDENT "pg_policy"
              WHITESPACE " "
              WHERE_CLAUSE
                WHERE_KW "WHERE"
                WHITESPACE " "
                BIN_EXPR
                  NAME_REF
                    IDENT "polname"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    STRING "'dep_p1'"
            R_PAREN ")"
        WHITESPACE "\n\t\t\t\t\t "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "refobjid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    NAME_REF
                      IDENT "oid"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                NAME_REF
                  IDENT "pg_authid"
              WHITESPACE " "
              WHERE_CLAUSE
                WHERE_KW "WHERE"
                WHITESPACE " "
                BIN_EXPR
                  NAME_REF
                    IDENT "rolname"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    STRING "'regress_rls_bob'"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Should return one"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "count"
              ARG_LIST
                L_PAREN "("
                STAR "*"
                R_PAREN ")"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_shdepend"
    WHITESPACE "\n\t\t\t\t   "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "objid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    NAME_REF
                      IDENT "oid"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                NAME_REF
                  IDENT "pg_policy"
              WHITESPACE " "
              WHERE_CLAUSE
                WHERE_KW "WHERE"
                WHITESPACE " "
                BIN_EXPR
                  NAME_REF
                    IDENT "polname"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    STRING "'dep_p1'"
            R_PAREN ")"
        WHITESPACE "\n\t\t\t\t\t "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "refobjid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    NAME_REF
                      IDENT "oid"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                NAME_REF
                  IDENT "pg_authid"
              WHITESPACE " "
              WHERE_CLAUSE
                WHERE_KW "WHERE"
                WHITESPACE " "
                BIN_EXPR
                  NAME_REF
                    IDENT "rolname"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    STRING "'regress_rls_carol'"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Should return zero"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "count"
              ARG_LIST
                L_PAREN "("
                STAR "*"
                R_PAREN ")"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_depend"
    WHITESPACE "\n\t\t\t\t   "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "objid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    NAME_REF
                      IDENT "oid"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                NAME_REF
                  IDENT "pg_policy"
              WHITESPACE " "
              WHERE_CLAUSE
                WHERE_KW "WHERE"
                WHITESPACE " "
                BIN_EXPR
                  NAME_REF
                    IDENT "polname"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    STRING "'dep_p1'"
            R_PAREN ")"
        WHITESPACE "\n\t\t\t\t\t "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "refobjid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    NAME_REF
                      IDENT "oid"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                NAME_REF
                  IDENT "pg_class"
              WHITESPACE " "
              WHERE_CLAUSE
                WHERE_KW "WHERE"
                WHITESPACE " "
                BIN_EXPR
                  NAME_REF
                    IDENT "relname"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    STRING "'dep2'"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- DROP OWNED BY testing"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_ROLE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME
      IDENT "regress_rls_dob_role1"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_ROLE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME
      IDENT "regress_rls_dob_role2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dob_t1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "dob_t2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    RANGE_KW "RANGE"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "c1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dob_t1"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_dob_role1"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_OWNED_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    OWNED_KW "OWNED"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "regress_rls_dob_role1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_POLICY_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dob_t1"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- should fail, already gone"
  WHITESPACE "\n\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dob_t1"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_dob_role1"
    COMMA ","
    IDENT "regress_rls_dob_role2"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_OWNED_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    OWNED_KW "OWNED"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "regress_rls_dob_role1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_POLICY_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dob_t1"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- should succeed"
  WHITESPACE "\n\n"
  COMMENT "-- same cases with duplicate polroles entries"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dob_t1"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_dob_role1"
    COMMA ","
    IDENT "regress_rls_dob_role1"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_OWNED_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    OWNED_KW "OWNED"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "regress_rls_dob_role1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_POLICY_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dob_t1"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- should fail, already gone"
  WHITESPACE "\n\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dob_t1"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_dob_role1"
    COMMA ","
    IDENT "regress_rls_dob_role1"
    COMMA ","
    IDENT "regress_rls_dob_role2"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_OWNED_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    OWNED_KW "OWNED"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "regress_rls_dob_role1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_POLICY_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dob_t1"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- should succeed"
  WHITESPACE "\n\n"
  COMMENT "-- partitioned target"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dob_t2"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_dob_role1"
    COMMA ","
    IDENT "regress_rls_dob_role2"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_OWNED_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    OWNED_KW "OWNED"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    IDENT "regress_rls_dob_role1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_POLICY_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME_REF
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "dob_t2"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- should succeed"
  WHITESPACE "\n\n"
  DROP_USER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_rls_dob_role1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_USER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_rls_dob_role2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Bug #15708: view + table with RLS should check policies as view owner"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "ref_tbl"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ref_tbl"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rls_tbl"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    CALL_EXPR
      NAME_REF
        EXISTS_KW "EXISTS"
      WHITESPACE " "
      ARG_LIST
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  INT_NUMBER "1"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "ref_tbl"
        R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ref_tbl"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rls_view"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "rls_tbl"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_VIEW_STMT
    ALTER_KW "ALTER"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_view"
    WHITESPACE " "
    OWNER_KW "OWNER"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_view"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "ref_tbl"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- Permission denied"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_tbl"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- Permission denied"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- OK"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_view"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ref_tbl"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Leaky operator test"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rls_tbl"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "x"
              SLASH "/"
              LITERAL
                INT_NUMBER "10"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "100"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n"
  ANALYZE_STMT
    ANALYZE_KW "ANALYZE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "GRANT"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "op_leak"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "bool"
    WHITESPACE "\n    "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          STRING "'BEGIN RAISE NOTICE ''op_leak => %, %'', $1, $2; RETURN $1 < $2; END'"
      WHITESPACE "\n    "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_OPERATOR_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      L_ANGLE "<"
      L_ANGLE "<"
      L_ANGLE "<"
    WHITESPACE " "
    L_PAREN "("
    NAME
      PROCEDURE_KW "procedure"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "op_leak"
    COMMA ","
    WHITESPACE " "
    NAME
      IDENT "leftarg"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    COMMA ","
    WHITESPACE " "
    NAME
      IDENT "rightarg"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    COMMA ","
    WHITESPACE "\n                     "
    NAME
      RESTRICT_KW "restrict"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "scalarltsel"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_tbl"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        CUSTOM_OP
          L_ANGLE "<"
          L_ANGLE "<"
          L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1000"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_tbl"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          CUSTOM_OP
            L_ANGLE "<"
            L_ANGLE "<"
            L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1000"
        WHITESPACE " "
        OR_KW "or"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          CUSTOM_OP
            L_ANGLE "<"
            L_ANGLE "<"
            L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "900"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_OPERATOR_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    OPERATOR_KW "OPERATOR"
    WHITESPACE " "
    CUSTOM_OP
      L_ANGLE "<"
      L_ANGLE "<"
      L_ANGLE "<"
    WHITESPACE " "
    L_PAREN "("
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    COMMA ","
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "op_leak"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Bug #16006: whole-row Vars in a policy don't play nice with sub-selects"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "SET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rls_tbl"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "rls_tbl"
      WHITESPACE " "
      GTEQ ">="
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          ROW_KW "ROW"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl"
    WHITESPACE " "
    FORCE_RLS
      FORCE_KW "FORCE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              INT_NUMBER "10"
          COMMA ","
          WHITESPACE " "
          TARGET
            LITERAL
              INT_NUMBER "20"
          COMMA ","
          WHITESPACE " "
          TARGET
            LITERAL
              INT_NUMBER "30"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "VERBOSE"
    COMMA ","
    WHITESPACE " "
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "b"
                COMMA ","
                WHITESPACE " "
                TARGET
                  NAME_REF
                    IDENT "c"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "rls_tbl"
            WHITESPACE " "
            ORDER_BY_CLAUSE
              ORDER_KW "ORDER"
              WHITESPACE " "
              BY_KW "BY"
              WHITESPACE " "
              NAME_REF
                IDENT "a"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "ss"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "b"
                COMMA ","
                WHITESPACE " "
                TARGET
                  NAME_REF
                    IDENT "c"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "rls_tbl"
            WHITESPACE " "
            ORDER_BY_CLAUSE
              ORDER_KW "ORDER"
              WHITESPACE " "
              BY_KW "BY"
              WHITESPACE " "
              NAME_REF
                IDENT "a"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "ss"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_tbl"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- CVE-2023-2455: inlining an SRF may introduce an RLS dependency"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rls_t"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_t"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'invisible to bob'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_t"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "enable"
      WHITESPACE " "
      ROW_KW "row"
      WHITESPACE " "
      LEVEL_KW "level"
      WHITESPACE " "
      SECURITY_KW "security"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "grant"
    WHITESPACE " "
    SELECT_KW "select"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_t"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    IDENT "regress_rls_alice"
    COMMA ","
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "create"
    WHITESPACE " "
    POLICY_KW "policy"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_t"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    SELECT_KW "select"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    IDENT "regress_rls_alice"
    WHITESPACE " "
    USING_KW "using"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "create"
    WHITESPACE " "
    POLICY_KW "policy"
    WHITESPACE " "
    NAME
      IDENT "p2"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_t"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    SELECT_KW "select"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    IDENT "regress_rls_bob"
    WHITESPACE " "
    USING_KW "using"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rls_f"
    WHITESPACE " "
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "rls_t"
    WHITESPACE "\n  "
    FUNC_OPTION_LIST
      VOLATILITY_FUNC_OPTION
        STABLE_KW "stable"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE "\n  "
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$ select * from rls_t $$"
  SEMICOLON ";"
  WHITESPACE "\n"
  PREPARE_STMT
    PREPARE_KW "prepare"
    WHITESPACE " "
    NAME
      IDENT "q"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              CURRENT_USER_KW "current_user"
          COMMA ","
          WHITESPACE " "
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "rls_f"
          ARG_LIST
            L_PAREN "("
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_ROLE_STMT
    SET_KW "set"
    WHITESPACE " "
    ROLE_KW "role"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_ROLE_STMT
    SET_KW "set"
    WHITESPACE " "
    ROLE_KW "role"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "q"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- make sure RLS dependencies in CTEs are handled"
  WHITESPACE "\n"
  SET_ROLE_STMT
    RESET_KW "reset"
    WHITESPACE " "
    ROLE_KW "role"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rls_f"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "rls_t"
    WHITESPACE "\n  "
    FUNC_OPTION_LIST
      VOLATILITY_FUNC_OPTION
        STABLE_KW "stable"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE "\n  "
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$ with cte as (select * from rls_t) select * from cte $$"
  SEMICOLON ";"
  WHITESPACE "\n"
  PREPARE_STMT
    PREPARE_KW "prepare"
    WHITESPACE " "
    NAME
      IDENT "r"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              CURRENT_USER_KW "current_user"
          COMMA ","
          WHITESPACE " "
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "rls_f"
          ARG_LIST
            L_PAREN "("
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_ROLE_STMT
    SET_KW "set"
    WHITESPACE " "
    ROLE_KW "role"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "r"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_ROLE_STMT
    SET_KW "set"
    WHITESPACE " "
    ROLE_KW "role"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "r"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- make sure RLS dependencies in subqueries are handled"
  WHITESPACE "\n"
  SET_ROLE_STMT
    RESET_KW "reset"
    WHITESPACE " "
    ROLE_KW "role"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rls_f"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "rls_t"
    WHITESPACE "\n  "
    FUNC_OPTION_LIST
      VOLATILITY_FUNC_OPTION
        STABLE_KW "stable"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE "\n  "
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$ select * from (select * from rls_t) _ $$"
  SEMICOLON ";"
  WHITESPACE "\n"
  PREPARE_STMT
    PREPARE_KW "prepare"
    WHITESPACE " "
    NAME
      IDENT "s"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              CURRENT_USER_KW "current_user"
          COMMA ","
          WHITESPACE " "
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "rls_f"
          ARG_LIST
            L_PAREN "("
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_ROLE_STMT
    SET_KW "set"
    WHITESPACE " "
    ROLE_KW "role"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "s"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_ROLE_STMT
    SET_KW "set"
    WHITESPACE " "
    ROLE_KW "role"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "s"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- make sure RLS dependencies in sublinks are handled"
  WHITESPACE "\n"
  SET_ROLE_STMT
    RESET_KW "reset"
    WHITESPACE " "
    ROLE_KW "role"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rls_f"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "rls_t"
    WHITESPACE "\n  "
    FUNC_OPTION_LIST
      VOLATILITY_FUNC_OPTION
        STABLE_KW "stable"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE "\n  "
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$ select exists(select * from rls_t)::text $$"
  SEMICOLON ";"
  WHITESPACE "\n"
  PREPARE_STMT
    PREPARE_KW "prepare"
    WHITESPACE " "
    NAME
      IDENT "t"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              CURRENT_USER_KW "current_user"
          COMMA ","
          WHITESPACE " "
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "rls_f"
          ARG_LIST
            L_PAREN "("
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_ROLE_STMT
    SET_KW "set"
    WHITESPACE " "
    ROLE_KW "role"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "t"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_ROLE_STMT
    SET_KW "set"
    WHITESPACE " "
    ROLE_KW "role"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "t"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- make sure RLS dependencies are handled when coercion projections are inserted"
  WHITESPACE "\n"
  SET_ROLE_STMT
    RESET_KW "reset"
    WHITESPACE " "
    ROLE_KW "role"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rls_f"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "rls_t"
    WHITESPACE "\n  "
    FUNC_OPTION_LIST
      VOLATILITY_FUNC_OPTION
        STABLE_KW "stable"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE "\n  "
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$ select * from (select array_agg(c) as cs from rls_t) _ group by cs $$"
  SEMICOLON ";"
  WHITESPACE "\n"
  PREPARE_STMT
    PREPARE_KW "prepare"
    WHITESPACE " "
    NAME
      IDENT "u"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              CURRENT_USER_KW "current_user"
          COMMA ","
          WHITESPACE " "
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "rls_f"
          ARG_LIST
            L_PAREN "("
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_ROLE_STMT
    SET_KW "set"
    WHITESPACE " "
    ROLE_KW "role"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "u"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_ROLE_STMT
    SET_KW "set"
    WHITESPACE " "
    ROLE_KW "role"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "u"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- make sure RLS dependencies in security invoker views are handled"
  WHITESPACE "\n"
  SET_ROLE_STMT
    RESET_KW "reset"
    WHITESPACE " "
    ROLE_KW "role"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rls_v"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "with"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "security_invoker"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "rls_t"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "grant"
    WHITESPACE " "
    SELECT_KW "select"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_v"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    IDENT "regress_rls_alice"
    COMMA ","
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rls_f"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      SETOF_KW "setof"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "rls_t"
    WHITESPACE "\n  "
    FUNC_OPTION_LIST
      VOLATILITY_FUNC_OPTION
        STABLE_KW "stable"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
      WHITESPACE "\n  "
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$ select * from rls_v $$"
  SEMICOLON ";"
  WHITESPACE "\n"
  PREPARE_STMT
    PREPARE_KW "prepare"
    WHITESPACE " "
    NAME
      IDENT "v"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              CURRENT_USER_KW "current_user"
          COMMA ","
          WHITESPACE " "
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "rls_f"
          ARG_LIST
            L_PAREN "("
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_ROLE_STMT
    SET_KW "set"
    WHITESPACE " "
    ROLE_KW "role"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "v"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_ROLE_STMT
    SET_KW "set"
    WHITESPACE " "
    ROLE_KW "role"
    WHITESPACE " "
    IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXECUTE_STMT
    EXECUTE_KW "execute"
    WHITESPACE " "
    NAME_REF
      IDENT "v"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_ROLE_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    ROLE_KW "ROLE"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_f"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    VIEW_KW "VIEW"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_v"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_t"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Check that RLS changes invalidate SQL function plans"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rls_t"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_t"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_t"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'a'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'b'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'c'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'d'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_t"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'a'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'b'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_t"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "enable"
      WHITESPACE " "
      ROW_KW "row"
      WHITESPACE " "
      LEVEL_KW "level"
      WHITESPACE " "
      SECURITY_KW "security"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "grant"
    WHITESPACE " "
    SELECT_KW "select"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_t"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "grant"
    WHITESPACE " "
    SELECT_KW "select"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_t"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "create"
    WHITESPACE " "
    POLICY_KW "policy"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_t"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    SELECT_KW "select"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    IDENT "regress_rls_alice"
    WHITESPACE "\n  "
    USING_KW "using"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "current_setting"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'rls_test.blah'"
          R_PAREN ")"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Function changes row_security setting and so invalidates plan"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rls_f"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TEXT_KW "text"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      BEGIN_FUNC_OPTION
        BEGIN_KW "begin"
        WHITESPACE " "
        ATOMIC_KW "atomic"
        WHITESPACE "\n "
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                BIN_EXPR
                  CALL_EXPR
                    NAME_REF
                      IDENT "set_config"
                    ARG_LIST
                      L_PAREN "("
                      LITERAL
                        STRING "'rls_test.blah'"
                      COMMA ","
                      WHITESPACE " "
                      LITERAL
                        PARAM "$1"
                      COMMA ","
                      WHITESPACE " "
                      LITERAL
                        TRUE_KW "true"
                      R_PAREN ")"
                  WHITESPACE " "
                  CUSTOM_OP
                    PIPE "|"
                    PIPE "|"
                  WHITESPACE " "
                  BIN_EXPR
                    CALL_EXPR
                      NAME_REF
                        IDENT "set_config"
                      ARG_LIST
                        L_PAREN "("
                        LITERAL
                          STRING "'row_security'"
                        COMMA ","
                        WHITESPACE " "
                        LITERAL
                          STRING "'false'"
                        COMMA ","
                        WHITESPACE " "
                        LITERAL
                          TRUE_KW "true"
                        R_PAREN ")"
                    WHITESPACE " "
                    CUSTOM_OP
                      PIPE "|"
                      PIPE "|"
                    WHITESPACE " "
                    CALL_EXPR
                      NAME_REF
                        IDENT "string_agg"
                      ARG_LIST
                        L_PAREN "("
                        NAME_REF
                          IDENT "c"
                        COMMA ","
                        WHITESPACE " "
                        LITERAL
                          STRING "','"
                        WHITESPACE " "
                        ORDER_BY_CLAUSE
                          ORDER_KW "order"
                          WHITESPACE " "
                          BY_KW "by"
                          WHITESPACE " "
                          NAME_REF
                            IDENT "c"
                        R_PAREN ")"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "rls_t"
        SEMICOLON ";"
        WHITESPACE "\n"
        END_KW "end"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "plan_cache_mode"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    IDENT "force_custom_plan"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Table owner bypasses RLS"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "rls_f"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "c"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "test_t"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_f"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- For other users, changes in row_security setting"
  WHITESPACE "\n"
  COMMENT "-- should lead to RLS error during query rewrite"
  WHITESPACE "\n"
  SET_ROLE_STMT
    SET_KW "set"
    WHITESPACE " "
    ROLE_KW "role"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "rls_f"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "c"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "test_t"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_f"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_ROLE_STMT
    RESET_KW "reset"
    WHITESPACE " "
    ROLE_KW "role"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "plan_cache_mode"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    IDENT "force_generic_plan"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Table owner bypasses RLS, although cached plan will be invalidated"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "rls_f"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "c"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "test_t"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_f"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- For other users, changes in row_security setting"
  WHITESPACE "\n"
  COMMENT "-- should lead to plan invalidation and RLS error during query rewrite"
  WHITESPACE "\n"
  SET_ROLE_STMT
    SET_KW "set"
    WHITESPACE " "
    ROLE_KW "role"
    WHITESPACE " "
    IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "rls_f"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "c"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "test_t"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "rls_f"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_ROLE_STMT
    RESET_KW "reset"
    WHITESPACE " "
    ROLE_KW "role"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "plan_cache_mode"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "rls_test"
  ERROR
    DOT "."
  ERROR
    IDENT "blah"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "drop"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_f"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_t"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_t"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Clean up objects"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    SESSION_KW "SESSION"
    WHITESPACE " "
    AUTHORIZATION_KW "AUTHORIZATION"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_SCHEMA_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    SCHEMA_KW "SCHEMA"
    WHITESPACE " "
    NAME
      IDENT "regress_rls_schema"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_USER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_rls_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_USER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_rls_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_USER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_rls_carol"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_USER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_rls_dave"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_USER_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    USER_KW "USER"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_rls_exempt_user"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_rls_group1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    ROLE_KW "ROLE"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_rls_group2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Arrange to have a few policies left over, for testing"
  WHITESPACE "\n"
  COMMENT "-- pg_dump/pg_restore"
  WHITESPACE "\n"
  CREATE_SCHEMA_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    SCHEMA_KW "SCHEMA"
    WHITESPACE " "
    NAME
      IDENT "regress_rls_schema"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rls_tbl"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "c1"
      WHITESPACE " "
      R_ANGLE ">"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "5"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p2"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "c1"
      WHITESPACE " "
      LTEQ "<="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p3"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "c1"
      WHITESPACE " "
      LTEQ "<="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
    R_PAREN ")"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    CHECK_KW "CHECK"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "c1"
      WHITESPACE " "
      R_ANGLE ">"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "5"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p4"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    DELETE_KW "DELETE"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "c1"
      WHITESPACE " "
      LTEQ "<="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rls_tbl_force"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl_force"
    WHITESPACE " "
    ENABLE_RLS
      ENABLE_KW "ENABLE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl_force"
    WHITESPACE " "
    FORCE_RLS
      FORCE_KW "FORCE"
      WHITESPACE " "
      ROW_KW "ROW"
      WHITESPACE " "
      LEVEL_KW "LEVEL"
      WHITESPACE " "
      SECURITY_KW "SECURITY"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p1"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl_force"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "c1"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "5"
    R_PAREN ")"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    CHECK_KW "CHECK"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "c1"
      WHITESPACE " "
      L_ANGLE "<"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "5"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p2"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl_force"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    SELECT_KW "SELECT"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "c1"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "8"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p3"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl_force"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "c1"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "8"
    R_PAREN ")"
    WHITESPACE " "
    WITH_KW "WITH"
    WHITESPACE " "
    CHECK_KW "CHECK"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "c1"
      WHITESPACE " "
      GTEQ ">="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "5"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_POLICY_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    POLICY_KW "POLICY"
    WHITESPACE " "
    NAME
      IDENT "p4"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "rls_tbl_force"
    WHITESPACE " "
    FOR_KW "FOR"
    WHITESPACE " "
    DELETE_KW "DELETE"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    L_PAREN "("
    BIN_EXPR
      NAME_REF
        IDENT "c1"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "8"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
---
ERROR@3769: expected config value, got ON_KW
ERROR@3769: expected SEMICOLON
ERROR@3770: expected command, found ON_KW
ERROR@4399: expected R_PAREN
ERROR@4400: expected command, found OFF_KW
ERROR@4403: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@4403: expected SEMICOLON
ERROR@4403: expected command, found R_PAREN
ERROR@4464: expected R_PAREN
ERROR@4465: expected command, found OFF_KW
ERROR@4468: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@4468: expected SEMICOLON
ERROR@4468: expected command, found R_PAREN
ERROR@4770: expected R_PAREN
ERROR@4771: expected command, found OFF_KW
ERROR@4774: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@4774: expected SEMICOLON
ERROR@4774: expected command, found R_PAREN
ERROR@4835: expected R_PAREN
ERROR@4836: expected command, found OFF_KW
ERROR@4839: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@4839: expected SEMICOLON
ERROR@4839: expected command, found R_PAREN
ERROR@5972: expected R_PAREN
ERROR@5973: expected command, found OFF_KW
ERROR@5976: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@5976: expected SEMICOLON
ERROR@5976: expected command, found R_PAREN
ERROR@6037: expected R_PAREN
ERROR@6038: expected command, found OFF_KW
ERROR@6041: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@6041: expected SEMICOLON
ERROR@6041: expected command, found R_PAREN
ERROR@7723: expected config value, got ON_KW
ERROR@7723: expected SEMICOLON
ERROR@7724: expected command, found ON_KW
ERROR@8274: expected config value, got ON_KW
ERROR@8274: expected SEMICOLON
ERROR@8275: expected command, found ON_KW
ERROR@8617: expected config value, got ON_KW
ERROR@8617: expected SEMICOLON
ERROR@8618: expected command, found ON_KW
ERROR@9304: expected R_PAREN
ERROR@9305: expected command, found OFF_KW
ERROR@9308: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@9308: expected SEMICOLON
ERROR@9308: expected command, found R_PAREN
ERROR@9377: expected R_PAREN
ERROR@9378: expected command, found OFF_KW
ERROR@9381: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@9381: expected SEMICOLON
ERROR@9381: expected command, found R_PAREN
ERROR@9500: expected R_PAREN
ERROR@9501: expected command, found OFF_KW
ERROR@9504: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@9504: expected SEMICOLON
ERROR@9504: expected command, found R_PAREN
ERROR@9601: expected R_PAREN
ERROR@9602: expected command, found OFF_KW
ERROR@9605: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@9605: expected SEMICOLON
ERROR@9605: expected command, found R_PAREN
ERROR@9697: expected R_PAREN
ERROR@9698: expected command, found OFF_KW
ERROR@9701: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@9701: expected SEMICOLON
ERROR@9701: expected command, found R_PAREN
ERROR@9790: expected R_PAREN
ERROR@9791: expected command, found OFF_KW
ERROR@9794: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@9794: expected SEMICOLON
ERROR@9794: expected command, found R_PAREN
ERROR@9965: expected R_PAREN
ERROR@9966: expected command, found OFF_KW
ERROR@9969: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@9969: expected SEMICOLON
ERROR@9969: expected command, found R_PAREN
ERROR@10210: expected R_PAREN
ERROR@10211: expected command, found OFF_KW
ERROR@10214: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@10214: expected SEMICOLON
ERROR@10214: expected command, found R_PAREN
ERROR@10450: expected R_PAREN
ERROR@10451: expected command, found OFF_KW
ERROR@10454: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@10454: expected SEMICOLON
ERROR@10454: expected command, found R_PAREN
ERROR@12497: expected config value, got ON_KW
ERROR@12497: expected SEMICOLON
ERROR@12498: expected command, found ON_KW
ERROR@12579: expected R_PAREN
ERROR@12580: expected command, found OFF_KW
ERROR@12583: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@12583: expected SEMICOLON
ERROR@12583: expected command, found R_PAREN
ERROR@12794: expected R_PAREN
ERROR@12795: expected command, found OFF_KW
ERROR@12798: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@12798: expected SEMICOLON
ERROR@12798: expected command, found R_PAREN
ERROR@13007: expected R_PAREN
ERROR@13008: expected command, found OFF_KW
ERROR@13011: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@13011: expected SEMICOLON
ERROR@13011: expected command, found R_PAREN
ERROR@14619: expected R_PAREN
ERROR@14620: expected command, found OFF_KW
ERROR@14623: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@14623: expected SEMICOLON
ERROR@14623: expected command, found R_PAREN
ERROR@14834: expected R_PAREN
ERROR@14835: expected command, found OFF_KW
ERROR@14838: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@14838: expected SEMICOLON
ERROR@14838: expected command, found R_PAREN
ERROR@15465: expected R_PAREN
ERROR@15466: expected command, found OFF_KW
ERROR@15469: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@15469: expected SEMICOLON
ERROR@15469: expected command, found R_PAREN
ERROR@15628: expected config value, got ON_KW
ERROR@15628: expected SEMICOLON
ERROR@15629: expected command, found ON_KW
ERROR@16103: expected config value, got ON_KW
ERROR@16103: expected SEMICOLON
ERROR@16104: expected command, found ON_KW
ERROR@16539: expected config value, got ON_KW
ERROR@16539: expected SEMICOLON
ERROR@16540: expected command, found ON_KW
ERROR@16901: expected config value, got ON_KW
ERROR@16901: expected SEMICOLON
ERROR@16902: expected command, found ON_KW
ERROR@17251: expected R_PAREN
ERROR@17252: expected command, found OFF_KW
ERROR@17255: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@17255: expected SEMICOLON
ERROR@17255: expected command, found R_PAREN
ERROR@19198: expected R_PAREN
ERROR@19263: expected SEMICOLON
ERROR@19263: expected command, found R_PAREN
ERROR@19316: expected R_PAREN
ERROR@19379: expected SEMICOLON
ERROR@19379: expected command, found R_PAREN
ERROR@20169: expected R_PAREN
ERROR@20170: expected command, found OFF_KW
ERROR@20173: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@20173: expected SEMICOLON
ERROR@20173: expected command, found R_PAREN
ERROR@20440: expected R_PAREN
ERROR@20441: expected command, found OFF_KW
ERROR@20444: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@20444: expected SEMICOLON
ERROR@20444: expected command, found R_PAREN
ERROR@20564: expected R_PAREN
ERROR@20565: expected command, found OFF_KW
ERROR@20568: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@20568: expected SEMICOLON
ERROR@20568: expected command, found R_PAREN
ERROR@21011: expected R_PAREN
ERROR@21012: expected command, found OFF_KW
ERROR@21015: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@21015: expected SEMICOLON
ERROR@21015: expected command, found R_PAREN
ERROR@21180: expected R_PAREN
ERROR@21181: expected command, found OFF_KW
ERROR@21184: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@21184: expected SEMICOLON
ERROR@21184: expected command, found R_PAREN
ERROR@21286: expected R_PAREN
ERROR@21287: expected command, found OFF_KW
ERROR@21290: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@21290: expected SEMICOLON
ERROR@21290: expected command, found R_PAREN
ERROR@21387: expected R_PAREN
ERROR@21388: expected command, found OFF_KW
ERROR@21391: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@21391: expected SEMICOLON
ERROR@21391: expected command, found R_PAREN
ERROR@21522: expected config value, got ON_KW
ERROR@21522: expected SEMICOLON
ERROR@21523: expected command, found ON_KW
ERROR@21556: expected R_PAREN
ERROR@21557: expected command, found OFF_KW
ERROR@21560: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@21560: expected SEMICOLON
ERROR@21560: expected command, found R_PAREN
ERROR@21683: expected R_PAREN
ERROR@21684: expected command, found OFF_KW
ERROR@21687: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@21687: expected SEMICOLON
ERROR@21687: expected command, found R_PAREN
ERROR@21788: expected R_PAREN
ERROR@21789: expected command, found OFF_KW
ERROR@21792: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@21792: expected SEMICOLON
ERROR@21792: expected command, found R_PAREN
ERROR@22183: expected R_PAREN
ERROR@22184: expected command, found OFF_KW
ERROR@22187: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@22187: expected SEMICOLON
ERROR@22187: expected command, found R_PAREN
ERROR@22389: expected R_PAREN
ERROR@22390: expected command, found OFF_KW
ERROR@22393: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@22393: expected SEMICOLON
ERROR@22393: expected command, found R_PAREN
ERROR@22595: expected R_PAREN
ERROR@22596: expected command, found OFF_KW
ERROR@22599: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@22599: expected SEMICOLON
ERROR@22599: expected command, found R_PAREN
ERROR@22839: expected R_PAREN
ERROR@22840: expected command, found OFF_KW
ERROR@22843: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@22843: expected SEMICOLON
ERROR@22843: expected command, found R_PAREN
ERROR@23187: expected R_PAREN
ERROR@23188: expected command, found OFF_KW
ERROR@23191: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@23191: expected SEMICOLON
ERROR@23191: expected command, found R_PAREN
ERROR@23669: expected config value, got ON_KW
ERROR@23669: expected SEMICOLON
ERROR@23670: expected command, found ON_KW
ERROR@23688: expected R_PAREN
ERROR@23689: expected command, found OFF_KW
ERROR@23692: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@23692: expected SEMICOLON
ERROR@23692: expected command, found R_PAREN
ERROR@23745: expected R_PAREN
ERROR@23746: expected command, found OFF_KW
ERROR@23749: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@23749: expected SEMICOLON
ERROR@23749: expected command, found R_PAREN
ERROR@24068: expected R_PAREN
ERROR@24133: expected SEMICOLON
ERROR@24133: expected command, found R_PAREN
ERROR@24492: expected R_PAREN
ERROR@24493: expected command, found OFF_KW
ERROR@24496: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@24496: expected SEMICOLON
ERROR@24496: expected command, found R_PAREN
ERROR@24747: expected R_PAREN
ERROR@24748: expected command, found OFF_KW
ERROR@24751: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@24751: expected SEMICOLON
ERROR@24751: expected command, found R_PAREN
ERROR@24872: expected R_PAREN
ERROR@24873: expected command, found OFF_KW
ERROR@24876: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@24876: expected SEMICOLON
ERROR@24876: expected command, found R_PAREN
ERROR@38537: expected R_PAREN
ERROR@38538: expected command, found OFF_KW
ERROR@38541: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@38541: expected SEMICOLON
ERROR@38541: expected command, found R_PAREN
ERROR@38652: expected R_PAREN
ERROR@38653: expected command, found OFF_KW
ERROR@38656: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@38656: expected SEMICOLON
ERROR@38656: expected command, found R_PAREN
ERROR@38802: expected R_PAREN
ERROR@38803: expected command, found OFF_KW
ERROR@38806: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@38806: expected SEMICOLON
ERROR@38806: expected command, found R_PAREN
ERROR@38956: expected R_PAREN
ERROR@38957: expected command, found OFF_KW
ERROR@38960: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@38960: expected SEMICOLON
ERROR@38960: expected command, found R_PAREN
ERROR@39065: expected R_PAREN
ERROR@39066: expected command, found OFF_KW
ERROR@39069: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@39069: expected SEMICOLON
ERROR@39069: expected command, found R_PAREN
ERROR@39120: expected R_PAREN
ERROR@39121: expected command, found OFF_KW
ERROR@39124: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@39124: expected SEMICOLON
ERROR@39124: expected command, found R_PAREN
ERROR@39164: expected R_PAREN
ERROR@39165: expected command, found OFF_KW
ERROR@39168: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@39168: expected SEMICOLON
ERROR@39168: expected command, found R_PAREN
ERROR@39209: expected R_PAREN
ERROR@39210: expected command, found OFF_KW
ERROR@39213: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@39213: expected SEMICOLON
ERROR@39213: expected command, found R_PAREN
ERROR@39334: expected R_PAREN
ERROR@39335: expected command, found OFF_KW
ERROR@39338: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@39338: expected SEMICOLON
ERROR@39338: expected command, found R_PAREN
ERROR@39389: expected R_PAREN
ERROR@39390: expected command, found OFF_KW
ERROR@39393: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@39393: expected SEMICOLON
ERROR@39393: expected command, found R_PAREN
ERROR@39433: expected R_PAREN
ERROR@39434: expected command, found OFF_KW
ERROR@39437: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@39437: expected SEMICOLON
ERROR@39437: expected command, found R_PAREN
ERROR@39478: expected R_PAREN
ERROR@39479: expected command, found OFF_KW
ERROR@39482: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@39482: expected SEMICOLON
ERROR@39482: expected command, found R_PAREN
ERROR@39587: expected R_PAREN
ERROR@39588: expected command, found OFF_KW
ERROR@39591: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@39591: expected SEMICOLON
ERROR@39591: expected command, found R_PAREN
ERROR@39642: expected R_PAREN
ERROR@39643: expected command, found OFF_KW
ERROR@39646: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@39646: expected SEMICOLON
ERROR@39646: expected command, found R_PAREN
ERROR@39686: expected R_PAREN
ERROR@39687: expected command, found OFF_KW
ERROR@39690: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@39690: expected SEMICOLON
ERROR@39690: expected command, found R_PAREN
ERROR@39731: expected R_PAREN
ERROR@39732: expected command, found OFF_KW
ERROR@39735: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@39735: expected SEMICOLON
ERROR@39735: expected command, found R_PAREN
ERROR@40164: expected R_PAREN
ERROR@40165: expected command, found OFF_KW
ERROR@40168: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@40168: expected SEMICOLON
ERROR@40168: expected command, found R_PAREN
ERROR@40336: expected R_PAREN
ERROR@40337: expected command, found OFF_KW
ERROR@40340: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@40340: expected SEMICOLON
ERROR@40340: expected command, found R_PAREN
ERROR@40780: expected R_PAREN
ERROR@40781: expected command, found OFF_KW
ERROR@40784: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@40784: expected SEMICOLON
ERROR@40784: expected command, found R_PAREN
ERROR@41013: expected R_PAREN
ERROR@41014: expected command, found OFF_KW
ERROR@41017: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@41017: expected SEMICOLON
ERROR@41017: expected command, found R_PAREN
ERROR@41236: expected R_PAREN
ERROR@41237: expected command, found OFF_KW
ERROR@41240: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@41240: expected SEMICOLON
ERROR@41240: expected command, found R_PAREN
ERROR@41547: expected R_PAREN
ERROR@41548: expected command, found OFF_KW
ERROR@41551: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@41551: expected SEMICOLON
ERROR@41551: expected command, found R_PAREN
ERROR@42026: expected R_PAREN
ERROR@42027: expected command, found OFF_KW
ERROR@42030: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@42030: expected SEMICOLON
ERROR@42030: expected command, found R_PAREN
ERROR@42277: expected R_PAREN
ERROR@42278: expected command, found OFF_KW
ERROR@42281: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@42281: expected SEMICOLON
ERROR@42281: expected command, found R_PAREN
ERROR@42595: expected R_PAREN
ERROR@42596: expected command, found OFF_KW
ERROR@42599: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@42599: expected SEMICOLON
ERROR@42599: expected command, found R_PAREN
ERROR@42787: expected R_PAREN
ERROR@42788: expected command, found OFF_KW
ERROR@42791: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@42791: expected SEMICOLON
ERROR@42791: expected command, found R_PAREN
ERROR@43426: expected R_PAREN
ERROR@43427: expected command, found OFF_KW
ERROR@43430: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@43430: expected SEMICOLON
ERROR@43430: expected command, found R_PAREN
ERROR@43624: expected R_PAREN
ERROR@43625: expected command, found OFF_KW
ERROR@43628: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@43628: expected SEMICOLON
ERROR@43628: expected command, found R_PAREN
ERROR@43738: expected R_PAREN
ERROR@43739: expected command, found OFF_KW
ERROR@43742: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@43742: expected SEMICOLON
ERROR@43742: expected command, found R_PAREN
ERROR@44235: expected R_PAREN
ERROR@44236: expected command, found OFF_KW
ERROR@44239: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@44239: expected SEMICOLON
ERROR@44239: expected command, found R_PAREN
ERROR@44433: expected R_PAREN
ERROR@44434: expected command, found OFF_KW
ERROR@44437: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@44437: expected SEMICOLON
ERROR@44437: expected command, found R_PAREN
ERROR@44547: expected R_PAREN
ERROR@44548: expected command, found OFF_KW
ERROR@44551: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@44551: expected SEMICOLON
ERROR@44551: expected command, found R_PAREN
ERROR@44949: expected R_PAREN
ERROR@44950: expected command, found OFF_KW
ERROR@44953: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@44953: expected SEMICOLON
ERROR@44953: expected command, found R_PAREN
ERROR@45200: expected R_PAREN
ERROR@45201: expected command, found OFF_KW
ERROR@45204: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@45204: expected SEMICOLON
ERROR@45204: expected command, found R_PAREN
ERROR@45518: expected R_PAREN
ERROR@45519: expected command, found OFF_KW
ERROR@45522: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@45522: expected SEMICOLON
ERROR@45522: expected command, found R_PAREN
ERROR@45741: expected R_PAREN
ERROR@45742: expected command, found OFF_KW
ERROR@45745: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@45745: expected SEMICOLON
ERROR@45745: expected command, found R_PAREN
ERROR@46058: expected R_PAREN
ERROR@46059: expected command, found OFF_KW
ERROR@46062: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@46062: expected SEMICOLON
ERROR@46062: expected command, found R_PAREN
ERROR@48000: expected R_PAREN
ERROR@48001: expected command, found OFF_KW
ERROR@48004: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@48004: expected SEMICOLON
ERROR@48004: expected command, found R_PAREN
ERROR@48277: expected R_PAREN
ERROR@48278: expected command, found OFF_KW
ERROR@48281: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@48281: expected SEMICOLON
ERROR@48281: expected command, found R_PAREN
ERROR@48431: expected R_PAREN
ERROR@48494: expected SEMICOLON
ERROR@48494: expected command, found R_PAREN
ERROR@48673: expected R_PAREN
ERROR@48674: expected command, found OFF_KW
ERROR@48677: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@48677: expected SEMICOLON
ERROR@48677: expected command, found R_PAREN
ERROR@48838: expected R_PAREN
ERROR@48839: expected command, found OFF_KW
ERROR@48842: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@48842: expected SEMICOLON
ERROR@48842: expected command, found R_PAREN
ERROR@49077: expected R_PAREN
ERROR@49078: expected command, found OFF_KW
ERROR@49081: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@49081: expected SEMICOLON
ERROR@49081: expected command, found R_PAREN
ERROR@49242: expected R_PAREN
ERROR@49243: expected command, found OFF_KW
ERROR@49246: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@49246: expected SEMICOLON
ERROR@49246: expected command, found R_PAREN
ERROR@49837: expected R_PAREN
ERROR@49838: expected command, found OFF_KW
ERROR@49841: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@49841: expected SEMICOLON
ERROR@49841: expected command, found R_PAREN
ERROR@49972: expected R_PAREN
ERROR@49973: expected command, found OFF_KW
ERROR@49976: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@49976: expected SEMICOLON
ERROR@49976: expected command, found R_PAREN
ERROR@50115: expected R_PAREN
ERROR@50116: expected command, found OFF_KW
ERROR@50119: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@50119: expected SEMICOLON
ERROR@50119: expected command, found R_PAREN
ERROR@50391: expected R_PAREN
ERROR@50454: expected SEMICOLON
ERROR@50454: expected command, found R_PAREN
ERROR@50597: expected R_PAREN
ERROR@50598: expected command, found OFF_KW
ERROR@50601: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@50601: expected SEMICOLON
ERROR@50601: expected command, found R_PAREN
ERROR@51523: expected R_PAREN
ERROR@51539: expected SEMICOLON
ERROR@51539: expected command, found R_PAREN
ERROR@51556: expected R_PAREN
ERROR@51557: expected command, found OFF_KW
ERROR@51560: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@51560: expected SEMICOLON
ERROR@51560: expected command, found R_PAREN
ERROR@51578: expected R_PAREN
ERROR@51594: expected SEMICOLON
ERROR@51594: expected command, found R_PAREN
ERROR@51629: expected R_PAREN
ERROR@51630: expected command, found OFF_KW
ERROR@51633: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@51633: expected SEMICOLON
ERROR@51633: expected command, found R_PAREN
ERROR@53303: expected R_PAREN
ERROR@53304: expected command, found OFF_KW
ERROR@53307: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@53307: expected SEMICOLON
ERROR@53307: expected command, found R_PAREN
ERROR@53463: expected R_PAREN
ERROR@53464: expected command, found OFF_KW
ERROR@53467: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@53467: expected SEMICOLON
ERROR@53467: expected command, found R_PAREN
ERROR@53625: expected config value, got ON_KW
ERROR@53625: expected SEMICOLON
ERROR@53626: expected command, found ON_KW
ERROR@53662: expected R_PAREN
ERROR@53663: expected command, found OFF_KW
ERROR@53666: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@53666: expected SEMICOLON
ERROR@53666: expected command, found R_PAREN
ERROR@53761: expected R_PAREN
ERROR@53762: expected command, found OFF_KW
ERROR@53765: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@53765: expected SEMICOLON
ERROR@53765: expected command, found R_PAREN
ERROR@54086: expected R_PAREN
ERROR@54149: expected SEMICOLON
ERROR@54149: expected command, found R_PAREN
ERROR@54301: expected L_PAREN
ERROR@54315: expected R_PAREN
ERROR@54336: expected config value, got ON_KW
ERROR@54336: expected SEMICOLON
ERROR@54337: expected command, found ON_KW
ERROR@54398: expected L_PAREN
ERROR@54412: expected R_PAREN
ERROR@54583: expected L_PAREN
ERROR@54597: expected R_PAREN
ERROR@54652: expected config value, got ON_KW
ERROR@54652: expected SEMICOLON
ERROR@54653: expected command, found ON_KW
ERROR@54714: expected L_PAREN
ERROR@54728: expected R_PAREN
ERROR@54925: expected L_PAREN
ERROR@54939: expected R_PAREN
ERROR@54965: expected config value, got ON_KW
ERROR@54965: expected SEMICOLON
ERROR@54966: expected command, found ON_KW
ERROR@55027: expected L_PAREN
ERROR@55041: expected R_PAREN
ERROR@55247: expected L_PAREN
ERROR@55261: expected R_PAREN
ERROR@55316: expected config value, got ON_KW
ERROR@55316: expected SEMICOLON
ERROR@55317: expected command, found ON_KW
ERROR@55378: expected L_PAREN
ERROR@55392: expected R_PAREN
ERROR@55545: expected config value, got ON_KW
ERROR@55545: expected SEMICOLON
ERROR@55546: expected command, found ON_KW
ERROR@55952: expected L_PAREN
ERROR@55966: expected R_PAREN
ERROR@55987: expected config value, got ON_KW
ERROR@55987: expected SEMICOLON
ERROR@55988: expected command, found ON_KW
ERROR@56023: expected L_PAREN
ERROR@56037: expected R_PAREN
ERROR@56182: expected L_PAREN
ERROR@56196: expected R_PAREN
ERROR@56251: expected config value, got ON_KW
ERROR@56251: expected SEMICOLON
ERROR@56252: expected command, found ON_KW
ERROR@56287: expected L_PAREN
ERROR@56301: expected R_PAREN
ERROR@56472: expected L_PAREN
ERROR@56486: expected R_PAREN
ERROR@56512: expected config value, got ON_KW
ERROR@56512: expected SEMICOLON
ERROR@56513: expected command, found ON_KW
ERROR@56548: expected L_PAREN
ERROR@56562: expected R_PAREN
ERROR@56742: expected L_PAREN
ERROR@56756: expected R_PAREN
ERROR@56804: expected config value, got ON_KW
ERROR@56804: expected SEMICOLON
ERROR@56805: expected command, found ON_KW
ERROR@56840: expected L_PAREN
ERROR@56854: expected R_PAREN
ERROR@56970: expected config value, got ON_KW
ERROR@56970: expected SEMICOLON
ERROR@56971: expected command, found ON_KW
ERROR@57217: expected L_PAREN
ERROR@57231: expected R_PAREN
ERROR@57252: expected config value, got ON_KW
ERROR@57252: expected SEMICOLON
ERROR@57253: expected command, found ON_KW
ERROR@57288: expected L_PAREN
ERROR@57302: expected R_PAREN
ERROR@57447: expected L_PAREN
ERROR@57461: expected R_PAREN
ERROR@57516: expected config value, got ON_KW
ERROR@57516: expected SEMICOLON
ERROR@57517: expected command, found ON_KW
ERROR@57552: expected L_PAREN
ERROR@57566: expected R_PAREN
ERROR@57737: expected L_PAREN
ERROR@57751: expected R_PAREN
ERROR@57777: expected config value, got ON_KW
ERROR@57777: expected SEMICOLON
ERROR@57778: expected command, found ON_KW
ERROR@57813: expected L_PAREN
ERROR@57827: expected R_PAREN
ERROR@58007: expected L_PAREN
ERROR@58021: expected R_PAREN
ERROR@58069: expected config value, got ON_KW
ERROR@58069: expected SEMICOLON
ERROR@58070: expected command, found ON_KW
ERROR@58105: expected L_PAREN
ERROR@58119: expected R_PAREN
ERROR@58261: expected config value, got ON_KW
ERROR@58261: expected SEMICOLON
ERROR@58262: expected command, found ON_KW
ERROR@58508: expected config value, got ON_KW
ERROR@58508: expected SEMICOLON
ERROR@58509: expected command, found ON_KW
ERROR@60275: expected R_PAREN
ERROR@60276: expected command, found OFF_KW
ERROR@60279: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@60279: expected SEMICOLON
ERROR@60279: expected command, found R_PAREN
ERROR@61344: expected R_PAREN
ERROR@61345: expected command, found OFF_KW
ERROR@61348: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@61348: expected SEMICOLON
ERROR@61348: expected command, found R_PAREN
ERROR@61616: expected config value, got ON_KW
ERROR@61616: expected SEMICOLON
ERROR@61617: expected command, found ON_KW
ERROR@62112: expected type name
ERROR@62639: expected type name
ERROR@63728: expected type name
ERROR@65184: expected config value, got ON_KW
ERROR@65184: expected SEMICOLON
ERROR@65185: expected command, found ON_KW
ERROR@65848: expected config value, got ON_KW
ERROR@65848: expected SEMICOLON
ERROR@65849: expected command, found ON_KW
ERROR@68222: expected config value, got ON_KW
ERROR@68222: expected SEMICOLON
ERROR@68223: expected command, found ON_KW
ERROR@68611: expected config value, got ON_KW
ERROR@68611: expected SEMICOLON
ERROR@68612: expected command, found ON_KW
ERROR@68859: expected config value, got ON_KW
ERROR@68859: expected SEMICOLON
ERROR@68860: expected command, found ON_KW
ERROR@70027: expected config value, got ON_KW
ERROR@70027: expected SEMICOLON
ERROR@70028: expected command, found ON_KW
ERROR@70090: expected STORED_KW
ERROR@70090: expected R_PAREN
ERROR@70090: expected SEMICOLON
ERROR@70091: expected command, found IDENT
ERROR@70098: expected command, found R_PAREN
ERROR@70155: expected STORED_KW
ERROR@70155: expected SEMICOLON
ERROR@70156: expected command, found IDENT
ERROR@74380: expected R_PAREN
ERROR@74381: expected command, found OFF_KW
ERROR@74384: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@74384: expected SEMICOLON
ERROR@74384: expected command, found R_PAREN
ERROR@74932: expected R_PAREN
ERROR@74933: expected command, found OFF_KW
ERROR@74936: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@74936: expected SEMICOLON
ERROR@74936: expected command, found R_PAREN
ERROR@79066: expected SEMICOLON
ERROR@79066: expected command, found DOT
ERROR@79067: expected command, found IDENT

---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/temp.sql
---
SOURCE_FILE
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- TEMP"
  WHITESPACE "\n"
  COMMENT "-- Test temp relations and indexes"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  COMMENT "-- test temp table/index masking"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temptest"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "i_temptest"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temptest"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "col"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temptest"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "tcol"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "i_temptest"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temptest"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "tcol"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "temptest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_INDEX_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "i_temptest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temptest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "temptest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_INDEX_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "i_temptest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temptest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test temp table selects"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temptest"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temptest"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temptest"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "tcol"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                FLOAT_KW "float"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temptest"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        FLOAT_NUMBER "2.1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "temptest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temptest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "temptest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temptest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test temp table deletion"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temptest"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "temptest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test ON COMMIT DELETE ROWS"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temptest"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    COMMIT_KW "COMMIT"
    WHITESPACE " "
    DELETE_KW "DELETE"
    WHITESPACE " "
    ROWS_KW "ROWS"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- while we're here, verify successful truncation of index with SQL function"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temptest"
    INDEX_PARAMS
      L_PAREN "("
      CALL_EXPR
        NAME_REF
          IDENT "bit_length"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "''"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temptest"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temptest"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "temptest"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "temptest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temptest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temptest"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "col"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    COMMIT_KW "COMMIT"
    WHITESPACE " "
    DELETE_KW "DELETE"
    WHITESPACE " "
    ROWS_KW "ROWS"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "temptest"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "temptest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temptest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test ON COMMIT DROP"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temptest"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    COMMIT_KW "COMMIT"
    WHITESPACE " "
    DROP_KW "DROP"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temptest"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temptest"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "temptest"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "temptest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temptest"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "col"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    COMMIT_KW "COMMIT"
    WHITESPACE " "
    DROP_KW "DROP"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "temptest"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "temptest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test it with a CHECK condition that produces a toasted pg_constraint entry"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  DO_STMT
    DO_KW "do"
    WHITESPACE " "
    LITERAL
      DOLLAR_QUOTED_STRING "$$\nbegin\n  execute format($cmd$\n    CREATE TEMP TABLE temptest (col text CHECK (col < %L)) ON COMMIT DROP\n  $cmd$,\n    (SELECT string_agg(g.i::text || ':' || random()::text, '|')\n     FROM generate_series(1, 100) g(i)));\nend$$"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "temptest"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "temptest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ON COMMIT is only allowed for TEMP"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temptest"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    COMMIT_KW "COMMIT"
    WHITESPACE " "
    DELETE_KW "DELETE"
    WHITESPACE " "
    ROWS_KW "ROWS"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temptest"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "col"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    COMMIT_KW "COMMIT"
    WHITESPACE " "
    DELETE_KW "DELETE"
    WHITESPACE " "
    ROWS_KW "ROWS"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test foreign keys"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temptest1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temptest2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        REFERENCES_CONSTRAINT
          REFERENCES_KW "REFERENCES"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "temptest1"
      R_PAREN ")"
    WHITESPACE "\n  "
    ON_KW "ON"
    WHITESPACE " "
    COMMIT_KW "COMMIT"
    WHITESPACE " "
    DELETE_KW "DELETE"
    WHITESPACE " "
    ROWS_KW "ROWS"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temptest1"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temptest2"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "temptest1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "temptest2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temptest3"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    COMMIT_KW "COMMIT"
    WHITESPACE " "
    DELETE_KW "DELETE"
    WHITESPACE " "
    ROWS_KW "ROWS"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temptest4"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "col"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        REFERENCES_CONSTRAINT
          REFERENCES_KW "REFERENCES"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "temptest3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test manipulation of temp schema's placement in search path"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "public"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "whereami"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "public"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "whereami"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'public'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "whereami"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "whereami"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'temp'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "public"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "whoami"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TEXT_KW "text"
    WHITESPACE "\n  "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$select 'public'::text$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "pg_temp"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "whoami"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TEXT_KW "text"
    WHITESPACE "\n  "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$select 'temp'::text$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- default should have pg_temp implicitly first, but only for tables"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "whereami"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "whoami"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- can list temp first explicitly, but it still doesn't affect functions"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "search_path"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    IDENT "pg_temp"
    COMMA ","
    WHITESPACE " "
    IDENT "public"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "whereami"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "whoami"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- or put it last for security"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "search_path"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    IDENT "public"
    COMMA ","
    WHITESPACE " "
    IDENT "pg_temp"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "whereami"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "whoami"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- you can invoke a temp function explicitly, though"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "pg_temp"
              DOT "."
              NAME_REF
                IDENT "whoami"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "public"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "whereami"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- types in temp schema"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "search_path"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    IDENT "pg_temp"
    COMMA ","
    WHITESPACE " "
    IDENT "public"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_DOMAIN_STMT
    CREATE_KW "create"
    WHITESPACE " "
    DOMAIN_KW "domain"
    WHITESPACE " "
    NAME
      IDENT "pg_temp"
  ERROR
    DOT "."
  ERROR
    IDENT "nonempty"
  WHITESPACE " "
  ERROR
    AS_KW "as"
  WHITESPACE " "
  ERROR
    TEXT_KW "text"
  WHITESPACE " "
  ERROR
    CHECK_KW "check"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    VALUE_KW "value"
  WHITESPACE " "
  ERROR
    L_ANGLE "<"
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    STRING "''"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- function-syntax invocation of types matches rules for functions"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "nonempty"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "''"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "pg_temp"
              DOT "."
              NAME_REF
                IDENT "nonempty"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "''"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- other syntax matches rules for tables"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            LITERAL
              STRING "''"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "nonempty"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "search_path"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- For partitioned temp tables, ON COMMIT actions ignore storage-less"
  WHITESPACE "\n"
  COMMENT "-- partitioned tables."
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temp_parted_oncommit"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE "\n  "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    COMMIT_KW "commit"
    WHITESPACE " "
    DELETE_KW "delete"
    WHITESPACE " "
    ROWS_KW "rows"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temp_parted_oncommit_1"
    WHITESPACE "\n  "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temp_parted_oncommit"
    WHITESPACE "\n  "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    COMMIT_KW "commit"
    WHITESPACE " "
    DELETE_KW "delete"
    WHITESPACE " "
    ROWS_KW "rows"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temp_parted_oncommit"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "commit"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- partitions are emptied by the previous commit"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "temp_parted_oncommit"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temp_parted_oncommit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check dependencies between ON COMMIT actions with a partitioned"
  WHITESPACE "\n"
  COMMENT "-- table and its partitions.  Using ON COMMIT DROP on a parent removes"
  WHITESPACE "\n"
  COMMENT "-- the whole set."
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temp_parted_oncommit_test"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE "\n  "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    COMMIT_KW "commit"
    WHITESPACE " "
    DROP_KW "drop"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temp_parted_oncommit_test1"
    WHITESPACE "\n  "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temp_parted_oncommit_test"
    WHITESPACE "\n  "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    COMMIT_KW "commit"
    WHITESPACE " "
    DELETE_KW "delete"
    WHITESPACE " "
    ROWS_KW "rows"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temp_parted_oncommit_test2"
    WHITESPACE "\n  "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temp_parted_oncommit_test"
    WHITESPACE "\n  "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "2"
    R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    COMMIT_KW "commit"
    WHITESPACE " "
    DROP_KW "drop"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temp_parted_oncommit_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "commit"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- no relations remain in this case."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "relname"
        WHITESPACE " "
        CUSTOM_OP
          TILDE "~"
        WHITESPACE " "
        LITERAL
          STRING "'^temp_parted_oncommit_test'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Using ON COMMIT DELETE on a partitioned table does not remove"
  WHITESPACE "\n"
  COMMENT "-- all rows if partitions preserve their data."
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temp_parted_oncommit_test"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE "\n  "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    COMMIT_KW "commit"
    WHITESPACE " "
    DELETE_KW "delete"
    WHITESPACE " "
    ROWS_KW "rows"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temp_parted_oncommit_test1"
    WHITESPACE "\n  "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temp_parted_oncommit_test"
    WHITESPACE "\n  "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    COMMIT_KW "commit"
    WHITESPACE " "
    PRESERVE_KW "preserve"
    WHITESPACE " "
    ROWS_KW "rows"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temp_parted_oncommit_test2"
    WHITESPACE "\n  "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temp_parted_oncommit_test"
    WHITESPACE "\n  "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "2"
    R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    COMMIT_KW "commit"
    WHITESPACE " "
    DROP_KW "drop"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temp_parted_oncommit_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "commit"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Data from the remaining partition is still here as its rows are"
  WHITESPACE "\n"
  COMMENT "-- preserved."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "temp_parted_oncommit_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- two relations remain in this case."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "relname"
        WHITESPACE " "
        CUSTOM_OP
          TILDE "~"
        WHITESPACE " "
        LITERAL
          STRING "'^temp_parted_oncommit_test'"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "relname"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temp_parted_oncommit_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check dependencies between ON COMMIT actions with inheritance trees."
  WHITESPACE "\n"
  COMMENT "-- Using ON COMMIT DROP on a parent removes the whole set."
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temp_inh_oncommit_test"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    COMMIT_KW "commit"
    WHITESPACE " "
    DROP_KW "drop"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temp_inh_oncommit_test1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE "\n  "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temp_inh_oncommit_test"
    R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    COMMIT_KW "commit"
    WHITESPACE " "
    DELETE_KW "delete"
    WHITESPACE " "
    ROWS_KW "rows"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temp_inh_oncommit_test1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "commit"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- no relations remain in this case"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "relname"
        WHITESPACE " "
        CUSTOM_OP
          TILDE "~"
        WHITESPACE " "
        LITERAL
          STRING "'^temp_inh_oncommit_test'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Data on the parent is removed, and the child goes away."
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temp_inh_oncommit_test"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    COMMIT_KW "commit"
    WHITESPACE " "
    DELETE_KW "delete"
    WHITESPACE " "
    ROWS_KW "rows"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "temp_inh_oncommit_test1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE "\n  "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temp_inh_oncommit_test"
    R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    COMMIT_KW "commit"
    WHITESPACE " "
    DROP_KW "drop"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temp_inh_oncommit_test1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temp_inh_oncommit_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "commit"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "temp_inh_oncommit_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- one relation remains"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "relname"
        WHITESPACE " "
        CUSTOM_OP
          TILDE "~"
        WHITESPACE " "
        LITERAL
          STRING "'^temp_inh_oncommit_test'"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "temp_inh_oncommit_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Tests with two-phase commit"
  WHITESPACE "\n"
  COMMENT "-- Transactions creating objects in a temporary namespace cannot be used"
  WHITESPACE "\n"
  COMMENT "-- with two-phase commit."
  WHITESPACE "\n\n"
  COMMENT "-- These cases generate errors about temporary namespace."
  WHITESPACE "\n"
  COMMENT "-- Function creation"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "pg_temp"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "twophase_func"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "void"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE "\n  "
        LITERAL
          DOLLAR_QUOTED_STRING "$$ select '2pc_func'::text $$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n"
  PREPARE_TRANSACTION_STMT
    PREPARE_KW "prepare"
    WHITESPACE " "
    TRANSACTION_KW "transaction"
    WHITESPACE " "
    LITERAL
      STRING "'twophase_func'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Function drop"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "pg_temp"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "twophase_func"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "void"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE "\n  "
        LITERAL
          DOLLAR_QUOTED_STRING "$$ select '2pc_func'::text $$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "drop"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "pg_temp"
      DOT "."
      PATH_SEGMENT
        NAME_REF
          IDENT "twophase_func"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  PREPARE_TRANSACTION_STMT
    PREPARE_KW "prepare"
    WHITESPACE " "
    TRANSACTION_KW "transaction"
    WHITESPACE " "
    LITERAL
      STRING "'twophase_func'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Operator creation"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_OPERATOR_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OPERATOR_KW "operator"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "pg_temp"
      DOT "."
      PATH_SEGMENT
    CUSTOM_OP
      AT "@"
      AT "@"
    WHITESPACE " "
    L_PAREN "("
    NAME
      IDENT "leftarg"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    COMMA ","
    WHITESPACE " "
    NAME
      IDENT "rightarg"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    COMMA ","
    WHITESPACE " "
    NAME
      PROCEDURE_KW "procedure"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4mi"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  PREPARE_TRANSACTION_STMT
    PREPARE_KW "prepare"
    WHITESPACE " "
    TRANSACTION_KW "transaction"
    WHITESPACE " "
    LITERAL
      STRING "'twophase_operator'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- These generate errors about temporary tables."
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TYPE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "pg_temp"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "twophase_type"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            INT_KW "int"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  PREPARE_TRANSACTION_STMT
    PREPARE_KW "prepare"
    WHITESPACE " "
    TRANSACTION_KW "transaction"
    WHITESPACE " "
    LITERAL
      STRING "'twophase_type'"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "pg_temp"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "twophase_view"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  PREPARE_TRANSACTION_STMT
    PREPARE_KW "prepare"
    WHITESPACE " "
    TRANSACTION_KW "transaction"
    WHITESPACE " "
    LITERAL
      STRING "'twophase_view'"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_SEQUENCE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    SEQUENCE_KW "sequence"
    WHITESPACE " "
    PATH
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "pg_temp"
      DOT "."
      PATH_SEGMENT
        NAME
          IDENT "twophase_seq"
  SEMICOLON ";"
  WHITESPACE "\n"
  PREPARE_TRANSACTION_STMT
    PREPARE_KW "prepare"
    WHITESPACE " "
    TRANSACTION_KW "transaction"
    WHITESPACE " "
    LITERAL
      STRING "'twophase_sequence'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Temporary tables cannot be used with two-phase commit."
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "twophase_tab"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "twophase_tab"
  SEMICOLON ";"
  WHITESPACE "\n"
  PREPARE_TRANSACTION_STMT
    PREPARE_KW "prepare"
    WHITESPACE " "
    TRANSACTION_KW "transaction"
    WHITESPACE " "
    LITERAL
      STRING "'twophase_tab'"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "twophase_tab"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  PREPARE_TRANSACTION_STMT
    PREPARE_KW "prepare"
    WHITESPACE " "
    TRANSACTION_KW "transaction"
    WHITESPACE " "
    LITERAL
      STRING "'twophase_tab'"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  LOCK_STMT
    LOCK_KW "lock"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "twophase_tab"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    ACCESS_KW "access"
    WHITESPACE " "
    EXCLUSIVE_KW "exclusive"
    WHITESPACE " "
    MODE_KW "mode"
  SEMICOLON ";"
  WHITESPACE "\n"
  PREPARE_TRANSACTION_STMT
    PREPARE_KW "prepare"
    WHITESPACE " "
    TRANSACTION_KW "transaction"
    WHITESPACE " "
    LITERAL
      STRING "'twophase_tab'"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "twophase_tab"
  SEMICOLON ";"
  WHITESPACE "\n"
  PREPARE_TRANSACTION_STMT
    PREPARE_KW "prepare"
    WHITESPACE " "
    TRANSACTION_KW "transaction"
    WHITESPACE " "
    LITERAL
      STRING "'twophase_tab'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Corner case: current_schema may create a temporary schema if namespace"
  WHITESPACE "\n"
  COMMENT "-- creation is pending, so check after that.  First reset the connection"
  WHITESPACE "\n"
  COMMENT "-- to remove the temporary namespace."
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "search_path"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    LITERAL
      STRING "'pg_temp'"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                CURRENT_SCHEMA_KW "current_schema"
              ARG_LIST
                L_PAREN "("
                R_PAREN ")"
            WHITESPACE " "
            CUSTOM_OP
              TILDE "~"
            WHITESPACE " "
            LITERAL
              STRING "'pg_temp'"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "is_temp_schema"
  SEMICOLON ";"
  WHITESPACE "\n"
  PREPARE_TRANSACTION_STMT
    PREPARE_KW "PREPARE"
    WHITESPACE " "
    TRANSACTION_KW "TRANSACTION"
    WHITESPACE " "
    LITERAL
      STRING "'twophase_search'"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- Tests to verify we recover correctly from exhausting buffer pins and"
  WHITESPACE "\n"
  COMMENT "-- related matters."
  WHITESPACE "\n\n"
  COMMENT "-- use lower possible buffer limit to make the test cheaper"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "temp_buffers"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "100"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMPORARY_KW "TEMPORARY"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_temp"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
        WHITESPACE " "
        UNIQUE_CONSTRAINT
          UNIQUE_KW "unique"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "cnt"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_temp"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "generate_series"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "10000"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "id"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "repeat"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  STRING "'a'"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "200"
                R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          TARGET
            LITERAL
              INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should be at least 2x as large than temp_buffers"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            BIN_EXPR
              CALL_EXPR
                NAME_REF
                  IDENT "pg_relation_size"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    STRING "'test_temp'"
                  R_PAREN ")"
              WHITESPACE " "
              SLASH "/"
              WHITESPACE " "
              CAST_EXPR
                CALL_EXPR
                  NAME_REF
                    IDENT "current_setting"
                  ARG_LIST
                    L_PAREN "("
                    LITERAL
                      STRING "'block_size'"
                    R_PAREN ")"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "int8"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "200"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Don't want cursor names and plpgsql function lines in the error messages"
  WHITESPACE "\n\n"
  COMMENT "/* helper function to create cursors for each page in [p_start, p_end] */"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_temp_pin"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "p_start"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "p_end"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE "\n"
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "void"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE "\n"
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$f$\n  DECLARE\n      cursorname text;\n      query text;\n  BEGIN\n    FOR i IN p_start..p_end LOOP\n       cursorname = 'c_'||i;\n       query = format($q$DECLARE %I CURSOR FOR SELECT ctid FROM test_temp WHERE ctid >= '( %s, 1)'::tid $q$, cursorname, i);\n       EXECUTE query;\n       EXECUTE 'FETCH NEXT FROM '||cursorname;\n       -- for test development\n       -- RAISE NOTICE '%: %', cursorname, query;\n    END LOOP;\n  END;\n$f$"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- Test overflow of temp table buffers is handled correctly"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should work, below max"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "test_temp_pin"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "0"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "9"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- should fail, too many buffers pinned"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "test_temp_pin"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "10"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "105"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- have some working cursors to test after errors"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "test_temp_pin"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "0"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "9"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  FETCH_STMT
    FETCH_KW "FETCH"
    WHITESPACE " "
    NEXT_KW "NEXT"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    NAME
      IDENT "c_3"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- exhaust buffer pins in subtrans, check things work after"
  WHITESPACE "\n"
  SAVEPOINT_STMT
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "rescue_me"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "test_temp_pin"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "10"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "105"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "rescue_me"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- pre-subtrans cursors continue to work"
  WHITESPACE "\n"
  FETCH_STMT
    FETCH_KW "FETCH"
    WHITESPACE " "
    NEXT_KW "NEXT"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    NAME
      IDENT "c_3"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- new cursors with pins can be created after subtrans rollback"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "test_temp_pin"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "10"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "94"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that read streams deal with lower number of pins available"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "max_a"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "min_a"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "cnt"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "max_cnt"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "test_temp"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- Check that temp tables with existing cursors can't be dropped."
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "test_temp_pin"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "0"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_temp"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that temp tables with existing cursors can't be dropped."
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "test_temp_pin"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "0"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  TRUNCATE_STMT
    TRUNCATE_KW "TRUNCATE"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "test_temp"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that temp tables that are dropped in transaction that's rolled back"
  WHITESPACE "\n"
  COMMENT "-- preserve buffer contents"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "max_a"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "min_a"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "cnt"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "max_cnt"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "test_temp"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_temp"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "cnt"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      PREFIX_EXPR
        MINUS "-"
        LITERAL
          INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "''"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_temp"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "cnt"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      PREFIX_EXPR
        MINUS "-"
        LITERAL
          INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "''"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "0"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_temp"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "max_a"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "min_a"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "cnt"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "max_cnt"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "test_temp"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that temp table drop is transactional and preserves dirty"
  WHITESPACE "\n"
  COMMENT "-- buffer contents"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_temp"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "cnt"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "cnt"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        PREFIX_EXPR
          MINUS "-"
          LITERAL
            INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_temp"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "max_a"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "min_a"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "cnt"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "max_cnt"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "test_temp"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that temp table truncation is transactional and preserves dirty"
  WHITESPACE "\n"
  COMMENT "-- buffer contents"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_temp"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "cnt"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "cnt"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        PREFIX_EXPR
          MINUS "-"
          LITERAL
            INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  TRUNCATE_STMT
    TRUNCATE_KW "TRUNCATE"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "test_temp"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "max_a"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "min_a"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "cnt"
              R_PAREN ")"
          WHITESPACE " "
          NAME
            IDENT "max_cnt"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "test_temp"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- cleanup"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_temp_pin"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
---
ERROR@1146: expected type name
ERROR@1511: expected type name
ERROR@2093: expected type name
ERROR@3533: expected type name
ERROR@3533: expected SEMICOLON
ERROR@3533: expected command, found DOT
ERROR@3534: expected command, found IDENT
ERROR@3543: expected command, found AS_KW
ERROR@3546: expected command, found TEXT_KW
ERROR@3551: expected command, found CHECK_KW
ERROR@3557: expected command, found L_PAREN
ERROR@3558: expected command, found VALUE_KW
ERROR@3564: expected command, found L_ANGLE
ERROR@3565: expected command, found R_ANGLE
ERROR@3567: expected command, found STRING
ERROR@3569: expected command, found R_PAREN

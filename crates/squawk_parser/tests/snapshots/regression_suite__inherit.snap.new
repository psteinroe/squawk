---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/inherit.sql
---
SOURCE_FILE
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- Test inheritance features"
    WHITESPACE "\n"
    COMMENT "--"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "a"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "b"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "bb"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "c"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "cc"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "d"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "dd"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "b"
    COMMA ","
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c"
    COMMA ","
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "a"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'aaa'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "a"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'aaaa'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "a"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'aaaaa'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "a"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'aaaaaa'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "a"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'aaaaaaa'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "a"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'aaaaaaaa'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "b"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'bbb'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "b"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'bbbb'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "b"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'bbbbb'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "b"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'bbbbbb'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "b"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'bbbbbbb'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "b"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'bbbbbbbb'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'ccc'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'cccc'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'ccccc'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'cccccc'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'ccccccc'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'cccccccc'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "d"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'ddd'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "d"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'dddd'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "d"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'ddddd'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "d"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'dddddd'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "d"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'ddddddd'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "d"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        STRING "'dddddddd'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "a"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "b"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "b"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "c"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "d"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "d"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "d"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ONLY_KW "ONLY"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "a"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "b"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ONLY_KW "ONLY"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "b"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ONLY_KW "ONLY"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "c"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "d"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ONLY_KW "ONLY"
      WHITESPACE " "
      NAME_REF
        IDENT "d"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "d"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "a"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "aa"
    EQ "="
    LITERAL
      STRING "'zzzz'"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "aa"
        EQ "="
        LITERAL
          STRING "'aaaa'"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    ONLY_KW "ONLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "a"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "aa"
    EQ "="
    LITERAL
      STRING "'zzzzz'"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "aa"
        EQ "="
        LITERAL
          STRING "'aaaaa'"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "b"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "aa"
    EQ "="
    LITERAL
      STRING "'zzz'"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "aa"
        EQ "="
        LITERAL
          STRING "'aaa'"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    ONLY_KW "ONLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "b"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "aa"
    EQ "="
    LITERAL
      STRING "'zzz'"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "aa"
        EQ "="
        LITERAL
          STRING "'aaa'"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "a"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "aa"
    EQ "="
    LITERAL
      STRING "'zzzzzz'"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "aa"
        WHITESPACE " "
        LIKE_KW "LIKE"
        WHITESPACE " "
        LITERAL
          STRING "'aaa%'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "a"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "b"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "b"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "c"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "d"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "d"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "d"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ONLY_KW "ONLY"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "a"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "b"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ONLY_KW "ONLY"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "b"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ONLY_KW "ONLY"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "c"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "d"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ONLY_KW "ONLY"
      WHITESPACE " "
      NAME_REF
        IDENT "d"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "d"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "b"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "aa"
    EQ "="
    LITERAL
      STRING "'new'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "a"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "b"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "b"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "c"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "d"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "d"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "d"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ONLY_KW "ONLY"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "a"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "b"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ONLY_KW "ONLY"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "b"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ONLY_KW "ONLY"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "c"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "d"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ONLY_KW "ONLY"
      WHITESPACE " "
      NAME_REF
        IDENT "d"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "d"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "a"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "aa"
    EQ "="
    LITERAL
      STRING "'new'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    ONLY_KW "ONLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "aa"
        EQ "="
        LITERAL
          STRING "'new'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "a"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "b"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "b"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "c"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "d"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "d"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "d"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ONLY_KW "ONLY"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "a"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "b"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ONLY_KW "ONLY"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "b"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ONLY_KW "ONLY"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "c"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "d"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ONLY_KW "ONLY"
      WHITESPACE " "
      NAME_REF
        IDENT "d"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "d"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "a"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "b"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "b"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "c"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "d"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "d"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "d"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ONLY_KW "ONLY"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "a"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "b"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ONLY_KW "ONLY"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "b"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ONLY_KW "ONLY"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "c"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "d"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ONLY_KW "ONLY"
      WHITESPACE " "
      NAME_REF
        IDENT "d"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "d"
          DOT "."
          NAME_REF
            IDENT "tableoid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_class"
          DOT "."
          NAME_REF
            IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Confirm PRIMARY KEY adds NOT NULL constraint to child table"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "z"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
      COMMA ","
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "PRIMARY"
        WHITESPACE " "
        KEY_KW "KEY"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "aa"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME_REF
              IDENT "b"
          R_PAREN ")"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "z"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        NULL_KW "NULL"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'text'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  CREATE_TABLE
    COMMENT "-- should fail"
    WHITESPACE "\n"
    COMMENT "-- ... but not UNIQUE."
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "z2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
      COMMA ","
      WHITESPACE " "
      UNIQUE_CONSTRAINT
        UNIQUE_KW "UNIQUE"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "aa"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME_REF
              IDENT "b"
          R_PAREN ")"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "z2"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        NULL_KW "NULL"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'text'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- should work"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Check inherited UPDATE with first child excluded"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "some_tab"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
        WHITESPACE " "
        NO_KW "no"
        WHITESPACE " "
        INHERIT_KW "inherit"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "some_tab_child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "some_tab"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "some_tab_child"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "i"
          COMMA ","
          WHITESPACE " "
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "i"
              PLUS "+"
              LITERAL
                INT_NUMBER "1"
          COMMA ","
          WHITESPACE " "
          TARGET
            LITERAL
              INT_NUMBER "0"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "1000"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "some_tab_child"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "f1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "f2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- while at it, also check that statement-level triggers fire"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "some_tab_stmt_trig_func"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TRIGGER_KW "trigger"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$begin raise notice 'updating some_tab'; return NULL; end;$$"
      WHITESPACE "\n"
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TRIGGER_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TRIGGER_KW "trigger"
    WHITESPACE " "
    NAME
      IDENT "some_tab_stmt_trig"
    WHITESPACE "\n  "
    BEFORE_KW "before"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "some_tab"
    WHITESPACE " "
    EXECUTE_KW "execute"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "some_tab_stmt_trig_func"
      ARG_LIST
        L_PAREN "("
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "some_tab"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "f3"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "11"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "12"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "f2"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "13"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "some_tab"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "f3"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "11"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "12"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "f2"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "13"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "some_tab"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "drop"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "some_tab_stmt_trig_func"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Check inherited UPDATE with all children excluded"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "some_tab"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "some_tab_child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "some_tab"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "some_tab_child"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "some_tab"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "some_tab"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "some_tab"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
    WHITESPACE " "
    RETURNING_KW "returning"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "some_tab"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      LITERAL
        FALSE_KW "false"
    WHITESPACE " "
    RETURNING_KW "returning"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "some_tab"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "some_tab"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Check UPDATE with inherited target and an inherited source table"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "foo"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "foo2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "foo"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bar"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bar2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bar"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "foo"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "foo"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "foo2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "foo2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bar"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bar"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bar"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bar"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bar2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bar2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bar2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bar2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      LITERAL
        INT_NUMBER "4"
      COMMA ","
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bar"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "f2"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "f2"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "100"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "f1"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "foo"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "tableoid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "bar"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "bar"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check UPDATE with inherited target and an appendrel subquery"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bar"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "f2"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "f2"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "100"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE "\n  "
      PAREN_EXPR
        L_PAREN "("
        WHITESPACE " "
        COMPOUND_SELECT
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "f1"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "foo"
          WHITESPACE " "
          UNION_KW "union"
          WHITESPACE " "
          ALL_KW "all"
          WHITESPACE " "
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  BIN_EXPR
                    NAME_REF
                      IDENT "f1"
                    PLUS "+"
                    LITERAL
                      INT_NUMBER "3"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "foo"
        WHITESPACE " "
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "ss"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "bar"
          DOT "."
          NAME_REF
            IDENT "f1"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "ss"
          DOT "."
          NAME_REF
            IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "tableoid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "bar"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "bar"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Check UPDATE with *partitioned* inherited target and an appendrel subquery"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "some_tab"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "some_tab"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "some_tab_child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "some_tab"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "some_tab_child"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_tab"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        CHAR_TYPE
          CHAR_KW "char"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_tab_part1"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_tab"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_tab_part2"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_tab"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_tab_part3"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_tab"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "3"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_tab"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_tab"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'b'"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE "\n  "
      PAREN_EXPR
        L_PAREN "("
        COMPOUND_SELECT
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "a"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "some_tab"
          WHITESPACE " "
          UNION_KW "union"
          WHITESPACE " "
          ALL_KW "all"
          WHITESPACE " "
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  BIN_EXPR
                    NAME_REF
                      IDENT "a"
                    PLUS "+"
                    LITERAL
                      INT_NUMBER "1"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "some_tab"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "ss"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          R_PAREN ")"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "parted_tab"
          DOT "."
          NAME_REF
            IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "ss"
          DOT "."
          NAME_REF
            IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "tableoid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "parted_tab"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "parted_tab"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  TRUNCATE_STMT
    TRUNCATE_KW "truncate"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "parted_tab"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_tab"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_tab"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'b'"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE "\n  "
      PAREN_EXPR
        L_PAREN "("
        COMPOUND_SELECT
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  LITERAL
                    INT_NUMBER "0"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "parted_tab"
          WHITESPACE " "
          UNION_KW "union"
          WHITESPACE " "
          ALL_KW "all"
          WHITESPACE " "
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  LITERAL
                    INT_NUMBER "1"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "parted_tab"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "ss"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          R_PAREN ")"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "parted_tab"
          DOT "."
          NAME_REF
            IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "ss"
          DOT "."
          NAME_REF
            IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "tableoid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "parted_tab"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "parted_tab"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- modifies partition key, but no rows will actually be updated"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    UPDATE_STMT
      UPDATE_KW "update"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "parted_tab"
      WHITESPACE " "
      SET_KW "set"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      WHITESPACE " "
      WHERE_CLAUSE
        WHERE_KW "where"
        WHITESPACE " "
        LITERAL
          FALSE_KW "false"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_tab"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Check UPDATE with multi-level partitioned inherited target"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mlparted_tab"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        CHAR_TYPE
          CHAR_KW "char"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mlparted_tab_part1"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mlparted_tab"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mlparted_tab_part2"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mlparted_tab"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "2"
    R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mlparted_tab_part3"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mlparted_tab"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "3"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mlparted_tab_part2a"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mlparted_tab_part2"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'a'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mlparted_tab_part2b"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mlparted_tab_part2"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'b'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mlparted_tab"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'b'"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'a'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mlparted_tab"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "mlp"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'xxx'"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE "\n  "
      PAREN_EXPR
        L_PAREN "("
        COMPOUND_SELECT
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "a"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "some_tab"
          WHITESPACE " "
          UNION_KW "union"
          WHITESPACE " "
          ALL_KW "all"
          WHITESPACE " "
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  BIN_EXPR
                    NAME_REF
                      IDENT "a"
                    PLUS "+"
                    LITERAL
                      INT_NUMBER "1"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "some_tab"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "ss"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          R_PAREN ")"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "mlp"
                DOT "."
                NAME_REF
                  IDENT "a"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "ss"
                DOT "."
                NAME_REF
                  IDENT "a"
            WHITESPACE " "
            AND_KW "and"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "mlp"
                DOT "."
                NAME_REF
                  IDENT "b"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'b'"
          R_PAREN ")"
        WHITESPACE " "
        OR_KW "or"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "mlp"
            DOT "."
            NAME_REF
              IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "3"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "tableoid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "mlparted_tab"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mlparted_tab"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mlparted_tab"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "some_tab"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "/* Test multiple inheritance of column defaults */"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "firstparent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "tomorrow"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "date"
        WHITESPACE " "
        DEFAULT_CONSTRAINT
          DEFAULT_KW "default"
          WHITESPACE " "
          BIN_EXPR
            CAST_EXPR
              CALL_EXPR
                NAME_REF
                  IDENT "now"
                ARG_LIST
                  L_PAREN "("
                  R_PAREN ")"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "date"
            WHITESPACE " "
            PLUS "+"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "secondparent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "tomorrow"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "date"
        WHITESPACE " "
        DEFAULT_CONSTRAINT
          DEFAULT_KW "default"
          WHITESPACE "  "
          BIN_EXPR
            CAST_EXPR
              CALL_EXPR
                NAME_REF
                  IDENT "now"
                ARG_LIST
                  L_PAREN "("
                  R_PAREN ")"
              WHITESPACE " "
              COLON2 "::"
              WHITESPACE " "
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "date"
            WHITESPACE "  "
            PLUS "+"
            WHITESPACE "  "
            LITERAL
              INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "jointchild"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "firstparent"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "secondparent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  CREATE_TABLE
    COMMENT "-- ok"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "thirdparent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "tomorrow"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "date"
        WHITESPACE " "
        DEFAULT_CONSTRAINT
          DEFAULT_KW "default"
          WHITESPACE " "
          BIN_EXPR
            CAST_EXPR
              CALL_EXPR
                NAME_REF
                  IDENT "now"
                ARG_LIST
                  L_PAREN "("
                  R_PAREN ")"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "date"
            WHITESPACE " "
            MINUS "-"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "otherchild"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "firstparent"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "thirdparent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  CREATE_TABLE
    COMMENT "-- not ok"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "otherchild"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "tomorrow"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "date"
        WHITESPACE " "
        DEFAULT_CONSTRAINT
          DEFAULT_KW "default"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "now"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
      R_PAREN ")"
    WHITESPACE "\n  "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "firstparent"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "thirdparent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- ok, child resolves ambiguous default"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "firstparent"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "secondparent"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "jointchild"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "thirdparent"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "otherchild"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test changing the type of inherited columns"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "d"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        STRING "'test'"
      COMMA ","
      LITERAL
        STRING "'one'"
      COMMA ","
      LITERAL
        STRING "'two'"
      COMMA ","
      LITERAL
        STRING "'three'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "a"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "aa"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
        WHITESPACE " "
        USING_KW "using"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "bit_length"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "aa"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "d"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- The above verified that we can change the type of a multiply-inherited"
    WHITESPACE "\n"
    COMMENT "-- column; but we should reject that if any definition was inherited from"
    WHITESPACE "\n"
    COMMENT "-- an unrelated parent."
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parent1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parent2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "childtab"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f4"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "f1"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail, conflict w/parent2"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parent1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "f2"
      WHITESPACE " "
      SET_TYPE
        TYPE_KW "type"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- ok"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test non-inheritable parent constraints"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "ff1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "p1chk"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "ff1"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
        WHITESPACE " "
        NO_KW "no"
        WHITESPACE " "
        INHERIT_KW "inherit"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "p2chk"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "ff1"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- connoinherit should be true for NO INHERIT constraint"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pc"
            DOT "."
            NAME_REF
              IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "contype"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "connoinherit"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "pc"
      WHITESPACE " "
      JOIN
        INNER_KW "inner"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_constraint"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "pgc"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "pgc"
              DOT "."
              NAME_REF
                IDENT "conrelid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "pc"
              DOT "."
              NAME_REF
                IDENT "oid"
          R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "pc"
          DOT "."
          NAME_REF
            IDENT "relname"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'p1'"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test that child does not inherit NO INHERIT constraints"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "c1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test that child does not override inheritable constraints of the parent"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "c2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "p2chk"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "ff1"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
        WHITESPACE " "
        NO_KW "no"
        WHITESPACE " "
        INHERIT_KW "inherit"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\t"
  COMMENT "--fails"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Tests for casting between the rowtypes of parent and child"
    WHITESPACE "\n"
    COMMENT "-- tables. See the pgsql-hackers thread beginning Dec. 4/04"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "base"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "i"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "derived"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "base"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "more_derived"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      LIKE_CLAUSE
        LIKE_KW "like"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "derived"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "derived"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "derived"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "i"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "derived"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "base"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "derived"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              LITERAL
                NULL_KW "NULL"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "derived"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "base"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- remove redundant conversions."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    WHITESPACE " "
    ERROR
      ON_KW "on"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "costs"
  WHITESPACE " "
  ERROR
    OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              CAST_EXPR
                CALL_EXPR
                  NAME_REF
                    ROW_KW "row"
                  ARG_LIST
                    L_PAREN "("
                    NAME_REF
                      IDENT "i"
                    COMMA ","
                    WHITESPACE " "
                    NAME_REF
                      IDENT "b"
                    R_PAREN ")"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "more_derived"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "derived"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "base"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "more_derived"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    WHITESPACE " "
    ERROR
      ON_KW "on"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "costs"
  WHITESPACE " "
  ERROR
    OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              CAST_EXPR
                TUPLE_EXPR
                  L_PAREN "("
                  LITERAL
                    INT_NUMBER "1"
                  COMMA ","
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "2"
                  R_PAREN ")"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "more_derived"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "derived"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "base"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "more_derived"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "derived"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "base"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "ff1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p2text"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "p2"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              TEXT_KW "text"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE " "
        LITERAL
          STRING "'select $1.f1'"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        SQL_KW "sql"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "c1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    COMMA ","
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "123456789"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'hi'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "42"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "p2text"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "c1"
                DOT "."
                STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "c1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "drop"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p2text"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "p2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "ac"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ac"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "ac_check"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "aa"
          WHITESPACE " "
          IS_NOT
            IS_KW "is"
            WHITESPACE " "
            NOT_KW "not"
          WHITESPACE " "
          LITERAL
            NULL_KW "null"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bc"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "bb"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ac"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pc"
            DOT "."
            NAME_REF
              IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "contype"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_expr"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "pgc"
                DOT "."
                NAME_REF
                  IDENT "conbin"
              COMMA ","
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "pc"
                DOT "."
                NAME_REF
                  IDENT "oid"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "consrc"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "pc"
      WHITESPACE " "
      JOIN
        INNER_KW "inner"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_constraint"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "pgc"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "pgc"
              DOT "."
              NAME_REF
                IDENT "conrelid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "pc"
              DOT "."
              NAME_REF
                IDENT "oid"
          R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "pc"
          DOT "."
          NAME_REF
            IDENT "relname"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            STRING "'ac'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'bc'"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ac"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        NULL_KW "NULL"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bc"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        NULL_KW "NULL"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bc"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "ac_check"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail, disallowed"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ac"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "ac_check"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pc"
            DOT "."
            NAME_REF
              IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "contype"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_expr"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "pgc"
                DOT "."
                NAME_REF
                  IDENT "conbin"
              COMMA ","
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "pc"
                DOT "."
                NAME_REF
                  IDENT "oid"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "consrc"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "pc"
      WHITESPACE " "
      JOIN
        INNER_KW "inner"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_constraint"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "pgc"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "pgc"
              DOT "."
              NAME_REF
                IDENT "conrelid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "pc"
              DOT "."
              NAME_REF
                IDENT "oid"
          R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "pc"
          DOT "."
          NAME_REF
            IDENT "relname"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            STRING "'ac'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'bc'"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- try the unnamed-constraint case"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ac"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "aa"
          WHITESPACE " "
          IS_NOT
            IS_KW "is"
            WHITESPACE " "
            NOT_KW "not"
          WHITESPACE " "
          LITERAL
            NULL_KW "null"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pc"
            DOT "."
            NAME_REF
              IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "contype"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_expr"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "pgc"
                DOT "."
                NAME_REF
                  IDENT "conbin"
              COMMA ","
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "pc"
                DOT "."
                NAME_REF
                  IDENT "oid"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "consrc"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "pc"
      WHITESPACE " "
      JOIN
        INNER_KW "inner"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_constraint"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "pgc"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "pgc"
              DOT "."
              NAME_REF
                IDENT "conrelid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "pc"
              DOT "."
              NAME_REF
                IDENT "oid"
          R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "pc"
          DOT "."
          NAME_REF
            IDENT "relname"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            STRING "'ac'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'bc'"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ac"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        NULL_KW "NULL"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bc"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "aa"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        NULL_KW "NULL"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bc"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "ac_aa_check"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail, disallowed"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ac"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "ac_aa_check"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pc"
            DOT "."
            NAME_REF
              IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "contype"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_expr"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "pgc"
                DOT "."
                NAME_REF
                  IDENT "conbin"
              COMMA ","
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "pc"
                DOT "."
                NAME_REF
                  IDENT "oid"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "consrc"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "pc"
      WHITESPACE " "
      JOIN
        INNER_KW "inner"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_constraint"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "pgc"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "pgc"
              DOT "."
              NAME_REF
                IDENT "conrelid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "pc"
              DOT "."
              NAME_REF
                IDENT "oid"
          R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "pc"
          DOT "."
          NAME_REF
            IDENT "relname"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            STRING "'ac'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'bc'"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ac"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "ac_check"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "aa"
          WHITESPACE " "
          IS_NOT
            IS_KW "is"
            WHITESPACE " "
            NOT_KW "not"
          WHITESPACE " "
          LITERAL
            NULL_KW "null"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bc"
    WHITESPACE " "
    NO_INHERIT
      NO_KW "no"
      WHITESPACE " "
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "ac"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pc"
            DOT "."
            NAME_REF
              IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "contype"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_expr"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "pgc"
                DOT "."
                NAME_REF
                  IDENT "conbin"
              COMMA ","
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "pc"
                DOT "."
                NAME_REF
                  IDENT "oid"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "consrc"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "pc"
      WHITESPACE " "
      JOIN
        INNER_KW "inner"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_constraint"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "pgc"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "pgc"
              DOT "."
              NAME_REF
                IDENT "conrelid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "pc"
              DOT "."
              NAME_REF
                IDENT "oid"
          R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "pc"
          DOT "."
          NAME_REF
            IDENT "relname"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            STRING "'ac'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'bc'"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bc"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "ac_check"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pc"
            DOT "."
            NAME_REF
              IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "contype"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_expr"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "pgc"
                DOT "."
                NAME_REF
                  IDENT "conbin"
              COMMA ","
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "pc"
                DOT "."
                NAME_REF
                  IDENT "oid"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "consrc"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "pc"
      WHITESPACE " "
      JOIN
        INNER_KW "inner"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_constraint"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "pgc"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "pgc"
              DOT "."
              NAME_REF
                IDENT "conrelid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "pc"
              DOT "."
              NAME_REF
                IDENT "oid"
          R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "pc"
          DOT "."
          NAME_REF
            IDENT "relname"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            STRING "'ac'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'bc'"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ac"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "ac_check"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pc"
            DOT "."
            NAME_REF
              IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "contype"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_expr"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "pgc"
                DOT "."
                NAME_REF
                  IDENT "conbin"
              COMMA ","
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "pc"
                DOT "."
                NAME_REF
                  IDENT "oid"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "consrc"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "pc"
      WHITESPACE " "
      JOIN
        INNER_KW "inner"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_constraint"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "pgc"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "pgc"
              DOT "."
              NAME_REF
                IDENT "conrelid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "pc"
              DOT "."
              NAME_REF
                IDENT "oid"
          R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "pc"
          DOT "."
          NAME_REF
            IDENT "relname"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            STRING "'ac'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'bc'"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bc"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ac"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "ac"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CONSTRAINT_KW "constraint"
          WHITESPACE " "
          NAME_REF
            IDENT "check_a"
          WHITESPACE " "
          CHECK_KW "check"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            NEQB "<>"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bc"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CONSTRAINT_KW "constraint"
          WHITESPACE " "
          NAME_REF
            IDENT "check_a"
          WHITESPACE " "
          CHECK_KW "check"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            NEQB "<>"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CONSTRAINT_KW "constraint"
          WHITESPACE " "
          NAME_REF
            IDENT "check_b"
          WHITESPACE " "
          CHECK_KW "check"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "b"
            WHITESPACE " "
            NEQB "<>"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ac"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pc"
            DOT "."
            NAME_REF
              IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "contype"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_expr"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "pgc"
                DOT "."
                NAME_REF
                  IDENT "conbin"
              COMMA ","
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "pc"
                DOT "."
                NAME_REF
                  IDENT "oid"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "consrc"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "pc"
      WHITESPACE " "
      JOIN
        INNER_KW "inner"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_constraint"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "pgc"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "pgc"
              DOT "."
              NAME_REF
                IDENT "conrelid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "pc"
              DOT "."
              NAME_REF
                IDENT "oid"
          R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "pc"
          DOT "."
          NAME_REF
            IDENT "relname"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            STRING "'ac'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'bc'"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bc"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ac"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "ac"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CONSTRAINT_KW "constraint"
          WHITESPACE " "
          NAME_REF
            IDENT "check_a"
          WHITESPACE " "
          CHECK_KW "check"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            NEQB "<>"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bc"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CONSTRAINT_KW "constraint"
          WHITESPACE " "
          NAME_REF
            IDENT "check_b"
          WHITESPACE " "
          CHECK_KW "check"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "b"
            WHITESPACE " "
            NEQB "<>"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "cc"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CONSTRAINT_KW "constraint"
          WHITESPACE " "
          NAME_REF
            IDENT "check_c"
          WHITESPACE " "
          CHECK_KW "check"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "c"
            WHITESPACE " "
            NEQB "<>"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ac"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bc"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pc"
            DOT "."
            NAME_REF
              IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "contype"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_expr"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "pgc"
                DOT "."
                NAME_REF
                  IDENT "conbin"
              COMMA ","
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "pc"
                DOT "."
                NAME_REF
                  IDENT "oid"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "consrc"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "pc"
      WHITESPACE " "
      JOIN
        INNER_KW "inner"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_constraint"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "pgc"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "pgc"
              DOT "."
              NAME_REF
                IDENT "conrelid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "pc"
              DOT "."
              NAME_REF
                IDENT "oid"
          R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "pc"
          DOT "."
          NAME_REF
            IDENT "relname"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            STRING "'ac'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'bc'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'cc'"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cc"
    WHITESPACE " "
    NO_INHERIT
      NO_KW "no"
      WHITESPACE " "
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "bc"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pc"
            DOT "."
            NAME_REF
              IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "contype"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pgc"
            DOT "."
            NAME_REF
              IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_expr"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "pgc"
                DOT "."
                NAME_REF
                  IDENT "conbin"
              COMMA ","
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "pc"
                DOT "."
                NAME_REF
                  IDENT "oid"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "consrc"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "pc"
      WHITESPACE " "
      JOIN
        INNER_KW "inner"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_constraint"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "pgc"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "pgc"
              DOT "."
              NAME_REF
                IDENT "conrelid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "pc"
              DOT "."
              NAME_REF
                IDENT "oid"
          R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "pc"
          DOT "."
          NAME_REF
            IDENT "relname"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            STRING "'ac'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'bc'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'cc'"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cc"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bc"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "ac"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "c1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    COMMA ","
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      PREFIX_EXPR
        MINUS "-"
        LITERAL
          INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p2"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "cc"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f2"
          R_ANGLE ">"
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p2"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f2"
          R_ANGLE ">"
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- check it without a name, too"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "delete"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c1"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p2"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f2"
          R_ANGLE ">"
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      PREFIX_EXPR
        MINUS "-"
        LITERAL
          INT_NUMBER "1"
      COMMA ","
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "  "
  CREATE_TABLE
    COMMENT "-- fail"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "c2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    COMMA ","
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "c3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f4"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c1"
    COMMA ","
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "c2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p2"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "pp1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "cc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pp1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pp1"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "a1"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "a1"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "cc2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f4"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                FLOAT_KW "float"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pp1"
    COMMA ","
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cc1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pp1"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "a2"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "a2"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pp1"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test for renaming in simple multiple inheritance"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inht1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inhs1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inhts"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "d"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inht1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhs1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inht1"
    WHITESPACE " "
    RENAME_COLUMN
      RENAME_KW "RENAME"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "aa"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inht1"
    WHITESPACE " "
    RENAME_COLUMN
      RENAME_KW "RENAME"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "bb"
  SEMICOLON ";"
  WHITESPACE "                "
  COMMENT "-- to be failed"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhts"
    WHITESPACE " "
    RENAME_COLUMN
      RENAME_KW "RENAME"
      WHITESPACE " "
      NAME_REF
        IDENT "aa"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "aaa"
  SEMICOLON ";"
  WHITESPACE "      "
  COMMENT "-- to be failed"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhts"
    WHITESPACE " "
    RENAME_COLUMN
      RENAME_KW "RENAME"
      WHITESPACE " "
      NAME_REF
        IDENT "d"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "dd"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhts"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test for adding a column to a parent table with complex inheritance"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inhta"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inhtb"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhta"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inhtc"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhtb"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inhtd"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhta"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhtb"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhtc"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhta"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "i"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
    COMMA ","
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "j"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              BIGINT_KW "bigint"
      WHITESPACE " "
      DEFAULT_CONSTRAINT
        DEFAULT_KW "DEFAULT"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhta"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhtb"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhtc"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhtd"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test for renaming in diamond inheritance"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inht2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inht1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inht3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inht1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inht4"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "z"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inht2"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inht3"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inht1"
    WHITESPACE " "
    RENAME_COLUMN
      RENAME_KW "RENAME"
      WHITESPACE " "
      NAME_REF
        IDENT "aa"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "aaa"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inhts"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "d"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inht2"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhs1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inht1"
    WHITESPACE " "
    RENAME_COLUMN
      RENAME_KW "RENAME"
      WHITESPACE " "
      NAME_REF
        IDENT "aaa"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "aaaa"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inht1"
    WHITESPACE " "
    RENAME_COLUMN
      RENAME_KW "RENAME"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      NAME_REF
        IDENT "bb"
  SEMICOLON ";"
  WHITESPACE "                "
  COMMENT "-- to be failed"
  WHITESPACE "\n\n"
  SELECT
    WITH_CLAUSE
      WITH_KW "WITH"
      WHITESPACE " "
      RECURSIVE_KW "RECURSIVE"
      WHITESPACE " "
      WITH_TABLE
        NAME
          IDENT "r"
        WHITESPACE " "
        AS_KW "AS"
        WHITESPACE " "
        L_PAREN "("
        WHITESPACE "\n  "
        COMPOUND_SELECT
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  CAST_EXPR
                    LITERAL
                      STRING "'inht1'"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "regclass"
                  WHITESPACE " "
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "inhrelid"
          WHITESPACE "\n"
          UNION_KW "UNION"
          WHITESPACE " "
          ALL_KW "ALL"
          WHITESPACE "\n  "
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  FIELD_EXPR
                    NAME_REF
                      IDENT "c"
                    DOT "."
                    NAME_REF
                      IDENT "inhrelid"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "pg_inherits"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "c"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "r"
            WHITESPACE " "
            WHERE_CLAUSE
              WHERE_KW "WHERE"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "r"
                  DOT "."
                  NAME_REF
                    IDENT "inhrelid"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "c"
                  DOT "."
                  NAME_REF
                    IDENT "inhparent"
        WHITESPACE "\n"
        R_PAREN ")"
    WHITESPACE "\n"
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "attrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            NAME_REF
              IDENT "attname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            NAME_REF
              IDENT "attinhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "e"
            DOT "."
            NAME_REF
              IDENT "expected"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "inhrelid"
              COMMA ","
              WHITESPACE " "
              TARGET
                CALL_EXPR
                  NAME_REF
                    IDENT "count"
                  ARG_LIST
                    L_PAREN "("
                    STAR "*"
                    R_PAREN ")"
                WHITESPACE " "
                AS_KW "AS"
                WHITESPACE " "
                NAME
                  IDENT "expected"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "pg_inherits"
          WHITESPACE "\n        "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "inhparent"
              WHITESPACE " "
              IN_KW "IN"
              WHITESPACE " "
              PAREN_EXPR
                L_PAREN "("
                SELECT
                  SELECT_CLAUSE
                    SELECT_KW "SELECT"
                    WHITESPACE " "
                    TARGET_LIST
                      TARGET
                        NAME_REF
                          IDENT "inhrelid"
                  WHITESPACE " "
                  FROM_CLAUSE
                    FROM_KW "FROM"
                    WHITESPACE " "
                    NAME_REF
                      IDENT "r"
                R_PAREN ")"
          WHITESPACE " "
          GROUP_BY_CLAUSE
            GROUP_KW "GROUP"
            WHITESPACE " "
            BY_KW "BY"
            WHITESPACE " "
            NAME_REF
              IDENT "inhrelid"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "e"
      WHITESPACE "\n  "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_attribute"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "a"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "e"
            DOT "."
            NAME_REF
              IDENT "inhrelid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            NAME_REF
              IDENT "attrelid"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      PREFIX_EXPR
        NOT_KW "NOT"
        WHITESPACE " "
        NAME_REF
          IDENT "attislocal"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      CAST_EXPR
        CAST_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            NAME_REF
              IDENT "attrelid"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NAME_KW "name"
      COMMA ","
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "a"
        DOT "."
        NAME_REF
          IDENT "attnum"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inht1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhs1"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  CREATE_TABLE
    COMMENT "-- Test non-inheritable indices [UNIQUE, EXCLUDE] constraints"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_constraints"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "val1"
        WHITESPACE " "
        CHAR_TYPE
          VARCHAR_KW "varchar"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "val2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      UNIQUE_CONSTRAINT
        UNIQUE_KW "UNIQUE"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "val1"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME_REF
              IDENT "val2"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_constraints_inh"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_constraints"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    ONLY_KW "ONLY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_constraints"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "DROP"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "test_constraints_val1_val2_key"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_constraints_inh"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_constraints"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_ex_constraints"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "circle"
      COMMA ","
      WHITESPACE "\n    "
      EXCLUDE_CONSTRAINT
        EXCLUDE_KW "EXCLUDE"
        WHITESPACE " "
        CONSTRAINT_INDEX_METHOD
          USING_KW "USING"
          WHITESPACE " "
          NAME_REF
            IDENT "gist"
        WHITESPACE " "
        CONSTRAINT_EXCLUSIONS
          L_PAREN "("
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          WITH_KW "WITH"
          WHITESPACE " "
          CUSTOM_OP
            AMP "&"
            AMP "&"
          R_PAREN ")"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_ex_constraints_inh"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_ex_constraints"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_ex_constraints"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "DROP"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "test_ex_constraints_c_excl"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_ex_constraints_inh"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_ex_constraints"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test non-inheritable foreign key constraints"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_primary_constraints"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_foreign_constraints"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        REFERENCES_CONSTRAINT
          REFERENCES_KW "REFERENCES"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "test_primary_constraints"
          L_PAREN "("
          NAME_REF
            IDENT "id"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_foreign_constraints_inh"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_foreign_constraints"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_foreign_constraints"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "DROP"
      WHITESPACE " "
      CONSTRAINT_KW "CONSTRAINT"
      WHITESPACE " "
      NAME_REF
        IDENT "test_foreign_constraints_id1_fkey"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_foreign_constraints_inh"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_foreign_constraints"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_primary_constraints"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test foreign key behavior"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_fk_1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_fk_1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_fk_2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        REFERENCES_CONSTRAINT
          REFERENCES_KW "references"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "inh_fk_1"
          WHITESPACE " "
          ON_KW "on"
          WHITESPACE " "
          DELETE_KW "delete"
          WHITESPACE " "
          CASCADE_KW "cascade"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_fk_2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "11"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "22"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "33"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_fk_2_child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_fk_2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_fk_2_child"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "111"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "222"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "delete"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_fk_1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "inh_fk_1"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "inh_fk_2"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_fk_1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_fk_2"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_fk_2_child"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test that parent and child CHECK constraints can be created in either order"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1_c1"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_check_constraint1"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1_c1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_check_constraint1"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1_c1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_check_constraint2"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_check_constraint2"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_check_constraint3"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "not"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1_c1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_check_constraint3"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "not"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1_c1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_check_constraint4"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "not"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_check_constraint4"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "not"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- allowed to merge enforced constraint with parent's not enforced constraint"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1_c1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_check_constraint5"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_check_constraint5"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "not"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_check_constraint6"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "not"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1_c1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_check_constraint6"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1_c1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_check_constraint9"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "not"
        WHITESPACE " "
        VALID_KW "valid"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_check_constraint9"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "not"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- the not-valid state of the child constraint will be ignored here."
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_check_constraint10"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "not"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1_c1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_check_constraint10"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "not"
        WHITESPACE " "
        VALID_KW "valid"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1_c2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CONSTRAINT_KW "constraint"
          WHITESPACE " "
          NAME_REF
            IDENT "inh_check_constraint4"
          WHITESPACE " "
          CHECK_KW "check"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "f1"
            WHITESPACE " "
            L_ANGLE "<"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "10"
          R_PAREN ")"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- but reverse is not allowed"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1_c1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_check_constraint7"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "not"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_check_constraint7"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_check_constraint8"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1_c1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_check_constraint8"
        WHITESPACE " "
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "not"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1_fail"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CONSTRAINT_KW "constraint"
          WHITESPACE " "
          NAME_REF
            IDENT "inh_check_constraint2"
          WHITESPACE " "
          CHECK_KW "check"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "f1"
            WHITESPACE " "
            L_ANGLE "<"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "10"
          R_PAREN ")"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    INHERITS_KW "inherits"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "p1"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- constraints with different enforceability can be merged by marking them as ENFORCED"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1_c3"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1_c1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- but not allowed if the child constraint is explicitly asked to be NOT ENFORCED"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1_fail"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CONSTRAINT_KW "constraint"
          WHITESPACE " "
          NAME_REF
            IDENT "inh_check_constraint6"
          WHITESPACE " "
          CHECK_KW "check"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "f1"
            WHITESPACE " "
            L_ANGLE "<"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "10"
          R_PAREN ")"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    INHERITS_KW "inherits"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "p1"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "p1_c1"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "conrelid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conenforced"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "convalidated"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "conname"
        WHITESPACE " "
        LIKE_KW "like"
        WHITESPACE " "
        LITERAL
          STRING "'inh\\_check\\_constraint%'"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- Similarly, check the merging of existing constraints; a parent constraint"
    WHITESPACE "\n"
    COMMENT "-- marked as NOT ENFORCED can merge with an ENFORCED child constraint, but the"
    WHITESPACE "\n"
    COMMENT "-- reverse is not allowed."
    WHITESPACE "\n"
    COMMENT "--"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CONSTRAINT_KW "constraint"
          WHITESPACE " "
          NAME_REF
            IDENT "p1_a_check"
          WHITESPACE " "
          CHECK_KW "check"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "f1"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1_c1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CONSTRAINT_KW "constraint"
          WHITESPACE " "
          NAME_REF
            IDENT "p1_a_check"
          WHITESPACE " "
          CHECK_KW "check"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "f1"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1_c1"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "p1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CONSTRAINT_KW "constraint"
          WHITESPACE " "
          NAME_REF
            IDENT "p1_a_check"
          WHITESPACE " "
          CHECK_KW "check"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "f1"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1_c1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CONSTRAINT_KW "constraint"
          WHITESPACE " "
          NAME_REF
            IDENT "p1_a_check"
          WHITESPACE " "
          CHECK_KW "check"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "f1"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
  WHITESPACE " "
  ERROR
    IDENT "enforced"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1_c1"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "p1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1_c1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- Test DROP behavior of multiply-defined CHECK constraints"
    WHITESPACE "\n"
    COMMENT "--"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CONSTRAINT_KW "constraint"
          WHITESPACE " "
          NAME_REF
            IDENT "f1_pos"
          WHITESPACE " "
          CHECK_KW "CHECK"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "f1"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1_c1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CONSTRAINT_KW "constraint"
          WHITESPACE " "
          NAME_REF
            IDENT "f1_pos"
          WHITESPACE " "
          CHECK_KW "CHECK"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "f1"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1_c1"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "f1_pos"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "f1_pos"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CONSTRAINT_KW "constraint"
          WHITESPACE " "
          NAME_REF
            IDENT "f1_pos"
          WHITESPACE " "
          CHECK_KW "CHECK"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "f1"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CONSTRAINT_KW "constraint"
          WHITESPACE " "
          NAME_REF
            IDENT "f1_pos"
          WHITESPACE " "
          CHECK_KW "CHECK"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "f1"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1p2_c1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1p2_c2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CONSTRAINT_KW "constraint"
          WHITESPACE " "
          NAME_REF
            IDENT "f1_pos"
          WHITESPACE " "
          CHECK_KW "CHECK"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "f1"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p2"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "f1_pos"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "f1_pos"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p2"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CONSTRAINT_KW "constraint"
          WHITESPACE " "
          NAME_REF
            IDENT "f1_pos"
          WHITESPACE " "
          CHECK_KW "CHECK"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "f1"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1_c1"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1_c2"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1_c1c2"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1_c1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1_c2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "f1_pos"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CONSTRAINT_KW "constraint"
          WHITESPACE " "
          NAME_REF
            IDENT "f1_pos"
          WHITESPACE " "
          CHECK_KW "CHECK"
          WHITESPACE " "
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "f1"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1_c1"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1_c2"
    TABLE_ARGS
      L_PAREN "("
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "f1_pos"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p1_c1c2"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1_c1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1_c2"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1_c2"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "f1_pos"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "f1_pos"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1_c1c2"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "f1_pos"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1_c2"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "f1_pos"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p1"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test that a valid child can have not-valid parent, but not vice versa"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "invalid_check_con"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "invalid_check_con_child"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "invalid_check_con"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "invalid_check_con_child"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_check_constraint"
        WHITESPACE " "
        CHECK_KW "check"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "not"
        WHITESPACE " "
        VALID_KW "valid"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "invalid_check_con"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_check_constraint"
        WHITESPACE " "
        CHECK_KW "check"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "invalid_check_con_child"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "inh_check_constraint"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "invalid_check_con"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "invalid_check_con_child"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_check_constraint"
        WHITESPACE " "
        CHECK_KW "check"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "invalid_check_con"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_check_constraint"
        WHITESPACE " "
        CHECK_KW "check"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "f1"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        R_PAREN ")"
      WHITESPACE " "
      NOT_VALID
        NOT_KW "not"
        WHITESPACE " "
        VALID_KW "valid"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "invalid_check_con"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "invalid_check_con_child"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- fail"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "conrelid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          NAME_REF
            IDENT "convalidated"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "connoinherit"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "conname"
        WHITESPACE " "
        LIKE_KW "like"
        WHITESPACE " "
        LITERAL
          STRING "'inh\\_check\\_constraint%'"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- We don't drop the invalid_check_con* tables, to test dump/reload with"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test parameterized append plans for inheritance trees"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "patest0"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "x"
      R_PAREN ")"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "x"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "x"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "0"
            COMMA ","
            LITERAL
              INT_NUMBER "1000"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "patest1"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "patest0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "patest1"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "x"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "x"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "0"
            COMMA ","
            LITERAL
              INT_NUMBER "1000"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "patest2"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "patest0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "patest2"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "x"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "x"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "0"
            COMMA ","
            LITERAL
              INT_NUMBER "1000"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "patest0i"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "patest0"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "id"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "patest1i"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "patest1"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "id"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "patest2i"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "patest2"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "id"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ANALYZE_STMT
    ANALYZE_KW "analyze"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "patest0"
  SEMICOLON ";"
  WHITESPACE "\n"
  ANALYZE_STMT
    ANALYZE_KW "analyze"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "patest1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ANALYZE_STMT
    ANALYZE_KW "analyze"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "patest2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "patest0"
      WHITESPACE " "
      JOIN
        JOIN_KW "join"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "f1"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "int4_tbl"
            WHITESPACE " "
            LIMIT_CLAUSE
              LIMIT_KW "limit"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "ss"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "id"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          NAME_REF
            IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "patest0"
      WHITESPACE " "
      JOIN
        JOIN_KW "join"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "f1"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "int4_tbl"
            WHITESPACE " "
            LIMIT_CLAUSE
              LIMIT_KW "limit"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "ss"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "id"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          NAME_REF
            IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_INDEX_STMT
    DROP_KW "drop"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "patest2i"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "patest0"
      WHITESPACE " "
      JOIN
        JOIN_KW "join"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "f1"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "int4_tbl"
            WHITESPACE " "
            LIMIT_CLAUSE
              LIMIT_KW "limit"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "ss"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "id"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          NAME_REF
            IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "patest0"
      WHITESPACE " "
      JOIN
        JOIN_KW "join"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "f1"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "int4_tbl"
            WHITESPACE " "
            LIMIT_CLAUSE
              LIMIT_KW "limit"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "ss"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "id"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          NAME_REF
            IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "patest0"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test merge-append plans for inheritance trees"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "matest0"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "serial"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          NAME_KW "name"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "matest1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "matest0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "matest2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "matest0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "matest3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "matest0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "matest0i"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "matest0"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      PAREN_EXPR
        L_PAREN "("
        BIN_EXPR
          LITERAL
            INT_NUMBER "1"
          MINUS "-"
          NAME_REF
            IDENT "id"
        R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "matest1i"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "matest1"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      PAREN_EXPR
        L_PAREN "("
        BIN_EXPR
          LITERAL
            INT_NUMBER "1"
          MINUS "-"
          NAME_REF
            IDENT "id"
        R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- create index matest2i on matest2 ((1-id));  -- intentionally missing"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "matest3i"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "matest3"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      PAREN_EXPR
        L_PAREN "("
        BIN_EXPR
          LITERAL
            INT_NUMBER "1"
          MINUS "-"
          NAME_REF
            IDENT "id"
        R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "matest1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          NAME_KW "name"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Test 1'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "matest1"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          NAME_KW "name"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Test 2'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "matest2"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          NAME_KW "name"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Test 3'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "matest2"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          NAME_KW "name"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Test 4'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "matest3"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          NAME_KW "name"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Test 5'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "matest3"
    WHITESPACE " "
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          NAME_KW "name"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'Test 6'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_indexscan"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- force use of seqscan/sort, so no merge"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "matest0"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      BIN_EXPR
        LITERAL
          INT_NUMBER "1"
        MINUS "-"
        NAME_REF
          IDENT "id"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "matest0"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      BIN_EXPR
        LITERAL
          INT_NUMBER "1"
        MINUS "-"
        NAME_REF
          IDENT "id"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              BIN_EXPR
                LITERAL
                  INT_NUMBER "1"
                MINUS "-"
                NAME_REF
                  IDENT "id"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "matest0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              BIN_EXPR
                LITERAL
                  INT_NUMBER "1"
                MINUS "-"
                NAME_REF
                  IDENT "id"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "matest0"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_indexscan"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- plan with fewest seqscans should be merge"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_parallel_append"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- Don't let parallel-append interfere"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "matest0"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      BIN_EXPR
        LITERAL
          INT_NUMBER "1"
        MINUS "-"
        NAME_REF
          IDENT "id"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "matest0"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      BIN_EXPR
        LITERAL
          INT_NUMBER "1"
        MINUS "-"
        NAME_REF
          IDENT "id"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              BIN_EXPR
                LITERAL
                  INT_NUMBER "1"
                MINUS "-"
                NAME_REF
                  IDENT "id"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "matest0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              BIN_EXPR
                LITERAL
                  INT_NUMBER "1"
                MINUS "-"
                NAME_REF
                  IDENT "id"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "matest0"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_parallel_append"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "  "
  COMMENT "-- bug #18652"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            LITERAL
              INT_NUMBER "1"
            WHITESPACE " "
            MINUS "-"
            WHITESPACE " "
            NAME_REF
              IDENT "id"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "c"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE "\n"
      PAREN_EXPR
        L_PAREN "("
        COMPOUND_SELECT
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "id"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "matest3"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "t1"
          WHITESPACE " "
          UNION_KW "union"
          WHITESPACE " "
          ALL_KW "all"
          WHITESPACE " "
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  BIN_EXPR
                    NAME_REF
                      IDENT "id"
                    WHITESPACE " "
                    STAR "*"
                    WHITESPACE " "
                    LITERAL
                      INT_NUMBER "2"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "matest3"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "t2"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "ss"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            LITERAL
              INT_NUMBER "1"
            WHITESPACE " "
            MINUS "-"
            WHITESPACE " "
            NAME_REF
              IDENT "id"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "c"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE "\n"
      PAREN_EXPR
        L_PAREN "("
        COMPOUND_SELECT
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "id"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "matest3"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "t1"
          WHITESPACE " "
          UNION_KW "union"
          WHITESPACE " "
          ALL_KW "all"
          WHITESPACE " "
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  BIN_EXPR
                    NAME_REF
                      IDENT "id"
                    WHITESPACE " "
                    STAR "*"
                    WHITESPACE " "
                    LITERAL
                      INT_NUMBER "2"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "matest3"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "t2"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "ss"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "matest0"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Check that use of an index with an extraneous column doesn't produce"
  WHITESPACE "\n"
  COMMENT "-- a plan with extraneous sorting"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "matest0"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "d"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "matest1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "matest0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "matest0i"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "matest0"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "b"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "matest1i"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "matest1"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "b"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_nestloop"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- we want a plan with two MergeAppends"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "matest0"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "matest0"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "b"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "b"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "c"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "d"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "t1"
        DOT "."
        NAME_REF
          IDENT "b"
    WHITESPACE " "
    LIMIT_CLAUSE
      LIMIT_KW "limit"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_nestloop"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "matest0"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test a MergeAppend plan where one child requires a sort"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "matest0"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "matest1"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "matest0"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "matest0"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "generate_series"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "400"
                R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "matest1"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "generate_series"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "200"
                R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ANALYZE_STMT
    ANALYZE_KW "analyze"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "matest0"
  SEMICOLON ";"
  WHITESPACE "\n"
  ANALYZE_STMT
    ANALYZE_KW "analyze"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "matest1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "matest0"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "100"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "matest0"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test merge-append for UNION ALL append relations"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_indexscan"
    WHITESPACE " "
    EQ "="
  WHITESPACE " "
  ERROR
    ON_KW "on"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_bitmapscan"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check handling of duplicated, constant, or volatile targetlist items"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  COMPOUND_SELECT
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "thousand"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "tenthous"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "tenk1"
    WHITESPACE "\n"
    UNION_KW "UNION"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "thousand"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "thousand"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "tenk1"
      WHITESPACE "\n"
      ORDER_BY_CLAUSE
        ORDER_KW "ORDER"
        WHITESPACE " "
        BY_KW "BY"
        WHITESPACE " "
        NAME_REF
          IDENT "thousand"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "tenthous"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  COMPOUND_SELECT
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "thousand"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "tenthous"
          COMMA ","
          WHITESPACE " "
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "thousand"
              PLUS "+"
              NAME_REF
                IDENT "tenthous"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "x"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "tenk1"
    WHITESPACE "\n"
    UNION_KW "UNION"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              INT_NUMBER "42"
          COMMA ","
          WHITESPACE " "
          TARGET
            LITERAL
              INT_NUMBER "42"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "hundred"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "tenk1"
      WHITESPACE "\n"
      ORDER_BY_CLAUSE
        ORDER_KW "ORDER"
        WHITESPACE " "
        BY_KW "BY"
        WHITESPACE " "
        NAME_REF
          IDENT "thousand"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "tenthous"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  COMPOUND_SELECT
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "thousand"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "tenthous"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "tenk1"
    WHITESPACE "\n"
    UNION_KW "UNION"
    WHITESPACE " "
    ALL_KW "ALL"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "thousand"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              CALL_EXPR
                NAME_REF
                  IDENT "random"
                ARG_LIST
                  L_PAREN "("
                  R_PAREN ")"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      INTEGER_KW "integer"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        NAME_REF
          IDENT "tenk1"
      WHITESPACE "\n"
      ORDER_BY_CLAUSE
        ORDER_KW "ORDER"
        WHITESPACE " "
        BY_KW "BY"
        WHITESPACE " "
        NAME_REF
          IDENT "thousand"
        COMMA ","
        WHITESPACE " "
        NAME_REF
          IDENT "tenthous"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check min/max aggregate optimization"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "x"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE "\n  "
      PAREN_EXPR
        L_PAREN "("
        COMPOUND_SELECT
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "unique1"
                  WHITESPACE " "
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "x"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "tenk1"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "a"
          WHITESPACE "\n   "
          UNION_KW "UNION"
          WHITESPACE " "
          ALL_KW "ALL"
          WHITESPACE "\n   "
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "unique2"
                  WHITESPACE " "
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "x"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "tenk1"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "b"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "y"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE "\n  "
      PAREN_EXPR
        L_PAREN "("
        COMPOUND_SELECT
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "unique1"
                  WHITESPACE " "
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "x"
                COMMA ","
                WHITESPACE " "
                TARGET
                  NAME_REF
                    IDENT "unique1"
                  WHITESPACE " "
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "y"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "tenk1"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "a"
          WHITESPACE "\n   "
          UNION_KW "UNION"
          WHITESPACE " "
          ALL_KW "ALL"
          WHITESPACE "\n   "
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "unique2"
                  WHITESPACE " "
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "x"
                COMMA ","
                WHITESPACE " "
                TARGET
                  NAME_REF
                    IDENT "unique2"
                  WHITESPACE " "
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "y"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "tenk1"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "b"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- XXX planner doesn't recognize that index on unique2 is sufficiently sorted"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "x"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "y"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE "\n  "
      PAREN_EXPR
        L_PAREN "("
        COMPOUND_SELECT
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "thousand"
                  WHITESPACE " "
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "x"
                COMMA ","
                WHITESPACE " "
                TARGET
                  NAME_REF
                    IDENT "tenthous"
                  WHITESPACE " "
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "y"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "tenk1"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "a"
          WHITESPACE "\n   "
          UNION_KW "UNION"
          WHITESPACE " "
          ALL_KW "ALL"
          WHITESPACE "\n   "
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "unique2"
                  WHITESPACE " "
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "x"
                COMMA ","
                WHITESPACE " "
                TARGET
                  NAME_REF
                    IDENT "unique2"
                  WHITESPACE " "
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "y"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "tenk1"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "b"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "x"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "y"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- exercise rescan code path via a repeatedly-evaluated subquery"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE "\n    "
      TARGET_LIST
        TARGET
          ARRAY_EXPR
            ARRAY_KW "ARRAY"
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    FIELD_EXPR
                      NAME_REF
                        IDENT "f"
                      DOT "."
                      NAME_REF
                        IDENT "i"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                PAREN_EXPR
                  L_PAREN "("
                  WHITESPACE "\n        "
                  COMPOUND_SELECT
                    PAREN_EXPR
                      L_PAREN "("
                      SELECT
                        SELECT_CLAUSE
                          SELECT_KW "SELECT"
                          WHITESPACE " "
                          TARGET_LIST
                            TARGET
                              BIN_EXPR
                                NAME_REF
                                  IDENT "d"
                                WHITESPACE " "
                                PLUS "+"
                                WHITESPACE " "
                                FIELD_EXPR
                                  NAME_REF
                                    IDENT "g"
                                  DOT "."
                                  NAME_REF
                                    IDENT "i"
                        WHITESPACE " "
                        FROM_CLAUSE
                          FROM_KW "FROM"
                          WHITESPACE " "
                          CALL_EXPR
                            NAME_REF
                              IDENT "generate_series"
                            ARG_LIST
                              L_PAREN "("
                              LITERAL
                                INT_NUMBER "4"
                              COMMA ","
                              WHITESPACE " "
                              LITERAL
                                INT_NUMBER "30"
                              COMMA ","
                              WHITESPACE " "
                              LITERAL
                                INT_NUMBER "3"
                              R_PAREN ")"
                          WHITESPACE " "
                          ALIAS
                            NAME
                              IDENT "d"
                        WHITESPACE " "
                        ORDER_BY_CLAUSE
                          ORDER_KW "ORDER"
                          WHITESPACE " "
                          BY_KW "BY"
                          WHITESPACE " "
                          LITERAL
                            INT_NUMBER "1"
                      R_PAREN ")"
                    WHITESPACE "\n        "
                    UNION_KW "UNION"
                    WHITESPACE " "
                    ALL_KW "ALL"
                    WHITESPACE "\n        "
                    PAREN_EXPR
                      L_PAREN "("
                      SELECT
                        SELECT_CLAUSE
                          SELECT_KW "SELECT"
                          WHITESPACE " "
                          TARGET_LIST
                            TARGET
                              BIN_EXPR
                                NAME_REF
                                  IDENT "d"
                                WHITESPACE " "
                                PLUS "+"
                                WHITESPACE " "
                                FIELD_EXPR
                                  NAME_REF
                                    IDENT "g"
                                  DOT "."
                                  NAME_REF
                                    IDENT "i"
                        WHITESPACE " "
                        FROM_CLAUSE
                          FROM_KW "FROM"
                          WHITESPACE " "
                          CALL_EXPR
                            NAME_REF
                              IDENT "generate_series"
                            ARG_LIST
                              L_PAREN "("
                              LITERAL
                                INT_NUMBER "0"
                              COMMA ","
                              WHITESPACE " "
                              LITERAL
                                INT_NUMBER "30"
                              COMMA ","
                              WHITESPACE " "
                              LITERAL
                                INT_NUMBER "5"
                              R_PAREN ")"
                          WHITESPACE " "
                          ALIAS
                            NAME
                              IDENT "d"
                        WHITESPACE " "
                        ORDER_BY_CLAUSE
                          ORDER_KW "ORDER"
                          WHITESPACE " "
                          BY_KW "BY"
                          WHITESPACE " "
                          LITERAL
                            INT_NUMBER "1"
                      R_PAREN ")"
                  WHITESPACE "\n    "
                  R_PAREN ")"
                WHITESPACE " "
                ALIAS
                  NAME
                    IDENT "f"
                  COLUMN_LIST
                    L_PAREN "("
                    COLUMN
                      NAME
                        IDENT "i"
                    R_PAREN ")"
              WHITESPACE "\n    "
              ORDER_BY_CLAUSE
                ORDER_KW "ORDER"
                WHITESPACE " "
                BY_KW "BY"
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "f"
                  DOT "."
                  NAME_REF
                    IDENT "i"
              WHITESPACE " "
              LIMIT_CLAUSE
                LIMIT_KW "LIMIT"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "10"
            R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "g"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "i"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE "\n    "
      TARGET_LIST
        TARGET
          ARRAY_EXPR
            ARRAY_KW "ARRAY"
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    FIELD_EXPR
                      NAME_REF
                        IDENT "f"
                      DOT "."
                      NAME_REF
                        IDENT "i"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                PAREN_EXPR
                  L_PAREN "("
                  WHITESPACE "\n        "
                  COMPOUND_SELECT
                    PAREN_EXPR
                      L_PAREN "("
                      SELECT
                        SELECT_CLAUSE
                          SELECT_KW "SELECT"
                          WHITESPACE " "
                          TARGET_LIST
                            TARGET
                              BIN_EXPR
                                NAME_REF
                                  IDENT "d"
                                WHITESPACE " "
                                PLUS "+"
                                WHITESPACE " "
                                FIELD_EXPR
                                  NAME_REF
                                    IDENT "g"
                                  DOT "."
                                  NAME_REF
                                    IDENT "i"
                        WHITESPACE " "
                        FROM_CLAUSE
                          FROM_KW "FROM"
                          WHITESPACE " "
                          CALL_EXPR
                            NAME_REF
                              IDENT "generate_series"
                            ARG_LIST
                              L_PAREN "("
                              LITERAL
                                INT_NUMBER "4"
                              COMMA ","
                              WHITESPACE " "
                              LITERAL
                                INT_NUMBER "30"
                              COMMA ","
                              WHITESPACE " "
                              LITERAL
                                INT_NUMBER "3"
                              R_PAREN ")"
                          WHITESPACE " "
                          ALIAS
                            NAME
                              IDENT "d"
                        WHITESPACE " "
                        ORDER_BY_CLAUSE
                          ORDER_KW "ORDER"
                          WHITESPACE " "
                          BY_KW "BY"
                          WHITESPACE " "
                          LITERAL
                            INT_NUMBER "1"
                      R_PAREN ")"
                    WHITESPACE "\n        "
                    UNION_KW "UNION"
                    WHITESPACE " "
                    ALL_KW "ALL"
                    WHITESPACE "\n        "
                    PAREN_EXPR
                      L_PAREN "("
                      SELECT
                        SELECT_CLAUSE
                          SELECT_KW "SELECT"
                          WHITESPACE " "
                          TARGET_LIST
                            TARGET
                              BIN_EXPR
                                NAME_REF
                                  IDENT "d"
                                WHITESPACE " "
                                PLUS "+"
                                WHITESPACE " "
                                FIELD_EXPR
                                  NAME_REF
                                    IDENT "g"
                                  DOT "."
                                  NAME_REF
                                    IDENT "i"
                        WHITESPACE " "
                        FROM_CLAUSE
                          FROM_KW "FROM"
                          WHITESPACE " "
                          CALL_EXPR
                            NAME_REF
                              IDENT "generate_series"
                            ARG_LIST
                              L_PAREN "("
                              LITERAL
                                INT_NUMBER "0"
                              COMMA ","
                              WHITESPACE " "
                              LITERAL
                                INT_NUMBER "30"
                              COMMA ","
                              WHITESPACE " "
                              LITERAL
                                INT_NUMBER "5"
                              R_PAREN ")"
                          WHITESPACE " "
                          ALIAS
                            NAME
                              IDENT "d"
                        WHITESPACE " "
                        ORDER_BY_CLAUSE
                          ORDER_KW "ORDER"
                          WHITESPACE " "
                          BY_KW "BY"
                          WHITESPACE " "
                          LITERAL
                            INT_NUMBER "1"
                      R_PAREN ")"
                  WHITESPACE "\n    "
                  R_PAREN ")"
                WHITESPACE " "
                ALIAS
                  NAME
                    IDENT "f"
                  COLUMN_LIST
                    L_PAREN "("
                    COLUMN
                      NAME
                        IDENT "i"
                    R_PAREN ")"
              WHITESPACE "\n    "
              ORDER_BY_CLAUSE
                ORDER_KW "ORDER"
                WHITESPACE " "
                BY_KW "BY"
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "f"
                  DOT "."
                  NAME_REF
                    IDENT "i"
              WHITESPACE " "
              LIMIT_CLAUSE
                LIMIT_KW "LIMIT"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "10"
            R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "g"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "i"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_indexscan"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_bitmapscan"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- Check handling of MULTIEXPR SubPlans in inherited updates"
    WHITESPACE "\n"
    COMMENT "--"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inhpar"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NAME_KW "name"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inhcld"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NAME_KW "name"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhcld"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "inhpar"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhpar"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "x"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              NAME_REF
                IDENT "x"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "5"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhcld"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CAST_EXPR
              NAME_REF
                IDENT "x"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "x"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "6"
            COMMA ","
            LITERAL
              INT_NUMBER "10"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhpar"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "i"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "f1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "f2"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            FIELD_EXPR
              NAME_REF
                IDENT "i"
              DOT "."
              NAME_REF
                IDENT "f1"
          COMMA ","
          WHITESPACE " "
          TARGET
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "i"
                DOT "."
                NAME_REF
                  IDENT "f2"
              WHITESPACE " "
              CUSTOM_OP
                PIPE "|"
                PIPE "|"
              WHITESPACE " "
              LITERAL
                STRING "'-'"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "int4_tbl"
      WHITESPACE " "
      LIMIT_CLAUSE
        LIMIT_KW "limit"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhpar"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "i"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "f1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "f2"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            FIELD_EXPR
              NAME_REF
                IDENT "i"
              DOT "."
              NAME_REF
                IDENT "f1"
          COMMA ","
          WHITESPACE " "
          TARGET
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "i"
                DOT "."
                NAME_REF
                  IDENT "f2"
              WHITESPACE " "
              CUSTOM_OP
                PIPE "|"
                PIPE "|"
              WHITESPACE " "
              LITERAL
                STRING "'-'"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "int4_tbl"
      WHITESPACE " "
      LIMIT_CLAUSE
        LIMIT_KW "limit"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "inhpar"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhpar"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- And the same for partitioned cases"
    WHITESPACE "\n"
    COMMENT "--"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inhpar"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NAME_KW "name"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    RANGE_KW "range"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "f1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inhcld1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NAME_KW "name"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inhcld2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                NAME_KW "name"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhpar"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "attach"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "inhcld1"
      WHITESPACE " "
      FOR_KW "for"
      WHITESPACE " "
      VALUES_KW "values"
      WHITESPACE " "
      FROM_KW "from"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
      WHITESPACE " "
      TO_KW "to"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhpar"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "attach"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "inhcld2"
      WHITESPACE " "
      FOR_KW "for"
      WHITESPACE " "
      VALUES_KW "values"
      WHITESPACE " "
      FROM_KW "from"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "5"
      R_PAREN ")"
      WHITESPACE " "
      TO_KW "to"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "100"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhpar"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "x"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              NAME_REF
                IDENT "x"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "10"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhpar"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "i"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "f1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "f2"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            FIELD_EXPR
              NAME_REF
                IDENT "i"
              DOT "."
              NAME_REF
                IDENT "f1"
          COMMA ","
          WHITESPACE " "
          TARGET
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "i"
                DOT "."
                NAME_REF
                  IDENT "f2"
              WHITESPACE " "
              CUSTOM_OP
                PIPE "|"
                PIPE "|"
              WHITESPACE " "
              LITERAL
                STRING "'-'"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "int4_tbl"
      WHITESPACE " "
      LIMIT_CLAUSE
        LIMIT_KW "limit"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "update"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhpar"
    WHITESPACE " "
    ALIAS
      NAME
        IDENT "i"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "f1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "f2"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            FIELD_EXPR
              NAME_REF
                IDENT "i"
              DOT "."
              NAME_REF
                IDENT "f1"
          COMMA ","
          WHITESPACE " "
          TARGET
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "i"
                DOT "."
                NAME_REF
                  IDENT "f2"
              WHITESPACE " "
              CUSTOM_OP
                PIPE "|"
                PIPE "|"
              WHITESPACE " "
              LITERAL
                STRING "'-'"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "int4_tbl"
      WHITESPACE " "
      LIMIT_CLAUSE
        LIMIT_KW "limit"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "inhpar"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Also check ON CONFLICT"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhpar"
    WHITESPACE " "
    ALIAS
      AS_KW "as"
      WHITESPACE " "
      NAME
        IDENT "i"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "7"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    CONFLICT_KW "conflict"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "f1"
    R_PAREN ")"
    WHITESPACE "\n  "
    DO_KW "do"
    WHITESPACE " "
    UPDATE_KW "update"
    WHITESPACE " "
    SET_KW "set"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "f1"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "f2"
    R_PAREN ")"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    L_PAREN "("
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            FIELD_EXPR
              NAME_REF
                IDENT "i"
              DOT "."
              NAME_REF
                IDENT "f1"
          COMMA ","
          WHITESPACE " "
          TARGET
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "i"
                DOT "."
                NAME_REF
                  IDENT "f2"
              WHITESPACE " "
              CUSTOM_OP
                PIPE "|"
                PIPE "|"
              WHITESPACE " "
              LITERAL
                STRING "'+'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "inhpar"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- tuple order might be unstable here"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inhpar"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- Check handling of a constant-null CHECK constraint"
    WHITESPACE "\n"
    COMMENT "--"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "cnullparent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "cnullchild"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      CHECK_CONSTRAINT
        CHECK_KW "check"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "f1"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1"
          WHITESPACE " "
          OR_KW "or"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "f1"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              NULL_KW "null"
        R_PAREN ")"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cnullparent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cnullchild"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cnullchild"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cnullchild"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "cnullparent"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "cnullparent"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cnullparent"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- Test inheritance of NOT NULL constraints"
    WHITESPACE "\n"
    COMMENT "--"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "pp1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "cc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pp1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "cc2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f4"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                FLOAT_KW "float"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pp1"
    COMMA ","
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cc1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "cc3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pp1"
    COMMA ","
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cc1"
    COMMA ","
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cc2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pp1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "f1"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cc3"
    WHITESPACE " "
    NO_INHERIT
      NO_KW "no"
      WHITESPACE " "
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "pp1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cc3"
    WHITESPACE " "
    NO_INHERIT
      NO_KW "no"
      WHITESPACE " "
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "cc1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cc3"
    WHITESPACE " "
    NO_INHERIT
      NO_KW "no"
      WHITESPACE " "
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "cc2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cc3"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- named NOT NULL constraint"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cc1"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      NAME_REF
        IDENT "a2"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
      WHITESPACE " "
      NOT_NULL_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME_REF
          IDENT "nn"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pp1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "f1"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- cannot create table with inconsistent NO INHERIT constraint"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "cc3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
  WHITESPACE " "
  ERROR
    NO_KW "no"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    INHERITS_KW "inherits"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "cc1"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- change NO INHERIT status of inherited constraint: no dice, it's inherited"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cc2"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      NOT_NULL_CONSTRAINT
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  WHITESPACE " "
  ERROR
    IDENT "a2"
  WHITESPACE " "
  ERROR
    NO_KW "no"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- remove constraint from cc2: no dice, it's inherited"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cc2"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "a2"
      WHITESPACE " "
      DROP_NOT_NULL
        DROP_KW "drop"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- remove constraint from cc1, should succeed"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "a2"
      WHITESPACE " "
      DROP_NOT_NULL
        DROP_KW "drop"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- same for cc2"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cc2"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "f1"
      WHITESPACE " "
      DROP_NOT_NULL
        DROP_KW "drop"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- remove from cc1, should fail again"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "cc1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "f1"
      WHITESPACE " "
      DROP_NOT_NULL
        DROP_KW "drop"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- remove from pp1, should succeed"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pp1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "f1"
      WHITESPACE " "
      DROP_NOT_NULL
        DROP_KW "drop"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pp1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "f1"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Leave these tables around, for pg_upgrade testing"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- test that removing inheritance of NOT NULL NO INHERIT works correctly"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_parent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
  WHITESPACE " "
  ERROR
    NO_KW "no"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "f2"
  WHITESPACE " "
  ERROR
    INT_KW "int"
  WHITESPACE " "
  ERROR
    NOT_KW "not"
  WHITESPACE " "
  ERROR
    NULL_KW "null"
  WHITESPACE " "
  ERROR
    NO_KW "no"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
  WHITESPACE " "
  ERROR
    NO_KW "no"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "f2"
  WHITESPACE " "
  ERROR
    INT_KW "int"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "inh_parent"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child"
    WHITESPACE " "
    NO_INHERIT
      NO_KW "no"
      WHITESPACE " "
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "inh_parent"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- test that inhcount is updated correctly through multiple inheritance"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_pp1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_cc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_pp1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_cc2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f4"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                FLOAT_KW "float"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_pp1"
    COMMA ","
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_cc1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_pp1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "f1"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_cc2"
    WHITESPACE " "
    NO_INHERIT
      NO_KW "no"
      WHITESPACE " "
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "inh_pp1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_cc2"
    WHITESPACE " "
    NO_INHERIT
      NO_KW "no"
      WHITESPACE " "
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "inh_cc1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_pp1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_cc1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_cc2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_pp1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_cc1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_pp1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_cc2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f4"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                FLOAT_KW "float"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_pp1"
    COMMA ","
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_cc1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_pp1"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "f1"
      WHITESPACE " "
      DROP_NOT_NULL
        DROP_KW "drop"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_pp1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_cc1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_cc2"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  CREATE_TABLE
    COMMENT "-- Test a not-null addition that must walk down the hierarchy"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_parent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "i"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_grandchild"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        IDENT "i"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
      WHITESPACE " "
      NOT_NULL_CONSTRAINT
        NOT_KW "NOT"
        WHITESPACE " "
        NULL_KW "NULL"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_grandchild"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test the same constraint name for different columns in different parents"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_parent1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          CONSTRAINT_KW "constraint"
          WHITESPACE " "
          NAME_REF
            IDENT "nn"
          WHITESPACE " "
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_parent2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          CONSTRAINT_KW "constraint"
          WHITESPACE " "
          NAME_REF
            IDENT "nn"
          WHITESPACE " "
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_child1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_child2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      FOREIGN_KEY_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "foo"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              NOT_KW "not"
  WHITESPACE " "
  ERROR
    NULL_KW "null"
  WHITESPACE " "
  ERROR
    IDENT "a"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    INHERITS_KW "inherits"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "inh_parent1"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "inh_parent2"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child2"
    WHITESPACE " "
    NO_INHERIT
      NO_KW "no"
      WHITESPACE " "
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "inh_parent2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent2"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test multiple parents with overlapping primary keys"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_parent1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "a"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME_REF
              IDENT "b"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_parent2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "d"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "e"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "d"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME_REF
              IDENT "b"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_child"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "conrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "contype"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conkey"
        COMMA ","
        WHITESPACE "\n "
        TARGET
          NAME_REF
            IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "connoinherit"
    WHITESPACE "\n "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "contype"
          WHITESPACE " "
          IN_KW "in"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'n'"
            COMMA ","
            LITERAL
              STRING "'p'"
            R_PAREN ")"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE "\n "
        BIN_EXPR
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "conrelid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          WHITESPACE " "
          IN_KW "in"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'inh_child'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_parent1'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_parent2'"
            R_PAREN ")"
    WHITESPACE "\n "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent2"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- NOT NULL NO INHERIT"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn_parent"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn_child"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn_parent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn_parent"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "add"
      WHITESPACE " "
      NOT_NULL_CONSTRAINT
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  WHITESPACE " "
  ERROR
    IDENT "a"
  WHITESPACE " "
  ERROR
    NO_KW "no"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn_child2"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn_parent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "conrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "contype"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conkey"
        COMMA ","
        WHITESPACE "\n "
        TARGET
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "select"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    NAME_REF
                      IDENT "attname"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "from"
                WHITESPACE " "
                NAME_REF
                  IDENT "pg_attribute"
              WHITESPACE " "
              WHERE_CLAUSE
                WHERE_KW "where"
                WHITESPACE " "
                BIN_EXPR
                  BIN_EXPR
                    NAME_REF
                      IDENT "attrelid"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    NAME_REF
                      IDENT "conrelid"
                  WHITESPACE " "
                  AND_KW "and"
                  WHITESPACE " "
                  BIN_EXPR
                    NAME_REF
                      IDENT "attnum"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    INDEX_EXPR
                      NAME_REF
                        IDENT "conkey"
                      L_BRACK "["
                      LITERAL
                        INT_NUMBER "1"
                      R_BRACK "]"
            R_PAREN ")"
        COMMA ","
        WHITESPACE "\n "
        TARGET
          NAME_REF
            IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "connoinherit"
    WHITESPACE "\n "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "contype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'n'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE "\n "
        BIN_EXPR
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "conrelid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          WHITESPACE " "
          LIKE_KW "like"
          WHITESPACE " "
          LITERAL
            STRING "'inh\\_nn\\_%'"
    WHITESPACE "\n "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn_parent"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn_child"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn_child2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn_parent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
  WHITESPACE " "
  ERROR
    NOT_KW "NOT"
  WHITESPACE " "
  ERROR
    NULL_KW "NULL"
  WHITESPACE " "
  ERROR
    IDENT "a"
  WHITESPACE " "
  ERROR
    NO_KW "NO"
  WHITESPACE " "
  ERROR
    INHERIT_KW "INHERIT"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn_child"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn_parent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn_parent"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "nna"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              NOT_KW "NOT"
  WHITESPACE " "
  ERROR
    NULL_KW "NULL"
  WHITESPACE " "
  ERROR
    IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn_parent"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "ALTER"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "SET"
        WHITESPACE " "
        NOT_KW "NOT"
        WHITESPACE " "
        NULL_KW "NULL"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn_parent"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Adding a PK at the top level of a hierarchy should cause all descendants"
    WHITESPACE "\n"
    COMMENT "-- to be checked for nulls, even past a no-inherit constraint"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn_lvl1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn_lvl2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "INHERITS"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn_lvl1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn_lvl3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      FOREIGN_KEY_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "foo"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              NOT_KW "NOT"
  WHITESPACE " "
  ERROR
    NULL_KW "NULL"
  WHITESPACE " "
  ERROR
    IDENT "a"
  WHITESPACE " "
  ERROR
    NO_KW "NO"
  WHITESPACE " "
  ERROR
    INHERIT_KW "INHERIT"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    INHERITS_KW "INHERITS"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "inh_nn_lvl2"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn_lvl1"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "PRIMARY"
        WHITESPACE " "
        KEY_KW "KEY"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "a"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn_lvl1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn_lvl2"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn_lvl3"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Disallow specifying conflicting NO INHERIT flags for the same constraint"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
  WHITESPACE " "
  ERROR
    NOT_KW "not"
  WHITESPACE " "
  ERROR
    NULL_KW "null"
  WHITESPACE " "
  ERROR
    IDENT "a"
  WHITESPACE " "
  ERROR
    NO_KW "no"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
  WHITESPACE " "
  ERROR
    NO_KW "no"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    INHERITS_KW "INHERITS"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "inh_nn1"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
  WHITESPACE "  "
  ERROR
    NOT_KW "not"
  WHITESPACE " "
  ERROR
    NULL_KW "null"
  WHITESPACE " "
  ERROR
    IDENT "a"
  WHITESPACE " "
  ERROR
    NO_KW "no"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn4"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
  WHITESPACE " "
  ERROR
    NO_KW "no"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "b"
  WHITESPACE " "
  ERROR
    INT_KW "int"
  ERROR
    COMMA ","
  WHITESPACE "  "
  ERROR
    NOT_KW "not"
  WHITESPACE " "
  ERROR
    NULL_KW "null"
  WHITESPACE " "
  ERROR
    IDENT "a"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    IF_EXISTS
      IF_KW "IF"
      WHITESPACE " "
      EXISTS_KW "EXISTS"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn2"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn3"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn4"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- test inherit/deinherit"
    WHITESPACE "\n"
    COMMENT "--"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_parent"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_child1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_child2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- inh_child1 should have not null constraint"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child1"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "inh_parent"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- should fail, missing NOT NULL constraint"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child2"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "inh_child1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child2"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "f1"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child2"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "inh_child1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- add NOT NULL constraint recursively"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "f1"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "conrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "contype"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conislocal"
    WHITESPACE "\n "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "contype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'n'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE "\n "
        BIN_EXPR
          NAME_REF
            IDENT "conrelid"
          WHITESPACE " "
          IN_KW "in"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            CAST_EXPR
              LITERAL
                STRING "'inh_parent'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COMMA ","
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                STRING "'inh_child1'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COMMA ","
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                STRING "'inh_child2'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            R_PAREN ")"
    WHITESPACE "\n "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- test deinherit procedure"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- deinherit inh_child1"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_child3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child1"
    WHITESPACE " "
    NO_INHERIT
      NO_KW "no"
      WHITESPACE " "
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "inh_parent"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "conrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "contype"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conislocal"
    WHITESPACE "\n "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "contype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'n'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE "\n "
        BIN_EXPR
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "conrelid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          WHITESPACE " "
          IN_KW "in"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'inh_parent'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_child1'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_child2'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_child3'"
            R_PAREN ")"
    WHITESPACE "\n "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child2"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child3"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- ALTER TABLE INHERIT ensures that the child has not-null constraints"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_parent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "inh_parent"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- nope"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Can't merge a NO INHERIT constraint with a normal one"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_parent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
  WHITESPACE " "
  ERROR
    NO_KW "no"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "inh_parent"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- don't interfere with other types of constraints"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_parent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      EXCLUDE_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_parent_excl"
        WHITESPACE " "
        EXCLUDE_KW "exclude"
        WHITESPACE " "
        CONSTRAINT_EXCLUSIONS
          L_PAREN "("
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          WHITESPACE " "
          WITH_KW "with"
          WHITESPACE " "
          EQ "="
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      UNIQUE_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_parent_uq"
        WHITESPACE " "
        UNIQUE_KW "unique"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "a"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "add"
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "inh_parent_fk"
        WHITESPACE " "
        FOREIGN_KW "foreign"
        WHITESPACE " "
        KEY_KW "key"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "a"
          R_PAREN ")"
        WHITESPACE " "
        REFERENCES_KW "references"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "inh_parent"
        WHITESPACE " "
        L_PAREN "("
        NAME_REF
          IDENT "a"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_child2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_child3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      LIKE_CLAUSE
        LIKE_KW "like"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "inh_parent"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child3"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "inh_parent"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "conrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "contype"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conislocal"
    WHITESPACE "\n "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE "\n "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        CAST_EXPR
          CAST_EXPR
            NAME_REF
              IDENT "conrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  TEXT_KW "text"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            STRING "'inh_parent'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'inh_child'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'inh_child2'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'inh_child3'"
          R_PAREN ")"
    WHITESPACE "\n "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child2"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child3"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- test multi inheritance tree"
    WHITESPACE "\n"
    COMMENT "--"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_parent"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_child1"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_child2"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_child3"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- show constraint info"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "conrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "contype"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conislocal"
    WHITESPACE "\n "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "contype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'n'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE "\n "
        BIN_EXPR
          NAME_REF
            IDENT "conrelid"
          WHITESPACE " "
          IN_KW "in"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            CAST_EXPR
              LITERAL
                STRING "'inh_parent'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COMMA ","
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                STRING "'inh_child1'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COMMA ","
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                STRING "'inh_child2'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COMMA ","
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                STRING "'inh_child3'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            R_PAREN ")"
    WHITESPACE "\n "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      CAST_EXPR
        CAST_EXPR
          NAME_REF
            IDENT "conrelid"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- test child table with inherited columns and"
    WHITESPACE "\n"
    COMMENT "-- with explicitly specified not null constraints"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_parent_1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_parent_2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_child"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent_1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent_2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- show constraint info"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "conrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "contype"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conislocal"
    WHITESPACE "\n "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "contype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'n'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE "\n "
        BIN_EXPR
          NAME_REF
            IDENT "conrelid"
          WHITESPACE " "
          IN_KW "in"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            CAST_EXPR
              LITERAL
                STRING "'inh_parent_1'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COMMA ","
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                STRING "'inh_parent_2'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COMMA ","
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                STRING "'inh_child'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            R_PAREN ")"
    WHITESPACE "\n "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      CAST_EXPR
        CAST_EXPR
          NAME_REF
            IDENT "conrelid"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- also drops inh_child table"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent_1"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent_2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- test multi layer inheritance tree"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_p1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_p2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_p3"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_p4"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_multiparent"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_p1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_p2"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_p3"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_p4"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- constraint on f1 should have three parents"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "conrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "contype"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "select"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    NAME_REF
                      IDENT "attname"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "from"
                WHITESPACE " "
                NAME_REF
                  IDENT "pg_attribute"
              WHITESPACE " "
              WHERE_CLAUSE
                WHERE_KW "where"
                WHITESPACE " "
                BIN_EXPR
                  BIN_EXPR
                    NAME_REF
                      IDENT "attrelid"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    NAME_REF
                      IDENT "conrelid"
                  WHITESPACE " "
                  AND_KW "and"
                  WHITESPACE " "
                  BIN_EXPR
                    NAME_REF
                      IDENT "attnum"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    INDEX_EXPR
                      NAME_REF
                        IDENT "conkey"
                      L_BRACK "["
                      LITERAL
                        INT_NUMBER "1"
                      R_BRACK "]"
            R_PAREN ")"
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          NAME_REF
            IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conislocal"
    WHITESPACE "\n "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "contype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'n'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE "\n "
        BIN_EXPR
          CAST_EXPR
            NAME_REF
              IDENT "conrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          WHITESPACE " "
          IN_KW "in"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'inh_p1'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_p2'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_p3'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_p4'"
            COMMA ","
            WHITESPACE "\n\t"
            LITERAL
              STRING "'inh_multiparent'"
            R_PAREN ")"
    WHITESPACE "\n "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      CAST_EXPR
        CAST_EXPR
          NAME_REF
            IDENT "conrelid"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "conname"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_multiparent2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_p3"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_multiparent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "conrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "contype"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "select"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    NAME_REF
                      IDENT "attname"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "from"
                WHITESPACE " "
                NAME_REF
                  IDENT "pg_attribute"
              WHITESPACE " "
              WHERE_CLAUSE
                WHERE_KW "where"
                WHITESPACE " "
                BIN_EXPR
                  BIN_EXPR
                    NAME_REF
                      IDENT "attrelid"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    NAME_REF
                      IDENT "conrelid"
                  WHITESPACE " "
                  AND_KW "and"
                  WHITESPACE " "
                  BIN_EXPR
                    NAME_REF
                      IDENT "attnum"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    INDEX_EXPR
                      NAME_REF
                        IDENT "conkey"
                      L_BRACK "["
                      LITERAL
                        INT_NUMBER "1"
                      R_BRACK "]"
            R_PAREN ")"
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          NAME_REF
            IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conislocal"
    WHITESPACE "\n "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "contype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'n'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE "\n "
        BIN_EXPR
          CAST_EXPR
            NAME_REF
              IDENT "conrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
          WHITESPACE " "
          IN_KW "in"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'inh_p3'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_multiparent'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_multiparent2'"
            R_PAREN ")"
    WHITESPACE "\n "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      CAST_EXPR
        CAST_EXPR
          NAME_REF
            IDENT "conrelid"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "conname"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_p1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_p2"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_p3"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_p4"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- Test ALTER CONSTRAINT SET [NO] INHERIT"
    WHITESPACE "\n"
    COMMENT "--"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
  WHITESPACE " "
  ERROR
    NO_KW "no"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn2"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "inh_nn1"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f4"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                FLOAT_KW "float"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn4"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f5"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f4"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                FLOAT_KW "float"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn4"
    WHITESPACE " "
    INHERIT
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "inh_nn2"
    COMMA ","
    WHITESPACE " "
    INHERIT
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "inh_nn1"
    COMMA ","
    WHITESPACE " "
    INHERIT
      INHERIT_KW "inherit"
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "inh_nn3"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn1"
    WHITESPACE " "
    ALTER_CONSTRAINT
      ALTER_KW "alter"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "inh_nn1_f1_not_null"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "conrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conkey"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "connoinherit"
    WHITESPACE "\n "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "contype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'n'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE "\n "
        BIN_EXPR
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "conrelid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          WHITESPACE " "
          IN_KW "in"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'inh_nn1'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_nn2'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_nn3'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_nn4'"
            R_PAREN ")"
    WHITESPACE "\n "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ALTER CONSTRAINT NO INHERIT should work on top-level constraints"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn1"
    WHITESPACE " "
    ALTER_CONSTRAINT
      ALTER_KW "alter"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "inh_nn1_f1_not_null"
  WHITESPACE " "
  ERROR
    NO_KW "no"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "conrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conkey"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "connoinherit"
    WHITESPACE "\n "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "contype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'n'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE "\n "
        BIN_EXPR
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "conrelid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          WHITESPACE " "
          IN_KW "in"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'inh_nn1'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_nn2'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_nn3'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_nn4'"
            R_PAREN ")"
    WHITESPACE "\n "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- A constraint that's NO INHERIT can be dropped without damaging children"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn1"
    WHITESPACE " "
    DROP_CONSTRAINT
      DROP_KW "drop"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "inh_nn1_f1_not_null"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "conrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "connoinherit"
    WHITESPACE "\n "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "contype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'n'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE "\n "
        BIN_EXPR
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "conrelid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          WHITESPACE " "
          IN_KW "in"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'inh_nn1'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_nn2'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_nn3'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_nn4'"
            R_PAREN ")"
    WHITESPACE "\n "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn2"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn3"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn4"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test inherit constraint and make sure it validates."
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
  WHITESPACE " "
  ERROR
    NO_KW "no"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        NULL_KW "NULL"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'sample'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn1"
    WHITESPACE " "
    ALTER_CONSTRAINT
      ALTER_KW "alter"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "inh_nn1_f1_not_null"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  SEMICOLON ";"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "delete"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn2"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn4"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn1"
    WHITESPACE "\t"
    COMMENT "-- test multicommand alter table while at it"
    WHITESPACE "\n   "
    ALTER_CONSTRAINT
      ALTER_KW "alter"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "inh_nn1_f1_not_null"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  ERROR
    COMMA ","
  WHITESPACE "\n   "
  ERROR
    ALTER_KW "alter"
  WHITESPACE " "
  ERROR
    CONSTRAINT_KW "constraint"
  WHITESPACE " "
  ERROR
    IDENT "inh_nn1_f1_not_null"
  WHITESPACE " "
  ERROR
    NO_KW "no"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "conrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "connoinherit"
    WHITESPACE "\n "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "contype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'n'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE "\n "
        BIN_EXPR
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "conrelid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          WHITESPACE " "
          IN_KW "in"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'inh_nn1'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_nn2'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_nn3'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_nn4'"
            R_PAREN ")"
    WHITESPACE "\n "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn2"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn3"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn4"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test not null inherit constraint which already exists on child table."
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
  WHITESPACE " "
  ERROR
    NO_KW "no"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f4"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                FLOAT_KW "float"
      COMMA ","
      WHITESPACE " "
      FOREIGN_KEY_CONSTRAINT
        CONSTRAINT_KW "constraint"
        WHITESPACE " "
        NAME
          IDENT "nn3_f1"
        WHITESPACE " "
        PATH
          PATH_SEGMENT
            NAME_REF
              NOT_KW "not"
  WHITESPACE " "
  ERROR
    NULL_KW "null"
  WHITESPACE " "
  ERROR
    IDENT "f1"
  WHITESPACE " "
  ERROR
    NO_KW "no"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    INHERITS_KW "inherits"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "inh_nn1"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "inh_nn2"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "conrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conkey"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "connoinherit"
    WHITESPACE "\n "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "contype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'n'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE "\n "
        BIN_EXPR
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "conrelid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          WHITESPACE " "
          IN_KW "in"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'inh_nn1'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_nn2'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_nn3'"
            R_PAREN ")"
    WHITESPACE "\n "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- error: inh_nn3 has an incompatible NO INHERIT constraint"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn1"
    WHITESPACE " "
    ALTER_CONSTRAINT
      ALTER_KW "alter"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "inh_nn1_f1_not_null"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn3"
    WHITESPACE " "
    ALTER_CONSTRAINT
      ALTER_KW "alter"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "nn3_f1"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn1"
    WHITESPACE " "
    ALTER_CONSTRAINT
      ALTER_KW "alter"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "inh_nn1_f1_not_null"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- now it works"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "conrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conkey"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "coninhcount"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "conislocal"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "connoinherit"
    WHITESPACE "\n "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_constraint"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "contype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'n'"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE "\n "
        BIN_EXPR
          CAST_EXPR
            CAST_EXPR
              NAME_REF
                IDENT "conrelid"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    TEXT_KW "text"
          WHITESPACE " "
          IN_KW "in"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'inh_nn1'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_nn2'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'inh_nn3'"
            R_PAREN ")"
    WHITESPACE "\n "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn2"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn3"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Negative scenarios for alter constraint .. inherit."
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        CHECK_CONSTRAINT
          CHECK_KW "check"
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "f1"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "5"
          R_PAREN ")"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
        WHITESPACE " "
        REFERENCES_CONSTRAINT
          REFERENCES_KW "references"
          WHITESPACE " "
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "inh_nn1"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- constraints other than not-null are not supported"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn1"
    WHITESPACE " "
    ALTER_CONSTRAINT
      ALTER_KW "alter"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "inh_nn1_f1_check"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn1"
    WHITESPACE " "
    ALTER_CONSTRAINT
      ALTER_KW "alter"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "inh_nn1_pkey"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn1"
    WHITESPACE " "
    ALTER_CONSTRAINT
      ALTER_KW "alter"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "inh_nn1_f1_fkey"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- try to drop a nonexistant constraint"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn1"
    WHITESPACE " "
    ALTER_CONSTRAINT
      ALTER_KW "alter"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "foo"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    COMMENT "-- Can't modify inheritability of inherited constraints"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_nn2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn2"
    WHITESPACE " "
    ALTER_CONSTRAINT
      ALTER_KW "alter"
      WHITESPACE " "
      CONSTRAINT_KW "constraint"
      WHITESPACE " "
      NAME_REF
        IDENT "inh_nn1_f2_not_null"
  WHITESPACE " "
  ERROR
    NO_KW "no"
  WHITESPACE " "
  ERROR
    INHERIT_KW "inherit"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_nn2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Mixed ownership inheritance tree"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  CREATE_ROLE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    ROLE_KW "role"
    WHITESPACE " "
    NAME
      IDENT "regress_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_ROLE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    ROLE_KW "role"
    WHITESPACE " "
    NAME
      IDENT "regress_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "grant"
    WHITESPACE " "
    ALL_KW "all"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    NAME_REF
      IDENT "public"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    IDENT "regress_alice"
    COMMA ","
    WHITESPACE " "
    IDENT "regress_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "grant"
    WHITESPACE " "
    IDENT "regress_alice"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    IDENT "regress_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "set"
    WHITESPACE " "
    SESSION_KW "session"
    WHITESPACE " "
    AUTHORIZATION_KW "authorization"
    WHITESPACE " "
    IDENT "regress_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_parent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "set"
    WHITESPACE " "
    SESSION_KW "session"
    WHITESPACE " "
    AUTHORIZATION_KW "authorization"
    WHITESPACE " "
    IDENT "regress_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "set"
    WHITESPACE " "
    SESSION_KW "session"
    WHITESPACE " "
    AUTHORIZATION_KW "authorization"
    WHITESPACE " "
    IDENT "regress_alice"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- alice can't do this: she doesn't own inh_child"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      DROP_NOT_NULL
        DROP_KW "drop"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "set"
    WHITESPACE " "
    SESSION_KW "session"
    WHITESPACE " "
    AUTHORIZATION_KW "authorization"
    WHITESPACE " "
    IDENT "regress_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      IDENT "a"
      WHITESPACE " "
      DROP_NOT_NULL
        DROP_KW "drop"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "reset"
    WHITESPACE " "
    SESSION_KW "session"
    WHITESPACE " "
    AUTHORIZATION_KW "authorization"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_parent"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_child"
  SEMICOLON ";"
  WHITESPACE "\n"
  REVOKE_STMT
    REVOKE_KW "revoke"
    WHITESPACE " "
    ALL_KW "all"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    SCHEMA_KW "schema"
    WHITESPACE " "
    NAME_REF
      IDENT "public"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    IDENT "regress_alice"
    COMMA ","
    WHITESPACE " "
    IDENT "regress_bob"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "drop"
    WHITESPACE " "
    ROLE_KW "role"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_alice"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "regress_bob"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- Check use of temporary tables with inheritance trees"
    WHITESPACE "\n"
    COMMENT "--"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_perm_parent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_temp_parent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_temp_child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_perm_parent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  CREATE_TABLE
    COMMENT "-- ok"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_perm_child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_temp_parent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  CREATE_TABLE
    COMMENT "-- error"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "inh_temp_child_2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_temp_parent"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- ok"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_perm_parent"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_temp_parent"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_temp_child"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_temp_child_2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "tableoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "a1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "inh_perm_parent"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "tableoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "a1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "inh_temp_parent"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_perm_parent"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "inh_temp_parent"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- Check that constraint exclusion works correctly with partitions using"
    WHITESPACE "\n"
    COMMENT "-- implicit constraints generated from the partition bound information."
    WHITESPACE "\n"
    COMMENT "--"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "list_parted"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE "\t"
        CHAR_TYPE
          VARCHAR_KW "varchar"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_ab_cd"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'ab'"
    COMMA ","
    WHITESPACE " "
    LITERAL
      STRING "'cd'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_ef_gh"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'ef'"
    COMMA ","
    WHITESPACE " "
    LITERAL
      STRING "'gh'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_null_xy"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      NULL_KW "null"
    COMMA ","
    WHITESPACE " "
    LITERAL
      STRING "'xy'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "list_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "list_parted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        IS_KW "is"
        WHITESPACE " "
        LITERAL
          NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "list_parted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        IS_NOT
          IS_KW "is"
          WHITESPACE " "
          NOT_KW "not"
        WHITESPACE " "
        LITERAL
          NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "list_parted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            STRING "'ab'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'cd'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'ef'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "list_parted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'ab'"
        WHITESPACE " "
        OR_KW "or"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          IN_KW "in"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              NULL_KW "null"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'cd'"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "list_parted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'ab'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "range_list_parted"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE "\t"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE "\t"
        CHAR_TYPE
          CHAR_KW "char"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "2"
            R_PAREN ")"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    RANGE_KW "range"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_1_10"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_list_parted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "10"
    R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_1_10_ab"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_1_10"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'ab'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_1_10_cd"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_1_10"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'cd'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_10_20"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_list_parted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "10"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "20"
    R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_10_20_ab"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_10_20"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'ab'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_10_20_cd"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_10_20"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'cd'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_21_30"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_list_parted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "21"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "30"
    R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_21_30_ab"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_21_30"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'ab'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_21_30_cd"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_21_30"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'cd'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_40_inf"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_list_parted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "40"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      MAXVALUE_KW "maxvalue"
    R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_40_inf_ab"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_40_inf"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'ab'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_40_inf_cd"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_40_inf"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      STRING "'cd'"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "part_40_inf_null"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "part_40_inf"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      NULL_KW "null"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "range_list_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "range_list_parted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "5"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "range_list_parted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'ab'"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "range_list_parted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BETWEEN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          BETWEEN_KW "between"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "3"
          WHITESPACE " "
          AND_KW "and"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "23"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          IN_KW "in"
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            LITERAL
              STRING "'ab'"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "/* Should select no rows because range partition key cannot be null */"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "range_list_parted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        IS_KW "is"
        WHITESPACE " "
        LITERAL
          NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "/* Should only select rows from the null-accepting partition */"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "range_list_parted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        IS_KW "is"
        WHITESPACE " "
        LITERAL
          NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "range_list_parted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          IS_NOT
            IS_KW "is"
            WHITESPACE " "
            NOT_KW "not"
          WHITESPACE " "
          LITERAL
            NULL_KW "null"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "67"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "range_list_parted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        GTEQ ">="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "30"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "list_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_list_parted"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that constraint exclusion is able to cope with the partition"
    WHITESPACE "\n"
    COMMENT "-- constraint emitted for multi-column range partitioned tables"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mcrparted"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    RANGE_KW "range"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    COMMA ","
    WHITESPACE " "
    CALL_EXPR
      NAME_REF
        IDENT "abs"
      ARG_LIST
        L_PAREN "("
        NAME_REF
          IDENT "b"
        R_PAREN ")"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "c"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mcrparted_def"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mcrparted"
    WHITESPACE " "
    DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mcrparted0"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mcrparted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      MINVALUE_KW "minvalue"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      MINVALUE_KW "minvalue"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      MINVALUE_KW "minvalue"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mcrparted1"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mcrparted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "10"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "5"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "10"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mcrparted2"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mcrparted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "10"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "5"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "10"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "10"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "10"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "10"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mcrparted3"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mcrparted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "11"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "20"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "10"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "10"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mcrparted4"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mcrparted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "20"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "10"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "10"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "20"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "20"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "20"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mcrparted5"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mcrparted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "20"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "20"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "20"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      MAXVALUE_KW "maxvalue"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      MAXVALUE_KW "maxvalue"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      MAXVALUE_KW "maxvalue"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mcrparted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\t"
  COMMENT "-- scans mcrparted0, mcrparted_def"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mcrparted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          CALL_EXPR
            NAME_REF
              IDENT "abs"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b"
              R_PAREN ")"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "5"
  SEMICOLON ";"
  WHITESPACE "\t"
  COMMENT "-- scans mcrparted1, mcrparted_def"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mcrparted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          CALL_EXPR
            NAME_REF
              IDENT "abs"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b"
              R_PAREN ")"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "5"
  SEMICOLON ";"
  WHITESPACE "\t"
  COMMENT "-- scans mcrparted1, mcrparted2, mcrparted_def"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mcrparted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        CALL_EXPR
          NAME_REF
            IDENT "abs"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "b"
            R_PAREN ")"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "5"
  SEMICOLON ";"
  WHITESPACE "\t"
  COMMENT "-- scans all partitions"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mcrparted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        PREFIX_EXPR
          MINUS "-"
          LITERAL
            INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\t"
  COMMENT "-- scans all partitions"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mcrparted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "a"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "20"
          WHITESPACE " "
          AND_KW "and"
          WHITESPACE " "
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "abs"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "b"
                R_PAREN ")"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "10"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\t"
  COMMENT "-- scans mcrparted4"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mcrparted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "20"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "c"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "20"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- scans mcrparted3, mcrparte4, mcrparte5, mcrparted_def"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- check that partitioned table Appends cope with being referenced in"
    WHITESPACE "\n"
    COMMENT "-- subplans"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_minmax"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        CHAR_TYPE
          VARCHAR_KW "varchar"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "16"
            R_PAREN ")"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    RANGE_KW "range"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "parted_minmax1"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_minmax"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "10"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "parted_minmax1i"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_minmax1"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_minmax"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      LITERAL
        STRING "'12345'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "parted_minmax"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'12345'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "parted_minmax"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'12345'"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "parted_minmax"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test code that uses Append nodes in place of MergeAppend when the"
  WHITESPACE "\n"
  COMMENT "-- partition ordering matches the desired ordering."
  WHITESPACE "\n\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "mcrparted_a_abs_c_idx"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mcrparted"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "abs"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- MergeAppend must be used when a default partition exists"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mcrparted"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "abs"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "c"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mcrparted_def"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Append is used for a RANGE partitioned table with no default"
  WHITESPACE "\n"
  COMMENT "-- and no subpartitions"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mcrparted"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "abs"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "c"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Append is used with subpaths in reverse order with backwards index scans"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mcrparted"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      DESC_KW "desc"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "abs"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
      WHITESPACE " "
      DESC_KW "desc"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      DESC_KW "desc"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check that Append plan is used containing a MergeAppend for sub-partitions"
  WHITESPACE "\n"
  COMMENT "-- that are unordered."
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mcrparted5"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mcrparted5"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mcrparted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "20"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "20"
    COMMA ","
    WHITESPACE " "
    LITERAL
      INT_NUMBER "20"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      MAXVALUE_KW "maxvalue"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      MAXVALUE_KW "maxvalue"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      MAXVALUE_KW "maxvalue"
    R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mcrparted5a"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mcrparted5"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    L_PAREN "("
    LITERAL
      INT_NUMBER "20"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mcrparted5_def"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mcrparted5"
    WHITESPACE " "
    DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mcrparted"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "abs"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "c"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mcrparted5_def"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check that an Append plan is used and the sub-partitions are flattened"
  WHITESPACE "\n"
  COMMENT "-- into the main Append when the sub-partition is unordered but contains"
  WHITESPACE "\n"
  COMMENT "-- just a single sub-partition."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "abs"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mcrparted"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "abs"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "c"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check that Append is used when the sub-partitioned tables are pruned"
  WHITESPACE "\n"
  COMMENT "-- during planning."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mcrparted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "20"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "abs"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "c"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_bitmapscan"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_sort"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mclparted"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mclparted1"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mclparted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mclparted2"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mclparted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    L_PAREN "("
    LITERAL
      INT_NUMBER "2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mclparted"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure an Append is used for a list partition with an order by."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mclparted"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Ensure a MergeAppend is used when a partition exists with interleaved"
    WHITESPACE "\n"
    COMMENT "-- datums in the partition bound."
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mclparted3_5"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mclparted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    L_PAREN "("
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      INT_NUMBER "5"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mclparted4"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mclparted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    L_PAREN "("
    LITERAL
      INT_NUMBER "4"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mclparted"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mclparted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        IN_KW "in"
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          COMMA ","
          LITERAL
            INT_NUMBER "4"
          COMMA ","
          LITERAL
            INT_NUMBER "5"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Introduce a NULL and DEFAULT partition so we can test more complex cases"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mclparted_null"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mclparted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    L_PAREN "("
    LITERAL
      NULL_KW "null"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mclparted_def"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mclparted"
    WHITESPACE " "
    DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Append can be used providing we don't scan the interleaved partition"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mclparted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        IN_KW "in"
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "2"
          COMMA ","
          LITERAL
            INT_NUMBER "4"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mclparted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          IN_KW "in"
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "2"
            COMMA ","
            LITERAL
              INT_NUMBER "4"
            R_PAREN ")"
        WHITESPACE " "
        OR_KW "or"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          IS_KW "is"
          WHITESPACE " "
          LITERAL
            NULL_KW "null"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test a more complex case where the NULL partition allows some other value"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mclparted_null"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "mclparted_0_null"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mclparted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    COMMA ","
    LITERAL
      NULL_KW "null"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure MergeAppend is used since 0 and NULLs are in the same partition."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mclparted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          IN_KW "in"
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "2"
            COMMA ","
            LITERAL
              INT_NUMBER "4"
            R_PAREN ")"
        WHITESPACE " "
        OR_KW "or"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          IS_KW "is"
          WHITESPACE " "
          LITERAL
            NULL_KW "null"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mclparted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        IN_KW "in"
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "2"
          COMMA ","
          LITERAL
            INT_NUMBER "4"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure Append is used when the null partition is pruned"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mclparted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        IN_KW "in"
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "2"
          COMMA ","
          LITERAL
            INT_NUMBER "4"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure MergeAppend is used when the default partition is not pruned"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mclparted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        IN_KW "in"
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "2"
          COMMA ","
          LITERAL
            INT_NUMBER "4"
          COMMA ","
          LITERAL
            INT_NUMBER "100"
          R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mclparted"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_sort"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_bitmapscan"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure subplans which don't have a path with the correct pathkeys get"
  WHITESPACE "\n"
  COMMENT "-- sorted correctly."
  WHITESPACE "\n"
  DROP_INDEX_STMT
    DROP_KW "drop"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mcrparted_a_abs_c_idx"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mcrparted1"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "abs"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mcrparted2"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "abs"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mcrparted3"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "abs"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mcrparted4"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "abs"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mcrparted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "20"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "abs"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "c"
    WHITESPACE " "
    LIMIT_CLAUSE
      LIMIT_KW "limit"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_bitmapscan"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Ensure Append node can be used when the partition is ordered by some"
  WHITESPACE "\n"
  COMMENT "-- pathkeys which were deemed redundant."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "mcrparted"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "abs"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "b"
          R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "c"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_bitmapscan"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "mcrparted"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Ensure LIST partitions allow an Append to be used instead of a MergeAppend"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bool_lp"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "bool"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    L_PAREN "("
    NAME_REF
      IDENT "b"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bool_lp_true"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bool_lp"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bool_lp_false"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bool_lp"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    L_PAREN "("
    LITERAL
      FALSE_KW "false"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bool_lp"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "b"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "bool_lp"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bool_lp"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Ensure const bool quals can be properly detected as redundant"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bool_rp"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "bool"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    RANGE_KW "range"
    L_PAREN "("
    NAME_REF
      IDENT "b"
    COMMA ","
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bool_rp_false_1k"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bool_rp"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      FALSE_KW "false"
    COMMA ","
    LITERAL
      INT_NUMBER "0"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      FALSE_KW "false"
    COMMA ","
    LITERAL
      INT_NUMBER "1000"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bool_rp_true_1k"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bool_rp"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    COMMA ","
    LITERAL
      INT_NUMBER "0"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    COMMA ","
    LITERAL
      INT_NUMBER "1000"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bool_rp_false_2k"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bool_rp"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      FALSE_KW "false"
    COMMA ","
    LITERAL
      INT_NUMBER "1000"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      FALSE_KW "false"
    COMMA ","
    LITERAL
      INT_NUMBER "2000"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bool_rp_true_2k"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bool_rp"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    COMMA ","
    LITERAL
      INT_NUMBER "1000"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      TRUE_KW "true"
    COMMA ","
    LITERAL
      INT_NUMBER "2000"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bool_rp"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "b"
      COMMA ","
      NAME_REF
        IDENT "a"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "bool_rp"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          TRUE_KW "true"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      COMMA ","
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "bool_rp"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          FALSE_KW "false"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
      COMMA ","
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "bool_rp"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          TRUE_KW "true"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "bool_rp"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          FALSE_KW "false"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bool_rp"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Ensure an Append scan is chosen when the partition order is a subset of"
    WHITESPACE "\n"
    COMMENT "-- the required order."
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "range_parted"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    RANGE_KW "range"
    L_PAREN "("
    NAME_REF
      IDENT "a"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "b"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "range_parted1"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    COMMA ","
    LITERAL
      INT_NUMBER "0"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "10"
    COMMA ","
    LITERAL
      INT_NUMBER "10"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "range_parted2"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "10"
    COMMA ","
    LITERAL
      INT_NUMBER "10"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "20"
    COMMA ","
    LITERAL
      INT_NUMBER "20"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      COMMA ","
      NAME_REF
        IDENT "b"
      COMMA ","
      NAME_REF
        IDENT "c"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "range_parted"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      NAME_REF
        IDENT "b"
      COMMA ","
      NAME_REF
        IDENT "c"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "range_parted"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      WHITESPACE " "
      DESC_KW "desc"
      COMMA ","
      NAME_REF
        IDENT "b"
      WHITESPACE " "
      DESC_KW "desc"
      COMMA ","
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      DESC_KW "desc"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "range_parted"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Check that we allow access to a child table's statistics when the user"
    WHITESPACE "\n"
    COMMENT "-- has permissions only for the parent table."
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "permtest_parent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "permtest_child"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "b"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "permtest_grandchild"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "permtest_child"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "attach"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "permtest_grandchild"
      WHITESPACE " "
      FOR_KW "for"
      WHITESPACE " "
      VALUES_KW "values"
      WHITESPACE " "
      IN_KW "in"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'a'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "permtest_parent"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "attach"
      WHITESPACE " "
      PARTITION_KW "partition"
      WHITESPACE " "
      NAME_REF
        IDENT "permtest_child"
      WHITESPACE " "
      FOR_KW "for"
      WHITESPACE " "
      VALUES_KW "values"
      WHITESPACE " "
      IN_KW "in"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "permtest_parent"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      CALL_EXPR
        NAME_REF
          LEFT_KW "left"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "c"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "permtest_parent"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              INT_NUMBER "1"
          COMMA ","
          WHITESPACE " "
          TARGET
            LITERAL
              STRING "'a'"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                LEFT_KW "left"
              ARG_LIST
                L_PAREN "("
                CALL_EXPR
                  NAME_REF
                    IDENT "fipshash"
                  ARG_LIST
                    L_PAREN "("
                    CAST_EXPR
                      NAME_REF
                        IDENT "i"
                      COLON2 "::"
                      PATH_TYPE
                        PATH
                          PATH_SEGMENT
                            NAME_REF
                              TEXT_KW "text"
                    R_PAREN ")"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "5"
                R_PAREN ")"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "0"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "100"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n"
  ANALYZE_STMT
    ANALYZE_KW "analyze"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "permtest_parent"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_ROLE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    ROLE_KW "role"
    WHITESPACE " "
    NAME
      IDENT "regress_no_child_access"
  SEMICOLON ";"
  WHITESPACE "\n"
  REVOKE_STMT
    REVOKE_KW "revoke"
    WHITESPACE " "
    ALL_KW "all"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "permtest_grandchild"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    IDENT "regress_no_child_access"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "grant"
    WHITESPACE " "
    SELECT_KW "select"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "permtest_parent"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    IDENT "regress_no_child_access"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "set"
    WHITESPACE " "
    SESSION_KW "session"
    WHITESPACE " "
    AUTHORIZATION_KW "authorization"
    WHITESPACE " "
    IDENT "regress_no_child_access"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- without stats access, these queries would produce hash join plans:"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "permtest_parent"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "p1"
      WHITESPACE " "
      JOIN
        INNER_KW "inner"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "permtest_parent"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "p2"
        WHITESPACE "\n  "
        ON_KW "on"
        WHITESPACE " "
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p1"
              DOT "."
              NAME_REF
                IDENT "a"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p2"
              DOT "."
              NAME_REF
                IDENT "a"
          WHITESPACE " "
          AND_KW "and"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p1"
              DOT "."
              NAME_REF
                IDENT "c"
            WHITESPACE " "
            CUSTOM_OP
              TILDE "~"
            WHITESPACE " "
            LITERAL
              STRING "'a1$'"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "permtest_parent"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "p1"
      WHITESPACE " "
      JOIN
        INNER_KW "inner"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "permtest_parent"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "p2"
        WHITESPACE "\n  "
        ON_KW "on"
        WHITESPACE " "
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p1"
              DOT "."
              NAME_REF
                IDENT "a"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p2"
              DOT "."
              NAME_REF
                IDENT "a"
          WHITESPACE " "
          AND_KW "and"
          WHITESPACE " "
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                LEFT_KW "left"
              ARG_LIST
                L_PAREN "("
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "c"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "3"
                R_PAREN ")"
            WHITESPACE " "
            CUSTOM_OP
              TILDE "~"
            WHITESPACE " "
            LITERAL
              STRING "'a1$'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "reset"
    WHITESPACE " "
    SESSION_KW "session"
    WHITESPACE " "
    AUTHORIZATION_KW "authorization"
  SEMICOLON ";"
  WHITESPACE "\n"
  REVOKE_STMT
    REVOKE_KW "revoke"
    WHITESPACE " "
    ALL_KW "all"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "permtest_parent"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    IDENT "regress_no_child_access"
  SEMICOLON ";"
  WHITESPACE "\n"
  GRANT_STMT
    GRANT_KW "grant"
    WHITESPACE " "
    SELECT_KW "select"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
      COMMA ","
      COLUMN
        NAME_REF
          IDENT "c"
      R_PAREN ")"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "permtest_parent"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    IDENT "regress_no_child_access"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    SET_KW "set"
    WHITESPACE " "
    SESSION_KW "session"
    WHITESPACE " "
    AUTHORIZATION_KW "authorization"
    WHITESPACE " "
    IDENT "regress_no_child_access"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p2"
            DOT "."
            NAME_REF
              IDENT "a"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "c"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "permtest_parent"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "p1"
      WHITESPACE " "
      JOIN
        INNER_KW "inner"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "permtest_parent"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "p2"
        WHITESPACE "\n  "
        ON_KW "on"
        WHITESPACE " "
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p1"
              DOT "."
              NAME_REF
                IDENT "a"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p2"
              DOT "."
              NAME_REF
                IDENT "a"
          WHITESPACE " "
          AND_KW "and"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p1"
              DOT "."
              NAME_REF
                IDENT "c"
            WHITESPACE " "
            CUSTOM_OP
              TILDE "~"
            WHITESPACE " "
            LITERAL
              STRING "'a1$'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- we will not have access to the expression index's stats here:"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p2"
            DOT "."
            NAME_REF
              IDENT "a"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "c"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "permtest_parent"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "p1"
      WHITESPACE " "
      JOIN
        INNER_KW "inner"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "permtest_parent"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "p2"
        WHITESPACE "\n  "
        ON_KW "on"
        WHITESPACE " "
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p1"
              DOT "."
              NAME_REF
                IDENT "a"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p2"
              DOT "."
              NAME_REF
                IDENT "a"
          WHITESPACE " "
          AND_KW "and"
          WHITESPACE " "
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                LEFT_KW "left"
              ARG_LIST
                L_PAREN "("
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "c"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "3"
                R_PAREN ")"
            WHITESPACE " "
            CUSTOM_OP
              TILDE "~"
            WHITESPACE " "
            LITERAL
              STRING "'a1$'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_SESSION_AUTH_STMT
    RESET_KW "reset"
    WHITESPACE " "
    SESSION_KW "session"
    WHITESPACE " "
    AUTHORIZATION_KW "authorization"
  SEMICOLON ";"
  WHITESPACE "\n"
  REVOKE_STMT
    REVOKE_KW "revoke"
    WHITESPACE " "
    ALL_KW "all"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "permtest_parent"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    IDENT "regress_no_child_access"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_ROLE_STMT
    DROP_KW "drop"
    WHITESPACE " "
    ROLE_KW "role"
    WHITESPACE " "
    NAME_REF
      IDENT "regress_no_child_access"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "permtest_parent"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Verify that constraint errors across partition root / child are"
    WHITESPACE "\n"
    COMMENT "-- handled correctly (Bug #16293)"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "errtst_parent"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "partid"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      COMMA ","
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "shdata"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      COMMA ","
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          DATA_KW "data"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "NOT"
          WHITESPACE " "
          NULL_KW "NULL"
        WHITESPACE " "
        DEFAULT_CONSTRAINT
          DEFAULT_KW "DEFAULT"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
      COMMA ","
      WHITESPACE "\n    "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "shdata_small"
        WHITESPACE " "
        CHECK_KW "CHECK"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "shdata"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "3"
        R_PAREN ")"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "PARTITION"
    WHITESPACE " "
    BY_KW "BY"
    WHITESPACE " "
    RANGE_KW "RANGE"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "partid"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- fast defaults lead to attribute mapping being used in one"
    WHITESPACE "\n"
    COMMENT "-- direction, but not the other"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "errtst_child_fastdef"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "partid"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      COMMA ","
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "shdata"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      COMMA ","
      WHITESPACE "\n    "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "shdata_small"
        WHITESPACE " "
        CHECK_KW "CHECK"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "shdata"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "3"
        R_PAREN ")"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- no remapping in either direction necessary"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "errtst_child_plaindef"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "partid"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      COMMA ","
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "shdata"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      COMMA ","
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          DATA_KW "data"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "NOT"
          WHITESPACE " "
          NULL_KW "NULL"
        WHITESPACE " "
        DEFAULT_CONSTRAINT
          DEFAULT_KW "DEFAULT"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
      COMMA ","
      WHITESPACE "\n    "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "shdata_small"
        WHITESPACE " "
        CHECK_KW "CHECK"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "shdata"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "3"
        R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      CHECK_CONSTRAINT
        CHECK_KW "CHECK"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            DATA_KW "data"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- remapping in both direction"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "errtst_child_reorder"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          DATA_KW "data"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "NOT"
          WHITESPACE " "
          NULL_KW "NULL"
        WHITESPACE " "
        DEFAULT_CONSTRAINT
          DEFAULT_KW "DEFAULT"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
      COMMA ","
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "shdata"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      COMMA ","
      WHITESPACE "\n    "
      COLUMN
        NAME_REF
          IDENT "partid"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "not"
          WHITESPACE " "
          NULL_KW "null"
      COMMA ","
      WHITESPACE "\n    "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "shdata_small"
        WHITESPACE " "
        CHECK_KW "CHECK"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            IDENT "shdata"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "3"
        R_PAREN ")"
      COMMA ","
      WHITESPACE "\n    "
      CHECK_CONSTRAINT
        CHECK_KW "CHECK"
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            DATA_KW "data"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_child_fastdef"
    WHITESPACE " "
    ADD_COLUMN
      ADD_KW "ADD"
      WHITESPACE " "
      COLUMN_KW "COLUMN"
      WHITESPACE " "
      NAME_REF
        DATA_KW "data"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              INT_KW "int"
      WHITESPACE " "
      NOT_NULL_CONSTRAINT
        NOT_KW "NOT"
        WHITESPACE " "
        NULL_KW "NULL"
      WHITESPACE " "
      DEFAULT_CONSTRAINT
        DEFAULT_KW "DEFAULT"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_child_fastdef"
    WHITESPACE " "
    ADD_CONSTRAINT
      ADD_KW "ADD"
      WHITESPACE " "
      CHECK_CONSTRAINT
        CONSTRAINT_KW "CONSTRAINT"
        WHITESPACE " "
        NAME
          IDENT "errtest_child_fastdef_data_check"
        WHITESPACE " "
        CHECK_KW "CHECK"
        WHITESPACE " "
        L_PAREN "("
        BIN_EXPR
          NAME_REF
            DATA_KW "data"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "10"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "errtst_child_fastdef"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      FROM_KW "FROM"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "0"
      R_PAREN ")"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "errtst_child_plaindef"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      FROM_KW "FROM"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "20"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    WHITESPACE " "
    ATTACH_PARTITION
      ATTACH_KW "ATTACH"
      WHITESPACE " "
      PARTITION_KW "PARTITION"
      WHITESPACE " "
      NAME_REF
        IDENT "errtst_child_reorder"
      WHITESPACE " "
      FOR_KW "FOR"
      WHITESPACE " "
      VALUES_KW "VALUES"
      WHITESPACE " "
      FROM_KW "FROM"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "20"
      R_PAREN ")"
      WHITESPACE " "
      TO_KW "TO"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "30"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- insert without child check constraint error"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "partid"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "shdata"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          DATA_KW "data"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      WHITESPACE " "
      LITERAL
        STRING "'0'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'1'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'5'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "partid"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "shdata"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          DATA_KW "data"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'10'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'1'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'5'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "partid"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "shdata"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          DATA_KW "data"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'20'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'1'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'5'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- insert with child check constraint error"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "partid"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "shdata"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          DATA_KW "data"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      WHITESPACE " "
      LITERAL
        STRING "'0'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'1'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'10'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "partid"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "shdata"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          DATA_KW "data"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'10'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'1'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'10'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "partid"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "shdata"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          DATA_KW "data"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'20'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'1'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'10'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- insert with child not null constraint error"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "partid"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "shdata"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          DATA_KW "data"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      WHITESPACE " "
      LITERAL
        STRING "'0'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'1'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        NULL_KW "NULL"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "partid"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "shdata"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          DATA_KW "data"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'10'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'1'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        NULL_KW "NULL"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "partid"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "shdata"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          DATA_KW "data"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'20'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'1'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        NULL_KW "NULL"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- insert with shared check constraint error"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "partid"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "shdata"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          DATA_KW "data"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      WHITESPACE " "
      LITERAL
        STRING "'0'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'5'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'5'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "partid"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "shdata"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          DATA_KW "data"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'10'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'5'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'5'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "partid"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "shdata"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          DATA_KW "data"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        STRING "'20'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'5'"
      COMMA ","
      WHITESPACE " "
      LITERAL
        STRING "'5'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- within partition update without child check constraint violation"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      DATA_KW "data"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        DATA_KW "data"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "partid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      DATA_KW "data"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        DATA_KW "data"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "partid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      DATA_KW "data"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        DATA_KW "data"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "partid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "20"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- within partition update with child check constraint violation"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      DATA_KW "data"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        DATA_KW "data"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "partid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      DATA_KW "data"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        DATA_KW "data"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "partid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      DATA_KW "data"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        DATA_KW "data"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "partid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "20"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- direct leaf partition update, without partition id violation"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_child_fastdef"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "partid"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "partid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_child_plaindef"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "partid"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "11"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "partid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_child_reorder"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "partid"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "21"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "partid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "20"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- direct leaf partition update, with partition id violation"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_child_fastdef"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "partid"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "partid"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "partid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_child_plaindef"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "partid"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "partid"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "partid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_child_reorder"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "partid"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "partid"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "partid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "20"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- partition move, without child check constraint violation"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "partid"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "10"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      DATA_KW "data"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        DATA_KW "data"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "partid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "partid"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "20"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      DATA_KW "data"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        DATA_KW "data"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "partid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "partid"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      DATA_KW "data"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        DATA_KW "data"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "partid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "20"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- partition move, with child check constraint violation"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "partid"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "10"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      DATA_KW "data"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        DATA_KW "data"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "partid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "partid"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "20"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      DATA_KW "data"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        DATA_KW "data"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "partid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "10"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "partid"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      DATA_KW "data"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        DATA_KW "data"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "partid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "20"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- partition move, without target partition"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "partid"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "30"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      DATA_KW "data"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        DATA_KW "data"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "partid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "20"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "errtst_parent"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Check that we have the correct tuples estimate for an appendrel"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tuplesest_parted"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                FLOAT_KW "float"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    RANGE_KW "range"
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tuplesest_parted1"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tuplesest_parted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "100"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tuplesest_parted2"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tuplesest_parted"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    FROM_KW "from"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "100"
    R_PAREN ")"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "200"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tuplesest_tab"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tuplesest_parted"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "i"
              PERCENT "%"
              LITERAL
                INT_NUMBER "200"
          COMMA ","
          WHITESPACE " "
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "i"
              PERCENT "%"
              LITERAL
                INT_NUMBER "300"
          COMMA ","
          WHITESPACE " "
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "i"
              PERCENT "%"
              LITERAL
                INT_NUMBER "400"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1000"
            R_PAREN ")"
        ALIAS
          NAME
            IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tuplesest_tab"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "i"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "i"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "100"
            R_PAREN ")"
        ALIAS
          NAME
            IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ANALYZE_STMT
    ANALYZE_KW "analyze"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tuplesest_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  ANALYZE_STMT
    ANALYZE_KW "analyze"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tuplesest_tab"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tuplesest_tab"
      WHITESPACE " "
      JOIN
        JOIN_KW "join"
        WHITESPACE "\n  "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "b"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "tuplesest_parted"
            WHITESPACE " "
            WHERE_CLAUSE
              WHERE_KW "where"
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "c"
                WHITESPACE " "
                L_ANGLE "<"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "100"
            WHITESPACE " "
            GROUP_BY_CLAUSE
              GROUP_KW "group"
              WHITESPACE " "
              BY_KW "by"
              WHITESPACE " "
              NAME_REF
                IDENT "b"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "sub"
        WHITESPACE "\n  "
        ON_KW "on"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "tuplesest_tab"
            DOT "."
            NAME_REF
              IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "sub"
            DOT "."
            NAME_REF
              IDENT "b"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tuplesest_parted"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tuplesest_tab"
  SEMICOLON ";"
  WHITESPACE "\n"
---
ERROR@5193: expected R_PAREN
ERROR@5194: expected command, found OFF_KW
ERROR@5197: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@5197: expected SEMICOLON
ERROR@5197: expected command, found R_PAREN
ERROR@5588: expected R_PAREN
ERROR@5589: expected command, found OFF_KW
ERROR@5592: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@5592: expected SEMICOLON
ERROR@5592: expected command, found R_PAREN
ERROR@5703: expected R_PAREN
ERROR@5704: expected command, found OFF_KW
ERROR@5707: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@5707: expected SEMICOLON
ERROR@5707: expected command, found R_PAREN
ERROR@11450: expected R_PAREN
ERROR@11451: expected command, found ON_KW
ERROR@11453: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@11453: expected SEMICOLON
ERROR@11453: expected command, found COMMA
ERROR@11455: expected command, found IDENT
ERROR@11461: expected command, found OFF_KW
ERROR@11464: expected command, found R_PAREN
ERROR@11547: expected R_PAREN
ERROR@11548: expected command, found ON_KW
ERROR@11550: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@11550: expected SEMICOLON
ERROR@11550: expected command, found COMMA
ERROR@11552: expected command, found IDENT
ERROR@11558: expected command, found OFF_KW
ERROR@11561: expected command, found R_PAREN
ERROR@20202: expected VALID_KW
ERROR@20202: expected SEMICOLON
ERROR@20203: expected command, found IDENT
ERROR@20286: expected VALID_KW
ERROR@20286: expected SEMICOLON
ERROR@20287: expected command, found IDENT
ERROR@20372: expected VALID_KW
ERROR@20372: expected SEMICOLON
ERROR@20373: expected command, found IDENT
ERROR@20454: expected VALID_KW
ERROR@20454: expected SEMICOLON
ERROR@20455: expected command, found IDENT
ERROR@20614: expected SEMICOLON
ERROR@20615: expected command, found IDENT
ERROR@20696: expected VALID_KW
ERROR@20696: expected SEMICOLON
ERROR@20697: expected command, found IDENT
ERROR@20779: expected VALID_KW
ERROR@20779: expected SEMICOLON
ERROR@20780: expected command, found IDENT
ERROR@20860: expected SEMICOLON
ERROR@20861: expected command, found IDENT
ERROR@20952: expected SEMICOLON
ERROR@20953: expected command, found IDENT
ERROR@21034: expected VALID_KW
ERROR@21034: expected SEMICOLON
ERROR@21035: expected command, found IDENT
ERROR@21187: expected VALID_KW
ERROR@21187: expected SEMICOLON
ERROR@21188: expected command, found IDENT
ERROR@21279: expected SEMICOLON
ERROR@21280: expected command, found IDENT
ERROR@21486: expected VALID_KW
ERROR@21486: expected SEMICOLON
ERROR@21487: expected command, found IDENT
ERROR@21564: expected SEMICOLON
ERROR@21565: expected command, found IDENT
ERROR@21643: expected SEMICOLON
ERROR@21644: expected command, found IDENT
ERROR@21728: expected VALID_KW
ERROR@21728: expected SEMICOLON
ERROR@21729: expected command, found IDENT
ERROR@21820: expected NULL_KW
ERROR@21820: expected R_PAREN
ERROR@21820: expected SEMICOLON
ERROR@21821: expected command, found IDENT
ERROR@21829: expected command, found R_PAREN
ERROR@21831: expected command, found INHERITS_KW
ERROR@21839: expected command, found L_PAREN
ERROR@21840: expected command, found IDENT
ERROR@21842: expected command, found R_PAREN
ERROR@22138: expected NULL_KW
ERROR@22138: expected R_PAREN
ERROR@22138: expected SEMICOLON
ERROR@22139: expected command, found IDENT
ERROR@22147: expected command, found R_PAREN
ERROR@22149: expected command, found INHERITS_KW
ERROR@22157: expected command, found L_PAREN
ERROR@22158: expected command, found IDENT
ERROR@22160: expected command, found COMMA
ERROR@22162: expected command, found IDENT
ERROR@22167: expected command, found R_PAREN
ERROR@22631: expected NULL_KW
ERROR@22631: expected R_PAREN
ERROR@22631: expected SEMICOLON
ERROR@22632: expected command, found IDENT
ERROR@22640: expected command, found R_PAREN
ERROR@22705: expected R_PAREN
ERROR@22705: expected SEMICOLON
ERROR@22706: expected command, found IDENT
ERROR@22714: expected command, found R_PAREN
ERROR@22830: expected R_PAREN
ERROR@22830: expected SEMICOLON
ERROR@22831: expected command, found IDENT
ERROR@22839: expected command, found R_PAREN
ERROR@22908: expected NULL_KW
ERROR@22908: expected R_PAREN
ERROR@22908: expected SEMICOLON
ERROR@22909: expected command, found IDENT
ERROR@22917: expected command, found R_PAREN
ERROR@25405: expected type name
ERROR@25408: expected type name
ERROR@25867: expected R_PAREN
ERROR@25868: expected command, found OFF_KW
ERROR@25871: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@25871: expected SEMICOLON
ERROR@25871: expected command, found R_PAREN
ERROR@26062: expected R_PAREN
ERROR@26063: expected command, found OFF_KW
ERROR@26066: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@26066: expected SEMICOLON
ERROR@26066: expected command, found R_PAREN
ERROR@27135: expected R_PAREN
ERROR@27136: expected command, found OFF_KW
ERROR@27139: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@27139: expected SEMICOLON
ERROR@27139: expected command, found R_PAREN
ERROR@27238: expected R_PAREN
ERROR@27239: expected command, found OFF_KW
ERROR@27242: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@27242: expected SEMICOLON
ERROR@27242: expected command, found R_PAREN
ERROR@27499: expected R_PAREN
ERROR@27500: expected command, found OFF_KW
ERROR@27503: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@27503: expected SEMICOLON
ERROR@27503: expected command, found R_PAREN
ERROR@27602: expected R_PAREN
ERROR@27603: expected command, found OFF_KW
ERROR@27606: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@27606: expected SEMICOLON
ERROR@27606: expected command, found R_PAREN
ERROR@27746: expected R_PAREN
ERROR@27747: expected command, found OFF_KW
ERROR@27750: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@27750: expected SEMICOLON
ERROR@27750: expected command, found R_PAREN
ERROR@28384: expected R_PAREN
ERROR@28385: expected command, found OFF_KW
ERROR@28388: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@28388: expected SEMICOLON
ERROR@28388: expected command, found R_PAREN
ERROR@28838: expected R_PAREN
ERROR@28839: expected command, found OFF_KW
ERROR@28842: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@28842: expected SEMICOLON
ERROR@28842: expected command, found R_PAREN
ERROR@29029: expected config value, got ON_KW
ERROR@29029: expected SEMICOLON
ERROR@29030: expected command, found ON_KW
ERROR@29150: expected R_PAREN
ERROR@29151: expected command, found OFF_KW
ERROR@29154: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@29154: expected SEMICOLON
ERROR@29154: expected command, found R_PAREN
ERROR@29284: expected R_PAREN
ERROR@29285: expected command, found OFF_KW
ERROR@29288: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@29288: expected SEMICOLON
ERROR@29288: expected command, found R_PAREN
ERROR@29439: expected R_PAREN
ERROR@29440: expected command, found OFF_KW
ERROR@29443: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@29443: expected SEMICOLON
ERROR@29443: expected command, found R_PAREN
ERROR@29622: expected R_PAREN
ERROR@29623: expected command, found OFF_KW
ERROR@29626: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@29626: expected SEMICOLON
ERROR@29626: expected command, found R_PAREN
ERROR@29751: expected R_PAREN
ERROR@29752: expected command, found OFF_KW
ERROR@29755: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@29755: expected SEMICOLON
ERROR@29755: expected command, found R_PAREN
ERROR@29986: expected R_PAREN
ERROR@29987: expected command, found OFF_KW
ERROR@29990: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@29990: expected SEMICOLON
ERROR@29990: expected command, found R_PAREN
ERROR@30222: expected R_PAREN
ERROR@30223: expected command, found OFF_KW
ERROR@30226: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@30226: expected SEMICOLON
ERROR@30226: expected command, found R_PAREN
ERROR@31161: expected R_PAREN
ERROR@31162: expected command, found OFF_KW
ERROR@31165: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@31165: expected SEMICOLON
ERROR@31165: expected command, found R_PAREN
ERROR@31837: expected R_PAREN
ERROR@31838: expected command, found OFF_KW
ERROR@31841: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@31841: expected SEMICOLON
ERROR@31841: expected command, found R_PAREN
ERROR@33247: expected R_PAREN
ERROR@33247: expected SEMICOLON
ERROR@33248: expected command, found NO_KW
ERROR@33251: expected command, found INHERIT_KW
ERROR@33258: expected command, found R_PAREN
ERROR@33260: expected command, found INHERITS_KW
ERROR@33269: expected command, found L_PAREN
ERROR@33270: expected command, found IDENT
ERROR@33273: expected command, found R_PAREN
ERROR@33373: expected name
ERROR@33373: expected type name
ERROR@33382: expected SEMICOLON
ERROR@33383: expected command, found IDENT
ERROR@33386: expected command, found NO_KW
ERROR@33389: expected command, found INHERIT_KW
ERROR@34034: expected R_PAREN
ERROR@34034: expected SEMICOLON
ERROR@34035: expected command, found NO_KW
ERROR@34038: expected command, found INHERIT_KW
ERROR@34045: expected command, found COMMA
ERROR@34047: expected command, found IDENT
ERROR@34050: expected command, found INT_KW
ERROR@34054: expected command, found NOT_KW
ERROR@34058: expected command, found NULL_KW
ERROR@34063: expected command, found NO_KW
ERROR@34066: expected command, found INHERIT_KW
ERROR@34073: expected command, found R_PAREN
ERROR@34115: expected R_PAREN
ERROR@34115: expected SEMICOLON
ERROR@34116: expected command, found NO_KW
ERROR@34119: expected command, found INHERIT_KW
ERROR@34126: expected command, found COMMA
ERROR@34128: expected command, found IDENT
ERROR@34131: expected command, found INT_KW
ERROR@34134: expected command, found R_PAREN
ERROR@35498: expected FOREIGN_KW
ERROR@35498: expected KEY_KW
ERROR@35498: expected column list
ERROR@35498: expected REFERENCES_KW
ERROR@35502: expected R_PAREN
ERROR@35502: expected SEMICOLON
ERROR@35503: expected command, found NULL_KW
ERROR@35508: expected command, found IDENT
ERROR@35509: expected command, found R_PAREN
ERROR@35511: expected command, found INHERITS_KW
ERROR@35520: expected command, found L_PAREN
ERROR@35521: expected command, found IDENT
ERROR@35532: expected command, found COMMA
ERROR@35534: expected command, found IDENT
ERROR@35545: expected command, found R_PAREN
ERROR@36331: expected name
ERROR@36331: expected type name
ERROR@36340: expected SEMICOLON
ERROR@36341: expected command, found IDENT
ERROR@36343: expected command, found NO_KW
ERROR@36346: expected command, found INHERIT_KW
ERROR@36782: expected R_PAREN
ERROR@36782: expected SEMICOLON
ERROR@36783: expected command, found NOT_KW
ERROR@36787: expected command, found NULL_KW
ERROR@36792: expected command, found IDENT
ERROR@36794: expected command, found NO_KW
ERROR@36797: expected command, found INHERIT_KW
ERROR@36804: expected command, found R_PAREN
ERROR@36905: expected FOREIGN_KW
ERROR@36905: expected KEY_KW
ERROR@36905: expected column list
ERROR@36905: expected REFERENCES_KW
ERROR@36909: expected SEMICOLON
ERROR@36910: expected command, found NULL_KW
ERROR@36915: expected command, found IDENT
ERROR@37265: expected FOREIGN_KW
ERROR@37265: expected KEY_KW
ERROR@37265: expected column list
ERROR@37265: expected REFERENCES_KW
ERROR@37269: expected R_PAREN
ERROR@37269: expected SEMICOLON
ERROR@37270: expected command, found NULL_KW
ERROR@37275: expected command, found IDENT
ERROR@37277: expected command, found NO_KW
ERROR@37280: expected command, found INHERIT_KW
ERROR@37287: expected command, found R_PAREN
ERROR@37289: expected command, found INHERITS_KW
ERROR@37298: expected command, found L_PAREN
ERROR@37299: expected command, found IDENT
ERROR@37310: expected command, found R_PAREN
ERROR@37532: expected R_PAREN
ERROR@37532: expected SEMICOLON
ERROR@37533: expected command, found NOT_KW
ERROR@37537: expected command, found NULL_KW
ERROR@37542: expected command, found IDENT
ERROR@37544: expected command, found NO_KW
ERROR@37547: expected command, found INHERIT_KW
ERROR@37554: expected command, found R_PAREN
ERROR@37632: expected R_PAREN
ERROR@37632: expected SEMICOLON
ERROR@37633: expected command, found NO_KW
ERROR@37636: expected command, found INHERIT_KW
ERROR@37643: expected command, found R_PAREN
ERROR@37645: expected command, found INHERITS_KW
ERROR@37654: expected command, found L_PAREN
ERROR@37655: expected command, found IDENT
ERROR@37662: expected command, found R_PAREN
ERROR@37709: expected R_PAREN
ERROR@37709: expected SEMICOLON
ERROR@37711: expected command, found NOT_KW
ERROR@37715: expected command, found NULL_KW
ERROR@37720: expected command, found IDENT
ERROR@37722: expected command, found NO_KW
ERROR@37725: expected command, found INHERIT_KW
ERROR@37732: expected command, found R_PAREN
ERROR@37771: expected R_PAREN
ERROR@37771: expected SEMICOLON
ERROR@37772: expected command, found NO_KW
ERROR@37775: expected command, found INHERIT_KW
ERROR@37782: expected command, found COMMA
ERROR@37784: expected command, found IDENT
ERROR@37786: expected command, found INT_KW
ERROR@37789: expected command, found COMMA
ERROR@37792: expected command, found NOT_KW
ERROR@37796: expected command, found NULL_KW
ERROR@37801: expected command, found IDENT
ERROR@37802: expected command, found R_PAREN
ERROR@39386: expected R_PAREN
ERROR@39386: expected SEMICOLON
ERROR@39387: expected command, found NO_KW
ERROR@39390: expected command, found INHERIT_KW
ERROR@39397: expected command, found R_PAREN
ERROR@42640: expected R_PAREN
ERROR@42640: expected SEMICOLON
ERROR@42641: expected command, found NO_KW
ERROR@42644: expected command, found INHERIT_KW
ERROR@42651: expected command, found R_PAREN
ERROR@42984: expected SEMICOLON
ERROR@42985: expected command, found INHERIT_KW
ERROR@43334: expected SEMICOLON
ERROR@43335: expected command, found NO_KW
ERROR@43338: expected command, found INHERIT_KW
ERROR@44043: expected R_PAREN
ERROR@44043: expected SEMICOLON
ERROR@44044: expected command, found NO_KW
ERROR@44047: expected command, found INHERIT_KW
ERROR@44054: expected command, found R_PAREN
ERROR@44219: expected SEMICOLON
ERROR@44220: expected command, found INHERIT_KW
ERROR@44451: expected SEMICOLON
ERROR@44452: expected command, found INHERIT_KW
ERROR@44459: expected command, found COMMA
ERROR@44464: expected command, found ALTER_KW
ERROR@44470: expected command, found CONSTRAINT_KW
ERROR@44481: expected command, found IDENT
ERROR@44501: expected command, found NO_KW
ERROR@44504: expected command, found INHERIT_KW
ERROR@44879: expected R_PAREN
ERROR@44879: expected SEMICOLON
ERROR@44880: expected command, found NO_KW
ERROR@44883: expected command, found INHERIT_KW
ERROR@44890: expected command, found R_PAREN
ERROR@45001: expected FOREIGN_KW
ERROR@45001: expected KEY_KW
ERROR@45001: expected column list
ERROR@45001: expected REFERENCES_KW
ERROR@45005: expected R_PAREN
ERROR@45005: expected SEMICOLON
ERROR@45006: expected command, found NULL_KW
ERROR@45011: expected command, found IDENT
ERROR@45014: expected command, found NO_KW
ERROR@45017: expected command, found INHERIT_KW
ERROR@45024: expected command, found R_PAREN
ERROR@45026: expected command, found INHERITS_KW
ERROR@45035: expected command, found L_PAREN
ERROR@45036: expected command, found IDENT
ERROR@45043: expected command, found COMMA
ERROR@45045: expected command, found IDENT
ERROR@45052: expected command, found R_PAREN
ERROR@45376: expected SEMICOLON
ERROR@45377: expected command, found INHERIT_KW
ERROR@45429: expected SEMICOLON
ERROR@45430: expected command, found INHERIT_KW
ERROR@45495: expected SEMICOLON
ERROR@45496: expected command, found INHERIT_KW
ERROR@46019: expected SEMICOLON
ERROR@46020: expected command, found INHERIT_KW
ERROR@46078: expected SEMICOLON
ERROR@46079: expected command, found INHERIT_KW
ERROR@46140: expected SEMICOLON
ERROR@46141: expected command, found INHERIT_KW
ERROR@46230: expected SEMICOLON
ERROR@46231: expected command, found INHERIT_KW
ERROR@46396: expected SEMICOLON
ERROR@46397: expected command, found NO_KW
ERROR@46400: expected command, found INHERIT_KW
ERROR@48338: expected R_PAREN
ERROR@48339: expected command, found OFF_KW
ERROR@48342: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@48342: expected SEMICOLON
ERROR@48342: expected command, found R_PAREN
ERROR@48385: expected R_PAREN
ERROR@48386: expected command, found OFF_KW
ERROR@48389: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@48389: expected SEMICOLON
ERROR@48389: expected command, found R_PAREN
ERROR@48448: expected R_PAREN
ERROR@48449: expected command, found OFF_KW
ERROR@48452: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@48452: expected SEMICOLON
ERROR@48452: expected command, found R_PAREN
ERROR@48515: expected R_PAREN
ERROR@48516: expected command, found OFF_KW
ERROR@48519: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@48519: expected SEMICOLON
ERROR@48519: expected command, found R_PAREN
ERROR@48592: expected R_PAREN
ERROR@48593: expected command, found OFF_KW
ERROR@48596: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@48596: expected SEMICOLON
ERROR@48596: expected command, found R_PAREN
ERROR@48675: expected R_PAREN
ERROR@48676: expected command, found OFF_KW
ERROR@48679: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@48679: expected SEMICOLON
ERROR@48679: expected command, found R_PAREN
ERROR@49911: expected R_PAREN
ERROR@49912: expected command, found OFF_KW
ERROR@49915: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@49915: expected SEMICOLON
ERROR@49915: expected command, found R_PAREN
ERROR@49964: expected R_PAREN
ERROR@49965: expected command, found OFF_KW
ERROR@49968: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@49968: expected SEMICOLON
ERROR@49968: expected command, found R_PAREN
ERROR@50029: expected R_PAREN
ERROR@50030: expected command, found OFF_KW
ERROR@50033: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@50033: expected SEMICOLON
ERROR@50033: expected command, found R_PAREN
ERROR@50097: expected R_PAREN
ERROR@50098: expected command, found OFF_KW
ERROR@50101: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@50101: expected SEMICOLON
ERROR@50101: expected command, found R_PAREN
ERROR@50263: expected R_PAREN
ERROR@50264: expected command, found OFF_KW
ERROR@50267: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@50267: expected SEMICOLON
ERROR@50267: expected command, found R_PAREN
ERROR@50397: expected R_PAREN
ERROR@50398: expected command, found OFF_KW
ERROR@50401: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@50401: expected SEMICOLON
ERROR@50401: expected command, found R_PAREN
ERROR@50466: expected R_PAREN
ERROR@50467: expected command, found OFF_KW
ERROR@50470: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@50470: expected SEMICOLON
ERROR@50470: expected command, found R_PAREN
ERROR@50550: expected R_PAREN
ERROR@50551: expected command, found OFF_KW
ERROR@50554: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@50554: expected SEMICOLON
ERROR@50554: expected command, found R_PAREN
ERROR@51530: expected R_PAREN
ERROR@51531: expected command, found OFF_KW
ERROR@51534: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@51534: expected SEMICOLON
ERROR@51534: expected command, found R_PAREN
ERROR@51622: expected R_PAREN
ERROR@51623: expected command, found OFF_KW
ERROR@51626: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@51626: expected SEMICOLON
ERROR@51626: expected command, found R_PAREN
ERROR@51730: expected R_PAREN
ERROR@51731: expected command, found OFF_KW
ERROR@51734: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@51734: expected SEMICOLON
ERROR@51734: expected command, found R_PAREN
ERROR@51850: expected R_PAREN
ERROR@51851: expected command, found OFF_KW
ERROR@51854: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@51854: expected SEMICOLON
ERROR@51854: expected command, found R_PAREN
ERROR@51936: expected R_PAREN
ERROR@51937: expected command, found OFF_KW
ERROR@51940: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@51940: expected SEMICOLON
ERROR@51940: expected command, found R_PAREN
ERROR@52018: expected R_PAREN
ERROR@52019: expected command, found OFF_KW
ERROR@52022: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@52022: expected SEMICOLON
ERROR@52022: expected command, found R_PAREN
ERROR@52123: expected R_PAREN
ERROR@52124: expected command, found OFF_KW
ERROR@52127: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@52127: expected SEMICOLON
ERROR@52127: expected command, found R_PAREN
ERROR@52591: expected R_PAREN
ERROR@52592: expected command, found OFF_KW
ERROR@52595: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@52595: expected SEMICOLON
ERROR@52595: expected command, found R_PAREN
ERROR@53005: expected R_PAREN
ERROR@53006: expected command, found OFF_KW
ERROR@53009: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@53009: expected SEMICOLON
ERROR@53009: expected command, found R_PAREN
ERROR@53188: expected R_PAREN
ERROR@53189: expected command, found OFF_KW
ERROR@53192: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@53192: expected SEMICOLON
ERROR@53192: expected command, found R_PAREN
ERROR@53332: expected R_PAREN
ERROR@53333: expected command, found OFF_KW
ERROR@53336: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@53336: expected SEMICOLON
ERROR@53336: expected command, found R_PAREN
ERROR@53802: expected R_PAREN
ERROR@53803: expected command, found OFF_KW
ERROR@53806: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@53806: expected SEMICOLON
ERROR@53806: expected command, found R_PAREN
ERROR@54077: expected R_PAREN
ERROR@54078: expected command, found OFF_KW
ERROR@54081: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@54081: expected SEMICOLON
ERROR@54081: expected command, found R_PAREN
ERROR@54245: expected R_PAREN
ERROR@54246: expected command, found OFF_KW
ERROR@54249: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@54249: expected SEMICOLON
ERROR@54249: expected command, found R_PAREN
ERROR@54662: expected R_PAREN
ERROR@54663: expected command, found OFF_KW
ERROR@54666: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@54666: expected SEMICOLON
ERROR@54666: expected command, found R_PAREN
ERROR@54961: expected R_PAREN
ERROR@54962: expected command, found OFF_KW
ERROR@54965: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@54965: expected SEMICOLON
ERROR@54965: expected command, found R_PAREN
ERROR@55017: expected R_PAREN
ERROR@55018: expected command, found OFF_KW
ERROR@55021: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@55021: expected SEMICOLON
ERROR@55021: expected command, found R_PAREN
ERROR@55372: expected R_PAREN
ERROR@55373: expected command, found OFF_KW
ERROR@55376: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@55376: expected SEMICOLON
ERROR@55376: expected command, found R_PAREN
ERROR@55446: expected R_PAREN
ERROR@55447: expected command, found OFF_KW
ERROR@55450: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@55450: expected SEMICOLON
ERROR@55450: expected command, found R_PAREN
ERROR@55790: expected R_PAREN
ERROR@55791: expected command, found OFF_KW
ERROR@55794: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@55794: expected SEMICOLON
ERROR@55794: expected command, found R_PAREN
ERROR@55877: expected R_PAREN
ERROR@55878: expected command, found OFF_KW
ERROR@55881: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@55881: expected SEMICOLON
ERROR@55881: expected command, found R_PAREN
ERROR@56013: expected R_PAREN
ERROR@56014: expected command, found OFF_KW
ERROR@56017: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@56017: expected SEMICOLON
ERROR@56017: expected command, found R_PAREN
ERROR@56159: expected R_PAREN
ERROR@56160: expected command, found OFF_KW
ERROR@56163: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@56163: expected SEMICOLON
ERROR@56163: expected command, found R_PAREN
ERROR@56606: expected R_PAREN
ERROR@56607: expected command, found OFF_KW
ERROR@56610: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@56610: expected SEMICOLON
ERROR@56610: expected command, found R_PAREN
ERROR@56835: expected R_PAREN
ERROR@56836: expected command, found OFF_KW
ERROR@56839: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@56839: expected SEMICOLON
ERROR@56839: expected command, found R_PAREN
ERROR@57262: expected R_PAREN
ERROR@57263: expected command, found OFF_KW
ERROR@57266: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@57266: expected SEMICOLON
ERROR@57266: expected command, found R_PAREN
ERROR@57872: expected R_PAREN
ERROR@57873: expected command, found OFF_KW
ERROR@57876: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@57876: expected SEMICOLON
ERROR@57876: expected command, found R_PAREN
ERROR@57943: expected R_PAREN
ERROR@57944: expected command, found OFF_KW
ERROR@57947: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@57947: expected SEMICOLON
ERROR@57947: expected command, found R_PAREN
ERROR@58015: expected R_PAREN
ERROR@58016: expected command, found OFF_KW
ERROR@58019: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@58019: expected SEMICOLON
ERROR@58019: expected command, found R_PAREN
ERROR@58084: expected R_PAREN
ERROR@58085: expected command, found OFF_KW
ERROR@58088: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@58088: expected SEMICOLON
ERROR@58088: expected command, found R_PAREN
ERROR@58563: expected R_PAREN
ERROR@58564: expected command, found OFF_KW
ERROR@58567: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@58567: expected SEMICOLON
ERROR@58567: expected command, found R_PAREN
ERROR@58626: expected R_PAREN
ERROR@58627: expected command, found OFF_KW
ERROR@58630: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@58630: expected SEMICOLON
ERROR@58630: expected command, found R_PAREN
ERROR@59681: expected R_PAREN
ERROR@59682: expected command, found OFF_KW
ERROR@59685: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@59685: expected SEMICOLON
ERROR@59685: expected command, found R_PAREN
ERROR@59801: expected R_PAREN
ERROR@59802: expected command, found OFF_KW
ERROR@59805: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@59805: expected SEMICOLON
ERROR@59805: expected command, found R_PAREN
ERROR@60135: expected R_PAREN
ERROR@60136: expected command, found OFF_KW
ERROR@60139: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@60139: expected SEMICOLON
ERROR@60139: expected command, found R_PAREN
ERROR@60329: expected R_PAREN
ERROR@60330: expected command, found OFF_KW
ERROR@60333: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@60333: expected SEMICOLON
ERROR@60333: expected command, found R_PAREN
ERROR@65487: expected R_PAREN
ERROR@65488: expected command, found OFF_KW
ERROR@65491: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@65491: expected SEMICOLON
ERROR@65491: expected command, found R_PAREN

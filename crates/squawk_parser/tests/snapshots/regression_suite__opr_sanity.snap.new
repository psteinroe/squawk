---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/opr_sanity.sql
---
SOURCE_FILE
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- OPR_SANITY"
  WHITESPACE "\n"
  COMMENT "-- Sanity checks for common errors in making operator/procedure system tables:"
  WHITESPACE "\n"
  COMMENT "-- pg_operator, pg_proc, pg_cast, pg_conversion, pg_aggregate, pg_am,"
  WHITESPACE "\n"
  COMMENT "-- pg_amop, pg_amproc, pg_opclass, pg_opfamily, pg_index."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Every test failure in this file should be closely inspected."
  WHITESPACE "\n"
  COMMENT "-- The description of the failing test should be read carefully before"
  WHITESPACE "\n"
  COMMENT "-- adjusting the expected output.  In most cases, the queries should"
  WHITESPACE "\n"
  COMMENT "-- not find *any* matching entries."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- NB: we assume the oidjoins test will have caught any dangling links,"
  WHITESPACE "\n"
  COMMENT "-- that is OID or REGPROC fields that are not zero and do not match some"
  WHITESPACE "\n"
  COMMENT "-- row in the linked-to table.  However, if we want to enforce that a link"
  WHITESPACE "\n"
  COMMENT "-- field can't be 0, we have to check it here."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- NB: run this test earlier than the create_operator test, because"
  WHITESPACE "\n"
  COMMENT "-- that test creates some bogus operators..."
  WHITESPACE "\n\n\n"
  COMMENT "-- **************** pg_proc ****************"
  WHITESPACE "\n\n"
  COMMENT "-- Look for illegal values in pg_proc fields."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        BIN_EXPR
                          BIN_EXPR
                            BIN_EXPR
                              BIN_EXPR
                                FIELD_EXPR
                                  NAME_REF
                                    IDENT "p1"
                                  DOT "."
                                  NAME_REF
                                    IDENT "prolang"
                                WHITESPACE " "
                                EQ "="
                                WHITESPACE " "
                                LITERAL
                                  INT_NUMBER "0"
                              WHITESPACE " "
                              OR_KW "OR"
                              WHITESPACE " "
                              BIN_EXPR
                                FIELD_EXPR
                                  NAME_REF
                                    IDENT "p1"
                                  DOT "."
                                  NAME_REF
                                    IDENT "prorettype"
                                WHITESPACE " "
                                EQ "="
                                WHITESPACE " "
                                LITERAL
                                  INT_NUMBER "0"
                            WHITESPACE " "
                            OR_KW "OR"
                            WHITESPACE "\n       "
                            BIN_EXPR
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "p1"
                                DOT "."
                                NAME_REF
                                  IDENT "pronargs"
                              WHITESPACE " "
                              L_ANGLE "<"
                              WHITESPACE " "
                              LITERAL
                                INT_NUMBER "0"
                          WHITESPACE " "
                          OR_KW "OR"
                          WHITESPACE "\n       "
                          BIN_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "p1"
                              DOT "."
                              NAME_REF
                                IDENT "pronargdefaults"
                            WHITESPACE " "
                            L_ANGLE "<"
                            WHITESPACE " "
                            LITERAL
                              INT_NUMBER "0"
                        WHITESPACE " "
                        OR_KW "OR"
                        WHITESPACE "\n       "
                        BIN_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p1"
                            DOT "."
                            NAME_REF
                              IDENT "pronargdefaults"
                          WHITESPACE " "
                          R_ANGLE ">"
                          WHITESPACE " "
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p1"
                            DOT "."
                            NAME_REF
                              IDENT "pronargs"
                      WHITESPACE " "
                      OR_KW "OR"
                      WHITESPACE "\n       "
                      BIN_EXPR
                        CALL_EXPR
                          NAME_REF
                            IDENT "array_lower"
                          ARG_LIST
                            L_PAREN "("
                            FIELD_EXPR
                              NAME_REF
                                IDENT "p1"
                              DOT "."
                              NAME_REF
                                IDENT "proargtypes"
                            COMMA ","
                            WHITESPACE " "
                            LITERAL
                              INT_NUMBER "1"
                            R_PAREN ")"
                        WHITESPACE " "
                        NEQ "!="
                        WHITESPACE " "
                        LITERAL
                          INT_NUMBER "0"
                    WHITESPACE " "
                    OR_KW "OR"
                    WHITESPACE "\n       "
                    BIN_EXPR
                      CALL_EXPR
                        NAME_REF
                          IDENT "array_upper"
                        ARG_LIST
                          L_PAREN "("
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p1"
                            DOT "."
                            NAME_REF
                              IDENT "proargtypes"
                          COMMA ","
                          WHITESPACE " "
                          LITERAL
                            INT_NUMBER "1"
                          R_PAREN ")"
                      WHITESPACE " "
                      NEQ "!="
                      WHITESPACE " "
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p1"
                          DOT "."
                          NAME_REF
                            IDENT "pronargs"
                        MINUS "-"
                        LITERAL
                          INT_NUMBER "1"
                  WHITESPACE " "
                  OR_KW "OR"
                  WHITESPACE "\n       "
                  BIN_EXPR
                    CAST_EXPR
                      LITERAL
                        INT_NUMBER "0"
                      COLON2 "::"
                      PATH_TYPE
                        PATH
                          PATH_SEGMENT
                            NAME_REF
                              IDENT "oid"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    CALL_EXPR
                      NAME_REF
                        ANY_KW "ANY"
                      WHITESPACE " "
                      L_PAREN "("
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p1"
                        DOT "."
                        NAME_REF
                          IDENT "proargtypes"
                      R_PAREN ")"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE "\n       "
                BIN_EXPR
                  NAME_REF
                    IDENT "procost"
                  WHITESPACE " "
                  LTEQ "<="
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "0"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE "\n       "
              CASE_EXPR
                CASE_KW "CASE"
                WHITESPACE " "
                WHEN_CLAUSE
                  WHEN_KW "WHEN"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "proretset"
                  WHITESPACE " "
                  THEN_KW "THEN"
                  WHITESPACE " "
                  BIN_EXPR
                    NAME_REF
                      IDENT "prorows"
                    WHITESPACE " "
                    LTEQ "<="
                    WHITESPACE " "
                    LITERAL
                      INT_NUMBER "0"
                WHITESPACE " "
                ELSE_KW "ELSE"
                WHITESPACE " "
                BIN_EXPR
                  NAME_REF
                    IDENT "prorows"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "0"
                WHITESPACE " "
                END_KW "END"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE "\n       "
            BIN_EXPR
              NAME_REF
                IDENT "prokind"
              WHITESPACE " "
              NOT_IN
                NOT_KW "NOT"
                WHITESPACE " "
                IN_KW "IN"
              WHITESPACE " "
              TUPLE_EXPR
                L_PAREN "("
                LITERAL
                  STRING "'f'"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  STRING "'a'"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  STRING "'w'"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  STRING "'p'"
                R_PAREN ")"
          WHITESPACE " "
          OR_KW "OR"
          WHITESPACE "\n       "
          BIN_EXPR
            NAME_REF
              IDENT "provolatile"
            WHITESPACE " "
            NOT_IN
              NOT_KW "NOT"
              WHITESPACE " "
              IN_KW "IN"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                STRING "'i'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'s'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'v'"
              R_PAREN ")"
        WHITESPACE " "
        OR_KW "OR"
        WHITESPACE "\n       "
        BIN_EXPR
          NAME_REF
            IDENT "proparallel"
          WHITESPACE " "
          NOT_IN
            NOT_KW "NOT"
            WHITESPACE " "
            IN_KW "IN"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'s'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'r'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'u'"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- prosrc should never be null; it can be empty only if prosqlbody isn't null"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "prosrc"
        WHITESPACE " "
        IS_KW "IS"
        WHITESPACE " "
        LITERAL
          NULL_KW "NULL"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              NAME_REF
                IDENT "prosrc"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "''"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "prosrc"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'-'"
          R_PAREN ")"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "prosqlbody"
          WHITESPACE " "
          IS_KW "IS"
          WHITESPACE " "
          LITERAL
            NULL_KW "NULL"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- proretset should only be set for normal functions"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "proretset"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "prokind"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          LITERAL
            STRING "'f'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- currently, no built-in functions should be SECURITY DEFINER;"
  WHITESPACE "\n"
  COMMENT "-- this might change in future, but there will probably never be many."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      NAME_REF
        IDENT "prosecdef"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- pronargdefaults should be 0 iff proargdefaults is null"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "pronargdefaults"
            WHITESPACE " "
            NEQB "<>"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
        WHITESPACE " "
        NEQ "!="
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "proargdefaults"
            WHITESPACE " "
            IS_NOT
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- probin should be non-empty for C functions, null everywhere else"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "prolang"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "13"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                NAME_REF
                  IDENT "probin"
                WHITESPACE " "
                IS_KW "IS"
                WHITESPACE " "
                LITERAL
                  NULL_KW "NULL"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "probin"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  STRING "''"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "probin"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'-'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "prolang"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "13"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "probin"
          WHITESPACE " "
          IS_NOT
            IS_KW "IS"
            WHITESPACE " "
            NOT_KW "NOT"
          WHITESPACE " "
          LITERAL
            NULL_KW "NULL"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Look for conflicting proc definitions (same names and input datatypes)."
  WHITESPACE "\n"
  COMMENT "-- (This test should be dead code now that we have the unique index"
  WHITESPACE "\n"
  COMMENT "-- pg_proc_proname_args_nsp_index, but I'll leave it in anyway.)"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p2"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p2"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "oid"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE "\n    "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "proname"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "proname"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p1"
              DOT "."
              NAME_REF
                IDENT "pronargs"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p2"
              DOT "."
              NAME_REF
                IDENT "pronargs"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proargtypes"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p2"
            DOT "."
            NAME_REF
              IDENT "proargtypes"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Considering only built-in procs (prolang = 12), look for multiple uses"
  WHITESPACE "\n"
  COMMENT "-- of the same internal function (ie, matching prosrc fields).  It's OK to"
  WHITESPACE "\n"
  COMMENT "-- have several entries with different pronames for the same internal function,"
  WHITESPACE "\n"
  COMMENT "-- but conflicts in the number of arguments and other critical items should"
  WHITESPACE "\n"
  COMMENT "-- be complained of.  (We don't check data types here; see next query.)"
  WHITESPACE "\n"
  COMMENT "-- Note: ignore aggregate functions here, since they all point to the same"
  WHITESPACE "\n"
  COMMENT "-- dummy built-in function."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p2"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p2"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p1"
                    DOT "."
                    NAME_REF
                      IDENT "oid"
                  WHITESPACE " "
                  L_ANGLE "<"
                  WHITESPACE " "
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p2"
                    DOT "."
                    NAME_REF
                      IDENT "oid"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE "\n    "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p1"
                    DOT "."
                    NAME_REF
                      IDENT "prosrc"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p2"
                    DOT "."
                    NAME_REF
                      IDENT "prosrc"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE "\n    "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "prolang"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "12"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "prolang"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "12"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "prokind"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                LITERAL
                  STRING "'a'"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p2"
                  DOT "."
                  NAME_REF
                    IDENT "prokind"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                LITERAL
                  STRING "'a'"
            R_PAREN ")"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        BIN_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p1"
                            DOT "."
                            NAME_REF
                              IDENT "prolang"
                          WHITESPACE " "
                          NEQ "!="
                          WHITESPACE " "
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p2"
                            DOT "."
                            NAME_REF
                              IDENT "prolang"
                        WHITESPACE " "
                        OR_KW "OR"
                        WHITESPACE "\n     "
                        BIN_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p1"
                            DOT "."
                            NAME_REF
                              IDENT "prokind"
                          WHITESPACE " "
                          NEQ "!="
                          WHITESPACE " "
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p2"
                            DOT "."
                            NAME_REF
                              IDENT "prokind"
                      WHITESPACE " "
                      OR_KW "OR"
                      WHITESPACE "\n     "
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p1"
                          DOT "."
                          NAME_REF
                            IDENT "prosecdef"
                        WHITESPACE " "
                        NEQ "!="
                        WHITESPACE " "
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p2"
                          DOT "."
                          NAME_REF
                            IDENT "prosecdef"
                    WHITESPACE " "
                    OR_KW "OR"
                    WHITESPACE "\n     "
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p1"
                        DOT "."
                        NAME_REF
                          IDENT "proleakproof"
                      WHITESPACE " "
                      NEQ "!="
                      WHITESPACE " "
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p2"
                        DOT "."
                        NAME_REF
                          IDENT "proleakproof"
                  WHITESPACE " "
                  OR_KW "OR"
                  WHITESPACE "\n     "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p1"
                      DOT "."
                      NAME_REF
                        IDENT "proisstrict"
                    WHITESPACE " "
                    NEQ "!="
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p2"
                      DOT "."
                      NAME_REF
                        IDENT "proisstrict"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE "\n     "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p1"
                    DOT "."
                    NAME_REF
                      IDENT "proretset"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p2"
                    DOT "."
                    NAME_REF
                      IDENT "proretset"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE "\n     "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "provolatile"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "p2"
                  DOT "."
                  NAME_REF
                    IDENT "provolatile"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE "\n     "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "pronargs"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "pronargs"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Look for uses of different type OIDs in the argument/result type fields"
  WHITESPACE "\n"
  COMMENT "-- for different aliases of the same built-in function."
  WHITESPACE "\n"
  COMMENT "-- This indicates that the types are being presumed to be binary-equivalent,"
  WHITESPACE "\n"
  COMMENT "-- or that the built-in function is prepared to deal with different types."
  WHITESPACE "\n"
  COMMENT "-- That's not wrong, necessarily, but we make lists of all the types being"
  WHITESPACE "\n"
  COMMENT "-- so treated.  Note that the expected output of this part of the test will"
  WHITESPACE "\n"
  COMMENT "-- need to be modified whenever new pairs of types are made binary-equivalent,"
  WHITESPACE "\n"
  COMMENT "-- or when new polymorphic built-in functions are added!"
  WHITESPACE "\n"
  COMMENT "-- Note: ignore aggregate functions here, since they all point to the same"
  WHITESPACE "\n"
  COMMENT "-- dummy built-in function.  Likewise, ignore range and multirange constructor"
  WHITESPACE "\n"
  COMMENT "-- functions."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p1"
              DOT "."
              NAME_REF
                IDENT "prorettype"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p2"
              DOT "."
              NAME_REF
                IDENT "prorettype"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        BIN_EXPR
                          BIN_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "p1"
                              DOT "."
                              NAME_REF
                                IDENT "oid"
                            WHITESPACE " "
                            NEQ "!="
                            WHITESPACE " "
                            FIELD_EXPR
                              NAME_REF
                                IDENT "p2"
                              DOT "."
                              NAME_REF
                                IDENT "oid"
                          WHITESPACE " "
                          AND_KW "AND"
                          WHITESPACE "\n    "
                          BIN_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "p1"
                              DOT "."
                              NAME_REF
                                IDENT "prosrc"
                            WHITESPACE " "
                            EQ "="
                            WHITESPACE " "
                            FIELD_EXPR
                              NAME_REF
                                IDENT "p2"
                              DOT "."
                              NAME_REF
                                IDENT "prosrc"
                        WHITESPACE " "
                        AND_KW "AND"
                        WHITESPACE "\n    "
                        BIN_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p1"
                            DOT "."
                            NAME_REF
                              IDENT "prolang"
                          WHITESPACE " "
                          EQ "="
                          WHITESPACE " "
                          LITERAL
                            INT_NUMBER "12"
                      WHITESPACE " "
                      AND_KW "AND"
                      WHITESPACE " "
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p2"
                          DOT "."
                          NAME_REF
                            IDENT "prolang"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        LITERAL
                          INT_NUMBER "12"
                    WHITESPACE " "
                    AND_KW "AND"
                    WHITESPACE "\n    "
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p1"
                        DOT "."
                        NAME_REF
                          IDENT "prokind"
                      WHITESPACE " "
                      NEQ "!="
                      WHITESPACE " "
                      LITERAL
                        STRING "'a'"
                  WHITESPACE " "
                  AND_KW "AND"
                  WHITESPACE " "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p2"
                      DOT "."
                      NAME_REF
                        IDENT "prokind"
                    WHITESPACE " "
                    NEQ "!="
                    WHITESPACE " "
                    LITERAL
                      STRING "'a'"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE "\n    "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p1"
                    DOT "."
                    NAME_REF
                      IDENT "prosrc"
                  WHITESPACE " "
                  NOT_LIKE
                    NOT_KW "NOT"
                    WHITESPACE " "
                    LIKE_KW "LIKE"
                  WHITESPACE " "
                  LITERAL
                    ESC_STRING "E'range\\\\_constructor_'"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE "\n    "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p2"
                  DOT "."
                  NAME_REF
                    IDENT "prosrc"
                WHITESPACE " "
                NOT_LIKE
                  NOT_KW "NOT"
                  WHITESPACE " "
                  LIKE_KW "LIKE"
                WHITESPACE " "
                LITERAL
                  ESC_STRING "E'range\\\\_constructor_'"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE "\n    "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "prosrc"
              WHITESPACE " "
              NOT_LIKE
                NOT_KW "NOT"
                WHITESPACE " "
                LIKE_KW "LIKE"
              WHITESPACE " "
              LITERAL
                ESC_STRING "E'multirange\\\\_constructor_'"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p2"
              DOT "."
              NAME_REF
                IDENT "prosrc"
            WHITESPACE " "
            NOT_LIKE
              NOT_KW "NOT"
              WHITESPACE " "
              LIKE_KW "LIKE"
            WHITESPACE " "
            LITERAL
              ESC_STRING "E'multirange\\\\_constructor_'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p1"
              DOT "."
              NAME_REF
                IDENT "prorettype"
            WHITESPACE " "
            L_ANGLE "<"
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p2"
              DOT "."
              NAME_REF
                IDENT "prorettype"
          R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "0"
              R_BRACK "]"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "0"
              R_BRACK "]"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        BIN_EXPR
                          BIN_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "p1"
                              DOT "."
                              NAME_REF
                                IDENT "oid"
                            WHITESPACE " "
                            NEQ "!="
                            WHITESPACE " "
                            FIELD_EXPR
                              NAME_REF
                                IDENT "p2"
                              DOT "."
                              NAME_REF
                                IDENT "oid"
                          WHITESPACE " "
                          AND_KW "AND"
                          WHITESPACE "\n    "
                          BIN_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "p1"
                              DOT "."
                              NAME_REF
                                IDENT "prosrc"
                            WHITESPACE " "
                            EQ "="
                            WHITESPACE " "
                            FIELD_EXPR
                              NAME_REF
                                IDENT "p2"
                              DOT "."
                              NAME_REF
                                IDENT "prosrc"
                        WHITESPACE " "
                        AND_KW "AND"
                        WHITESPACE "\n    "
                        BIN_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p1"
                            DOT "."
                            NAME_REF
                              IDENT "prolang"
                          WHITESPACE " "
                          EQ "="
                          WHITESPACE " "
                          LITERAL
                            INT_NUMBER "12"
                      WHITESPACE " "
                      AND_KW "AND"
                      WHITESPACE " "
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p2"
                          DOT "."
                          NAME_REF
                            IDENT "prolang"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        LITERAL
                          INT_NUMBER "12"
                    WHITESPACE " "
                    AND_KW "AND"
                    WHITESPACE "\n    "
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p1"
                        DOT "."
                        NAME_REF
                          IDENT "prokind"
                      WHITESPACE " "
                      NEQ "!="
                      WHITESPACE " "
                      LITERAL
                        STRING "'a'"
                  WHITESPACE " "
                  AND_KW "AND"
                  WHITESPACE " "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p2"
                      DOT "."
                      NAME_REF
                        IDENT "prokind"
                    WHITESPACE " "
                    NEQ "!="
                    WHITESPACE " "
                    LITERAL
                      STRING "'a'"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE "\n    "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p1"
                    DOT "."
                    NAME_REF
                      IDENT "prosrc"
                  WHITESPACE " "
                  NOT_LIKE
                    NOT_KW "NOT"
                    WHITESPACE " "
                    LIKE_KW "LIKE"
                  WHITESPACE " "
                  LITERAL
                    ESC_STRING "E'range\\\\_constructor_'"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE "\n    "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p2"
                  DOT "."
                  NAME_REF
                    IDENT "prosrc"
                WHITESPACE " "
                NOT_LIKE
                  NOT_KW "NOT"
                  WHITESPACE " "
                  LIKE_KW "LIKE"
                WHITESPACE " "
                LITERAL
                  ESC_STRING "E'range\\\\_constructor_'"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE "\n    "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "prosrc"
              WHITESPACE " "
              NOT_LIKE
                NOT_KW "NOT"
                WHITESPACE " "
                LIKE_KW "LIKE"
              WHITESPACE " "
              LITERAL
                ESC_STRING "E'multirange\\\\_constructor_'"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p2"
              DOT "."
              NAME_REF
                IDENT "prosrc"
            WHITESPACE " "
            NOT_LIKE
              NOT_KW "NOT"
              WHITESPACE " "
              LIKE_KW "LIKE"
            WHITESPACE " "
            LITERAL
              ESC_STRING "E'multirange\\\\_constructor_'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "0"
              R_BRACK "]"
            WHITESPACE " "
            L_ANGLE "<"
            WHITESPACE " "
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "0"
              R_BRACK "]"
          R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "1"
              R_BRACK "]"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "1"
              R_BRACK "]"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        BIN_EXPR
                          BIN_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "p1"
                              DOT "."
                              NAME_REF
                                IDENT "oid"
                            WHITESPACE " "
                            NEQ "!="
                            WHITESPACE " "
                            FIELD_EXPR
                              NAME_REF
                                IDENT "p2"
                              DOT "."
                              NAME_REF
                                IDENT "oid"
                          WHITESPACE " "
                          AND_KW "AND"
                          WHITESPACE "\n    "
                          BIN_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "p1"
                              DOT "."
                              NAME_REF
                                IDENT "prosrc"
                            WHITESPACE " "
                            EQ "="
                            WHITESPACE " "
                            FIELD_EXPR
                              NAME_REF
                                IDENT "p2"
                              DOT "."
                              NAME_REF
                                IDENT "prosrc"
                        WHITESPACE " "
                        AND_KW "AND"
                        WHITESPACE "\n    "
                        BIN_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p1"
                            DOT "."
                            NAME_REF
                              IDENT "prolang"
                          WHITESPACE " "
                          EQ "="
                          WHITESPACE " "
                          LITERAL
                            INT_NUMBER "12"
                      WHITESPACE " "
                      AND_KW "AND"
                      WHITESPACE " "
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p2"
                          DOT "."
                          NAME_REF
                            IDENT "prolang"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        LITERAL
                          INT_NUMBER "12"
                    WHITESPACE " "
                    AND_KW "AND"
                    WHITESPACE "\n    "
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p1"
                        DOT "."
                        NAME_REF
                          IDENT "prokind"
                      WHITESPACE " "
                      NEQ "!="
                      WHITESPACE " "
                      LITERAL
                        STRING "'a'"
                  WHITESPACE " "
                  AND_KW "AND"
                  WHITESPACE " "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p2"
                      DOT "."
                      NAME_REF
                        IDENT "prokind"
                    WHITESPACE " "
                    NEQ "!="
                    WHITESPACE " "
                    LITERAL
                      STRING "'a'"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE "\n    "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p1"
                    DOT "."
                    NAME_REF
                      IDENT "prosrc"
                  WHITESPACE " "
                  NOT_LIKE
                    NOT_KW "NOT"
                    WHITESPACE " "
                    LIKE_KW "LIKE"
                  WHITESPACE " "
                  LITERAL
                    ESC_STRING "E'range\\\\_constructor_'"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE "\n    "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p2"
                  DOT "."
                  NAME_REF
                    IDENT "prosrc"
                WHITESPACE " "
                NOT_LIKE
                  NOT_KW "NOT"
                  WHITESPACE " "
                  LIKE_KW "LIKE"
                WHITESPACE " "
                LITERAL
                  ESC_STRING "E'range\\\\_constructor_'"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE "\n    "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "prosrc"
              WHITESPACE " "
              NOT_LIKE
                NOT_KW "NOT"
                WHITESPACE " "
                LIKE_KW "LIKE"
              WHITESPACE " "
              LITERAL
                ESC_STRING "E'multirange\\\\_constructor_'"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p2"
              DOT "."
              NAME_REF
                IDENT "prosrc"
            WHITESPACE " "
            NOT_LIKE
              NOT_KW "NOT"
              WHITESPACE " "
              LIKE_KW "LIKE"
            WHITESPACE " "
            LITERAL
              ESC_STRING "E'multirange\\\\_constructor_'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "1"
              R_BRACK "]"
            WHITESPACE " "
            L_ANGLE "<"
            WHITESPACE " "
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "1"
              R_BRACK "]"
          R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "2"
              R_BRACK "]"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "2"
              R_BRACK "]"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p1"
                      DOT "."
                      NAME_REF
                        IDENT "oid"
                    WHITESPACE " "
                    NEQ "!="
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p2"
                      DOT "."
                      NAME_REF
                        IDENT "oid"
                  WHITESPACE " "
                  AND_KW "AND"
                  WHITESPACE "\n    "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p1"
                      DOT "."
                      NAME_REF
                        IDENT "prosrc"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p2"
                      DOT "."
                      NAME_REF
                        IDENT "prosrc"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE "\n    "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p1"
                    DOT "."
                    NAME_REF
                      IDENT "prolang"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "12"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p2"
                  DOT "."
                  NAME_REF
                    IDENT "prolang"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "12"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE "\n    "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "prokind"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              LITERAL
                STRING "'a'"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p2"
              DOT "."
              NAME_REF
                IDENT "prokind"
            WHITESPACE " "
            NEQ "!="
            WHITESPACE " "
            LITERAL
              STRING "'a'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "2"
              R_BRACK "]"
            WHITESPACE " "
            L_ANGLE "<"
            WHITESPACE " "
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "2"
              R_BRACK "]"
          R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "3"
              R_BRACK "]"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "3"
              R_BRACK "]"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p1"
                      DOT "."
                      NAME_REF
                        IDENT "oid"
                    WHITESPACE " "
                    NEQ "!="
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p2"
                      DOT "."
                      NAME_REF
                        IDENT "oid"
                  WHITESPACE " "
                  AND_KW "AND"
                  WHITESPACE "\n    "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p1"
                      DOT "."
                      NAME_REF
                        IDENT "prosrc"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p2"
                      DOT "."
                      NAME_REF
                        IDENT "prosrc"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE "\n    "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p1"
                    DOT "."
                    NAME_REF
                      IDENT "prolang"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "12"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p2"
                  DOT "."
                  NAME_REF
                    IDENT "prolang"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "12"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE "\n    "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "prokind"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              LITERAL
                STRING "'a'"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p2"
              DOT "."
              NAME_REF
                IDENT "prokind"
            WHITESPACE " "
            NEQ "!="
            WHITESPACE " "
            LITERAL
              STRING "'a'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "3"
              R_BRACK "]"
            WHITESPACE " "
            L_ANGLE "<"
            WHITESPACE " "
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "3"
              R_BRACK "]"
          R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "4"
              R_BRACK "]"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "4"
              R_BRACK "]"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p1"
                      DOT "."
                      NAME_REF
                        IDENT "oid"
                    WHITESPACE " "
                    NEQ "!="
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p2"
                      DOT "."
                      NAME_REF
                        IDENT "oid"
                  WHITESPACE " "
                  AND_KW "AND"
                  WHITESPACE "\n    "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p1"
                      DOT "."
                      NAME_REF
                        IDENT "prosrc"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p2"
                      DOT "."
                      NAME_REF
                        IDENT "prosrc"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE "\n    "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p1"
                    DOT "."
                    NAME_REF
                      IDENT "prolang"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "12"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p2"
                  DOT "."
                  NAME_REF
                    IDENT "prolang"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "12"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE "\n    "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "prokind"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              LITERAL
                STRING "'a'"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p2"
              DOT "."
              NAME_REF
                IDENT "prokind"
            WHITESPACE " "
            NEQ "!="
            WHITESPACE " "
            LITERAL
              STRING "'a'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "4"
              R_BRACK "]"
            WHITESPACE " "
            L_ANGLE "<"
            WHITESPACE " "
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "4"
              R_BRACK "]"
          R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "5"
              R_BRACK "]"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "5"
              R_BRACK "]"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p1"
                      DOT "."
                      NAME_REF
                        IDENT "oid"
                    WHITESPACE " "
                    NEQ "!="
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p2"
                      DOT "."
                      NAME_REF
                        IDENT "oid"
                  WHITESPACE " "
                  AND_KW "AND"
                  WHITESPACE "\n    "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p1"
                      DOT "."
                      NAME_REF
                        IDENT "prosrc"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p2"
                      DOT "."
                      NAME_REF
                        IDENT "prosrc"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE "\n    "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p1"
                    DOT "."
                    NAME_REF
                      IDENT "prolang"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "12"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p2"
                  DOT "."
                  NAME_REF
                    IDENT "prolang"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "12"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE "\n    "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "prokind"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              LITERAL
                STRING "'a'"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p2"
              DOT "."
              NAME_REF
                IDENT "prokind"
            WHITESPACE " "
            NEQ "!="
            WHITESPACE " "
            LITERAL
              STRING "'a'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "5"
              R_BRACK "]"
            WHITESPACE " "
            L_ANGLE "<"
            WHITESPACE " "
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "5"
              R_BRACK "]"
          R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "6"
              R_BRACK "]"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "6"
              R_BRACK "]"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p1"
                      DOT "."
                      NAME_REF
                        IDENT "oid"
                    WHITESPACE " "
                    NEQ "!="
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p2"
                      DOT "."
                      NAME_REF
                        IDENT "oid"
                  WHITESPACE " "
                  AND_KW "AND"
                  WHITESPACE "\n    "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p1"
                      DOT "."
                      NAME_REF
                        IDENT "prosrc"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p2"
                      DOT "."
                      NAME_REF
                        IDENT "prosrc"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE "\n    "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p1"
                    DOT "."
                    NAME_REF
                      IDENT "prolang"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "12"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p2"
                  DOT "."
                  NAME_REF
                    IDENT "prolang"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "12"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE "\n    "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "prokind"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              LITERAL
                STRING "'a'"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p2"
              DOT "."
              NAME_REF
                IDENT "prokind"
            WHITESPACE " "
            NEQ "!="
            WHITESPACE " "
            LITERAL
              STRING "'a'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "6"
              R_BRACK "]"
            WHITESPACE " "
            L_ANGLE "<"
            WHITESPACE " "
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "6"
              R_BRACK "]"
          R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "7"
              R_BRACK "]"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "7"
              R_BRACK "]"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p1"
                      DOT "."
                      NAME_REF
                        IDENT "oid"
                    WHITESPACE " "
                    NEQ "!="
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p2"
                      DOT "."
                      NAME_REF
                        IDENT "oid"
                  WHITESPACE " "
                  AND_KW "AND"
                  WHITESPACE "\n    "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p1"
                      DOT "."
                      NAME_REF
                        IDENT "prosrc"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p2"
                      DOT "."
                      NAME_REF
                        IDENT "prosrc"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE "\n    "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p1"
                    DOT "."
                    NAME_REF
                      IDENT "prolang"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "12"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p2"
                  DOT "."
                  NAME_REF
                    IDENT "prolang"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "12"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE "\n    "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "prokind"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              LITERAL
                STRING "'a'"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p2"
              DOT "."
              NAME_REF
                IDENT "prokind"
            WHITESPACE " "
            NEQ "!="
            WHITESPACE " "
            LITERAL
              STRING "'a'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "7"
              R_BRACK "]"
            WHITESPACE " "
            L_ANGLE "<"
            WHITESPACE " "
            INDEX_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "7"
              R_BRACK "]"
          R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Look for functions that return type \"internal\" and do not have any"
  WHITESPACE "\n"
  COMMENT "-- \"internal\" argument.  Such a function would be a security hole since"
  WHITESPACE "\n"
  COMMENT "-- it might be used to call an internal function from an SQL command."
  WHITESPACE "\n"
  COMMENT "-- As of 7.3 this query should find only internal_in, which is safe because"
  WHITESPACE "\n"
  COMMENT "-- it always throws an error when called."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "prorettype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'internal'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE "\n    "
          BIN_EXPR
            CAST_EXPR
              LITERAL
                STRING "'internal'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regtype"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                ANY_KW "ANY"
              WHITESPACE " "
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Look for functions that return a polymorphic type and do not have any"
  WHITESPACE "\n"
  COMMENT "-- polymorphic argument.  Calls of such functions would be unresolvable"
  WHITESPACE "\n"
  COMMENT "-- at parse time.  As of 9.6 this query should find only some input functions"
  WHITESPACE "\n"
  COMMENT "-- and GiST support functions associated with these pseudotypes."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "prorettype"
          WHITESPACE " "
          IN_KW "IN"
          WHITESPACE "\n    "
          TUPLE_EXPR
            L_PAREN "("
            CAST_EXPR
              LITERAL
                STRING "'anyelement'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regtype"
            COMMA ","
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                STRING "'anyarray'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regtype"
            COMMA ","
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                STRING "'anynonarray'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regtype"
            COMMA ","
            WHITESPACE "\n     "
            CAST_EXPR
              LITERAL
                STRING "'anyenum'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regtype"
            R_PAREN ")"
        WHITESPACE "\n  "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        CAST_EXPR
                          LITERAL
                            STRING "'anyelement'"
                          COLON2 "::"
                          PATH_TYPE
                            PATH
                              PATH_SEGMENT
                                NAME_REF
                                  IDENT "regtype"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        CALL_EXPR
                          NAME_REF
                            ANY_KW "ANY"
                          WHITESPACE " "
                          L_PAREN "("
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p1"
                            DOT "."
                            NAME_REF
                              IDENT "proargtypes"
                          R_PAREN ")"
                      WHITESPACE " "
                      OR_KW "OR"
                      WHITESPACE "\n     "
                      BIN_EXPR
                        CAST_EXPR
                          LITERAL
                            STRING "'anyarray'"
                          COLON2 "::"
                          PATH_TYPE
                            PATH
                              PATH_SEGMENT
                                NAME_REF
                                  IDENT "regtype"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        CALL_EXPR
                          NAME_REF
                            ANY_KW "ANY"
                          WHITESPACE " "
                          L_PAREN "("
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p1"
                            DOT "."
                            NAME_REF
                              IDENT "proargtypes"
                          R_PAREN ")"
                    WHITESPACE " "
                    OR_KW "OR"
                    WHITESPACE "\n     "
                    BIN_EXPR
                      CAST_EXPR
                        LITERAL
                          STRING "'anynonarray'"
                        COLON2 "::"
                        PATH_TYPE
                          PATH
                            PATH_SEGMENT
                              NAME_REF
                                IDENT "regtype"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      CALL_EXPR
                        NAME_REF
                          ANY_KW "ANY"
                        WHITESPACE " "
                        L_PAREN "("
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p1"
                          DOT "."
                          NAME_REF
                            IDENT "proargtypes"
                        R_PAREN ")"
                  WHITESPACE " "
                  OR_KW "OR"
                  WHITESPACE "\n     "
                  BIN_EXPR
                    CAST_EXPR
                      LITERAL
                        STRING "'anyenum'"
                      COLON2 "::"
                      PATH_TYPE
                        PATH
                          PATH_SEGMENT
                            NAME_REF
                              IDENT "regtype"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    CALL_EXPR
                      NAME_REF
                        ANY_KW "ANY"
                      WHITESPACE " "
                      L_PAREN "("
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p1"
                        DOT "."
                        NAME_REF
                          IDENT "proargtypes"
                      R_PAREN ")"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE "\n     "
                BIN_EXPR
                  CAST_EXPR
                    LITERAL
                      STRING "'anyrange'"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "regtype"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  CALL_EXPR
                    NAME_REF
                      ANY_KW "ANY"
                    WHITESPACE " "
                    L_PAREN "("
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p1"
                      DOT "."
                      NAME_REF
                        IDENT "proargtypes"
                    R_PAREN ")"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE "\n     "
              BIN_EXPR
                CAST_EXPR
                  LITERAL
                    STRING "'anymultirange'"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "regtype"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                CALL_EXPR
                  NAME_REF
                    ANY_KW "ANY"
                  WHITESPACE " "
                  L_PAREN "("
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p1"
                    DOT "."
                    NAME_REF
                      IDENT "proargtypes"
                  R_PAREN ")"
            R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- anyrange and anymultirange are tighter than the rest, can only resolve"
  WHITESPACE "\n"
  COMMENT "-- from each other"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "prorettype"
          WHITESPACE " "
          IN_KW "IN"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            CAST_EXPR
              LITERAL
                STRING "'anyrange'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regtype"
            COMMA ","
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                STRING "'anymultirange'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regtype"
            R_PAREN ")"
        WHITESPACE "\n  "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                CAST_EXPR
                  LITERAL
                    STRING "'anyrange'"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "regtype"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                CALL_EXPR
                  NAME_REF
                    ANY_KW "ANY"
                  WHITESPACE " "
                  L_PAREN "("
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p1"
                    DOT "."
                    NAME_REF
                      IDENT "proargtypes"
                  R_PAREN ")"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE "\n      "
              BIN_EXPR
                CAST_EXPR
                  LITERAL
                    STRING "'anymultirange'"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "regtype"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                CALL_EXPR
                  NAME_REF
                    ANY_KW "ANY"
                  WHITESPACE " "
                  L_PAREN "("
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p1"
                    DOT "."
                    NAME_REF
                      IDENT "proargtypes"
                  R_PAREN ")"
            R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- similarly for the anycompatible family"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "prorettype"
          WHITESPACE " "
          IN_KW "IN"
          WHITESPACE "\n    "
          TUPLE_EXPR
            L_PAREN "("
            CAST_EXPR
              LITERAL
                STRING "'anycompatible'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regtype"
            COMMA ","
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                STRING "'anycompatiblearray'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regtype"
            COMMA ","
            WHITESPACE "\n     "
            CAST_EXPR
              LITERAL
                STRING "'anycompatiblenonarray'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regtype"
            R_PAREN ")"
        WHITESPACE "\n  "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    CAST_EXPR
                      LITERAL
                        STRING "'anycompatible'"
                      COLON2 "::"
                      PATH_TYPE
                        PATH
                          PATH_SEGMENT
                            NAME_REF
                              IDENT "regtype"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    CALL_EXPR
                      NAME_REF
                        ANY_KW "ANY"
                      WHITESPACE " "
                      L_PAREN "("
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p1"
                        DOT "."
                        NAME_REF
                          IDENT "proargtypes"
                      R_PAREN ")"
                  WHITESPACE " "
                  OR_KW "OR"
                  WHITESPACE "\n     "
                  BIN_EXPR
                    CAST_EXPR
                      LITERAL
                        STRING "'anycompatiblearray'"
                      COLON2 "::"
                      PATH_TYPE
                        PATH
                          PATH_SEGMENT
                            NAME_REF
                              IDENT "regtype"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    CALL_EXPR
                      NAME_REF
                        ANY_KW "ANY"
                      WHITESPACE " "
                      L_PAREN "("
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p1"
                        DOT "."
                        NAME_REF
                          IDENT "proargtypes"
                      R_PAREN ")"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE "\n     "
                BIN_EXPR
                  CAST_EXPR
                    LITERAL
                      STRING "'anycompatiblenonarray'"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "regtype"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  CALL_EXPR
                    NAME_REF
                      ANY_KW "ANY"
                    WHITESPACE " "
                    L_PAREN "("
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p1"
                      DOT "."
                      NAME_REF
                        IDENT "proargtypes"
                    R_PAREN ")"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE "\n     "
              BIN_EXPR
                CAST_EXPR
                  LITERAL
                    STRING "'anycompatiblerange'"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "regtype"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                CALL_EXPR
                  NAME_REF
                    ANY_KW "ANY"
                  WHITESPACE " "
                  L_PAREN "("
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p1"
                    DOT "."
                    NAME_REF
                      IDENT "proargtypes"
                  R_PAREN ")"
            R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "prorettype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'anycompatiblerange'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
        WHITESPACE "\n  "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE "\n     "
          BIN_EXPR
            CAST_EXPR
              LITERAL
                STRING "'anycompatiblerange'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regtype"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                ANY_KW "ANY"
              WHITESPACE " "
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- Look for functions that accept cstring and are neither datatype input"
  WHITESPACE "\n"
  COMMENT "-- functions nor encoding conversion functions.  It's almost never a good"
  WHITESPACE "\n"
  COMMENT "-- idea to use cstring input for a function meant to be called from SQL;"
  WHITESPACE "\n"
  COMMENT "-- text should be used instead, because cstring lacks suitable casts."
  WHITESPACE "\n"
  COMMENT "-- As of 9.6 this query should find only cstring_out and cstring_send."
  WHITESPACE "\n"
  COMMENT "-- However, we must manually exclude shell_in, which might or might not be"
  WHITESPACE "\n"
  COMMENT "-- rejected by the EXISTS clause depending on whether there are currently"
  WHITESPACE "\n"
  COMMENT "-- any shell types."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              CAST_EXPR
                LITERAL
                  STRING "'cstring'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regtype"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  ANY_KW "ANY"
                WHITESPACE " "
                L_PAREN "("
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "proargtypes"
                R_PAREN ")"
            WHITESPACE "\n    "
            AND_KW "AND"
            WHITESPACE " "
            PREFIX_EXPR
              NOT_KW "NOT"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  EXISTS_KW "EXISTS"
                ARG_LIST
                  L_PAREN "("
                  SELECT
                    SELECT_CLAUSE
                      SELECT_KW "SELECT"
                      WHITESPACE " "
                      TARGET_LIST
                        TARGET
                          LITERAL
                            INT_NUMBER "1"
                    WHITESPACE " "
                    FROM_CLAUSE
                      FROM_KW "FROM"
                      WHITESPACE " "
                      NAME_REF
                        IDENT "pg_type"
                    WHITESPACE " "
                    WHERE_CLAUSE
                      WHERE_KW "WHERE"
                      WHITESPACE " "
                      BIN_EXPR
                        NAME_REF
                          IDENT "typinput"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p1"
                          DOT "."
                          NAME_REF
                            IDENT "oid"
                  R_PAREN ")"
          WHITESPACE "\n    "
          AND_KW "AND"
          WHITESPACE " "
          PREFIX_EXPR
            NOT_KW "NOT"
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                EXISTS_KW "EXISTS"
              ARG_LIST
                L_PAREN "("
                SELECT
                  SELECT_CLAUSE
                    SELECT_KW "SELECT"
                    WHITESPACE " "
                    TARGET_LIST
                      TARGET
                        LITERAL
                          INT_NUMBER "1"
                  WHITESPACE " "
                  FROM_CLAUSE
                    FROM_KW "FROM"
                    WHITESPACE " "
                    NAME_REF
                      IDENT "pg_conversion"
                  WHITESPACE " "
                  WHERE_CLAUSE
                    WHERE_KW "WHERE"
                    WHITESPACE " "
                    BIN_EXPR
                      NAME_REF
                        IDENT "conproc"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p1"
                        DOT "."
                        NAME_REF
                          IDENT "oid"
                R_PAREN ")"
        WHITESPACE "\n    "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'shell_in(cstring)'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regprocedure"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Likewise, look for functions that return cstring and aren't datatype output"
  WHITESPACE "\n"
  COMMENT "-- functions nor typmod output functions."
  WHITESPACE "\n"
  COMMENT "-- As of 9.6 this query should find only cstring_in and cstring_recv."
  WHITESPACE "\n"
  COMMENT "-- However, we must manually exclude shell_out."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE "  "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "prorettype"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'cstring'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regtype"
            WHITESPACE "\n    "
            AND_KW "AND"
            WHITESPACE " "
            PREFIX_EXPR
              NOT_KW "NOT"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  EXISTS_KW "EXISTS"
                ARG_LIST
                  L_PAREN "("
                  SELECT
                    SELECT_CLAUSE
                      SELECT_KW "SELECT"
                      WHITESPACE " "
                      TARGET_LIST
                        TARGET
                          LITERAL
                            INT_NUMBER "1"
                    WHITESPACE " "
                    FROM_CLAUSE
                      FROM_KW "FROM"
                      WHITESPACE " "
                      NAME_REF
                        IDENT "pg_type"
                    WHITESPACE " "
                    WHERE_CLAUSE
                      WHERE_KW "WHERE"
                      WHITESPACE " "
                      BIN_EXPR
                        NAME_REF
                          IDENT "typoutput"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p1"
                          DOT "."
                          NAME_REF
                            IDENT "oid"
                  R_PAREN ")"
          WHITESPACE "\n    "
          AND_KW "AND"
          WHITESPACE " "
          PREFIX_EXPR
            NOT_KW "NOT"
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                EXISTS_KW "EXISTS"
              ARG_LIST
                L_PAREN "("
                SELECT
                  SELECT_CLAUSE
                    SELECT_KW "SELECT"
                    WHITESPACE " "
                    TARGET_LIST
                      TARGET
                        LITERAL
                          INT_NUMBER "1"
                  WHITESPACE " "
                  FROM_CLAUSE
                    FROM_KW "FROM"
                    WHITESPACE " "
                    NAME_REF
                      IDENT "pg_type"
                  WHITESPACE " "
                  WHERE_CLAUSE
                    WHERE_KW "WHERE"
                    WHITESPACE " "
                    BIN_EXPR
                      NAME_REF
                        IDENT "typmodout"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p1"
                        DOT "."
                        NAME_REF
                          IDENT "oid"
                R_PAREN ")"
        WHITESPACE "\n    "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'shell_out(void)'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regprocedure"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check for length inconsistencies between the various argument-info arrays."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "proallargtypes"
          WHITESPACE " "
          IS_NOT
            IS_KW "IS"
            WHITESPACE " "
            NOT_KW "NOT"
          WHITESPACE " "
          LITERAL
            NULL_KW "NULL"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        BIN_EXPR
          CALL_EXPR
            NAME_REF
              IDENT "array_length"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "proallargtypes"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "array_length"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "proargtypes"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "proargmodes"
          WHITESPACE " "
          IS_NOT
            IS_KW "IS"
            WHITESPACE " "
            NOT_KW "NOT"
          WHITESPACE " "
          LITERAL
            NULL_KW "NULL"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        BIN_EXPR
          CALL_EXPR
            NAME_REF
              IDENT "array_length"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "proargmodes"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "array_length"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "proargtypes"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "proargnames"
          WHITESPACE " "
          IS_NOT
            IS_KW "IS"
            WHITESPACE " "
            NOT_KW "NOT"
          WHITESPACE " "
          LITERAL
            NULL_KW "NULL"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        BIN_EXPR
          CALL_EXPR
            NAME_REF
              IDENT "array_length"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "proargnames"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "array_length"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "proargtypes"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "proallargtypes"
            WHITESPACE " "
            IS_NOT
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "proargmodes"
            WHITESPACE " "
            IS_NOT
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        BIN_EXPR
          CALL_EXPR
            NAME_REF
              IDENT "array_length"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "proallargtypes"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
          WHITESPACE " "
          NEQB "<>"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "array_length"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "proargmodes"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "proallargtypes"
            WHITESPACE " "
            IS_NOT
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "proargnames"
            WHITESPACE " "
            IS_NOT
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        BIN_EXPR
          CALL_EXPR
            NAME_REF
              IDENT "array_length"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "proallargtypes"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
          WHITESPACE " "
          NEQB "<>"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "array_length"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "proargnames"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "proargmodes"
            WHITESPACE " "
            IS_NOT
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "proargnames"
            WHITESPACE " "
            IS_NOT
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        BIN_EXPR
          CALL_EXPR
            NAME_REF
              IDENT "array_length"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "proargmodes"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
          WHITESPACE " "
          NEQB "<>"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "array_length"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "proargnames"
              COMMA ","
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that proallargtypes matches proargtypes"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proargtypes"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proallargtypes"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proargmodes"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "proallargtypes"
          WHITESPACE " "
          IS_NOT
            IS_KW "IS"
            WHITESPACE " "
            NOT_KW "NOT"
          WHITESPACE " "
          LITERAL
            NULL_KW "NULL"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n  "
        BIN_EXPR
          ARRAY_EXPR
            ARRAY_KW "ARRAY"
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    CALL_EXPR
                      NAME_REF
                        IDENT "unnest"
                      ARG_LIST
                        L_PAREN "("
                        NAME_REF
                          IDENT "proargtypes"
                        R_PAREN ")"
            R_PAREN ")"
          WHITESPACE " "
          NEQB "<>"
          WHITESPACE "\n  "
          ARRAY_EXPR
            ARRAY_KW "ARRAY"
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    INDEX_EXPR
                      NAME_REF
                        IDENT "proallargtypes"
                      L_BRACK "["
                      NAME_REF
                        IDENT "i"
                      R_BRACK "]"
              WHITESPACE "\n        "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                CALL_EXPR
                  NAME_REF
                    IDENT "generate_series"
                  ARG_LIST
                    L_PAREN "("
                    LITERAL
                      INT_NUMBER "1"
                    COMMA ","
                    WHITESPACE " "
                    CALL_EXPR
                      NAME_REF
                        IDENT "array_length"
                      ARG_LIST
                        L_PAREN "("
                        NAME_REF
                          IDENT "proallargtypes"
                        COMMA ","
                        WHITESPACE " "
                        LITERAL
                          INT_NUMBER "1"
                        R_PAREN ")"
                    R_PAREN ")"
                WHITESPACE " "
                ALIAS
                  NAME
                    IDENT "g"
                  COLUMN_LIST
                    L_PAREN "("
                    COLUMN
                      NAME
                        IDENT "i"
                    R_PAREN ")"
              WHITESPACE "\n        "
              WHERE_CLAUSE
                WHERE_KW "WHERE"
                WHITESPACE " "
                BIN_EXPR
                  BIN_EXPR
                    NAME_REF
                      IDENT "proargmodes"
                    WHITESPACE " "
                    IS_KW "IS"
                    WHITESPACE " "
                    LITERAL
                      NULL_KW "NULL"
                  WHITESPACE " "
                  OR_KW "OR"
                  WHITESPACE " "
                  BIN_EXPR
                    INDEX_EXPR
                      NAME_REF
                        IDENT "proargmodes"
                      L_BRACK "["
                      NAME_REF
                        IDENT "i"
                      R_BRACK "]"
                    WHITESPACE " "
                    IN_KW "IN"
                    WHITESPACE " "
                    TUPLE_EXPR
                      L_PAREN "("
                      LITERAL
                        STRING "'i'"
                      COMMA ","
                      WHITESPACE " "
                      LITERAL
                        STRING "'b'"
                      COMMA ","
                      WHITESPACE " "
                      LITERAL
                        STRING "'v'"
                      R_PAREN ")"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check for type of the variadic array parameter's elements."
  WHITESPACE "\n"
  COMMENT "-- provariadic should be ANYOID if the type of the last element is ANYOID,"
  WHITESPACE "\n"
  COMMENT "-- ANYELEMENTOID if the type of the last element is ANYARRAYOID,"
  WHITESPACE "\n"
  COMMENT "-- ANYCOMPATIBLEOID if the type of the last element is ANYCOMPATIBLEARRAYOID,"
  WHITESPACE "\n"
  COMMENT "-- and otherwise the element type corresponding to the array type."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "oid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regprocedure"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "provariadic"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "proargtypes"
            COLON2 "::"
            ARRAY_TYPE
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regtype"
              L_BRACK "["
              R_BRACK "]"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "provariadic"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        WHITESPACE "\n"
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          CASE_EXPR
            CASE_KW "case"
            WHITESPACE " "
            INDEX_EXPR
              NAME_REF
                IDENT "proargtypes"
              L_BRACK "["
              BIN_EXPR
                CALL_EXPR
                  NAME_REF
                    IDENT "array_length"
                  ARG_LIST
                    L_PAREN "("
                    NAME_REF
                      IDENT "proargtypes"
                    COMMA ","
                    WHITESPACE " "
                    LITERAL
                      INT_NUMBER "1"
                    R_PAREN ")"
                MINUS "-"
                LITERAL
                  INT_NUMBER "1"
              R_BRACK "]"
            WHITESPACE "\n\t"
            WHEN_CLAUSE
              WHEN_KW "WHEN"
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'\"any\"'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regtype"
              WHITESPACE " "
              THEN_KW "THEN"
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'\"any\"'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regtype"
            WHITESPACE "\n\t"
            WHEN_CLAUSE
              WHEN_KW "WHEN"
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'anyarray'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regtype"
              WHITESPACE " "
              THEN_KW "THEN"
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'anyelement'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regtype"
            WHITESPACE "\n\t"
            WHEN_CLAUSE
              WHEN_KW "WHEN"
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'anycompatiblearray'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regtype"
              WHITESPACE " "
              THEN_KW "THEN"
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'anycompatible'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regtype"
            WHITESPACE "\n\t"
            ELSE_KW "ELSE"
            WHITESPACE " "
            PAREN_EXPR
              L_PAREN "("
              SELECT
                SELECT_CLAUSE
                  SELECT_KW "SELECT"
                  WHITESPACE " "
                  TARGET_LIST
                    TARGET
                      FIELD_EXPR
                        NAME_REF
                          IDENT "t"
                        DOT "."
                        NAME_REF
                          IDENT "oid"
                WHITESPACE "\n\t\t  "
                FROM_CLAUSE
                  FROM_KW "FROM"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "pg_type"
                  WHITESPACE " "
                  ALIAS
                    NAME
                      IDENT "t"
                WHITESPACE "\n\t\t  "
                WHERE_CLAUSE
                  WHERE_KW "WHERE"
                  WHITESPACE " "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "t"
                      DOT "."
                      NAME_REF
                        IDENT "typarray"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    INDEX_EXPR
                      NAME_REF
                        IDENT "proargtypes"
                      L_BRACK "["
                      BIN_EXPR
                        CALL_EXPR
                          NAME_REF
                            IDENT "array_length"
                          ARG_LIST
                            L_PAREN "("
                            NAME_REF
                              IDENT "proargtypes"
                            COMMA ","
                            WHITESPACE " "
                            LITERAL
                              INT_NUMBER "1"
                            R_PAREN ")"
                        MINUS "-"
                        LITERAL
                          INT_NUMBER "1"
                      R_BRACK "]"
              R_PAREN ")"
            WHITESPACE "\n\t"
            END_KW "END"
          WHITESPACE "  "
          NEQ "!="
          WHITESPACE " "
          NAME_REF
            IDENT "provariadic"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that all and only those functions with a variadic type have"
  WHITESPACE "\n"
  COMMENT "-- a variadic argument."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "oid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regprocedure"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "proargmodes"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "provariadic"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              NAME_REF
                IDENT "proargmodes"
              WHITESPACE " "
              IS_NOT
                IS_KW "IS"
                WHITESPACE " "
                NOT_KW "NOT"
              WHITESPACE " "
              LITERAL
                NULL_KW "NULL"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              LITERAL
                STRING "'v'"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  ANY_KW "any"
                L_PAREN "("
                NAME_REF
                  IDENT "proargmodes"
                R_PAREN ")"
          R_PAREN ")"
        WHITESPACE "\n    "
        IS_DISTINCT_FROM
          IS_KW "IS"
          WHITESPACE " "
          DISTINCT_KW "DISTINCT"
          WHITESPACE " "
          FROM_KW "FROM"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "provariadic"
            WHITESPACE " "
            NEQ "!="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check for prosupport functions with the wrong signature"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p2"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p2"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p2"
            DOT "."
            NAME_REF
              IDENT "oid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "prosupport"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p2"
                    DOT "."
                    NAME_REF
                      IDENT "prorettype"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  CAST_EXPR
                    LITERAL
                      STRING "'internal'"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "regtype"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "p2"
                  DOT "."
                  NAME_REF
                    IDENT "proretset"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p2"
                  DOT "."
                  NAME_REF
                    IDENT "pronargs"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "1"
            WHITESPACE "\n     "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              INDEX_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p2"
                  DOT "."
                  NAME_REF
                    IDENT "proargtypes"
                L_BRACK "["
                LITERAL
                  INT_NUMBER "0"
                R_BRACK "]"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'internal'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regtype"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Insist that all built-in pg_proc entries have descriptions"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p1"
      WHITESPACE " "
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_description"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "d"
        WHITESPACE "\n     "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "tableoid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "d"
                DOT "."
                NAME_REF
                  IDENT "classoid"
            WHITESPACE " "
            AND_KW "and"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "d"
                DOT "."
                NAME_REF
                  IDENT "objoid"
          WHITESPACE " "
          AND_KW "and"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "d"
              DOT "."
              NAME_REF
                IDENT "objsubid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "d"
            DOT "."
            NAME_REF
              IDENT "classoid"
          WHITESPACE " "
          IS_KW "IS"
          WHITESPACE " "
          LITERAL
            NULL_KW "NULL"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
          WHITESPACE " "
          LTEQ "<="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "9999"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- List of built-in leakproof functions"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Leakproof functions should only be added after carefully"
  WHITESPACE "\n"
  COMMENT "-- scrutinizing all possibly executed codepaths for possible"
  WHITESPACE "\n"
  COMMENT "-- information leaks. Don't add functions here unless you know what a"
  WHITESPACE "\n"
  COMMENT "-- leakproof function is. If unsure, don't mark it as such."
  WHITESPACE "\n\n"
  COMMENT "-- temporarily disable fancy output, so catalog changes create less diff noise"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p1"
              DOT "."
              NAME_REF
                IDENT "oid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regprocedure"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "p1"
      WHITESPACE " "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_namespace"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "pn"
        WHITESPACE "\n     "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "pronamespace"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "pn"
            DOT "."
            NAME_REF
              IDENT "oid"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "nspname"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'pg_catalog'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        NAME_REF
          IDENT "proleakproof"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that functions without argument are not marked as leakproof."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p1"
              DOT "."
              NAME_REF
                IDENT "oid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regprocedure"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "p1"
      WHITESPACE " "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_namespace"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "pn"
        WHITESPACE "\n     "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "pronamespace"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "pn"
            DOT "."
            NAME_REF
              IDENT "oid"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "nspname"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'pg_catalog'"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          NAME_REF
            IDENT "proleakproof"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "pronargs"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- restore normal output mode"
  WHITESPACE "\n\n"
  COMMENT "-- List of functions used by libpq's fe-lobj.c"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- If the output of this query changes, you probably broke libpq."
  WHITESPACE "\n"
  COMMENT "-- lo_initialize() assumes that there will be at most one match for"
  WHITESPACE "\n"
  COMMENT "-- each listed name."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "oid"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "pg_catalog"
        DOT "."
        NAME_REF
          IDENT "pg_proc"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "proname"
          WHITESPACE " "
          IN_KW "in"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            WHITESPACE "\n  "
            LITERAL
              STRING "'lo_open'"
            COMMA ","
            WHITESPACE "\n  "
            LITERAL
              STRING "'lo_close'"
            COMMA ","
            WHITESPACE "\n  "
            LITERAL
              STRING "'lo_creat'"
            COMMA ","
            WHITESPACE "\n  "
            LITERAL
              STRING "'lo_create'"
            COMMA ","
            WHITESPACE "\n  "
            LITERAL
              STRING "'lo_unlink'"
            COMMA ","
            WHITESPACE "\n  "
            LITERAL
              STRING "'lo_lseek'"
            COMMA ","
            WHITESPACE "\n  "
            LITERAL
              STRING "'lo_lseek64'"
            COMMA ","
            WHITESPACE "\n  "
            LITERAL
              STRING "'lo_tell'"
            COMMA ","
            WHITESPACE "\n  "
            LITERAL
              STRING "'lo_tell64'"
            COMMA ","
            WHITESPACE "\n  "
            LITERAL
              STRING "'lo_truncate'"
            COMMA ","
            WHITESPACE "\n  "
            LITERAL
              STRING "'lo_truncate64'"
            COMMA ","
            WHITESPACE "\n  "
            LITERAL
              STRING "'loread'"
            COMMA ","
            WHITESPACE "\n  "
            LITERAL
              STRING "'lowrite'"
            R_PAREN ")"
        WHITESPACE "\n"
        AND_KW "and"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "pronamespace"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "select"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    NAME_REF
                      IDENT "oid"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "from"
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "pg_catalog"
                  DOT "."
                  NAME_REF
                    IDENT "pg_namespace"
              WHITESPACE "\n                    "
              WHERE_CLAUSE
                WHERE_KW "where"
                WHITESPACE " "
                BIN_EXPR
                  NAME_REF
                    IDENT "nspname"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    STRING "'pg_catalog'"
            R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that all immutable functions are marked parallel safe"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "provolatile"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'i'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "proparallel"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'u'"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- **************** pg_cast ****************"
  WHITESPACE "\n\n"
  COMMENT "-- Catch bogus values in pg_cast columns (other than cases detected by"
  WHITESPACE "\n"
  COMMENT "-- oidjoins test)."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_cast"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "c"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              NAME_REF
                IDENT "castsource"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "casttarget"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
          WHITESPACE " "
          OR_KW "OR"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "castcontext"
            WHITESPACE " "
            NOT_IN
              NOT_KW "NOT"
              WHITESPACE " "
              IN_KW "IN"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                STRING "'e'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'a'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'i'"
              R_PAREN ")"
        WHITESPACE "\n    "
        OR_KW "OR"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "castmethod"
          WHITESPACE " "
          NOT_IN
            NOT_KW "NOT"
            WHITESPACE " "
            IN_KW "IN"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'f'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'b'"
            WHITESPACE " "
            COMMA ","
            LITERAL
              STRING "'i'"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that castfunc is nonzero only for cast methods that need a function,"
  WHITESPACE "\n"
  COMMENT "-- and zero otherwise"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_cast"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "c"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              NAME_REF
                IDENT "castmethod"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'f'"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "castfunc"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
          R_PAREN ")"
        WHITESPACE "\n   "
        OR_KW "OR"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              NAME_REF
                IDENT "castmethod"
              WHITESPACE " "
              IN_KW "IN"
              WHITESPACE " "
              TUPLE_EXPR
                L_PAREN "("
                LITERAL
                  STRING "'b'"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  STRING "'i'"
                R_PAREN ")"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "castfunc"
              WHITESPACE " "
              NEQB "<>"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Look for casts to/from the same type that aren't length coercion functions."
  WHITESPACE "\n"
  COMMENT "-- (We assume they are length coercions if they take multiple arguments.)"
  WHITESPACE "\n"
  COMMENT "-- Such entries are not necessarily harmful, but they are useless."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_cast"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "c"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "castsource"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          NAME_REF
            IDENT "casttarget"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "castfunc"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            STAR "*"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_cast"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "c"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "p"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "c"
              DOT "."
              NAME_REF
                IDENT "castfunc"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p"
              DOT "."
              NAME_REF
                IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p"
              DOT "."
              NAME_REF
                IDENT "pronargs"
            WHITESPACE " "
            L_ANGLE "<"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "2"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "castsource"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          NAME_REF
            IDENT "casttarget"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Look for cast functions that don't have the right signature.  The"
  WHITESPACE "\n"
  COMMENT "-- argument and result types in pg_proc must be the same as, or binary"
  WHITESPACE "\n"
  COMMENT "-- compatible with, what it says in pg_cast."
  WHITESPACE "\n"
  COMMENT "-- As a special case, we allow casts from CHAR(n) that use functions"
  WHITESPACE "\n"
  COMMENT "-- declared to take TEXT.  This does not pass the binary-coercibility test"
  WHITESPACE "\n"
  COMMENT "-- because CHAR(n)-to-TEXT normally invokes rtrim().  However, the results"
  WHITESPACE "\n"
  COMMENT "-- are the same, so long as the function is one that ignores trailing blanks."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            STAR "*"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_cast"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "c"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "p"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            NAME_REF
              IDENT "castfunc"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p"
                    DOT "."
                    NAME_REF
                      IDENT "pronargs"
                  WHITESPACE " "
                  L_ANGLE "<"
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "1"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE " "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p"
                    DOT "."
                    NAME_REF
                      IDENT "pronargs"
                  WHITESPACE " "
                  R_ANGLE ">"
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "3"
              WHITESPACE "\n     "
              OR_KW "OR"
              WHITESPACE " "
              PREFIX_EXPR
                NOT_KW "NOT"
                WHITESPACE " "
                PAREN_EXPR
                  L_PAREN "("
                  BIN_EXPR
                    CALL_EXPR
                      NAME_REF
                        IDENT "binary_coercible"
                      ARG_LIST
                        L_PAREN "("
                        FIELD_EXPR
                          NAME_REF
                            IDENT "c"
                          DOT "."
                          NAME_REF
                            IDENT "castsource"
                        COMMA ","
                        WHITESPACE " "
                        INDEX_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p"
                            DOT "."
                            NAME_REF
                              IDENT "proargtypes"
                          L_BRACK "["
                          LITERAL
                            INT_NUMBER "0"
                          R_BRACK "]"
                        R_PAREN ")"
                    WHITESPACE "\n             "
                    OR_KW "OR"
                    WHITESPACE " "
                    PAREN_EXPR
                      L_PAREN "("
                      BIN_EXPR
                        BIN_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "c"
                            DOT "."
                            NAME_REF
                              IDENT "castsource"
                          WHITESPACE " "
                          EQ "="
                          WHITESPACE " "
                          CAST_EXPR
                            LITERAL
                              STRING "'character'"
                            COLON2 "::"
                            PATH_TYPE
                              PATH
                                PATH_SEGMENT
                                  NAME_REF
                                    IDENT "regtype"
                        WHITESPACE " "
                        AND_KW "AND"
                        WHITESPACE "\n                 "
                        BIN_EXPR
                          INDEX_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "p"
                              DOT "."
                              NAME_REF
                                IDENT "proargtypes"
                            L_BRACK "["
                            LITERAL
                              INT_NUMBER "0"
                            R_BRACK "]"
                          WHITESPACE " "
                          EQ "="
                          WHITESPACE " "
                          CAST_EXPR
                            LITERAL
                              STRING "'text'"
                            COLON2 "::"
                            PATH_TYPE
                              PATH
                                PATH_SEGMENT
                                  NAME_REF
                                    IDENT "regtype"
                      R_PAREN ")"
                  R_PAREN ")"
            WHITESPACE "\n     "
            OR_KW "OR"
            WHITESPACE " "
            PREFIX_EXPR
              NOT_KW "NOT"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "binary_coercible"
                ARG_LIST
                  L_PAREN "("
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p"
                    DOT "."
                    NAME_REF
                      IDENT "prorettype"
                  COMMA ","
                  WHITESPACE " "
                  FIELD_EXPR
                    NAME_REF
                      IDENT "c"
                    DOT "."
                    NAME_REF
                      IDENT "casttarget"
                  R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            STAR "*"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_cast"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "c"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "p"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            NAME_REF
              IDENT "castfunc"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            PAREN_EXPR
              L_PAREN "("
              BIN_EXPR
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p"
                    DOT "."
                    NAME_REF
                      IDENT "pronargs"
                  WHITESPACE " "
                  R_ANGLE ">"
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "1"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE " "
                BIN_EXPR
                  INDEX_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p"
                      DOT "."
                      NAME_REF
                        IDENT "proargtypes"
                    L_BRACK "["
                    LITERAL
                      INT_NUMBER "1"
                    R_BRACK "]"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  CAST_EXPR
                    LITERAL
                      STRING "'int4'"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "regtype"
              R_PAREN ")"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE "\n     "
            PAREN_EXPR
              L_PAREN "("
              BIN_EXPR
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p"
                    DOT "."
                    NAME_REF
                      IDENT "pronargs"
                  WHITESPACE " "
                  R_ANGLE ">"
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "2"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE " "
                BIN_EXPR
                  INDEX_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p"
                      DOT "."
                      NAME_REF
                        IDENT "proargtypes"
                    L_BRACK "["
                    LITERAL
                      INT_NUMBER "2"
                    R_BRACK "]"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  CAST_EXPR
                    LITERAL
                      STRING "'bool'"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "regtype"
              R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Look for binary compatible casts that do not have the reverse"
  WHITESPACE "\n"
  COMMENT "-- direction registered as well, or where the reverse direction is not"
  WHITESPACE "\n"
  COMMENT "-- also binary compatible.  This is legal, but usually not intended."
  WHITESPACE "\n\n"
  COMMENT "-- As of 7.4, this finds the casts from text and varchar to bpchar, because"
  WHITESPACE "\n"
  COMMENT "-- those are binary-compatible while the reverse way goes through rtrim()."
  WHITESPACE "\n\n"
  COMMENT "-- As of 8.2, this finds the cast from cidr to inet, because that is a"
  WHITESPACE "\n"
  COMMENT "-- trivial binary coercion while the other way goes through inet_to_cidr()."
  WHITESPACE "\n\n"
  COMMENT "-- As of 8.3, this finds the casts from xml to text, varchar, and bpchar,"
  WHITESPACE "\n"
  COMMENT "-- because those are binary-compatible while the reverse goes through"
  WHITESPACE "\n"
  COMMENT "-- texttoxml(), which does an XML syntax check."
  WHITESPACE "\n\n"
  COMMENT "-- As of 9.1, this finds the cast from pg_node_tree to text, which we"
  WHITESPACE "\n"
  COMMENT "-- intentionally do not provide a reverse pathway for."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "castsource"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "casttarget"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "castfunc"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "castcontext"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_cast"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "c"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            NAME_REF
              IDENT "castmethod"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'b'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              EXISTS_KW "EXISTS"
            WHITESPACE " "
            ARG_LIST
              L_PAREN "("
              SELECT
                SELECT_CLAUSE
                  SELECT_KW "SELECT"
                  WHITESPACE " "
                  TARGET_LIST
                    TARGET
                      LITERAL
                        INT_NUMBER "1"
                WHITESPACE " "
                FROM_CLAUSE
                  FROM_KW "FROM"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "pg_cast"
                  WHITESPACE " "
                  ALIAS
                    NAME
                      IDENT "k"
                WHITESPACE "\n                "
                WHERE_CLAUSE
                  WHERE_KW "WHERE"
                  WHITESPACE " "
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "k"
                          DOT "."
                          NAME_REF
                            IDENT "castmethod"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        LITERAL
                          STRING "'b'"
                      WHITESPACE " "
                      AND_KW "AND"
                      WHITESPACE "\n                    "
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "k"
                          DOT "."
                          NAME_REF
                            IDENT "castsource"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        FIELD_EXPR
                          NAME_REF
                            IDENT "c"
                          DOT "."
                          NAME_REF
                            IDENT "casttarget"
                    WHITESPACE " "
                    AND_KW "AND"
                    WHITESPACE "\n                    "
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "k"
                        DOT "."
                        NAME_REF
                          IDENT "casttarget"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      FIELD_EXPR
                        NAME_REF
                          IDENT "c"
                        DOT "."
                        NAME_REF
                          IDENT "castsource"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- **************** pg_conversion ****************"
  WHITESPACE "\n\n"
  COMMENT "-- Look for illegal values in pg_conversion fields."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            NAME_REF
              IDENT "conname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_conversion"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "c"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "c"
              DOT "."
              NAME_REF
                IDENT "conproc"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          WHITESPACE " "
          OR_KW "OR"
          WHITESPACE "\n    "
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "pg_encoding_to_char"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "conforencoding"
                R_PAREN ")"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "''"
        WHITESPACE " "
        OR_KW "OR"
        WHITESPACE "\n    "
        BIN_EXPR
          CALL_EXPR
            NAME_REF
              IDENT "pg_encoding_to_char"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "contoencoding"
              R_PAREN ")"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "''"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Look for conprocs that don't have the expected signature."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            NAME_REF
              IDENT "conname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "p"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_conversion"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "c"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "oid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            NAME_REF
              IDENT "conproc"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        BIN_EXPR
                          BIN_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "p"
                              DOT "."
                              NAME_REF
                                IDENT "prorettype"
                            WHITESPACE " "
                            NEQ "!="
                            WHITESPACE " "
                            CAST_EXPR
                              LITERAL
                                STRING "'int4'"
                              COLON2 "::"
                              PATH_TYPE
                                PATH
                                  PATH_SEGMENT
                                    NAME_REF
                                      IDENT "regtype"
                          WHITESPACE " "
                          OR_KW "OR"
                          WHITESPACE " "
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p"
                            DOT "."
                            NAME_REF
                              IDENT "proretset"
                        WHITESPACE " "
                        OR_KW "OR"
                        WHITESPACE "\n     "
                        BIN_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p"
                            DOT "."
                            NAME_REF
                              IDENT "pronargs"
                          WHITESPACE " "
                          NEQ "!="
                          WHITESPACE " "
                          LITERAL
                            INT_NUMBER "6"
                      WHITESPACE " "
                      OR_KW "OR"
                      WHITESPACE "\n     "
                      BIN_EXPR
                        INDEX_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p"
                            DOT "."
                            NAME_REF
                              IDENT "proargtypes"
                          L_BRACK "["
                          LITERAL
                            INT_NUMBER "0"
                          R_BRACK "]"
                        WHITESPACE " "
                        NEQ "!="
                        WHITESPACE " "
                        CAST_EXPR
                          LITERAL
                            STRING "'int4'"
                          COLON2 "::"
                          PATH_TYPE
                            PATH
                              PATH_SEGMENT
                                NAME_REF
                                  IDENT "regtype"
                    WHITESPACE " "
                    OR_KW "OR"
                    WHITESPACE "\n     "
                    BIN_EXPR
                      INDEX_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p"
                          DOT "."
                          NAME_REF
                            IDENT "proargtypes"
                        L_BRACK "["
                        LITERAL
                          INT_NUMBER "1"
                        R_BRACK "]"
                      WHITESPACE " "
                      NEQ "!="
                      WHITESPACE " "
                      CAST_EXPR
                        LITERAL
                          STRING "'int4'"
                        COLON2 "::"
                        PATH_TYPE
                          PATH
                            PATH_SEGMENT
                              NAME_REF
                                IDENT "regtype"
                  WHITESPACE " "
                  OR_KW "OR"
                  WHITESPACE "\n     "
                  BIN_EXPR
                    INDEX_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p"
                        DOT "."
                        NAME_REF
                          IDENT "proargtypes"
                      L_BRACK "["
                      LITERAL
                        INT_NUMBER "2"
                      R_BRACK "]"
                    WHITESPACE " "
                    NEQ "!="
                    WHITESPACE " "
                    CAST_EXPR
                      LITERAL
                        STRING "'cstring'"
                      COLON2 "::"
                      PATH_TYPE
                        PATH
                          PATH_SEGMENT
                            NAME_REF
                              IDENT "regtype"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE "\n     "
                BIN_EXPR
                  INDEX_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p"
                      DOT "."
                      NAME_REF
                        IDENT "proargtypes"
                    L_BRACK "["
                    LITERAL
                      INT_NUMBER "3"
                    R_BRACK "]"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  CAST_EXPR
                    LITERAL
                      STRING "'internal'"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "regtype"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE "\n     "
              BIN_EXPR
                INDEX_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p"
                    DOT "."
                    NAME_REF
                      IDENT "proargtypes"
                  L_BRACK "["
                  LITERAL
                    INT_NUMBER "4"
                  R_BRACK "]"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                CAST_EXPR
                  LITERAL
                    STRING "'int4'"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "regtype"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE "\n     "
            BIN_EXPR
              INDEX_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p"
                  DOT "."
                  NAME_REF
                    IDENT "proargtypes"
                L_BRACK "["
                LITERAL
                  INT_NUMBER "5"
                R_BRACK "]"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'bool'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regtype"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check for conprocs that don't perform the specific conversion that"
  WHITESPACE "\n"
  COMMENT "-- pg_conversion alleges they do, by trying to invoke each conversion"
  WHITESPACE "\n"
  COMMENT "-- on some simple ASCII data.  (The conproc should throw an error if"
  WHITESPACE "\n"
  COMMENT "-- it doesn't accept the encodings that are passed to it.)"
  WHITESPACE "\n"
  COMMENT "-- Unfortunately, we can't test non-default conprocs this way, because"
  WHITESPACE "\n"
  COMMENT "-- there is no way to ask convert() to invoke them, and we cannot call"
  WHITESPACE "\n"
  COMMENT "-- them directly from SQL.  But there are no non-default built-in"
  WHITESPACE "\n"
  COMMENT "-- conversions anyway."
  WHITESPACE "\n"
  COMMENT "-- (Similarly, this doesn't cope with any search path issues.)"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c"
            DOT "."
            NAME_REF
              IDENT "conname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_conversion"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "c"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "condefault"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        BIN_EXPR
          CALL_EXPR
            NAME_REF
              IDENT "convert"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'ABC'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "bytea"
              COMMA ","
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "pg_encoding_to_char"
                ARG_LIST
                  L_PAREN "("
                  NAME_REF
                    IDENT "conforencoding"
                  R_PAREN ")"
              COMMA ","
              WHITESPACE "\n            "
              CALL_EXPR
                NAME_REF
                  IDENT "pg_encoding_to_char"
                ARG_LIST
                  L_PAREN "("
                  NAME_REF
                    IDENT "contoencoding"
                  R_PAREN ")"
              R_PAREN ")"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          LITERAL
            STRING "'ABC'"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- **************** pg_operator ****************"
  WHITESPACE "\n\n"
  COMMENT "-- Look for illegal values in pg_operator fields."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "o1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "o1"
                  DOT "."
                  NAME_REF
                    IDENT "oprkind"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                LITERAL
                  STRING "'b'"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "o1"
                  DOT "."
                  NAME_REF
                    IDENT "oprkind"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                LITERAL
                  STRING "'l'"
            R_PAREN ")"
          WHITESPACE " "
          OR_KW "OR"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "o1"
              DOT "."
              NAME_REF
                IDENT "oprresult"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        WHITESPACE " "
        OR_KW "OR"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprcode"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Look for missing or unwanted operand types"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "o1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "o1"
                  DOT "."
                  NAME_REF
                    IDENT "oprleft"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "0"
              WHITESPACE " "
              AND_KW "and"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "o1"
                  DOT "."
                  NAME_REF
                    IDENT "oprkind"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                LITERAL
                  STRING "'l'"
            R_PAREN ")"
          WHITESPACE " "
          OR_KW "OR"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "o1"
                  DOT "."
                  NAME_REF
                    IDENT "oprleft"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "0"
              WHITESPACE " "
              AND_KW "and"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "o1"
                  DOT "."
                  NAME_REF
                    IDENT "oprkind"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  STRING "'l'"
            R_PAREN ")"
        WHITESPACE " "
        OR_KW "OR"
        WHITESPACE "\n    "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprright"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Look for conflicting operator definitions (same names and input datatypes)."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprcode"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o2"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o2"
            DOT "."
            NAME_REF
              IDENT "oprcode"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "o1"
                  DOT "."
                  NAME_REF
                    IDENT "oid"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "o2"
                  DOT "."
                  NAME_REF
                    IDENT "oid"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE "\n    "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "o1"
                  DOT "."
                  NAME_REF
                    IDENT "oprname"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "o2"
                  DOT "."
                  NAME_REF
                    IDENT "oprname"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE "\n    "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "o1"
                DOT "."
                NAME_REF
                  IDENT "oprkind"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "o2"
                DOT "."
                NAME_REF
                  IDENT "oprkind"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "o1"
              DOT "."
              NAME_REF
                IDENT "oprleft"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "o2"
              DOT "."
              NAME_REF
                IDENT "oprleft"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprright"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "o2"
            DOT "."
            NAME_REF
              IDENT "oprright"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Look for commutative operators that don't commute."
  WHITESPACE "\n"
  COMMENT "-- DEFINITIONAL NOTE: If A.oprcom = B, then x A y has the same result as y B x."
  WHITESPACE "\n"
  COMMENT "-- We expect that B will always say that B.oprcom = A as well; that's not"
  WHITESPACE "\n"
  COMMENT "-- inherently essential, but it would be inefficient not to mark it so."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprcode"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o2"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o2"
            DOT "."
            NAME_REF
              IDENT "oprcode"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprcom"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "o2"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "o1"
                      DOT "."
                      NAME_REF
                        IDENT "oprkind"
                    WHITESPACE " "
                    NEQ "!="
                    WHITESPACE " "
                    LITERAL
                      STRING "'b'"
                  WHITESPACE " "
                  OR_KW "OR"
                  WHITESPACE "\n     "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "o1"
                      DOT "."
                      NAME_REF
                        IDENT "oprleft"
                    WHITESPACE " "
                    NEQ "!="
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "o2"
                      DOT "."
                      NAME_REF
                        IDENT "oprright"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE "\n     "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "o1"
                    DOT "."
                    NAME_REF
                      IDENT "oprright"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  FIELD_EXPR
                    NAME_REF
                      IDENT "o2"
                    DOT "."
                    NAME_REF
                      IDENT "oprleft"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE "\n     "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "o1"
                  DOT "."
                  NAME_REF
                    IDENT "oprresult"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "o2"
                  DOT "."
                  NAME_REF
                    IDENT "oprresult"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE "\n     "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "o1"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "o2"
                DOT "."
                NAME_REF
                  IDENT "oprcom"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Look for negatory operators that don't agree."
  WHITESPACE "\n"
  COMMENT "-- DEFINITIONAL NOTE: If A.oprnegate = B, then both A and B must yield"
  WHITESPACE "\n"
  COMMENT "-- boolean results, and (x A y) == ! (x B y), or the equivalent for"
  WHITESPACE "\n"
  COMMENT "-- single-operand operators."
  WHITESPACE "\n"
  COMMENT "-- We expect that B will always say that B.oprnegate = A as well; that's not"
  WHITESPACE "\n"
  COMMENT "-- inherently essential, but it would be inefficient not to mark it so."
  WHITESPACE "\n"
  COMMENT "-- Also, A and B had better not be the same operator."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprcode"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o2"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o2"
            DOT "."
            NAME_REF
              IDENT "oprcode"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprnegate"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "o2"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "o1"
                          DOT "."
                          NAME_REF
                            IDENT "oprkind"
                        WHITESPACE " "
                        NEQ "!="
                        WHITESPACE " "
                        FIELD_EXPR
                          NAME_REF
                            IDENT "o2"
                          DOT "."
                          NAME_REF
                            IDENT "oprkind"
                      WHITESPACE " "
                      OR_KW "OR"
                      WHITESPACE "\n     "
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "o1"
                          DOT "."
                          NAME_REF
                            IDENT "oprleft"
                        WHITESPACE " "
                        NEQ "!="
                        WHITESPACE " "
                        FIELD_EXPR
                          NAME_REF
                            IDENT "o2"
                          DOT "."
                          NAME_REF
                            IDENT "oprleft"
                    WHITESPACE " "
                    OR_KW "OR"
                    WHITESPACE "\n     "
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "o1"
                        DOT "."
                        NAME_REF
                          IDENT "oprright"
                      WHITESPACE " "
                      NEQ "!="
                      WHITESPACE " "
                      FIELD_EXPR
                        NAME_REF
                          IDENT "o2"
                        DOT "."
                        NAME_REF
                          IDENT "oprright"
                  WHITESPACE " "
                  OR_KW "OR"
                  WHITESPACE "\n     "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "o1"
                      DOT "."
                      NAME_REF
                        IDENT "oprresult"
                    WHITESPACE " "
                    NEQ "!="
                    WHITESPACE " "
                    CAST_EXPR
                      LITERAL
                        STRING "'bool'"
                      COLON2 "::"
                      PATH_TYPE
                        PATH
                          PATH_SEGMENT
                            NAME_REF
                              IDENT "regtype"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE "\n     "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "o2"
                    DOT "."
                    NAME_REF
                      IDENT "oprresult"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  CAST_EXPR
                    LITERAL
                      STRING "'bool'"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "regtype"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE "\n     "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "o1"
                  DOT "."
                  NAME_REF
                    IDENT "oid"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "o2"
                  DOT "."
                  NAME_REF
                    IDENT "oprnegate"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE "\n     "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "o1"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "o2"
                DOT "."
                NAME_REF
                  IDENT "oid"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Make a list of the names of operators that are claimed to be commutator"
  WHITESPACE "\n"
  COMMENT "-- pairs.  This list will grow over time, but before accepting a new entry"
  WHITESPACE "\n"
  COMMENT "-- make sure you didn't link the wrong operators."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprname"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "op1"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o2"
            DOT "."
            NAME_REF
              IDENT "oprname"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "op2"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "o1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "o2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprcom"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "o2"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprname"
          WHITESPACE " "
          LTEQ "<="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "o2"
            DOT "."
            NAME_REF
              IDENT "oprname"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Likewise for negator pairs."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprname"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "op1"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o2"
            DOT "."
            NAME_REF
              IDENT "oprname"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "op2"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "o1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "o2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprnegate"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "o2"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprname"
          WHITESPACE " "
          LTEQ "<="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "o2"
            DOT "."
            NAME_REF
              IDENT "oprname"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- A mergejoinable or hashjoinable operator must be binary, must return"
  WHITESPACE "\n"
  COMMENT "-- boolean, and must have a commutator (itself, unless it's a cross-type"
  WHITESPACE "\n"
  COMMENT "-- operator)."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprname"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "o1"
              DOT "."
              NAME_REF
                IDENT "oprcanmerge"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "o1"
              DOT "."
              NAME_REF
                IDENT "oprcanhash"
          R_PAREN ")"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "o1"
                    DOT "."
                    NAME_REF
                      IDENT "oprkind"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    STRING "'b'"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE " "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "o1"
                    DOT "."
                    NAME_REF
                      IDENT "oprresult"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  CAST_EXPR
                    LITERAL
                      STRING "'bool'"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "regtype"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "o1"
                  DOT "."
                  NAME_REF
                    IDENT "oprcom"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "0"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- What's more, the commutator had better be mergejoinable/hashjoinable too."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o2"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o2"
            DOT "."
            NAME_REF
              IDENT "oprname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprcom"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "o2"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "o1"
                DOT "."
                NAME_REF
                  IDENT "oprcanmerge"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "o2"
                DOT "."
                NAME_REF
                  IDENT "oprcanmerge"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE "\n     "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "o1"
                DOT "."
                NAME_REF
                  IDENT "oprcanhash"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "o2"
                DOT "."
                NAME_REF
                  IDENT "oprcanhash"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Mergejoinable operators should appear as equality members of btree index"
  WHITESPACE "\n"
  COMMENT "-- opfamilies."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "o1"
          DOT "."
          NAME_REF
            IDENT "oprcanmerge"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              EXISTS_KW "EXISTS"
            WHITESPACE "\n  "
            ARG_LIST
              L_PAREN "("
              SELECT
                SELECT_CLAUSE
                  SELECT_KW "SELECT"
                  WHITESPACE " "
                  TARGET_LIST
                    TARGET
                      LITERAL
                        INT_NUMBER "1"
                WHITESPACE " "
                FROM_CLAUSE
                  FROM_KW "FROM"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "pg_amop"
                WHITESPACE "\n   "
                WHERE_CLAUSE
                  WHERE_KW "WHERE"
                  WHITESPACE " "
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        NAME_REF
                          IDENT "amopmethod"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        PAREN_EXPR
                          L_PAREN "("
                          SELECT
                            SELECT_CLAUSE
                              SELECT_KW "SELECT"
                              WHITESPACE " "
                              TARGET_LIST
                                TARGET
                                  NAME_REF
                                    IDENT "oid"
                            WHITESPACE " "
                            FROM_CLAUSE
                              FROM_KW "FROM"
                              WHITESPACE " "
                              NAME_REF
                                IDENT "pg_am"
                            WHITESPACE " "
                            WHERE_CLAUSE
                              WHERE_KW "WHERE"
                              WHITESPACE " "
                              BIN_EXPR
                                NAME_REF
                                  IDENT "amname"
                                WHITESPACE " "
                                EQ "="
                                WHITESPACE " "
                                LITERAL
                                  STRING "'btree'"
                          R_PAREN ")"
                      WHITESPACE " "
                      AND_KW "AND"
                      WHITESPACE "\n         "
                      BIN_EXPR
                        NAME_REF
                          IDENT "amopopr"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        FIELD_EXPR
                          NAME_REF
                            IDENT "o1"
                          DOT "."
                          NAME_REF
                            IDENT "oid"
                    WHITESPACE " "
                    AND_KW "AND"
                    WHITESPACE " "
                    BIN_EXPR
                      NAME_REF
                        IDENT "amopstrategy"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      LITERAL
                        INT_NUMBER "3"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- And the converse."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "amopfamily"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_amop"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "p"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              NAME_REF
                IDENT "amopopr"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "o1"
                DOT "."
                NAME_REF
                  IDENT "oid"
            WHITESPACE "\n  "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "amopmethod"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              PAREN_EXPR
                L_PAREN "("
                SELECT
                  SELECT_CLAUSE
                    SELECT_KW "SELECT"
                    WHITESPACE " "
                    TARGET_LIST
                      TARGET
                        NAME_REF
                          IDENT "oid"
                  WHITESPACE " "
                  FROM_CLAUSE
                    FROM_KW "FROM"
                    WHITESPACE " "
                    NAME_REF
                      IDENT "pg_am"
                  WHITESPACE " "
                  WHERE_CLAUSE
                    WHERE_KW "WHERE"
                    WHITESPACE " "
                    BIN_EXPR
                      NAME_REF
                        IDENT "amname"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      LITERAL
                        STRING "'btree'"
                R_PAREN ")"
          WHITESPACE "\n  "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "amopstrategy"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "3"
        WHITESPACE "\n  "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprcanmerge"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Hashable operators should appear as members of hash index opfamilies."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "o1"
          DOT "."
          NAME_REF
            IDENT "oprcanhash"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              EXISTS_KW "EXISTS"
            WHITESPACE "\n  "
            ARG_LIST
              L_PAREN "("
              SELECT
                SELECT_CLAUSE
                  SELECT_KW "SELECT"
                  WHITESPACE " "
                  TARGET_LIST
                    TARGET
                      LITERAL
                        INT_NUMBER "1"
                WHITESPACE " "
                FROM_CLAUSE
                  FROM_KW "FROM"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "pg_amop"
                WHITESPACE "\n   "
                WHERE_CLAUSE
                  WHERE_KW "WHERE"
                  WHITESPACE " "
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        NAME_REF
                          IDENT "amopmethod"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        PAREN_EXPR
                          L_PAREN "("
                          SELECT
                            SELECT_CLAUSE
                              SELECT_KW "SELECT"
                              WHITESPACE " "
                              TARGET_LIST
                                TARGET
                                  NAME_REF
                                    IDENT "oid"
                            WHITESPACE " "
                            FROM_CLAUSE
                              FROM_KW "FROM"
                              WHITESPACE " "
                              NAME_REF
                                IDENT "pg_am"
                            WHITESPACE " "
                            WHERE_CLAUSE
                              WHERE_KW "WHERE"
                              WHITESPACE " "
                              BIN_EXPR
                                NAME_REF
                                  IDENT "amname"
                                WHITESPACE " "
                                EQ "="
                                WHITESPACE " "
                                LITERAL
                                  STRING "'hash'"
                          R_PAREN ")"
                      WHITESPACE " "
                      AND_KW "AND"
                      WHITESPACE "\n         "
                      BIN_EXPR
                        NAME_REF
                          IDENT "amopopr"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        FIELD_EXPR
                          NAME_REF
                            IDENT "o1"
                          DOT "."
                          NAME_REF
                            IDENT "oid"
                    WHITESPACE " "
                    AND_KW "AND"
                    WHITESPACE " "
                    BIN_EXPR
                      NAME_REF
                        IDENT "amopstrategy"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      LITERAL
                        INT_NUMBER "1"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- And the converse."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "amopfamily"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_amop"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "p"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "amopopr"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "o1"
              DOT "."
              NAME_REF
                IDENT "oid"
          WHITESPACE "\n  "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "amopmethod"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            PAREN_EXPR
              L_PAREN "("
              SELECT
                SELECT_CLAUSE
                  SELECT_KW "SELECT"
                  WHITESPACE " "
                  TARGET_LIST
                    TARGET
                      NAME_REF
                        IDENT "oid"
                WHITESPACE " "
                FROM_CLAUSE
                  FROM_KW "FROM"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "pg_am"
                WHITESPACE " "
                WHERE_CLAUSE
                  WHERE_KW "WHERE"
                  WHITESPACE " "
                  BIN_EXPR
                    NAME_REF
                      IDENT "amname"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    LITERAL
                      STRING "'hash'"
              R_PAREN ")"
        WHITESPACE "\n  "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprcanhash"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that each operator defined in pg_operator matches its oprcode entry"
  WHITESPACE "\n"
  COMMENT "-- in pg_proc.  Easiest to do this separately for each oprkind."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "o1"
              DOT "."
              NAME_REF
                IDENT "oprcode"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p1"
              DOT "."
              NAME_REF
                IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "o1"
              DOT "."
              NAME_REF
                IDENT "oprkind"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'b'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p1"
                    DOT "."
                    NAME_REF
                      IDENT "pronargs"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "2"
                WHITESPACE "\n     "
                OR_KW "OR"
                WHITESPACE " "
                PREFIX_EXPR
                  NOT_KW "NOT"
                  WHITESPACE " "
                  CALL_EXPR
                    NAME_REF
                      IDENT "binary_coercible"
                    ARG_LIST
                      L_PAREN "("
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p1"
                        DOT "."
                        NAME_REF
                          IDENT "prorettype"
                      COMMA ","
                      WHITESPACE " "
                      FIELD_EXPR
                        NAME_REF
                          IDENT "o1"
                        DOT "."
                        NAME_REF
                          IDENT "oprresult"
                      R_PAREN ")"
              WHITESPACE "\n     "
              OR_KW "OR"
              WHITESPACE " "
              PREFIX_EXPR
                NOT_KW "NOT"
                WHITESPACE " "
                CALL_EXPR
                  NAME_REF
                    IDENT "binary_coercible"
                  ARG_LIST
                    L_PAREN "("
                    FIELD_EXPR
                      NAME_REF
                        IDENT "o1"
                      DOT "."
                      NAME_REF
                        IDENT "oprleft"
                    COMMA ","
                    WHITESPACE " "
                    INDEX_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p1"
                        DOT "."
                        NAME_REF
                          IDENT "proargtypes"
                      L_BRACK "["
                      LITERAL
                        INT_NUMBER "0"
                      R_BRACK "]"
                    R_PAREN ")"
            WHITESPACE "\n     "
            OR_KW "OR"
            WHITESPACE " "
            PREFIX_EXPR
              NOT_KW "NOT"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "binary_coercible"
                ARG_LIST
                  L_PAREN "("
                  FIELD_EXPR
                    NAME_REF
                      IDENT "o1"
                    DOT "."
                    NAME_REF
                      IDENT "oprright"
                  COMMA ","
                  WHITESPACE " "
                  INDEX_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p1"
                      DOT "."
                      NAME_REF
                        IDENT "proargtypes"
                    L_BRACK "["
                    LITERAL
                      INT_NUMBER "1"
                    R_BRACK "]"
                  R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "o1"
              DOT "."
              NAME_REF
                IDENT "oprcode"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p1"
              DOT "."
              NAME_REF
                IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "o1"
              DOT "."
              NAME_REF
                IDENT "oprkind"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'l'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p1"
                    DOT "."
                    NAME_REF
                      IDENT "pronargs"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "1"
                WHITESPACE "\n     "
                OR_KW "OR"
                WHITESPACE " "
                PREFIX_EXPR
                  NOT_KW "NOT"
                  WHITESPACE " "
                  CALL_EXPR
                    NAME_REF
                      IDENT "binary_coercible"
                    ARG_LIST
                      L_PAREN "("
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p1"
                        DOT "."
                        NAME_REF
                          IDENT "prorettype"
                      COMMA ","
                      WHITESPACE " "
                      FIELD_EXPR
                        NAME_REF
                          IDENT "o1"
                        DOT "."
                        NAME_REF
                          IDENT "oprresult"
                      R_PAREN ")"
              WHITESPACE "\n     "
              OR_KW "OR"
              WHITESPACE " "
              PREFIX_EXPR
                NOT_KW "NOT"
                WHITESPACE " "
                CALL_EXPR
                  NAME_REF
                    IDENT "binary_coercible"
                  ARG_LIST
                    L_PAREN "("
                    FIELD_EXPR
                      NAME_REF
                        IDENT "o1"
                      DOT "."
                      NAME_REF
                        IDENT "oprright"
                    COMMA ","
                    WHITESPACE " "
                    INDEX_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p1"
                        DOT "."
                        NAME_REF
                          IDENT "proargtypes"
                      L_BRACK "["
                      LITERAL
                        INT_NUMBER "0"
                      R_BRACK "]"
                    R_PAREN ")"
            WHITESPACE "\n     "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "o1"
                DOT "."
                NAME_REF
                  IDENT "oprleft"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- If the operator is mergejoinable or hashjoinable, its underlying function"
  WHITESPACE "\n"
  COMMENT "-- should not be volatile."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "o1"
              DOT "."
              NAME_REF
                IDENT "oprcode"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p1"
              DOT "."
              NAME_REF
                IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "o1"
                DOT "."
                NAME_REF
                  IDENT "oprcanmerge"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "o1"
                DOT "."
                NAME_REF
                  IDENT "oprcanhash"
            R_PAREN ")"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "provolatile"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'v'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- If oprrest is set, the operator must return boolean,"
  WHITESPACE "\n"
  COMMENT "-- and it must link to a proc with the right signature"
  WHITESPACE "\n"
  COMMENT "-- to be a restriction selectivity estimator."
  WHITESPACE "\n"
  COMMENT "-- The proc signature we want is: float8 proc(internal, oid, internal, int4)"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p2"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p2"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprrest"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p2"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        BIN_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "o1"
                            DOT "."
                            NAME_REF
                              IDENT "oprresult"
                          WHITESPACE " "
                          NEQ "!="
                          WHITESPACE " "
                          CAST_EXPR
                            LITERAL
                              STRING "'bool'"
                            COLON2 "::"
                            PATH_TYPE
                              PATH
                                PATH_SEGMENT
                                  NAME_REF
                                    IDENT "regtype"
                        WHITESPACE " "
                        OR_KW "OR"
                        WHITESPACE "\n     "
                        BIN_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p2"
                            DOT "."
                            NAME_REF
                              IDENT "prorettype"
                          WHITESPACE " "
                          NEQ "!="
                          WHITESPACE " "
                          CAST_EXPR
                            LITERAL
                              STRING "'float8'"
                            COLON2 "::"
                            PATH_TYPE
                              PATH
                                PATH_SEGMENT
                                  NAME_REF
                                    IDENT "regtype"
                      WHITESPACE " "
                      OR_KW "OR"
                      WHITESPACE " "
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p2"
                        DOT "."
                        NAME_REF
                          IDENT "proretset"
                    WHITESPACE " "
                    OR_KW "OR"
                    WHITESPACE "\n     "
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p2"
                        DOT "."
                        NAME_REF
                          IDENT "pronargs"
                      WHITESPACE " "
                      NEQ "!="
                      WHITESPACE " "
                      LITERAL
                        INT_NUMBER "4"
                  WHITESPACE " "
                  OR_KW "OR"
                  WHITESPACE "\n     "
                  BIN_EXPR
                    INDEX_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p2"
                        DOT "."
                        NAME_REF
                          IDENT "proargtypes"
                      L_BRACK "["
                      LITERAL
                        INT_NUMBER "0"
                      R_BRACK "]"
                    WHITESPACE " "
                    NEQ "!="
                    WHITESPACE " "
                    CAST_EXPR
                      LITERAL
                        STRING "'internal'"
                      COLON2 "::"
                      PATH_TYPE
                        PATH
                          PATH_SEGMENT
                            NAME_REF
                              IDENT "regtype"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE "\n     "
                BIN_EXPR
                  INDEX_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p2"
                      DOT "."
                      NAME_REF
                        IDENT "proargtypes"
                    L_BRACK "["
                    LITERAL
                      INT_NUMBER "1"
                    R_BRACK "]"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  CAST_EXPR
                    LITERAL
                      STRING "'oid'"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "regtype"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE "\n     "
              BIN_EXPR
                INDEX_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p2"
                    DOT "."
                    NAME_REF
                      IDENT "proargtypes"
                  L_BRACK "["
                  LITERAL
                    INT_NUMBER "2"
                  R_BRACK "]"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                CAST_EXPR
                  LITERAL
                    STRING "'internal'"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "regtype"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE "\n     "
            BIN_EXPR
              INDEX_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p2"
                  DOT "."
                  NAME_REF
                    IDENT "proargtypes"
                L_BRACK "["
                LITERAL
                  INT_NUMBER "3"
                R_BRACK "]"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'int4'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regtype"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- If oprjoin is set, the operator must be a binary boolean op,"
  WHITESPACE "\n"
  COMMENT "-- and it must link to a proc with the right signature"
  WHITESPACE "\n"
  COMMENT "-- to be a join selectivity estimator."
  WHITESPACE "\n"
  COMMENT "-- The proc signature we want is: float8 proc(internal, oid, internal, int2, internal)"
  WHITESPACE "\n"
  COMMENT "-- (Note: the old signature with only 4 args is still allowed, but no core"
  WHITESPACE "\n"
  COMMENT "-- estimator should be using it.)"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p2"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p2"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprjoin"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p2"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        BIN_EXPR
                          BIN_EXPR
                            BIN_EXPR
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "o1"
                                DOT "."
                                NAME_REF
                                  IDENT "oprkind"
                              WHITESPACE " "
                              NEQ "!="
                              WHITESPACE " "
                              LITERAL
                                STRING "'b'"
                            WHITESPACE " "
                            OR_KW "OR"
                            WHITESPACE " "
                            BIN_EXPR
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "o1"
                                DOT "."
                                NAME_REF
                                  IDENT "oprresult"
                              WHITESPACE " "
                              NEQ "!="
                              WHITESPACE " "
                              CAST_EXPR
                                LITERAL
                                  STRING "'bool'"
                                COLON2 "::"
                                PATH_TYPE
                                  PATH
                                    PATH_SEGMENT
                                      NAME_REF
                                        IDENT "regtype"
                          WHITESPACE " "
                          OR_KW "OR"
                          WHITESPACE "\n     "
                          BIN_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "p2"
                              DOT "."
                              NAME_REF
                                IDENT "prorettype"
                            WHITESPACE " "
                            NEQ "!="
                            WHITESPACE " "
                            CAST_EXPR
                              LITERAL
                                STRING "'float8'"
                              COLON2 "::"
                              PATH_TYPE
                                PATH
                                  PATH_SEGMENT
                                    NAME_REF
                                      IDENT "regtype"
                        WHITESPACE " "
                        OR_KW "OR"
                        WHITESPACE " "
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p2"
                          DOT "."
                          NAME_REF
                            IDENT "proretset"
                      WHITESPACE " "
                      OR_KW "OR"
                      WHITESPACE "\n     "
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p2"
                          DOT "."
                          NAME_REF
                            IDENT "pronargs"
                        WHITESPACE " "
                        NEQ "!="
                        WHITESPACE " "
                        LITERAL
                          INT_NUMBER "5"
                    WHITESPACE " "
                    OR_KW "OR"
                    WHITESPACE "\n     "
                    BIN_EXPR
                      INDEX_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p2"
                          DOT "."
                          NAME_REF
                            IDENT "proargtypes"
                        L_BRACK "["
                        LITERAL
                          INT_NUMBER "0"
                        R_BRACK "]"
                      WHITESPACE " "
                      NEQ "!="
                      WHITESPACE " "
                      CAST_EXPR
                        LITERAL
                          STRING "'internal'"
                        COLON2 "::"
                        PATH_TYPE
                          PATH
                            PATH_SEGMENT
                              NAME_REF
                                IDENT "regtype"
                  WHITESPACE " "
                  OR_KW "OR"
                  WHITESPACE "\n     "
                  BIN_EXPR
                    INDEX_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p2"
                        DOT "."
                        NAME_REF
                          IDENT "proargtypes"
                      L_BRACK "["
                      LITERAL
                        INT_NUMBER "1"
                      R_BRACK "]"
                    WHITESPACE " "
                    NEQ "!="
                    WHITESPACE " "
                    CAST_EXPR
                      LITERAL
                        STRING "'oid'"
                      COLON2 "::"
                      PATH_TYPE
                        PATH
                          PATH_SEGMENT
                            NAME_REF
                              IDENT "regtype"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE "\n     "
                BIN_EXPR
                  INDEX_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p2"
                      DOT "."
                      NAME_REF
                        IDENT "proargtypes"
                    L_BRACK "["
                    LITERAL
                      INT_NUMBER "2"
                    R_BRACK "]"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  CAST_EXPR
                    LITERAL
                      STRING "'internal'"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "regtype"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE "\n     "
              BIN_EXPR
                INDEX_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p2"
                    DOT "."
                    NAME_REF
                      IDENT "proargtypes"
                  L_BRACK "["
                  LITERAL
                    INT_NUMBER "3"
                  R_BRACK "]"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                CAST_EXPR
                  LITERAL
                    STRING "'int2'"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "regtype"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE "\n     "
            BIN_EXPR
              INDEX_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p2"
                  DOT "."
                  NAME_REF
                    IDENT "proargtypes"
                L_BRACK "["
                LITERAL
                  INT_NUMBER "4"
                R_BRACK "]"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'internal'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regtype"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Insist that all built-in pg_operator entries have descriptions"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "o1"
      WHITESPACE " "
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_description"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "d"
        WHITESPACE "\n     "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "o1"
                DOT "."
                NAME_REF
                  IDENT "tableoid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "d"
                DOT "."
                NAME_REF
                  IDENT "classoid"
            WHITESPACE " "
            AND_KW "and"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "o1"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "d"
                DOT "."
                NAME_REF
                  IDENT "objoid"
          WHITESPACE " "
          AND_KW "and"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "d"
              DOT "."
              NAME_REF
                IDENT "objsubid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "d"
            DOT "."
            NAME_REF
              IDENT "classoid"
          WHITESPACE " "
          IS_KW "IS"
          WHITESPACE " "
          LITERAL
            NULL_KW "NULL"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oid"
          WHITESPACE " "
          LTEQ "<="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "9999"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that operators' underlying functions have suitable comments,"
  WHITESPACE "\n"
  COMMENT "-- namely 'implementation of XXX operator'.  (Note: it's not necessary to"
  WHITESPACE "\n"
  COMMENT "-- put such comments into pg_proc.dat; initdb will generate them as needed.)"
  WHITESPACE "\n"
  COMMENT "-- In some cases involving legacy names for operators, there are multiple"
  WHITESPACE "\n"
  COMMENT "-- operators referencing the same pg_proc entry, so ignore operators whose"
  WHITESPACE "\n"
  COMMENT "-- comments say they are deprecated."
  WHITESPACE "\n"
  COMMENT "-- We also have a few functions that are both operator support and meant to"
  WHITESPACE "\n"
  COMMENT "-- be called directly; those should have comments matching their operator."
  WHITESPACE "\n"
  SELECT
    WITH_CLAUSE
      WITH_KW "WITH"
      WHITESPACE " "
      WITH_TABLE
        NAME
          IDENT "funcdescs"
        WHITESPACE " "
        AS_KW "AS"
        WHITESPACE " "
        L_PAREN "("
        WHITESPACE "\n  "
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                FIELD_EXPR
                  NAME_REF
                    IDENT "p"
                  DOT "."
                  NAME_REF
                    IDENT "oid"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "p_oid"
              COMMA ","
              WHITESPACE " "
              TARGET
                NAME_REF
                  IDENT "proname"
              COMMA ","
              WHITESPACE " "
              TARGET
                FIELD_EXPR
                  NAME_REF
                    IDENT "o"
                  DOT "."
                  NAME_REF
                    IDENT "oid"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "o_oid"
              COMMA ","
              WHITESPACE "\n    "
              TARGET
                FIELD_EXPR
                  NAME_REF
                    IDENT "pd"
                  DOT "."
                  NAME_REF
                    IDENT "description"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "prodesc"
              COMMA ","
              WHITESPACE "\n    "
              TARGET
                BIN_EXPR
                  LITERAL
                    STRING "'implementation of '"
                  WHITESPACE " "
                  CUSTOM_OP
                    PIPE "|"
                    PIPE "|"
                  WHITESPACE " "
                  BIN_EXPR
                    NAME_REF
                      IDENT "oprname"
                    WHITESPACE " "
                    CUSTOM_OP
                      PIPE "|"
                      PIPE "|"
                    WHITESPACE " "
                    LITERAL
                      STRING "' operator'"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "expecteddesc"
              COMMA ","
              WHITESPACE "\n    "
              TARGET
                FIELD_EXPR
                  NAME_REF
                    IDENT "od"
                  DOT "."
                  NAME_REF
                    IDENT "description"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "oprdesc"
          WHITESPACE "\n  "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "pg_proc"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "p"
            WHITESPACE " "
            JOIN
              JOIN_KW "JOIN"
              WHITESPACE " "
              NAME_REF
                IDENT "pg_operator"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "o"
              WHITESPACE " "
              ON_KW "ON"
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "oprcode"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "p"
                  DOT "."
                  NAME_REF
                    IDENT "oid"
            WHITESPACE "\n       "
            JOIN
              LEFT_KW "LEFT"
              WHITESPACE " "
              JOIN_KW "JOIN"
              WHITESPACE " "
              NAME_REF
                IDENT "pg_description"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "pd"
              WHITESPACE " "
              ON_KW "ON"
              WHITESPACE "\n         "
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "pd"
                        DOT "."
                        NAME_REF
                          IDENT "objoid"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p"
                        DOT "."
                        NAME_REF
                          IDENT "oid"
                    WHITESPACE " "
                    AND_KW "and"
                    WHITESPACE " "
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "pd"
                        DOT "."
                        NAME_REF
                          IDENT "classoid"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p"
                        DOT "."
                        NAME_REF
                          IDENT "tableoid"
                  WHITESPACE " "
                  AND_KW "and"
                  WHITESPACE " "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "pd"
                      DOT "."
                      NAME_REF
                        IDENT "objsubid"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    LITERAL
                      INT_NUMBER "0"
                R_PAREN ")"
            WHITESPACE "\n       "
            JOIN
              LEFT_KW "LEFT"
              WHITESPACE " "
              JOIN_KW "JOIN"
              WHITESPACE " "
              NAME_REF
                IDENT "pg_description"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "od"
              WHITESPACE " "
              ON_KW "ON"
              WHITESPACE "\n         "
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "od"
                        DOT "."
                        NAME_REF
                          IDENT "objoid"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      FIELD_EXPR
                        NAME_REF
                          IDENT "o"
                        DOT "."
                        NAME_REF
                          IDENT "oid"
                    WHITESPACE " "
                    AND_KW "and"
                    WHITESPACE " "
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "od"
                        DOT "."
                        NAME_REF
                          IDENT "classoid"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      FIELD_EXPR
                        NAME_REF
                          IDENT "o"
                        DOT "."
                        NAME_REF
                          IDENT "tableoid"
                  WHITESPACE " "
                  AND_KW "and"
                  WHITESPACE " "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "od"
                      DOT "."
                      NAME_REF
                        IDENT "objsubid"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    LITERAL
                      INT_NUMBER "0"
                R_PAREN ")"
          WHITESPACE "\n  "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "o"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              LTEQ "<="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "9999"
        WHITESPACE "\n"
        R_PAREN ")"
    WHITESPACE "\n"
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "funcdescs"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "prodesc"
            WHITESPACE " "
            IS_DISTINCT_FROM
              IS_KW "IS"
              WHITESPACE " "
              DISTINCT_KW "DISTINCT"
              WHITESPACE " "
              FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "expecteddesc"
          WHITESPACE "\n    "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "oprdesc"
            WHITESPACE " "
            NOT_LIKE
              NOT_KW "NOT"
              WHITESPACE " "
              LIKE_KW "LIKE"
            WHITESPACE " "
            LITERAL
              STRING "'deprecated%'"
        WHITESPACE "\n    "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "prodesc"
          WHITESPACE " "
          IS_DISTINCT_FROM
            IS_KW "IS"
            WHITESPACE " "
            DISTINCT_KW "DISTINCT"
            WHITESPACE " "
            FROM_KW "FROM"
          WHITESPACE " "
          NAME_REF
            IDENT "oprdesc"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Show all the operator-implementation functions that have their own"
  WHITESPACE "\n"
  COMMENT "-- comments.  This should happen only in cases where the function and"
  WHITESPACE "\n"
  COMMENT "-- operator syntaxes are both documented at the user level."
  WHITESPACE "\n"
  COMMENT "-- This should be a pretty short list; it's mostly legacy cases."
  WHITESPACE "\n"
  SELECT
    WITH_CLAUSE
      WITH_KW "WITH"
      WHITESPACE " "
      WITH_TABLE
        NAME
          IDENT "funcdescs"
        WHITESPACE " "
        AS_KW "AS"
        WHITESPACE " "
        L_PAREN "("
        WHITESPACE "\n  "
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                FIELD_EXPR
                  NAME_REF
                    IDENT "p"
                  DOT "."
                  NAME_REF
                    IDENT "oid"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "p_oid"
              COMMA ","
              WHITESPACE " "
              TARGET
                NAME_REF
                  IDENT "proname"
              COMMA ","
              WHITESPACE " "
              TARGET
                FIELD_EXPR
                  NAME_REF
                    IDENT "o"
                  DOT "."
                  NAME_REF
                    IDENT "oid"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "o_oid"
              COMMA ","
              WHITESPACE "\n    "
              TARGET
                FIELD_EXPR
                  NAME_REF
                    IDENT "pd"
                  DOT "."
                  NAME_REF
                    IDENT "description"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "prodesc"
              COMMA ","
              WHITESPACE "\n    "
              TARGET
                BIN_EXPR
                  LITERAL
                    STRING "'implementation of '"
                  WHITESPACE " "
                  CUSTOM_OP
                    PIPE "|"
                    PIPE "|"
                  WHITESPACE " "
                  BIN_EXPR
                    NAME_REF
                      IDENT "oprname"
                    WHITESPACE " "
                    CUSTOM_OP
                      PIPE "|"
                      PIPE "|"
                    WHITESPACE " "
                    LITERAL
                      STRING "' operator'"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "expecteddesc"
              COMMA ","
              WHITESPACE "\n    "
              TARGET
                FIELD_EXPR
                  NAME_REF
                    IDENT "od"
                  DOT "."
                  NAME_REF
                    IDENT "description"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "oprdesc"
          WHITESPACE "\n  "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "pg_proc"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "p"
            WHITESPACE " "
            JOIN
              JOIN_KW "JOIN"
              WHITESPACE " "
              NAME_REF
                IDENT "pg_operator"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "o"
              WHITESPACE " "
              ON_KW "ON"
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "oprcode"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "p"
                  DOT "."
                  NAME_REF
                    IDENT "oid"
            WHITESPACE "\n       "
            JOIN
              LEFT_KW "LEFT"
              WHITESPACE " "
              JOIN_KW "JOIN"
              WHITESPACE " "
              NAME_REF
                IDENT "pg_description"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "pd"
              WHITESPACE " "
              ON_KW "ON"
              WHITESPACE "\n         "
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "pd"
                        DOT "."
                        NAME_REF
                          IDENT "objoid"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p"
                        DOT "."
                        NAME_REF
                          IDENT "oid"
                    WHITESPACE " "
                    AND_KW "and"
                    WHITESPACE " "
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "pd"
                        DOT "."
                        NAME_REF
                          IDENT "classoid"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p"
                        DOT "."
                        NAME_REF
                          IDENT "tableoid"
                  WHITESPACE " "
                  AND_KW "and"
                  WHITESPACE " "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "pd"
                      DOT "."
                      NAME_REF
                        IDENT "objsubid"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    LITERAL
                      INT_NUMBER "0"
                R_PAREN ")"
            WHITESPACE "\n       "
            JOIN
              LEFT_KW "LEFT"
              WHITESPACE " "
              JOIN_KW "JOIN"
              WHITESPACE " "
              NAME_REF
                IDENT "pg_description"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "od"
              WHITESPACE " "
              ON_KW "ON"
              WHITESPACE "\n         "
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "od"
                        DOT "."
                        NAME_REF
                          IDENT "objoid"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      FIELD_EXPR
                        NAME_REF
                          IDENT "o"
                        DOT "."
                        NAME_REF
                          IDENT "oid"
                    WHITESPACE " "
                    AND_KW "and"
                    WHITESPACE " "
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "od"
                        DOT "."
                        NAME_REF
                          IDENT "classoid"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      FIELD_EXPR
                        NAME_REF
                          IDENT "o"
                        DOT "."
                        NAME_REF
                          IDENT "tableoid"
                  WHITESPACE " "
                  AND_KW "and"
                  WHITESPACE " "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "od"
                      DOT "."
                      NAME_REF
                        IDENT "objsubid"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    LITERAL
                      INT_NUMBER "0"
                R_PAREN ")"
          WHITESPACE "\n  "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "o"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              LTEQ "<="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "9999"
        WHITESPACE "\n"
        R_PAREN ")"
    WHITESPACE "\n"
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "p_oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "prodesc"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "funcdescs"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "prodesc"
          WHITESPACE " "
          IS_DISTINCT_FROM
            IS_KW "IS"
            WHITESPACE " "
            DISTINCT_KW "DISTINCT"
            WHITESPACE " "
            FROM_KW "FROM"
          WHITESPACE " "
          NAME_REF
            IDENT "expecteddesc"
        WHITESPACE "\n    "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "oprdesc"
          WHITESPACE " "
          NOT_LIKE
            NOT_KW "NOT"
            WHITESPACE " "
            LIKE_KW "LIKE"
          WHITESPACE " "
          LITERAL
            STRING "'deprecated%'"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Operators that are commutator pairs should have identical volatility"
  WHITESPACE "\n"
  COMMENT "-- and leakproofness markings on their implementation functions."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprcode"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o2"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o2"
            DOT "."
            NAME_REF
              IDENT "oprcode"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o2"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "o1"
                DOT "."
                NAME_REF
                  IDENT "oprcom"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "o2"
                DOT "."
                NAME_REF
                  IDENT "oid"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "o1"
                DOT "."
                NAME_REF
                  IDENT "oprcode"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p2"
              DOT "."
              NAME_REF
                IDENT "oid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "o2"
              DOT "."
              NAME_REF
                IDENT "oprcode"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "provolatile"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "provolatile"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE "\n     "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "proleakproof"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "proleakproof"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Likewise for negator pairs."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprcode"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o2"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o2"
            DOT "."
            NAME_REF
              IDENT "oprcode"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o2"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "o1"
                DOT "."
                NAME_REF
                  IDENT "oprnegate"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "o2"
                DOT "."
                NAME_REF
                  IDENT "oid"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "o1"
                DOT "."
                NAME_REF
                  IDENT "oprcode"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p2"
              DOT "."
              NAME_REF
                IDENT "oid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "o2"
              DOT "."
              NAME_REF
                IDENT "oprcode"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "provolatile"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "provolatile"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE "\n     "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "proleakproof"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "proleakproof"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Btree comparison operators' functions should have the same volatility"
  WHITESPACE "\n"
  COMMENT "-- and leakproofness markings as the associated comparison support function."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "pp"
              DOT "."
              NAME_REF
                IDENT "oid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regprocedure"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "proc"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pp"
            DOT "."
            NAME_REF
              IDENT "provolatile"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "vp"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pp"
            DOT "."
            NAME_REF
              IDENT "proleakproof"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "lp"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "po"
              DOT "."
              NAME_REF
                IDENT "oid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regprocedure"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "opr"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "po"
            DOT "."
            NAME_REF
              IDENT "provolatile"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "vo"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "po"
            DOT "."
            NAME_REF
              IDENT "proleakproof"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "lo"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "pp"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "po"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "o"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_amproc"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "ap"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_amop"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "ao"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "pp"
                          DOT "."
                          NAME_REF
                            IDENT "oid"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        FIELD_EXPR
                          NAME_REF
                            IDENT "ap"
                          DOT "."
                          NAME_REF
                            IDENT "amproc"
                      WHITESPACE " "
                      AND_KW "AND"
                      WHITESPACE " "
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "po"
                          DOT "."
                          NAME_REF
                            IDENT "oid"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        FIELD_EXPR
                          NAME_REF
                            IDENT "o"
                          DOT "."
                          NAME_REF
                            IDENT "oprcode"
                    WHITESPACE " "
                    AND_KW "AND"
                    WHITESPACE " "
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "o"
                        DOT "."
                        NAME_REF
                          IDENT "oid"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      FIELD_EXPR
                        NAME_REF
                          IDENT "ao"
                        DOT "."
                        NAME_REF
                          IDENT "amopopr"
                  WHITESPACE " "
                  AND_KW "AND"
                  WHITESPACE "\n    "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "ao"
                      DOT "."
                      NAME_REF
                        IDENT "amopmethod"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    PAREN_EXPR
                      L_PAREN "("
                      SELECT
                        SELECT_CLAUSE
                          SELECT_KW "SELECT"
                          WHITESPACE " "
                          TARGET_LIST
                            TARGET
                              NAME_REF
                                IDENT "oid"
                        WHITESPACE " "
                        FROM_CLAUSE
                          FROM_KW "FROM"
                          WHITESPACE " "
                          NAME_REF
                            IDENT "pg_am"
                        WHITESPACE " "
                        WHERE_CLAUSE
                          WHERE_KW "WHERE"
                          WHITESPACE " "
                          BIN_EXPR
                            NAME_REF
                              IDENT "amname"
                            WHITESPACE " "
                            EQ "="
                            WHITESPACE " "
                            LITERAL
                              STRING "'btree'"
                      R_PAREN ")"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE "\n    "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "ao"
                    DOT "."
                    NAME_REF
                      IDENT "amopfamily"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  FIELD_EXPR
                    NAME_REF
                      IDENT "ap"
                    DOT "."
                    NAME_REF
                      IDENT "amprocfamily"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE "\n    "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "ao"
                  DOT "."
                  NAME_REF
                    IDENT "amoplefttype"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "ap"
                  DOT "."
                  NAME_REF
                    IDENT "amproclefttype"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE "\n    "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "ao"
                DOT "."
                NAME_REF
                  IDENT "amoprighttype"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "ap"
                DOT "."
                NAME_REF
                  IDENT "amprocrighttype"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "ap"
              DOT "."
              NAME_REF
                IDENT "amprocnum"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "pp"
                DOT "."
                NAME_REF
                  IDENT "provolatile"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "po"
                DOT "."
                NAME_REF
                  IDENT "provolatile"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE "\n     "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "pp"
                DOT "."
                NAME_REF
                  IDENT "proleakproof"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "po"
                DOT "."
                NAME_REF
                  IDENT "proleakproof"
          R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- **************** pg_aggregate ****************"
  WHITESPACE "\n\n"
  COMMENT "-- Look for illegal values in pg_aggregate fields."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "ctid"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "aggfnoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_aggregate"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "a"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        BIN_EXPR
                          NAME_REF
                            IDENT "aggfnoid"
                          WHITESPACE " "
                          EQ "="
                          WHITESPACE " "
                          LITERAL
                            INT_NUMBER "0"
                        WHITESPACE " "
                        OR_KW "OR"
                        WHITESPACE " "
                        BIN_EXPR
                          NAME_REF
                            IDENT "aggtransfn"
                          WHITESPACE " "
                          EQ "="
                          WHITESPACE " "
                          LITERAL
                            INT_NUMBER "0"
                      WHITESPACE " "
                      OR_KW "OR"
                      WHITESPACE "\n    "
                      BIN_EXPR
                        NAME_REF
                          IDENT "aggkind"
                        WHITESPACE " "
                        NOT_IN
                          NOT_KW "NOT"
                          WHITESPACE " "
                          IN_KW "IN"
                        WHITESPACE " "
                        TUPLE_EXPR
                          L_PAREN "("
                          LITERAL
                            STRING "'n'"
                          COMMA ","
                          WHITESPACE " "
                          LITERAL
                            STRING "'o'"
                          COMMA ","
                          WHITESPACE " "
                          LITERAL
                            STRING "'h'"
                          R_PAREN ")"
                    WHITESPACE " "
                    OR_KW "OR"
                    WHITESPACE "\n    "
                    BIN_EXPR
                      NAME_REF
                        IDENT "aggnumdirectargs"
                      WHITESPACE " "
                      L_ANGLE "<"
                      WHITESPACE " "
                      LITERAL
                        INT_NUMBER "0"
                  WHITESPACE " "
                  OR_KW "OR"
                  WHITESPACE "\n    "
                  PAREN_EXPR
                    L_PAREN "("
                    BIN_EXPR
                      BIN_EXPR
                        NAME_REF
                          IDENT "aggkind"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        LITERAL
                          STRING "'n'"
                      WHITESPACE " "
                      AND_KW "AND"
                      WHITESPACE " "
                      BIN_EXPR
                        NAME_REF
                          IDENT "aggnumdirectargs"
                        WHITESPACE " "
                        R_ANGLE ">"
                        WHITESPACE " "
                        LITERAL
                          INT_NUMBER "0"
                    R_PAREN ")"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE "\n    "
                BIN_EXPR
                  NAME_REF
                    IDENT "aggfinalmodify"
                  WHITESPACE " "
                  NOT_IN
                    NOT_KW "NOT"
                    WHITESPACE " "
                    IN_KW "IN"
                  WHITESPACE " "
                  TUPLE_EXPR
                    L_PAREN "("
                    LITERAL
                      STRING "'r'"
                    COMMA ","
                    WHITESPACE " "
                    LITERAL
                      STRING "'s'"
                    COMMA ","
                    WHITESPACE " "
                    LITERAL
                      STRING "'w'"
                    R_PAREN ")"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE "\n    "
              BIN_EXPR
                NAME_REF
                  IDENT "aggmfinalmodify"
                WHITESPACE " "
                NOT_IN
                  NOT_KW "NOT"
                  WHITESPACE " "
                  IN_KW "IN"
                WHITESPACE " "
                TUPLE_EXPR
                  L_PAREN "("
                  LITERAL
                    STRING "'r'"
                  COMMA ","
                  WHITESPACE " "
                  LITERAL
                    STRING "'s'"
                  COMMA ","
                  WHITESPACE " "
                  LITERAL
                    STRING "'w'"
                  R_PAREN ")"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE "\n    "
            BIN_EXPR
              NAME_REF
                IDENT "aggtranstype"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
          WHITESPACE " "
          OR_KW "OR"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "aggtransspace"
            WHITESPACE " "
            L_ANGLE "<"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        WHITESPACE " "
        OR_KW "OR"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "aggmtransspace"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Make sure the matching pg_proc entry is sensible, too."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggfnoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_aggregate"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            NAME_REF
              IDENT "aggfnoid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p"
                  DOT "."
                  NAME_REF
                    IDENT "prokind"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                LITERAL
                  STRING "'a'"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "p"
                DOT "."
                NAME_REF
                  IDENT "proretset"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p"
                DOT "."
                NAME_REF
                  IDENT "pronargs"
              WHITESPACE " "
              L_ANGLE "<"
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "a"
                DOT "."
                NAME_REF
                  IDENT "aggnumdirectargs"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Make sure there are no prokind = PROKIND_AGGREGATE pg_proc entries without matches."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "prokind"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'a'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              EXISTS_KW "EXISTS"
            WHITESPACE " "
            ARG_LIST
              L_PAREN "("
              SELECT
                SELECT_CLAUSE
                  SELECT_KW "SELECT"
                  WHITESPACE " "
                  TARGET_LIST
                    TARGET
                      LITERAL
                        INT_NUMBER "1"
                WHITESPACE " "
                FROM_CLAUSE
                  FROM_KW "FROM"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "pg_aggregate"
                  WHITESPACE " "
                  ALIAS
                    NAME
                      IDENT "a"
                WHITESPACE " "
                WHERE_CLAUSE
                  WHERE_KW "WHERE"
                  WHITESPACE " "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "a"
                      DOT "."
                      NAME_REF
                        IDENT "aggfnoid"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p"
                      DOT "."
                      NAME_REF
                        IDENT "oid"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- If there is no finalfn then the output type must be the transtype."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggfnoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_aggregate"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggfnoid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p"
              DOT "."
              NAME_REF
                IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggfinalfn"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "prorettype"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            NAME_REF
              IDENT "aggtranstype"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Cross-check transfn against its entry in pg_proc."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggfnoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "ptr"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "ptr"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_aggregate"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "ptr"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggfnoid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p"
              DOT "."
              NAME_REF
                IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggtransfn"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "ptr"
              DOT "."
              NAME_REF
                IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        BIN_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "ptr"
                            DOT "."
                            NAME_REF
                              IDENT "proretset"
                          WHITESPACE "\n     "
                          OR_KW "OR"
                          WHITESPACE " "
                          PREFIX_EXPR
                            NOT_KW "NOT"
                            WHITESPACE " "
                            PAREN_EXPR
                              L_PAREN "("
                              BIN_EXPR
                                FIELD_EXPR
                                  NAME_REF
                                    IDENT "ptr"
                                  DOT "."
                                  NAME_REF
                                    IDENT "pronargs"
                                WHITESPACE " "
                                EQ "="
                                WHITESPACE "\n             "
                                CASE_EXPR
                                  CASE_KW "CASE"
                                  WHITESPACE " "
                                  WHEN_CLAUSE
                                    WHEN_KW "WHEN"
                                    WHITESPACE " "
                                    BIN_EXPR
                                      FIELD_EXPR
                                        NAME_REF
                                          IDENT "a"
                                        DOT "."
                                        NAME_REF
                                          IDENT "aggkind"
                                      WHITESPACE " "
                                      EQ "="
                                      WHITESPACE " "
                                      LITERAL
                                        STRING "'n'"
                                    WHITESPACE " "
                                    THEN_KW "THEN"
                                    WHITESPACE " "
                                    BIN_EXPR
                                      FIELD_EXPR
                                        NAME_REF
                                          IDENT "p"
                                        DOT "."
                                        NAME_REF
                                          IDENT "pronargs"
                                      WHITESPACE " "
                                      PLUS "+"
                                      WHITESPACE " "
                                      LITERAL
                                        INT_NUMBER "1"
                                  WHITESPACE "\n             "
                                  ELSE_KW "ELSE"
                                  WHITESPACE " "
                                  BIN_EXPR
                                    CALL_EXPR
                                      NAME_REF
                                        GREATEST_KW "greatest"
                                      ARG_LIST
                                        L_PAREN "("
                                        BIN_EXPR
                                          FIELD_EXPR
                                            NAME_REF
                                              IDENT "p"
                                            DOT "."
                                            NAME_REF
                                              IDENT "pronargs"
                                          WHITESPACE " "
                                          MINUS "-"
                                          WHITESPACE " "
                                          FIELD_EXPR
                                            NAME_REF
                                              IDENT "a"
                                            DOT "."
                                            NAME_REF
                                              IDENT "aggnumdirectargs"
                                        COMMA ","
                                        WHITESPACE " "
                                        LITERAL
                                          INT_NUMBER "1"
                                        R_PAREN ")"
                                    WHITESPACE " "
                                    PLUS "+"
                                    WHITESPACE " "
                                    LITERAL
                                      INT_NUMBER "1"
                                  WHITESPACE " "
                                  END_KW "END"
                              R_PAREN ")"
                        WHITESPACE "\n     "
                        OR_KW "OR"
                        WHITESPACE " "
                        PREFIX_EXPR
                          NOT_KW "NOT"
                          WHITESPACE " "
                          CALL_EXPR
                            NAME_REF
                              IDENT "binary_coercible"
                            ARG_LIST
                              L_PAREN "("
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "ptr"
                                DOT "."
                                NAME_REF
                                  IDENT "prorettype"
                              COMMA ","
                              WHITESPACE " "
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "a"
                                DOT "."
                                NAME_REF
                                  IDENT "aggtranstype"
                              R_PAREN ")"
                      WHITESPACE "\n     "
                      OR_KW "OR"
                      WHITESPACE " "
                      PREFIX_EXPR
                        NOT_KW "NOT"
                        WHITESPACE " "
                        CALL_EXPR
                          NAME_REF
                            IDENT "binary_coercible"
                          ARG_LIST
                            L_PAREN "("
                            FIELD_EXPR
                              NAME_REF
                                IDENT "a"
                              DOT "."
                              NAME_REF
                                IDENT "aggtranstype"
                            COMMA ","
                            WHITESPACE " "
                            INDEX_EXPR
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "ptr"
                                DOT "."
                                NAME_REF
                                  IDENT "proargtypes"
                              L_BRACK "["
                              LITERAL
                                INT_NUMBER "0"
                              R_BRACK "]"
                            R_PAREN ")"
                    WHITESPACE "\n     "
                    OR_KW "OR"
                    WHITESPACE " "
                    PAREN_EXPR
                      L_PAREN "("
                      BIN_EXPR
                        BIN_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p"
                            DOT "."
                            NAME_REF
                              IDENT "pronargs"
                          WHITESPACE " "
                          R_ANGLE ">"
                          WHITESPACE " "
                          LITERAL
                            INT_NUMBER "0"
                        WHITESPACE " "
                        AND_KW "AND"
                        WHITESPACE "\n         "
                        PREFIX_EXPR
                          NOT_KW "NOT"
                          WHITESPACE " "
                          CALL_EXPR
                            NAME_REF
                              IDENT "binary_coercible"
                            ARG_LIST
                              L_PAREN "("
                              INDEX_EXPR
                                FIELD_EXPR
                                  NAME_REF
                                    IDENT "p"
                                  DOT "."
                                  NAME_REF
                                    IDENT "proargtypes"
                                L_BRACK "["
                                LITERAL
                                  INT_NUMBER "0"
                                R_BRACK "]"
                              COMMA ","
                              WHITESPACE " "
                              INDEX_EXPR
                                FIELD_EXPR
                                  NAME_REF
                                    IDENT "ptr"
                                  DOT "."
                                  NAME_REF
                                    IDENT "proargtypes"
                                L_BRACK "["
                                LITERAL
                                  INT_NUMBER "1"
                                R_BRACK "]"
                              R_PAREN ")"
                      R_PAREN ")"
                  WHITESPACE "\n     "
                  OR_KW "OR"
                  WHITESPACE " "
                  PAREN_EXPR
                    L_PAREN "("
                    BIN_EXPR
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p"
                          DOT "."
                          NAME_REF
                            IDENT "pronargs"
                        WHITESPACE " "
                        R_ANGLE ">"
                        WHITESPACE " "
                        LITERAL
                          INT_NUMBER "1"
                      WHITESPACE " "
                      AND_KW "AND"
                      WHITESPACE "\n         "
                      PREFIX_EXPR
                        NOT_KW "NOT"
                        WHITESPACE " "
                        CALL_EXPR
                          NAME_REF
                            IDENT "binary_coercible"
                          ARG_LIST
                            L_PAREN "("
                            INDEX_EXPR
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "p"
                                DOT "."
                                NAME_REF
                                  IDENT "proargtypes"
                              L_BRACK "["
                              LITERAL
                                INT_NUMBER "1"
                              R_BRACK "]"
                            COMMA ","
                            WHITESPACE " "
                            INDEX_EXPR
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "ptr"
                                DOT "."
                                NAME_REF
                                  IDENT "proargtypes"
                              L_BRACK "["
                              LITERAL
                                INT_NUMBER "2"
                              R_BRACK "]"
                            R_PAREN ")"
                    R_PAREN ")"
                WHITESPACE "\n     "
                OR_KW "OR"
                WHITESPACE " "
                PAREN_EXPR
                  L_PAREN "("
                  BIN_EXPR
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p"
                        DOT "."
                        NAME_REF
                          IDENT "pronargs"
                      WHITESPACE " "
                      R_ANGLE ">"
                      WHITESPACE " "
                      LITERAL
                        INT_NUMBER "2"
                    WHITESPACE " "
                    AND_KW "AND"
                    WHITESPACE "\n         "
                    PREFIX_EXPR
                      NOT_KW "NOT"
                      WHITESPACE " "
                      CALL_EXPR
                        NAME_REF
                          IDENT "binary_coercible"
                        ARG_LIST
                          L_PAREN "("
                          INDEX_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "p"
                              DOT "."
                              NAME_REF
                                IDENT "proargtypes"
                            L_BRACK "["
                            LITERAL
                              INT_NUMBER "2"
                            R_BRACK "]"
                          COMMA ","
                          WHITESPACE " "
                          INDEX_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "ptr"
                              DOT "."
                              NAME_REF
                                IDENT "proargtypes"
                            L_BRACK "["
                            LITERAL
                              INT_NUMBER "3"
                            R_BRACK "]"
                          R_PAREN ")"
                  R_PAREN ")"
              WHITESPACE "\n     "
              OR_KW "OR"
              WHITESPACE " "
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p"
                      DOT "."
                      NAME_REF
                        IDENT "pronargs"
                    WHITESPACE " "
                    R_ANGLE ">"
                    WHITESPACE " "
                    LITERAL
                      INT_NUMBER "3"
                  WHITESPACE " "
                  AND_KW "AND"
                  WHITESPACE "\n         "
                  PREFIX_EXPR
                    NOT_KW "NOT"
                    WHITESPACE " "
                    CALL_EXPR
                      NAME_REF
                        IDENT "binary_coercible"
                      ARG_LIST
                        L_PAREN "("
                        INDEX_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p"
                            DOT "."
                            NAME_REF
                              IDENT "proargtypes"
                          L_BRACK "["
                          LITERAL
                            INT_NUMBER "3"
                          R_BRACK "]"
                        COMMA ","
                        WHITESPACE " "
                        INDEX_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "ptr"
                            DOT "."
                            NAME_REF
                              IDENT "proargtypes"
                          L_BRACK "["
                          LITERAL
                            INT_NUMBER "4"
                          R_BRACK "]"
                        R_PAREN ")"
                R_PAREN ")"
            WHITESPACE "\n     "
            COMMENT "-- we could carry the check further, but 4 args is enough for now"
            WHITESPACE "\n     "
            OR_KW "OR"
            WHITESPACE " "
            PAREN_EXPR
              L_PAREN "("
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p"
                  DOT "."
                  NAME_REF
                    IDENT "pronargs"
                WHITESPACE " "
                R_ANGLE ">"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "4"
              R_PAREN ")"
          WHITESPACE "\n    "
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Cross-check finalfn (if present) against its entry in pg_proc."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggfnoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pfn"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pfn"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_aggregate"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "pfn"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggfnoid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p"
              DOT "."
              NAME_REF
                IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggfinalfn"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "pfn"
              DOT "."
              NAME_REF
                IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "pfn"
                          DOT "."
                          NAME_REF
                            IDENT "proretset"
                        WHITESPACE " "
                        OR_KW "OR"
                        WHITESPACE "\n     "
                        PREFIX_EXPR
                          NOT_KW "NOT"
                          WHITESPACE " "
                          CALL_EXPR
                            NAME_REF
                              IDENT "binary_coercible"
                            ARG_LIST
                              L_PAREN "("
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "pfn"
                                DOT "."
                                NAME_REF
                                  IDENT "prorettype"
                              COMMA ","
                              WHITESPACE " "
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "p"
                                DOT "."
                                NAME_REF
                                  IDENT "prorettype"
                              R_PAREN ")"
                      WHITESPACE " "
                      OR_KW "OR"
                      WHITESPACE "\n     "
                      PREFIX_EXPR
                        NOT_KW "NOT"
                        WHITESPACE " "
                        CALL_EXPR
                          NAME_REF
                            IDENT "binary_coercible"
                          ARG_LIST
                            L_PAREN "("
                            FIELD_EXPR
                              NAME_REF
                                IDENT "a"
                              DOT "."
                              NAME_REF
                                IDENT "aggtranstype"
                            COMMA ","
                            WHITESPACE " "
                            INDEX_EXPR
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "pfn"
                                DOT "."
                                NAME_REF
                                  IDENT "proargtypes"
                              L_BRACK "["
                              LITERAL
                                INT_NUMBER "0"
                              R_BRACK "]"
                            R_PAREN ")"
                    WHITESPACE " "
                    OR_KW "OR"
                    WHITESPACE "\n     "
                    CASE_EXPR
                      CASE_KW "CASE"
                      WHITESPACE " "
                      WHEN_CLAUSE
                        WHEN_KW "WHEN"
                        WHITESPACE " "
                        FIELD_EXPR
                          NAME_REF
                            IDENT "a"
                          DOT "."
                          NAME_REF
                            IDENT "aggfinalextra"
                        WHITESPACE " "
                        THEN_KW "THEN"
                        WHITESPACE " "
                        BIN_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "pfn"
                            DOT "."
                            NAME_REF
                              IDENT "pronargs"
                          WHITESPACE " "
                          NEQ "!="
                          WHITESPACE " "
                          BIN_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "p"
                              DOT "."
                              NAME_REF
                                IDENT "pronargs"
                            WHITESPACE " "
                            PLUS "+"
                            WHITESPACE " "
                            LITERAL
                              INT_NUMBER "1"
                      WHITESPACE "\n          "
                      ELSE_KW "ELSE"
                      WHITESPACE " "
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "pfn"
                          DOT "."
                          NAME_REF
                            IDENT "pronargs"
                        WHITESPACE " "
                        NEQ "!="
                        WHITESPACE " "
                        BIN_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "a"
                            DOT "."
                            NAME_REF
                              IDENT "aggnumdirectargs"
                          WHITESPACE " "
                          PLUS "+"
                          WHITESPACE " "
                          LITERAL
                            INT_NUMBER "1"
                      WHITESPACE " "
                      END_KW "END"
                  WHITESPACE "\n     "
                  OR_KW "OR"
                  WHITESPACE " "
                  PAREN_EXPR
                    L_PAREN "("
                    BIN_EXPR
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "pfn"
                          DOT "."
                          NAME_REF
                            IDENT "pronargs"
                        WHITESPACE " "
                        R_ANGLE ">"
                        WHITESPACE " "
                        LITERAL
                          INT_NUMBER "1"
                      WHITESPACE " "
                      AND_KW "AND"
                      WHITESPACE "\n         "
                      PREFIX_EXPR
                        NOT_KW "NOT"
                        WHITESPACE " "
                        CALL_EXPR
                          NAME_REF
                            IDENT "binary_coercible"
                          ARG_LIST
                            L_PAREN "("
                            INDEX_EXPR
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "p"
                                DOT "."
                                NAME_REF
                                  IDENT "proargtypes"
                              L_BRACK "["
                              LITERAL
                                INT_NUMBER "0"
                              R_BRACK "]"
                            COMMA ","
                            WHITESPACE " "
                            INDEX_EXPR
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "pfn"
                                DOT "."
                                NAME_REF
                                  IDENT "proargtypes"
                              L_BRACK "["
                              LITERAL
                                INT_NUMBER "1"
                              R_BRACK "]"
                            R_PAREN ")"
                    R_PAREN ")"
                WHITESPACE "\n     "
                OR_KW "OR"
                WHITESPACE " "
                PAREN_EXPR
                  L_PAREN "("
                  BIN_EXPR
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "pfn"
                        DOT "."
                        NAME_REF
                          IDENT "pronargs"
                      WHITESPACE " "
                      R_ANGLE ">"
                      WHITESPACE " "
                      LITERAL
                        INT_NUMBER "2"
                    WHITESPACE " "
                    AND_KW "AND"
                    WHITESPACE "\n         "
                    PREFIX_EXPR
                      NOT_KW "NOT"
                      WHITESPACE " "
                      CALL_EXPR
                        NAME_REF
                          IDENT "binary_coercible"
                        ARG_LIST
                          L_PAREN "("
                          INDEX_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "p"
                              DOT "."
                              NAME_REF
                                IDENT "proargtypes"
                            L_BRACK "["
                            LITERAL
                              INT_NUMBER "1"
                            R_BRACK "]"
                          COMMA ","
                          WHITESPACE " "
                          INDEX_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "pfn"
                              DOT "."
                              NAME_REF
                                IDENT "proargtypes"
                            L_BRACK "["
                            LITERAL
                              INT_NUMBER "2"
                            R_BRACK "]"
                          R_PAREN ")"
                  R_PAREN ")"
              WHITESPACE "\n     "
              OR_KW "OR"
              WHITESPACE " "
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "pfn"
                      DOT "."
                      NAME_REF
                        IDENT "pronargs"
                    WHITESPACE " "
                    R_ANGLE ">"
                    WHITESPACE " "
                    LITERAL
                      INT_NUMBER "3"
                  WHITESPACE " "
                  AND_KW "AND"
                  WHITESPACE "\n         "
                  PREFIX_EXPR
                    NOT_KW "NOT"
                    WHITESPACE " "
                    CALL_EXPR
                      NAME_REF
                        IDENT "binary_coercible"
                      ARG_LIST
                        L_PAREN "("
                        INDEX_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p"
                            DOT "."
                            NAME_REF
                              IDENT "proargtypes"
                          L_BRACK "["
                          LITERAL
                            INT_NUMBER "2"
                          R_BRACK "]"
                        COMMA ","
                        WHITESPACE " "
                        INDEX_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "pfn"
                            DOT "."
                            NAME_REF
                              IDENT "proargtypes"
                          L_BRACK "["
                          LITERAL
                            INT_NUMBER "3"
                          R_BRACK "]"
                        R_PAREN ")"
                R_PAREN ")"
            WHITESPACE "\n     "
            COMMENT "-- we could carry the check further, but 4 args is enough for now"
            WHITESPACE "\n     "
            OR_KW "OR"
            WHITESPACE " "
            PAREN_EXPR
              L_PAREN "("
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "pfn"
                  DOT "."
                  NAME_REF
                    IDENT "pronargs"
                WHITESPACE " "
                R_ANGLE ">"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "4"
              R_PAREN ")"
          WHITESPACE "\n    "
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- If transfn is strict then either initval should be non-NULL, or"
  WHITESPACE "\n"
  COMMENT "-- input type should match transtype so that the first non-null input"
  WHITESPACE "\n"
  COMMENT "-- can be assigned as the state value."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggfnoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "ptr"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "ptr"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_aggregate"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "ptr"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "a"
                  DOT "."
                  NAME_REF
                    IDENT "aggfnoid"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "p"
                  DOT "."
                  NAME_REF
                    IDENT "oid"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE "\n    "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "a"
                  DOT "."
                  NAME_REF
                    IDENT "aggtransfn"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "ptr"
                  DOT "."
                  NAME_REF
                    IDENT "oid"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "ptr"
              DOT "."
              NAME_REF
                IDENT "proisstrict"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "agginitval"
            WHITESPACE " "
            IS_KW "IS"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "binary_coercible"
            ARG_LIST
              L_PAREN "("
              INDEX_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p"
                  DOT "."
                  NAME_REF
                    IDENT "proargtypes"
                L_BRACK "["
                LITERAL
                  INT_NUMBER "0"
                R_BRACK "]"
              COMMA ","
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "a"
                DOT "."
                NAME_REF
                  IDENT "aggtranstype"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check for inconsistent specifications of moving-aggregate columns."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "ctid"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "aggfnoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_aggregate"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "a"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "aggmtranstype"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              NAME_REF
                IDENT "aggmtransfn"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "aggminvtransfn"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "ctid"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "aggfnoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_aggregate"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "a"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "aggmtranstype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    NAME_REF
                      IDENT "aggmtransfn"
                    WHITESPACE " "
                    NEQ "!="
                    WHITESPACE " "
                    LITERAL
                      INT_NUMBER "0"
                  WHITESPACE " "
                  OR_KW "OR"
                  WHITESPACE " "
                  BIN_EXPR
                    NAME_REF
                      IDENT "aggminvtransfn"
                    WHITESPACE " "
                    NEQ "!="
                    WHITESPACE " "
                    LITERAL
                      INT_NUMBER "0"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE " "
                BIN_EXPR
                  NAME_REF
                    IDENT "aggmfinalfn"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "0"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE "\n     "
              BIN_EXPR
                NAME_REF
                  IDENT "aggmtransspace"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "0"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "aggminitval"
              WHITESPACE " "
              IS_NOT
                IS_KW "IS"
                WHITESPACE " "
                NOT_KW "NOT"
              WHITESPACE " "
              LITERAL
                NULL_KW "NULL"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- If there is no mfinalfn then the output type must be the mtranstype."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggfnoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_aggregate"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "a"
                DOT "."
                NAME_REF
                  IDENT "aggfnoid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "p"
                DOT "."
                NAME_REF
                  IDENT "oid"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE "\n    "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "a"
                DOT "."
                NAME_REF
                  IDENT "aggmtransfn"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggmfinalfn"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "prorettype"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            NAME_REF
              IDENT "aggmtranstype"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Cross-check mtransfn (if present) against its entry in pg_proc."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggfnoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "ptr"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "ptr"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_aggregate"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "ptr"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggfnoid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p"
              DOT "."
              NAME_REF
                IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggmtransfn"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "ptr"
              DOT "."
              NAME_REF
                IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "ptr"
                          DOT "."
                          NAME_REF
                            IDENT "proretset"
                        WHITESPACE "\n     "
                        OR_KW "OR"
                        WHITESPACE " "
                        PREFIX_EXPR
                          NOT_KW "NOT"
                          WHITESPACE " "
                          PAREN_EXPR
                            L_PAREN "("
                            BIN_EXPR
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "ptr"
                                DOT "."
                                NAME_REF
                                  IDENT "pronargs"
                              WHITESPACE " "
                              EQ "="
                              WHITESPACE "\n             "
                              CASE_EXPR
                                CASE_KW "CASE"
                                WHITESPACE " "
                                WHEN_CLAUSE
                                  WHEN_KW "WHEN"
                                  WHITESPACE " "
                                  BIN_EXPR
                                    FIELD_EXPR
                                      NAME_REF
                                        IDENT "a"
                                      DOT "."
                                      NAME_REF
                                        IDENT "aggkind"
                                    WHITESPACE " "
                                    EQ "="
                                    WHITESPACE " "
                                    LITERAL
                                      STRING "'n'"
                                  WHITESPACE " "
                                  THEN_KW "THEN"
                                  WHITESPACE " "
                                  BIN_EXPR
                                    FIELD_EXPR
                                      NAME_REF
                                        IDENT "p"
                                      DOT "."
                                      NAME_REF
                                        IDENT "pronargs"
                                    WHITESPACE " "
                                    PLUS "+"
                                    WHITESPACE " "
                                    LITERAL
                                      INT_NUMBER "1"
                                WHITESPACE "\n             "
                                ELSE_KW "ELSE"
                                WHITESPACE " "
                                BIN_EXPR
                                  CALL_EXPR
                                    NAME_REF
                                      GREATEST_KW "greatest"
                                    ARG_LIST
                                      L_PAREN "("
                                      BIN_EXPR
                                        FIELD_EXPR
                                          NAME_REF
                                            IDENT "p"
                                          DOT "."
                                          NAME_REF
                                            IDENT "pronargs"
                                        WHITESPACE " "
                                        MINUS "-"
                                        WHITESPACE " "
                                        FIELD_EXPR
                                          NAME_REF
                                            IDENT "a"
                                          DOT "."
                                          NAME_REF
                                            IDENT "aggnumdirectargs"
                                      COMMA ","
                                      WHITESPACE " "
                                      LITERAL
                                        INT_NUMBER "1"
                                      R_PAREN ")"
                                  WHITESPACE " "
                                  PLUS "+"
                                  WHITESPACE " "
                                  LITERAL
                                    INT_NUMBER "1"
                                WHITESPACE " "
                                END_KW "END"
                            R_PAREN ")"
                      WHITESPACE "\n     "
                      OR_KW "OR"
                      WHITESPACE " "
                      PREFIX_EXPR
                        NOT_KW "NOT"
                        WHITESPACE " "
                        CALL_EXPR
                          NAME_REF
                            IDENT "binary_coercible"
                          ARG_LIST
                            L_PAREN "("
                            FIELD_EXPR
                              NAME_REF
                                IDENT "ptr"
                              DOT "."
                              NAME_REF
                                IDENT "prorettype"
                            COMMA ","
                            WHITESPACE " "
                            FIELD_EXPR
                              NAME_REF
                                IDENT "a"
                              DOT "."
                              NAME_REF
                                IDENT "aggmtranstype"
                            R_PAREN ")"
                    WHITESPACE "\n     "
                    OR_KW "OR"
                    WHITESPACE " "
                    PREFIX_EXPR
                      NOT_KW "NOT"
                      WHITESPACE " "
                      CALL_EXPR
                        NAME_REF
                          IDENT "binary_coercible"
                        ARG_LIST
                          L_PAREN "("
                          FIELD_EXPR
                            NAME_REF
                              IDENT "a"
                            DOT "."
                            NAME_REF
                              IDENT "aggmtranstype"
                          COMMA ","
                          WHITESPACE " "
                          INDEX_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "ptr"
                              DOT "."
                              NAME_REF
                                IDENT "proargtypes"
                            L_BRACK "["
                            LITERAL
                              INT_NUMBER "0"
                            R_BRACK "]"
                          R_PAREN ")"
                  WHITESPACE "\n     "
                  OR_KW "OR"
                  WHITESPACE " "
                  PAREN_EXPR
                    L_PAREN "("
                    BIN_EXPR
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p"
                          DOT "."
                          NAME_REF
                            IDENT "pronargs"
                        WHITESPACE " "
                        R_ANGLE ">"
                        WHITESPACE " "
                        LITERAL
                          INT_NUMBER "0"
                      WHITESPACE " "
                      AND_KW "AND"
                      WHITESPACE "\n         "
                      PREFIX_EXPR
                        NOT_KW "NOT"
                        WHITESPACE " "
                        CALL_EXPR
                          NAME_REF
                            IDENT "binary_coercible"
                          ARG_LIST
                            L_PAREN "("
                            INDEX_EXPR
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "p"
                                DOT "."
                                NAME_REF
                                  IDENT "proargtypes"
                              L_BRACK "["
                              LITERAL
                                INT_NUMBER "0"
                              R_BRACK "]"
                            COMMA ","
                            WHITESPACE " "
                            INDEX_EXPR
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "ptr"
                                DOT "."
                                NAME_REF
                                  IDENT "proargtypes"
                              L_BRACK "["
                              LITERAL
                                INT_NUMBER "1"
                              R_BRACK "]"
                            R_PAREN ")"
                    R_PAREN ")"
                WHITESPACE "\n     "
                OR_KW "OR"
                WHITESPACE " "
                PAREN_EXPR
                  L_PAREN "("
                  BIN_EXPR
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p"
                        DOT "."
                        NAME_REF
                          IDENT "pronargs"
                      WHITESPACE " "
                      R_ANGLE ">"
                      WHITESPACE " "
                      LITERAL
                        INT_NUMBER "1"
                    WHITESPACE " "
                    AND_KW "AND"
                    WHITESPACE "\n         "
                    PREFIX_EXPR
                      NOT_KW "NOT"
                      WHITESPACE " "
                      CALL_EXPR
                        NAME_REF
                          IDENT "binary_coercible"
                        ARG_LIST
                          L_PAREN "("
                          INDEX_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "p"
                              DOT "."
                              NAME_REF
                                IDENT "proargtypes"
                            L_BRACK "["
                            LITERAL
                              INT_NUMBER "1"
                            R_BRACK "]"
                          COMMA ","
                          WHITESPACE " "
                          INDEX_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "ptr"
                              DOT "."
                              NAME_REF
                                IDENT "proargtypes"
                            L_BRACK "["
                            LITERAL
                              INT_NUMBER "2"
                            R_BRACK "]"
                          R_PAREN ")"
                  R_PAREN ")"
              WHITESPACE "\n     "
              OR_KW "OR"
              WHITESPACE " "
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p"
                      DOT "."
                      NAME_REF
                        IDENT "pronargs"
                    WHITESPACE " "
                    R_ANGLE ">"
                    WHITESPACE " "
                    LITERAL
                      INT_NUMBER "2"
                  WHITESPACE " "
                  AND_KW "AND"
                  WHITESPACE "\n         "
                  PREFIX_EXPR
                    NOT_KW "NOT"
                    WHITESPACE " "
                    CALL_EXPR
                      NAME_REF
                        IDENT "binary_coercible"
                      ARG_LIST
                        L_PAREN "("
                        INDEX_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p"
                            DOT "."
                            NAME_REF
                              IDENT "proargtypes"
                          L_BRACK "["
                          LITERAL
                            INT_NUMBER "2"
                          R_BRACK "]"
                        COMMA ","
                        WHITESPACE " "
                        INDEX_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "ptr"
                            DOT "."
                            NAME_REF
                              IDENT "proargtypes"
                          L_BRACK "["
                          LITERAL
                            INT_NUMBER "3"
                          R_BRACK "]"
                        R_PAREN ")"
                R_PAREN ")"
            WHITESPACE "\n     "
            COMMENT "-- we could carry the check further, but 3 args is enough for now"
            WHITESPACE "\n     "
            OR_KW "OR"
            WHITESPACE " "
            PAREN_EXPR
              L_PAREN "("
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p"
                  DOT "."
                  NAME_REF
                    IDENT "pronargs"
                WHITESPACE " "
                R_ANGLE ">"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "3"
              R_PAREN ")"
          WHITESPACE "\n    "
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Cross-check minvtransfn (if present) against its entry in pg_proc."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggfnoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "ptr"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "ptr"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_aggregate"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "ptr"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggfnoid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p"
              DOT "."
              NAME_REF
                IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggminvtransfn"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "ptr"
              DOT "."
              NAME_REF
                IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "ptr"
                          DOT "."
                          NAME_REF
                            IDENT "proretset"
                        WHITESPACE "\n     "
                        OR_KW "OR"
                        WHITESPACE " "
                        PREFIX_EXPR
                          NOT_KW "NOT"
                          WHITESPACE " "
                          PAREN_EXPR
                            L_PAREN "("
                            BIN_EXPR
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "ptr"
                                DOT "."
                                NAME_REF
                                  IDENT "pronargs"
                              WHITESPACE " "
                              EQ "="
                              WHITESPACE "\n             "
                              CASE_EXPR
                                CASE_KW "CASE"
                                WHITESPACE " "
                                WHEN_CLAUSE
                                  WHEN_KW "WHEN"
                                  WHITESPACE " "
                                  BIN_EXPR
                                    FIELD_EXPR
                                      NAME_REF
                                        IDENT "a"
                                      DOT "."
                                      NAME_REF
                                        IDENT "aggkind"
                                    WHITESPACE " "
                                    EQ "="
                                    WHITESPACE " "
                                    LITERAL
                                      STRING "'n'"
                                  WHITESPACE " "
                                  THEN_KW "THEN"
                                  WHITESPACE " "
                                  BIN_EXPR
                                    FIELD_EXPR
                                      NAME_REF
                                        IDENT "p"
                                      DOT "."
                                      NAME_REF
                                        IDENT "pronargs"
                                    WHITESPACE " "
                                    PLUS "+"
                                    WHITESPACE " "
                                    LITERAL
                                      INT_NUMBER "1"
                                WHITESPACE "\n             "
                                ELSE_KW "ELSE"
                                WHITESPACE " "
                                BIN_EXPR
                                  CALL_EXPR
                                    NAME_REF
                                      GREATEST_KW "greatest"
                                    ARG_LIST
                                      L_PAREN "("
                                      BIN_EXPR
                                        FIELD_EXPR
                                          NAME_REF
                                            IDENT "p"
                                          DOT "."
                                          NAME_REF
                                            IDENT "pronargs"
                                        WHITESPACE " "
                                        MINUS "-"
                                        WHITESPACE " "
                                        FIELD_EXPR
                                          NAME_REF
                                            IDENT "a"
                                          DOT "."
                                          NAME_REF
                                            IDENT "aggnumdirectargs"
                                      COMMA ","
                                      WHITESPACE " "
                                      LITERAL
                                        INT_NUMBER "1"
                                      R_PAREN ")"
                                  WHITESPACE " "
                                  PLUS "+"
                                  WHITESPACE " "
                                  LITERAL
                                    INT_NUMBER "1"
                                WHITESPACE " "
                                END_KW "END"
                            R_PAREN ")"
                      WHITESPACE "\n     "
                      OR_KW "OR"
                      WHITESPACE " "
                      PREFIX_EXPR
                        NOT_KW "NOT"
                        WHITESPACE " "
                        CALL_EXPR
                          NAME_REF
                            IDENT "binary_coercible"
                          ARG_LIST
                            L_PAREN "("
                            FIELD_EXPR
                              NAME_REF
                                IDENT "ptr"
                              DOT "."
                              NAME_REF
                                IDENT "prorettype"
                            COMMA ","
                            WHITESPACE " "
                            FIELD_EXPR
                              NAME_REF
                                IDENT "a"
                              DOT "."
                              NAME_REF
                                IDENT "aggmtranstype"
                            R_PAREN ")"
                    WHITESPACE "\n     "
                    OR_KW "OR"
                    WHITESPACE " "
                    PREFIX_EXPR
                      NOT_KW "NOT"
                      WHITESPACE " "
                      CALL_EXPR
                        NAME_REF
                          IDENT "binary_coercible"
                        ARG_LIST
                          L_PAREN "("
                          FIELD_EXPR
                            NAME_REF
                              IDENT "a"
                            DOT "."
                            NAME_REF
                              IDENT "aggmtranstype"
                          COMMA ","
                          WHITESPACE " "
                          INDEX_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "ptr"
                              DOT "."
                              NAME_REF
                                IDENT "proargtypes"
                            L_BRACK "["
                            LITERAL
                              INT_NUMBER "0"
                            R_BRACK "]"
                          R_PAREN ")"
                  WHITESPACE "\n     "
                  OR_KW "OR"
                  WHITESPACE " "
                  PAREN_EXPR
                    L_PAREN "("
                    BIN_EXPR
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p"
                          DOT "."
                          NAME_REF
                            IDENT "pronargs"
                        WHITESPACE " "
                        R_ANGLE ">"
                        WHITESPACE " "
                        LITERAL
                          INT_NUMBER "0"
                      WHITESPACE " "
                      AND_KW "AND"
                      WHITESPACE "\n         "
                      PREFIX_EXPR
                        NOT_KW "NOT"
                        WHITESPACE " "
                        CALL_EXPR
                          NAME_REF
                            IDENT "binary_coercible"
                          ARG_LIST
                            L_PAREN "("
                            INDEX_EXPR
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "p"
                                DOT "."
                                NAME_REF
                                  IDENT "proargtypes"
                              L_BRACK "["
                              LITERAL
                                INT_NUMBER "0"
                              R_BRACK "]"
                            COMMA ","
                            WHITESPACE " "
                            INDEX_EXPR
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "ptr"
                                DOT "."
                                NAME_REF
                                  IDENT "proargtypes"
                              L_BRACK "["
                              LITERAL
                                INT_NUMBER "1"
                              R_BRACK "]"
                            R_PAREN ")"
                    R_PAREN ")"
                WHITESPACE "\n     "
                OR_KW "OR"
                WHITESPACE " "
                PAREN_EXPR
                  L_PAREN "("
                  BIN_EXPR
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p"
                        DOT "."
                        NAME_REF
                          IDENT "pronargs"
                      WHITESPACE " "
                      R_ANGLE ">"
                      WHITESPACE " "
                      LITERAL
                        INT_NUMBER "1"
                    WHITESPACE " "
                    AND_KW "AND"
                    WHITESPACE "\n         "
                    PREFIX_EXPR
                      NOT_KW "NOT"
                      WHITESPACE " "
                      CALL_EXPR
                        NAME_REF
                          IDENT "binary_coercible"
                        ARG_LIST
                          L_PAREN "("
                          INDEX_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "p"
                              DOT "."
                              NAME_REF
                                IDENT "proargtypes"
                            L_BRACK "["
                            LITERAL
                              INT_NUMBER "1"
                            R_BRACK "]"
                          COMMA ","
                          WHITESPACE " "
                          INDEX_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "ptr"
                              DOT "."
                              NAME_REF
                                IDENT "proargtypes"
                            L_BRACK "["
                            LITERAL
                              INT_NUMBER "2"
                            R_BRACK "]"
                          R_PAREN ")"
                  R_PAREN ")"
              WHITESPACE "\n     "
              OR_KW "OR"
              WHITESPACE " "
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p"
                      DOT "."
                      NAME_REF
                        IDENT "pronargs"
                    WHITESPACE " "
                    R_ANGLE ">"
                    WHITESPACE " "
                    LITERAL
                      INT_NUMBER "2"
                  WHITESPACE " "
                  AND_KW "AND"
                  WHITESPACE "\n         "
                  PREFIX_EXPR
                    NOT_KW "NOT"
                    WHITESPACE " "
                    CALL_EXPR
                      NAME_REF
                        IDENT "binary_coercible"
                      ARG_LIST
                        L_PAREN "("
                        INDEX_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p"
                            DOT "."
                            NAME_REF
                              IDENT "proargtypes"
                          L_BRACK "["
                          LITERAL
                            INT_NUMBER "2"
                          R_BRACK "]"
                        COMMA ","
                        WHITESPACE " "
                        INDEX_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "ptr"
                            DOT "."
                            NAME_REF
                              IDENT "proargtypes"
                          L_BRACK "["
                          LITERAL
                            INT_NUMBER "3"
                          R_BRACK "]"
                        R_PAREN ")"
                R_PAREN ")"
            WHITESPACE "\n     "
            COMMENT "-- we could carry the check further, but 3 args is enough for now"
            WHITESPACE "\n     "
            OR_KW "OR"
            WHITESPACE " "
            PAREN_EXPR
              L_PAREN "("
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p"
                  DOT "."
                  NAME_REF
                    IDENT "pronargs"
                WHITESPACE " "
                R_ANGLE ">"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "3"
              R_PAREN ")"
          WHITESPACE "\n    "
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Cross-check mfinalfn (if present) against its entry in pg_proc."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggfnoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pfn"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pfn"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_aggregate"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "pfn"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggfnoid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p"
              DOT "."
              NAME_REF
                IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggmfinalfn"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "pfn"
              DOT "."
              NAME_REF
                IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "pfn"
                          DOT "."
                          NAME_REF
                            IDENT "proretset"
                        WHITESPACE " "
                        OR_KW "OR"
                        WHITESPACE "\n     "
                        PREFIX_EXPR
                          NOT_KW "NOT"
                          WHITESPACE " "
                          CALL_EXPR
                            NAME_REF
                              IDENT "binary_coercible"
                            ARG_LIST
                              L_PAREN "("
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "pfn"
                                DOT "."
                                NAME_REF
                                  IDENT "prorettype"
                              COMMA ","
                              WHITESPACE " "
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "p"
                                DOT "."
                                NAME_REF
                                  IDENT "prorettype"
                              R_PAREN ")"
                      WHITESPACE " "
                      OR_KW "OR"
                      WHITESPACE "\n     "
                      PREFIX_EXPR
                        NOT_KW "NOT"
                        WHITESPACE " "
                        CALL_EXPR
                          NAME_REF
                            IDENT "binary_coercible"
                          ARG_LIST
                            L_PAREN "("
                            FIELD_EXPR
                              NAME_REF
                                IDENT "a"
                              DOT "."
                              NAME_REF
                                IDENT "aggmtranstype"
                            COMMA ","
                            WHITESPACE " "
                            INDEX_EXPR
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "pfn"
                                DOT "."
                                NAME_REF
                                  IDENT "proargtypes"
                              L_BRACK "["
                              LITERAL
                                INT_NUMBER "0"
                              R_BRACK "]"
                            R_PAREN ")"
                    WHITESPACE " "
                    OR_KW "OR"
                    WHITESPACE "\n     "
                    CASE_EXPR
                      CASE_KW "CASE"
                      WHITESPACE " "
                      WHEN_CLAUSE
                        WHEN_KW "WHEN"
                        WHITESPACE " "
                        FIELD_EXPR
                          NAME_REF
                            IDENT "a"
                          DOT "."
                          NAME_REF
                            IDENT "aggmfinalextra"
                        WHITESPACE " "
                        THEN_KW "THEN"
                        WHITESPACE " "
                        BIN_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "pfn"
                            DOT "."
                            NAME_REF
                              IDENT "pronargs"
                          WHITESPACE " "
                          NEQ "!="
                          WHITESPACE " "
                          BIN_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "p"
                              DOT "."
                              NAME_REF
                                IDENT "pronargs"
                            WHITESPACE " "
                            PLUS "+"
                            WHITESPACE " "
                            LITERAL
                              INT_NUMBER "1"
                      WHITESPACE "\n          "
                      ELSE_KW "ELSE"
                      WHITESPACE " "
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "pfn"
                          DOT "."
                          NAME_REF
                            IDENT "pronargs"
                        WHITESPACE " "
                        NEQ "!="
                        WHITESPACE " "
                        BIN_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "a"
                            DOT "."
                            NAME_REF
                              IDENT "aggnumdirectargs"
                          WHITESPACE " "
                          PLUS "+"
                          WHITESPACE " "
                          LITERAL
                            INT_NUMBER "1"
                      WHITESPACE " "
                      END_KW "END"
                  WHITESPACE "\n     "
                  OR_KW "OR"
                  WHITESPACE " "
                  PAREN_EXPR
                    L_PAREN "("
                    BIN_EXPR
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "pfn"
                          DOT "."
                          NAME_REF
                            IDENT "pronargs"
                        WHITESPACE " "
                        R_ANGLE ">"
                        WHITESPACE " "
                        LITERAL
                          INT_NUMBER "1"
                      WHITESPACE " "
                      AND_KW "AND"
                      WHITESPACE "\n         "
                      PREFIX_EXPR
                        NOT_KW "NOT"
                        WHITESPACE " "
                        CALL_EXPR
                          NAME_REF
                            IDENT "binary_coercible"
                          ARG_LIST
                            L_PAREN "("
                            INDEX_EXPR
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "p"
                                DOT "."
                                NAME_REF
                                  IDENT "proargtypes"
                              L_BRACK "["
                              LITERAL
                                INT_NUMBER "0"
                              R_BRACK "]"
                            COMMA ","
                            WHITESPACE " "
                            INDEX_EXPR
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "pfn"
                                DOT "."
                                NAME_REF
                                  IDENT "proargtypes"
                              L_BRACK "["
                              LITERAL
                                INT_NUMBER "1"
                              R_BRACK "]"
                            R_PAREN ")"
                    R_PAREN ")"
                WHITESPACE "\n     "
                OR_KW "OR"
                WHITESPACE " "
                PAREN_EXPR
                  L_PAREN "("
                  BIN_EXPR
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "pfn"
                        DOT "."
                        NAME_REF
                          IDENT "pronargs"
                      WHITESPACE " "
                      R_ANGLE ">"
                      WHITESPACE " "
                      LITERAL
                        INT_NUMBER "2"
                    WHITESPACE " "
                    AND_KW "AND"
                    WHITESPACE "\n         "
                    PREFIX_EXPR
                      NOT_KW "NOT"
                      WHITESPACE " "
                      CALL_EXPR
                        NAME_REF
                          IDENT "binary_coercible"
                        ARG_LIST
                          L_PAREN "("
                          INDEX_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "p"
                              DOT "."
                              NAME_REF
                                IDENT "proargtypes"
                            L_BRACK "["
                            LITERAL
                              INT_NUMBER "1"
                            R_BRACK "]"
                          COMMA ","
                          WHITESPACE " "
                          INDEX_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "pfn"
                              DOT "."
                              NAME_REF
                                IDENT "proargtypes"
                            L_BRACK "["
                            LITERAL
                              INT_NUMBER "2"
                            R_BRACK "]"
                          R_PAREN ")"
                  R_PAREN ")"
              WHITESPACE "\n     "
              OR_KW "OR"
              WHITESPACE " "
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "pfn"
                      DOT "."
                      NAME_REF
                        IDENT "pronargs"
                    WHITESPACE " "
                    R_ANGLE ">"
                    WHITESPACE " "
                    LITERAL
                      INT_NUMBER "3"
                  WHITESPACE " "
                  AND_KW "AND"
                  WHITESPACE "\n         "
                  PREFIX_EXPR
                    NOT_KW "NOT"
                    WHITESPACE " "
                    CALL_EXPR
                      NAME_REF
                        IDENT "binary_coercible"
                      ARG_LIST
                        L_PAREN "("
                        INDEX_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p"
                            DOT "."
                            NAME_REF
                              IDENT "proargtypes"
                          L_BRACK "["
                          LITERAL
                            INT_NUMBER "2"
                          R_BRACK "]"
                        COMMA ","
                        WHITESPACE " "
                        INDEX_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "pfn"
                            DOT "."
                            NAME_REF
                              IDENT "proargtypes"
                          L_BRACK "["
                          LITERAL
                            INT_NUMBER "3"
                          R_BRACK "]"
                        R_PAREN ")"
                R_PAREN ")"
            WHITESPACE "\n     "
            COMMENT "-- we could carry the check further, but 4 args is enough for now"
            WHITESPACE "\n     "
            OR_KW "OR"
            WHITESPACE " "
            PAREN_EXPR
              L_PAREN "("
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "pfn"
                  DOT "."
                  NAME_REF
                    IDENT "pronargs"
                WHITESPACE " "
                R_ANGLE ">"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "4"
              R_PAREN ")"
          WHITESPACE "\n    "
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- If mtransfn is strict then either minitval should be non-NULL, or"
  WHITESPACE "\n"
  COMMENT "-- input type should match mtranstype so that the first non-null input"
  WHITESPACE "\n"
  COMMENT "-- can be assigned as the state value."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggfnoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "ptr"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "ptr"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_aggregate"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "ptr"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "a"
                  DOT "."
                  NAME_REF
                    IDENT "aggfnoid"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "p"
                  DOT "."
                  NAME_REF
                    IDENT "oid"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE "\n    "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "a"
                  DOT "."
                  NAME_REF
                    IDENT "aggmtransfn"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "ptr"
                  DOT "."
                  NAME_REF
                    IDENT "oid"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "ptr"
              DOT "."
              NAME_REF
                IDENT "proisstrict"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggminitval"
            WHITESPACE " "
            IS_KW "IS"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "binary_coercible"
            ARG_LIST
              L_PAREN "("
              INDEX_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p"
                  DOT "."
                  NAME_REF
                    IDENT "proargtypes"
                L_BRACK "["
                LITERAL
                  INT_NUMBER "0"
                R_BRACK "]"
              COMMA ","
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "a"
                DOT "."
                NAME_REF
                  IDENT "aggmtranstype"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- mtransfn and minvtransfn should have same strictness setting."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggfnoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "ptr"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "ptr"
            DOT "."
            NAME_REF
              IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "iptr"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "iptr"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_aggregate"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "ptr"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "iptr"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "a"
                DOT "."
                NAME_REF
                  IDENT "aggfnoid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "p"
                DOT "."
                NAME_REF
                  IDENT "oid"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE "\n    "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "a"
                DOT "."
                NAME_REF
                  IDENT "aggmtransfn"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "ptr"
                DOT "."
                NAME_REF
                  IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggminvtransfn"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "iptr"
              DOT "."
              NAME_REF
                IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "ptr"
            DOT "."
            NAME_REF
              IDENT "proisstrict"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "iptr"
            DOT "."
            NAME_REF
              IDENT "proisstrict"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that all combine functions have signature"
  WHITESPACE "\n"
  COMMENT "-- combine(transtype, transtype) returns transtype"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            NAME_REF
              IDENT "aggfnoid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_aggregate"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            NAME_REF
              IDENT "aggcombinefn"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p"
                    DOT "."
                    NAME_REF
                      IDENT "pronargs"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "2"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE "\n     "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p"
                    DOT "."
                    NAME_REF
                      IDENT "prorettype"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  INDEX_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p"
                      DOT "."
                      NAME_REF
                        IDENT "proargtypes"
                    L_BRACK "["
                    LITERAL
                      INT_NUMBER "0"
                    R_BRACK "]"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE "\n     "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p"
                  DOT "."
                  NAME_REF
                    IDENT "prorettype"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                INDEX_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p"
                    DOT "."
                    NAME_REF
                      IDENT "proargtypes"
                  L_BRACK "["
                  LITERAL
                    INT_NUMBER "1"
                  R_BRACK "]"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE "\n     "
            PREFIX_EXPR
              NOT_KW "NOT"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "binary_coercible"
                ARG_LIST
                  L_PAREN "("
                  FIELD_EXPR
                    NAME_REF
                      IDENT "a"
                    DOT "."
                    NAME_REF
                      IDENT "aggtranstype"
                  COMMA ","
                  WHITESPACE " "
                  INDEX_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p"
                      DOT "."
                      NAME_REF
                        IDENT "proargtypes"
                    L_BRACK "["
                    LITERAL
                      INT_NUMBER "0"
                    R_BRACK "]"
                  R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that no combine function for an INTERNAL transtype is strict."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            NAME_REF
              IDENT "aggfnoid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_aggregate"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggcombinefn"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p"
              DOT "."
              NAME_REF
                IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggtranstype"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            CAST_EXPR
              LITERAL
                STRING "'internal'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regtype"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "p"
          DOT "."
          NAME_REF
            IDENT "proisstrict"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- serialize/deserialize functions should be specified only for aggregates"
  WHITESPACE "\n"
  COMMENT "-- with transtype internal and a combine function, and we should have both"
  WHITESPACE "\n"
  COMMENT "-- or neither of them."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "aggfnoid"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "aggtranstype"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "aggserialfn"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "aggdeserialfn"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_aggregate"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              NAME_REF
                IDENT "aggserialfn"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "aggdeserialfn"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
          R_PAREN ")"
        WHITESPACE "\n  "
        AND_KW "AND"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  NAME_REF
                    IDENT "aggtranstype"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  CAST_EXPR
                    LITERAL
                      STRING "'internal'"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "regtype"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE " "
                BIN_EXPR
                  NAME_REF
                    IDENT "aggcombinefn"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "0"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE "\n       "
              BIN_EXPR
                NAME_REF
                  IDENT "aggserialfn"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "0"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "aggdeserialfn"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that all serialization functions have signature"
  WHITESPACE "\n"
  COMMENT "-- serialize(internal) returns bytea"
  WHITESPACE "\n"
  COMMENT "-- Also insist that they be strict; it's wasteful to run them on NULLs."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            NAME_REF
              IDENT "aggfnoid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_aggregate"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            NAME_REF
              IDENT "aggserialfn"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p"
                    DOT "."
                    NAME_REF
                      IDENT "prorettype"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  CAST_EXPR
                    LITERAL
                      STRING "'bytea'"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "regtype"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE " "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p"
                    DOT "."
                    NAME_REF
                      IDENT "pronargs"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "1"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE "\n     "
              BIN_EXPR
                INDEX_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p"
                    DOT "."
                    NAME_REF
                      IDENT "proargtypes"
                  L_BRACK "["
                  LITERAL
                    INT_NUMBER "0"
                  R_BRACK "]"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                CAST_EXPR
                  LITERAL
                    STRING "'internal'"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "regtype"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE "\n     "
            PREFIX_EXPR
              NOT_KW "NOT"
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "p"
                DOT "."
                NAME_REF
                  IDENT "proisstrict"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that all deserialization functions have signature"
  WHITESPACE "\n"
  COMMENT "-- deserialize(bytea, internal) returns internal"
  WHITESPACE "\n"
  COMMENT "-- Also insist that they be strict; it's wasteful to run them on NULLs."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            NAME_REF
              IDENT "aggfnoid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_aggregate"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "p"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            NAME_REF
              IDENT "aggdeserialfn"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p"
                      DOT "."
                      NAME_REF
                        IDENT "prorettype"
                    WHITESPACE " "
                    NEQ "!="
                    WHITESPACE " "
                    CAST_EXPR
                      LITERAL
                        STRING "'internal'"
                      COLON2 "::"
                      PATH_TYPE
                        PATH
                          PATH_SEGMENT
                            NAME_REF
                              IDENT "regtype"
                  WHITESPACE " "
                  OR_KW "OR"
                  WHITESPACE " "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p"
                      DOT "."
                      NAME_REF
                        IDENT "pronargs"
                    WHITESPACE " "
                    NEQ "!="
                    WHITESPACE " "
                    LITERAL
                      INT_NUMBER "2"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE "\n     "
                BIN_EXPR
                  INDEX_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p"
                      DOT "."
                      NAME_REF
                        IDENT "proargtypes"
                    L_BRACK "["
                    LITERAL
                      INT_NUMBER "0"
                    R_BRACK "]"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  CAST_EXPR
                    LITERAL
                      STRING "'bytea'"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "regtype"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE "\n     "
              BIN_EXPR
                INDEX_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p"
                    DOT "."
                    NAME_REF
                      IDENT "proargtypes"
                  L_BRACK "["
                  LITERAL
                    INT_NUMBER "1"
                  R_BRACK "]"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                CAST_EXPR
                  LITERAL
                    STRING "'internal'"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "regtype"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE "\n     "
            PREFIX_EXPR
              NOT_KW "NOT"
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "p"
                DOT "."
                NAME_REF
                  IDENT "proisstrict"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that aggregates which have the same transition function also have"
  WHITESPACE "\n"
  COMMENT "-- the same combine, serialization, and deserialization functions."
  WHITESPACE "\n"
  COMMENT "-- While that isn't strictly necessary, it's fishy if they don't."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            NAME_REF
              IDENT "aggfnoid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            NAME_REF
              IDENT "aggcombinefn"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            NAME_REF
              IDENT "aggserialfn"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            NAME_REF
              IDENT "aggdeserialfn"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "b"
            DOT "."
            NAME_REF
              IDENT "aggfnoid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "b"
            DOT "."
            NAME_REF
              IDENT "aggcombinefn"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "b"
            DOT "."
            NAME_REF
              IDENT "aggserialfn"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "b"
            DOT "."
            NAME_REF
              IDENT "aggdeserialfn"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE "\n    "
      NAME_REF
        IDENT "pg_aggregate"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_aggregate"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "b"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE "\n    "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggfnoid"
            WHITESPACE " "
            L_ANGLE "<"
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "b"
              DOT "."
              NAME_REF
                IDENT "aggfnoid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggtransfn"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "b"
              DOT "."
              NAME_REF
                IDENT "aggtransfn"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "a"
                  DOT "."
                  NAME_REF
                    IDENT "aggcombinefn"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "b"
                  DOT "."
                  NAME_REF
                    IDENT "aggcombinefn"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "a"
                  DOT "."
                  NAME_REF
                    IDENT "aggserialfn"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "b"
                  DOT "."
                  NAME_REF
                    IDENT "aggserialfn"
            WHITESPACE "\n     "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "a"
                DOT "."
                NAME_REF
                  IDENT "aggdeserialfn"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "b"
                DOT "."
                NAME_REF
                  IDENT "aggdeserialfn"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Cross-check aggsortop (if present) against pg_operator."
  WHITESPACE "\n"
  COMMENT "-- We expect to find entries for bool_and, bool_or, every, max, and min."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "oprname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_aggregate"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            NAME_REF
              IDENT "aggfnoid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            NAME_REF
              IDENT "aggsortop"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "o"
            DOT "."
            NAME_REF
              IDENT "oid"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check datatypes match"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggfnoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o"
            DOT "."
            NAME_REF
              IDENT "oid"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_aggregate"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggfnoid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p"
              DOT "."
              NAME_REF
                IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggsortop"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "o"
              DOT "."
              NAME_REF
                IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  NAME_REF
                    IDENT "oprkind"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  LITERAL
                    STRING "'b'"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE " "
                BIN_EXPR
                  NAME_REF
                    IDENT "oprresult"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  CAST_EXPR
                    LITERAL
                      STRING "'boolean'"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "regtype"
              WHITESPACE "\n     "
              OR_KW "OR"
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "oprleft"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                INDEX_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p"
                    DOT "."
                    NAME_REF
                      IDENT "proargtypes"
                  L_BRACK "["
                  LITERAL
                    INT_NUMBER "0"
                  R_BRACK "]"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "oprright"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              INDEX_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p"
                  DOT "."
                  NAME_REF
                    IDENT "proargtypes"
                L_BRACK "["
                LITERAL
                  INT_NUMBER "0"
                R_BRACK "]"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check operator is a suitable btree opfamily member"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggfnoid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o"
            DOT "."
            NAME_REF
              IDENT "oid"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_aggregate"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggfnoid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p"
              DOT "."
              NAME_REF
                IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "aggsortop"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "o"
              DOT "."
              NAME_REF
                IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              EXISTS_KW "EXISTS"
            ARG_LIST
              L_PAREN "("
              SELECT
                SELECT_CLAUSE
                  SELECT_KW "SELECT"
                  WHITESPACE " "
                  TARGET_LIST
                    TARGET
                      LITERAL
                        INT_NUMBER "1"
                WHITESPACE " "
                FROM_CLAUSE
                  FROM_KW "FROM"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "pg_amop"
                WHITESPACE "\n               "
                WHERE_CLAUSE
                  WHERE_KW "WHERE"
                  WHITESPACE " "
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        BIN_EXPR
                          NAME_REF
                            IDENT "amopmethod"
                          WHITESPACE " "
                          EQ "="
                          WHITESPACE " "
                          PAREN_EXPR
                            L_PAREN "("
                            SELECT
                              SELECT_CLAUSE
                                SELECT_KW "SELECT"
                                WHITESPACE " "
                                TARGET_LIST
                                  TARGET
                                    NAME_REF
                                      IDENT "oid"
                              WHITESPACE " "
                              FROM_CLAUSE
                                FROM_KW "FROM"
                                WHITESPACE " "
                                NAME_REF
                                  IDENT "pg_am"
                              WHITESPACE " "
                              WHERE_CLAUSE
                                WHERE_KW "WHERE"
                                WHITESPACE " "
                                BIN_EXPR
                                  NAME_REF
                                    IDENT "amname"
                                  WHITESPACE " "
                                  EQ "="
                                  WHITESPACE " "
                                  LITERAL
                                    STRING "'btree'"
                            R_PAREN ")"
                        WHITESPACE "\n                     "
                        AND_KW "AND"
                        WHITESPACE " "
                        BIN_EXPR
                          NAME_REF
                            IDENT "amopopr"
                          WHITESPACE " "
                          EQ "="
                          WHITESPACE " "
                          FIELD_EXPR
                            NAME_REF
                              IDENT "o"
                            DOT "."
                            NAME_REF
                              IDENT "oid"
                      WHITESPACE "\n                     "
                      AND_KW "AND"
                      WHITESPACE " "
                      BIN_EXPR
                        NAME_REF
                          IDENT "amoplefttype"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        FIELD_EXPR
                          NAME_REF
                            IDENT "o"
                          DOT "."
                          NAME_REF
                            IDENT "oprleft"
                    WHITESPACE "\n                     "
                    AND_KW "AND"
                    WHITESPACE " "
                    BIN_EXPR
                      NAME_REF
                        IDENT "amoprighttype"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      FIELD_EXPR
                        NAME_REF
                          IDENT "o"
                        DOT "."
                        NAME_REF
                          IDENT "oprright"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check correspondence of btree strategies and names"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "oprname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "amopstrategy"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_aggregate"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p"
      COMMA ","
      WHITESPACE "\n     "
      NAME_REF
        IDENT "pg_amop"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "ao"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "a"
                DOT "."
                NAME_REF
                  IDENT "aggfnoid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "p"
                DOT "."
                NAME_REF
                  IDENT "oid"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "a"
                DOT "."
                NAME_REF
                  IDENT "aggsortop"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "o"
                DOT "."
                NAME_REF
                  IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          BIN_EXPR
            NAME_REF
              IDENT "amopopr"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "o"
              DOT "."
              NAME_REF
                IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        BIN_EXPR
          NAME_REF
            IDENT "amopmethod"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    NAME_REF
                      IDENT "oid"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                NAME_REF
                  IDENT "pg_am"
              WHITESPACE " "
              WHERE_CLAUSE
                WHERE_KW "WHERE"
                WHITESPACE " "
                BIN_EXPR
                  NAME_REF
                    IDENT "amname"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    STRING "'btree'"
            R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that there are not aggregates with the same name and different"
  WHITESPACE "\n"
  COMMENT "-- numbers of arguments.  While not technically wrong, we have a project policy"
  WHITESPACE "\n"
  COMMENT "-- to avoid this because it opens the door for confusion in connection with"
  WHITESPACE "\n"
  COMMENT "-- ORDER BY: novices frequently put the ORDER BY in the wrong place."
  WHITESPACE "\n"
  COMMENT "-- See the fate of the single-argument form of string_agg() for history."
  WHITESPACE "\n"
  COMMENT "-- (Note: we don't forbid users from creating such aggregates; the policy is"
  WHITESPACE "\n"
  COMMENT "-- just to think twice before creating built-in aggregates like this.)"
  WHITESPACE "\n"
  COMMENT "-- The only aggregates that should show up here are count(x) and count(*)."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p1"
              DOT "."
              NAME_REF
                IDENT "oid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regprocedure"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p2"
              DOT "."
              NAME_REF
                IDENT "oid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regprocedure"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "oid"
                WHITESPACE " "
                L_ANGLE "<"
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "p2"
                  DOT "."
                  NAME_REF
                    IDENT "oid"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "proname"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "p2"
                  DOT "."
                  NAME_REF
                    IDENT "proname"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE "\n    "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "prokind"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'a'"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p2"
              DOT "."
              NAME_REF
                IDENT "prokind"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'a'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        BIN_EXPR
          CALL_EXPR
            NAME_REF
              IDENT "array_dims"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              R_PAREN ")"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              IDENT "array_dims"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "p2"
                DOT "."
                NAME_REF
                  IDENT "proargtypes"
              R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- For the same reason, built-in aggregates with default arguments are no good."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "prokind"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'a'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "proargdefaults"
          WHITESPACE " "
          IS_NOT
            IS_KW "IS"
            WHITESPACE " "
            NOT_KW "NOT"
          WHITESPACE " "
          LITERAL
            NULL_KW "NULL"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- For the same reason, we avoid creating built-in variadic aggregates, except"
  WHITESPACE "\n"
  COMMENT "-- that variadic ordered-set aggregates are OK (since they have special syntax"
  WHITESPACE "\n"
  COMMENT "-- that is not subject to the misplaced ORDER BY issue)."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p"
      WHITESPACE " "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_aggregate"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "a"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            NAME_REF
              IDENT "aggfnoid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "oid"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "prokind"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'a'"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "provariadic"
            WHITESPACE " "
            NEQ "!="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "a"
            DOT "."
            NAME_REF
              IDENT "aggkind"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'n'"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- **************** pg_opfamily ****************"
  WHITESPACE "\n\n"
  COMMENT "-- Look for illegal values in pg_opfamily fields"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "f"
            DOT "."
            NAME_REF
              IDENT "oid"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_opfamily"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "f"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "f"
            DOT "."
            NAME_REF
              IDENT "opfmethod"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        WHITESPACE " "
        OR_KW "OR"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "f"
            DOT "."
            NAME_REF
              IDENT "opfnamespace"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Look for opfamilies having no opclasses.  While most validation of"
  WHITESPACE "\n"
  COMMENT "-- opfamilies is now handled by AM-specific amvalidate functions, that's"
  WHITESPACE "\n"
  COMMENT "-- driven from pg_opclass entries below, so an empty opfamily would not"
  WHITESPACE "\n"
  COMMENT "-- get noticed."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "opfname"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_opfamily"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "f"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      PREFIX_EXPR
        NOT_KW "NOT"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            EXISTS_KW "EXISTS"
          WHITESPACE " "
          ARG_LIST
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    LITERAL
                      INT_NUMBER "1"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                NAME_REF
                  IDENT "pg_opclass"
              WHITESPACE " "
              WHERE_CLAUSE
                WHERE_KW "WHERE"
                WHITESPACE " "
                BIN_EXPR
                  NAME_REF
                    IDENT "opcfamily"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  FIELD_EXPR
                    NAME_REF
                      IDENT "f"
                    DOT "."
                    NAME_REF
                      IDENT "oid"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- **************** pg_opclass ****************"
  WHITESPACE "\n\n"
  COMMENT "-- Look for illegal values in pg_opclass fields"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "oid"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_opclass"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "c1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "c1"
                DOT "."
                NAME_REF
                  IDENT "opcmethod"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "c1"
                DOT "."
                NAME_REF
                  IDENT "opcnamespace"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
          WHITESPACE " "
          OR_KW "OR"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "c1"
              DOT "."
              NAME_REF
                IDENT "opcfamily"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        WHITESPACE "\n    "
        OR_KW "OR"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "opcintype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- opcmethod must match owning opfamily's opfmethod"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "f1"
            DOT "."
            NAME_REF
              IDENT "oid"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_opclass"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "c1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_opfamily"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "f1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "opcfamily"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "f1"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "opcmethod"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "f1"
            DOT "."
            NAME_REF
              IDENT "opfmethod"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- There should not be multiple entries in pg_opclass with opcdefault true"
  WHITESPACE "\n"
  COMMENT "-- and the same opcmethod/opcintype combination."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c2"
            DOT "."
            NAME_REF
              IDENT "oid"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_opclass"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "c1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_opclass"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "c2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "c1"
                  DOT "."
                  NAME_REF
                    IDENT "oid"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "c2"
                  DOT "."
                  NAME_REF
                    IDENT "oid"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE "\n    "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "c1"
                  DOT "."
                  NAME_REF
                    IDENT "opcmethod"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "c2"
                  DOT "."
                  NAME_REF
                    IDENT "opcmethod"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "c1"
                DOT "."
                NAME_REF
                  IDENT "opcintype"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "c2"
                DOT "."
                NAME_REF
                  IDENT "opcintype"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "opcdefault"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "c2"
          DOT "."
          NAME_REF
            IDENT "opcdefault"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ask access methods to validate opclasses"
  WHITESPACE "\n"
  COMMENT "-- (this replaces a lot of SQL-level checks that used to be done in this file)"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "opcname"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_opclass"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      PREFIX_EXPR
        NOT_KW "NOT"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "amvalidate"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "oid"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- **************** pg_am ****************"
  WHITESPACE "\n\n"
  COMMENT "-- Look for illegal values in pg_am fields"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_am"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "a1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "a1"
          DOT "."
          NAME_REF
            IDENT "amhandler"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check for index amhandler functions with the wrong signature"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_am"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "a1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p1"
              DOT "."
              NAME_REF
                IDENT "oid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "a1"
              DOT "."
              NAME_REF
                IDENT "amhandler"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a1"
              DOT "."
              NAME_REF
                IDENT "amtype"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'i'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p1"
                    DOT "."
                    NAME_REF
                      IDENT "prorettype"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  CAST_EXPR
                    LITERAL
                      STRING "'index_am_handler'"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "regtype"
                WHITESPACE "\n     "
                OR_KW "OR"
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "proretset"
              WHITESPACE "\n     "
              OR_KW "OR"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "pronargs"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "1"
            WHITESPACE "\n     "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              INDEX_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "proargtypes"
                L_BRACK "["
                LITERAL
                  INT_NUMBER "0"
                R_BRACK "]"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'internal'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regtype"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check for table amhandler functions with the wrong signature"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_am"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "a1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "p1"
              DOT "."
              NAME_REF
                IDENT "oid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "a1"
              DOT "."
              NAME_REF
                IDENT "amhandler"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a1"
              DOT "."
              NAME_REF
                IDENT "amtype"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'t'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p1"
                    DOT "."
                    NAME_REF
                      IDENT "prorettype"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  CAST_EXPR
                    LITERAL
                      STRING "'table_am_handler'"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "regtype"
                WHITESPACE "\n     "
                OR_KW "OR"
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "proretset"
              WHITESPACE "\n     "
              OR_KW "OR"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "pronargs"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "1"
            WHITESPACE "\n     "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              INDEX_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "proargtypes"
                L_BRACK "["
                LITERAL
                  INT_NUMBER "0"
                R_BRACK "]"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'internal'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regtype"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- **************** pg_amop ****************"
  WHITESPACE "\n\n"
  COMMENT "-- Look for illegal values in pg_amop fields"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amopfamily"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amopstrategy"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_amop"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "a1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "a1"
                    DOT "."
                    NAME_REF
                      IDENT "amopfamily"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "0"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE " "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "a1"
                    DOT "."
                    NAME_REF
                      IDENT "amoplefttype"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "0"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "a1"
                  DOT "."
                  NAME_REF
                    IDENT "amoprighttype"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "0"
            WHITESPACE "\n    "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "a1"
                DOT "."
                NAME_REF
                  IDENT "amopopr"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
          WHITESPACE " "
          OR_KW "OR"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a1"
              DOT "."
              NAME_REF
                IDENT "amopmethod"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        WHITESPACE " "
        OR_KW "OR"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amopstrategy"
          WHITESPACE " "
          L_ANGLE "<"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amopfamily"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amopstrategy"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_amop"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "a1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      PREFIX_EXPR
        NOT_KW "NOT"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            PAREN_EXPR
              L_PAREN "("
              BIN_EXPR
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "a1"
                    DOT "."
                    NAME_REF
                      IDENT "amoppurpose"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    STRING "'s'"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE " "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "a1"
                    DOT "."
                    NAME_REF
                      IDENT "amopsortfamily"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "0"
              R_PAREN ")"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE "\n           "
            PAREN_EXPR
              L_PAREN "("
              BIN_EXPR
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "a1"
                    DOT "."
                    NAME_REF
                      IDENT "amoppurpose"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    STRING "'o'"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE " "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "a1"
                    DOT "."
                    NAME_REF
                      IDENT "amopsortfamily"
                  WHITESPACE " "
                  NEQB "<>"
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "0"
              R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- amopmethod must match owning opfamily's opfmethod"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "f1"
            DOT "."
            NAME_REF
              IDENT "oid"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_amop"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "a1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_opfamily"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "f1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amopfamily"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "f1"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amopmethod"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "f1"
            DOT "."
            NAME_REF
              IDENT "opfmethod"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Make a list of all the distinct operator names being used in particular"
  WHITESPACE "\n"
  COMMENT "-- strategy slots.  This is a bit hokey, since the list might need to change"
  WHITESPACE "\n"
  COMMENT "-- in future releases, but it's an effective way of spotting mistakes such as"
  WHITESPACE "\n"
  COMMENT "-- swapping two operators within a family."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "amopmethod"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "amopstrategy"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "oprname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_amop"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "a1"
      WHITESPACE " "
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_operator"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "o1"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "amopopr"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oid"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that all opclass search operators have selectivity estimators."
  WHITESPACE "\n"
  COMMENT "-- This is not absolutely required, but it seems a reasonable thing"
  WHITESPACE "\n"
  COMMENT "-- to insist on for all standard datatypes."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amopfamily"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amopopr"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_amop"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "a1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a1"
              DOT "."
              NAME_REF
                IDENT "amopopr"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "o1"
              DOT "."
              NAME_REF
                IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a1"
              DOT "."
              NAME_REF
                IDENT "amoppurpose"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'s'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "o1"
                DOT "."
                NAME_REF
                  IDENT "oprrest"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "o1"
                DOT "."
                NAME_REF
                  IDENT "oprjoin"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that each opclass in an opfamily has associated operators, that is"
  WHITESPACE "\n"
  COMMENT "-- ones whose oprleft matches opcintype (possibly by coercion)."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "opcname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "opcfamily"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_opclass"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "c1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      PREFIX_EXPR
        NOT_KW "NOT"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            EXISTS_KW "EXISTS"
          ARG_LIST
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    LITERAL
                      INT_NUMBER "1"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                NAME_REF
                  IDENT "pg_amop"
                WHITESPACE " "
                ALIAS
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "a1"
              WHITESPACE "\n                 "
              WHERE_CLAUSE
                WHERE_KW "WHERE"
                WHITESPACE " "
                BIN_EXPR
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "a1"
                      DOT "."
                      NAME_REF
                        IDENT "amopfamily"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "c1"
                      DOT "."
                      NAME_REF
                        IDENT "opcfamily"
                  WHITESPACE "\n                   "
                  AND_KW "AND"
                  WHITESPACE " "
                  CALL_EXPR
                    NAME_REF
                      IDENT "binary_coercible"
                    ARG_LIST
                      L_PAREN "("
                      FIELD_EXPR
                        NAME_REF
                          IDENT "c1"
                        DOT "."
                        NAME_REF
                          IDENT "opcintype"
                      COMMA ","
                      WHITESPACE " "
                      FIELD_EXPR
                        NAME_REF
                          IDENT "a1"
                        DOT "."
                        NAME_REF
                          IDENT "amoplefttype"
                      R_PAREN ")"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that each operator listed in pg_amop has an associated opclass,"
  WHITESPACE "\n"
  COMMENT "-- that is one whose opcintype matches oprleft (possibly by coercion)."
  WHITESPACE "\n"
  COMMENT "-- Otherwise the operator is useless because it cannot be matched to an index."
  WHITESPACE "\n"
  COMMENT "-- (In principle it could be useful to list such operators in multiple-datatype"
  WHITESPACE "\n"
  COMMENT "-- btree opfamilies, but in practice you'd expect there to be an opclass for"
  WHITESPACE "\n"
  COMMENT "-- every datatype the family knows about.)"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amopfamily"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amopstrategy"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amopopr"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_amop"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "a1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      PREFIX_EXPR
        NOT_KW "NOT"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            EXISTS_KW "EXISTS"
          ARG_LIST
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    LITERAL
                      INT_NUMBER "1"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                NAME_REF
                  IDENT "pg_opclass"
                WHITESPACE " "
                ALIAS
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "c1"
              WHITESPACE "\n                 "
              WHERE_CLAUSE
                WHERE_KW "WHERE"
                WHITESPACE " "
                BIN_EXPR
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "c1"
                      DOT "."
                      NAME_REF
                        IDENT "opcfamily"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "a1"
                      DOT "."
                      NAME_REF
                        IDENT "amopfamily"
                  WHITESPACE "\n                   "
                  AND_KW "AND"
                  WHITESPACE " "
                  CALL_EXPR
                    NAME_REF
                      IDENT "binary_coercible"
                    ARG_LIST
                      L_PAREN "("
                      FIELD_EXPR
                        NAME_REF
                          IDENT "c1"
                        DOT "."
                        NAME_REF
                          IDENT "opcintype"
                      COMMA ","
                      WHITESPACE " "
                      FIELD_EXPR
                        NAME_REF
                          IDENT "a1"
                        DOT "."
                        NAME_REF
                          IDENT "amoplefttype"
                      R_PAREN ")"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Operators that are primary members of opclasses must be immutable (else"
  WHITESPACE "\n"
  COMMENT "-- it suggests that the index ordering isn't fixed).  Operators that are"
  WHITESPACE "\n"
  COMMENT "-- cross-type members need only be stable, since they are just shorthands"
  WHITESPACE "\n"
  COMMENT "-- for index probe queries."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amopfamily"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amopopr"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "prosrc"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_amop"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "a1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "a1"
                DOT "."
                NAME_REF
                  IDENT "amopopr"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "o1"
                DOT "."
                NAME_REF
                  IDENT "oid"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "o1"
                DOT "."
                NAME_REF
                  IDENT "oprcode"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a1"
              DOT "."
              NAME_REF
                IDENT "amoplefttype"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "a1"
              DOT "."
              NAME_REF
                IDENT "amoprighttype"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "provolatile"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          LITERAL
            STRING "'i'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amopfamily"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amopopr"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o1"
            DOT "."
            NAME_REF
              IDENT "oprname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "prosrc"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_amop"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "a1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_operator"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "o1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "a1"
                DOT "."
                NAME_REF
                  IDENT "amopopr"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "o1"
                DOT "."
                NAME_REF
                  IDENT "oid"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "o1"
                DOT "."
                NAME_REF
                  IDENT "oprcode"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a1"
              DOT "."
              NAME_REF
                IDENT "amoplefttype"
            WHITESPACE " "
            NEQ "!="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "a1"
              DOT "."
              NAME_REF
                IDENT "amoprighttype"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "provolatile"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'v'"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- **************** pg_amproc ****************"
  WHITESPACE "\n\n"
  COMMENT "-- Look for illegal values in pg_amproc fields"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amprocfamily"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amprocnum"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_amproc"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "a1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "a1"
                  DOT "."
                  NAME_REF
                    IDENT "amprocfamily"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "0"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "a1"
                  DOT "."
                  NAME_REF
                    IDENT "amproclefttype"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "0"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "a1"
                DOT "."
                NAME_REF
                  IDENT "amprocrighttype"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
          WHITESPACE "\n    "
          OR_KW "OR"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a1"
              DOT "."
              NAME_REF
                IDENT "amprocnum"
            WHITESPACE " "
            L_ANGLE "<"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        WHITESPACE " "
        OR_KW "OR"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amproc"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Support routines that are primary members of opfamilies must be immutable"
  WHITESPACE "\n"
  COMMENT "-- (else it suggests that the index ordering isn't fixed).  But cross-type"
  WHITESPACE "\n"
  COMMENT "-- members need only be stable, since they are just shorthands"
  WHITESPACE "\n"
  COMMENT "-- for index probe queries."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amprocfamily"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amproc"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "prosrc"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_amproc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "a1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a1"
              DOT "."
              NAME_REF
                IDENT "amproc"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p1"
              DOT "."
              NAME_REF
                IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a1"
              DOT "."
              NAME_REF
                IDENT "amproclefttype"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "a1"
              DOT "."
              NAME_REF
                IDENT "amprocrighttype"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "provolatile"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          LITERAL
            STRING "'i'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amprocfamily"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "amproc"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "prosrc"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_amproc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "a1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a1"
              DOT "."
              NAME_REF
                IDENT "amproc"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p1"
              DOT "."
              NAME_REF
                IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a1"
              DOT "."
              NAME_REF
                IDENT "amproclefttype"
            WHITESPACE " "
            NEQ "!="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "a1"
              DOT "."
              NAME_REF
                IDENT "amprocrighttype"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "provolatile"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'v'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Almost all of the core distribution's Btree opclasses can use one of the"
  WHITESPACE "\n"
  COMMENT "-- two generic \"equalimage\" functions as their support function 4.  Look for"
  WHITESPACE "\n"
  COMMENT "-- opclasses that don't allow deduplication unconditionally here."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Newly added Btree opclasses don't have to support deduplication.  It will"
  WHITESPACE "\n"
  COMMENT "-- usually be trivial to add support, though.  Note that the expected output"
  WHITESPACE "\n"
  COMMENT "-- of this part of the test will need to be updated when a new opclass cannot"
  WHITESPACE "\n"
  COMMENT "-- support deduplication (by using btequalimage)."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "amp"
              DOT "."
              NAME_REF
                IDENT "amproc"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "proc"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "opf"
            DOT "."
            NAME_REF
              IDENT "opfname"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "opfamily_name"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "opc"
            DOT "."
            NAME_REF
              IDENT "opcname"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "opclass_name"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "opc"
              DOT "."
              NAME_REF
                IDENT "opcintype"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "opcintype"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_am"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "am"
      WHITESPACE "\n"
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_opclass"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "opc"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "opc"
            DOT "."
            NAME_REF
              IDENT "opcmethod"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "am"
            DOT "."
            NAME_REF
              IDENT "oid"
      WHITESPACE "\n"
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_opfamily"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "opf"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "opc"
            DOT "."
            NAME_REF
              IDENT "opcfamily"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "opf"
            DOT "."
            NAME_REF
              IDENT "oid"
      WHITESPACE "\n"
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_amproc"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "amp"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "amp"
                DOT "."
                NAME_REF
                  IDENT "amprocfamily"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "opf"
                DOT "."
                NAME_REF
                  IDENT "oid"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE "\n    "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "amp"
                DOT "."
                NAME_REF
                  IDENT "amproclefttype"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "opc"
                DOT "."
                NAME_REF
                  IDENT "opcintype"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "amp"
              DOT "."
              NAME_REF
                IDENT "amprocnum"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "4"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "am"
            DOT "."
            NAME_REF
              IDENT "amname"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'btree'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "amp"
            DOT "."
            NAME_REF
              IDENT "amproc"
          WHITESPACE " "
          IS_DISTINCT_FROM
            IS_KW "IS"
            WHITESPACE " "
            DISTINCT_KW "DISTINCT"
            WHITESPACE " "
            FROM_KW "FROM"
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'btequalimage'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "3"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- **************** pg_index ****************"
  WHITESPACE "\n\n"
  COMMENT "-- Look for illegal values in pg_index fields."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "indexrelid"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "indrelid"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_index"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              NAME_REF
                IDENT "indexrelid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "indrelid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
          WHITESPACE " "
          OR_KW "OR"
          WHITESPACE "\n      "
          BIN_EXPR
            NAME_REF
              IDENT "indnatts"
            WHITESPACE " "
            LTEQ "<="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        WHITESPACE " "
        OR_KW "OR"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "indnatts"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "32"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- oidvector and int2vector fields should be of length indnatts."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "indexrelid"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "indrelid"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_index"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      CALL_EXPR
                        NAME_REF
                          IDENT "array_lower"
                        ARG_LIST
                          L_PAREN "("
                          NAME_REF
                            IDENT "indkey"
                          COMMA ","
                          WHITESPACE " "
                          LITERAL
                            INT_NUMBER "1"
                          R_PAREN ")"
                      WHITESPACE " "
                      NEQ "!="
                      WHITESPACE " "
                      LITERAL
                        INT_NUMBER "0"
                    WHITESPACE " "
                    OR_KW "OR"
                    WHITESPACE " "
                    BIN_EXPR
                      CALL_EXPR
                        NAME_REF
                          IDENT "array_upper"
                        ARG_LIST
                          L_PAREN "("
                          NAME_REF
                            IDENT "indkey"
                          COMMA ","
                          WHITESPACE " "
                          LITERAL
                            INT_NUMBER "1"
                          R_PAREN ")"
                      WHITESPACE " "
                      NEQ "!="
                      WHITESPACE " "
                      BIN_EXPR
                        NAME_REF
                          IDENT "indnatts"
                        MINUS "-"
                        LITERAL
                          INT_NUMBER "1"
                  WHITESPACE " "
                  OR_KW "OR"
                  WHITESPACE "\n    "
                  BIN_EXPR
                    CALL_EXPR
                      NAME_REF
                        IDENT "array_lower"
                      ARG_LIST
                        L_PAREN "("
                        NAME_REF
                          IDENT "indclass"
                        COMMA ","
                        WHITESPACE " "
                        LITERAL
                          INT_NUMBER "1"
                        R_PAREN ")"
                    WHITESPACE " "
                    NEQ "!="
                    WHITESPACE " "
                    LITERAL
                      INT_NUMBER "0"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE " "
                BIN_EXPR
                  CALL_EXPR
                    NAME_REF
                      IDENT "array_upper"
                    ARG_LIST
                      L_PAREN "("
                      NAME_REF
                        IDENT "indclass"
                      COMMA ","
                      WHITESPACE " "
                      LITERAL
                        INT_NUMBER "1"
                      R_PAREN ")"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  BIN_EXPR
                    NAME_REF
                      IDENT "indnatts"
                    MINUS "-"
                    LITERAL
                      INT_NUMBER "1"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE "\n    "
              BIN_EXPR
                CALL_EXPR
                  NAME_REF
                    IDENT "array_lower"
                  ARG_LIST
                    L_PAREN "("
                    NAME_REF
                      IDENT "indcollation"
                    COMMA ","
                    WHITESPACE " "
                    LITERAL
                      INT_NUMBER "1"
                    R_PAREN ")"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "0"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              CALL_EXPR
                NAME_REF
                  IDENT "array_upper"
                ARG_LIST
                  L_PAREN "("
                  NAME_REF
                    IDENT "indcollation"
                  COMMA ","
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "1"
                  R_PAREN ")"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "indnatts"
                MINUS "-"
                LITERAL
                  INT_NUMBER "1"
          WHITESPACE " "
          OR_KW "OR"
          WHITESPACE "\n    "
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "array_lower"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "indoption"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "1"
                R_PAREN ")"
            WHITESPACE " "
            NEQ "!="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        WHITESPACE " "
        OR_KW "OR"
        WHITESPACE " "
        BIN_EXPR
          CALL_EXPR
            NAME_REF
              IDENT "array_upper"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "indoption"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          BIN_EXPR
            NAME_REF
              IDENT "indnatts"
            MINUS "-"
            LITERAL
              INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that opclasses and collations match the underlying columns."
  WHITESPACE "\n"
  COMMENT "-- (As written, this test ignores expression indexes.)"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "indexrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "indrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "attname"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "atttypid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "opcname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "indexrelid"
              COMMA ","
              WHITESPACE " "
              TARGET
                NAME_REF
                  IDENT "indrelid"
              COMMA ","
              WHITESPACE " "
              TARGET
                CALL_EXPR
                  NAME_REF
                    IDENT "unnest"
                  ARG_LIST
                    L_PAREN "("
                    NAME_REF
                      IDENT "indkey"
                    R_PAREN ")"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "ikey"
              COMMA ","
              WHITESPACE "\n             "
              TARGET
                CALL_EXPR
                  NAME_REF
                    IDENT "unnest"
                  ARG_LIST
                    L_PAREN "("
                    NAME_REF
                      IDENT "indclass"
                    R_PAREN ")"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "iclass"
              COMMA ","
              WHITESPACE " "
              TARGET
                CALL_EXPR
                  NAME_REF
                    IDENT "unnest"
                  ARG_LIST
                    L_PAREN "("
                    NAME_REF
                      IDENT "indcollation"
                    R_PAREN ")"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "icoll"
          WHITESPACE "\n      "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "pg_index"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "ss"
      COMMA ","
      WHITESPACE "\n      "
      NAME_REF
        IDENT "pg_attribute"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE "\n      "
      NAME_REF
        IDENT "pg_opclass"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "opc"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "a"
                DOT "."
                NAME_REF
                  IDENT "attrelid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              NAME_REF
                IDENT "indrelid"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "a"
                DOT "."
                NAME_REF
                  IDENT "attnum"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              NAME_REF
                IDENT "ikey"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "opc"
              DOT "."
              NAME_REF
                IDENT "oid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            NAME_REF
              IDENT "iclass"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n      "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            PREFIX_EXPR
              NOT_KW "NOT"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "binary_coercible"
                ARG_LIST
                  L_PAREN "("
                  NAME_REF
                    IDENT "atttypid"
                  COMMA ","
                  WHITESPACE " "
                  NAME_REF
                    IDENT "opcintype"
                  R_PAREN ")"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "icoll"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              NAME_REF
                IDENT "attcollation"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- For system catalogs, be even tighter: nearly all indexes should be"
  WHITESPACE "\n"
  COMMENT "-- exact type matches not binary-coercible matches.  At this writing"
  WHITESPACE "\n"
  COMMENT "-- the only exception is an OID index on a regproc column."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "indexrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "indrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "attname"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "atttypid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "opcname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "indexrelid"
              COMMA ","
              WHITESPACE " "
              TARGET
                NAME_REF
                  IDENT "indrelid"
              COMMA ","
              WHITESPACE " "
              TARGET
                CALL_EXPR
                  NAME_REF
                    IDENT "unnest"
                  ARG_LIST
                    L_PAREN "("
                    NAME_REF
                      IDENT "indkey"
                    R_PAREN ")"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "ikey"
              COMMA ","
              WHITESPACE "\n             "
              TARGET
                CALL_EXPR
                  NAME_REF
                    IDENT "unnest"
                  ARG_LIST
                    L_PAREN "("
                    NAME_REF
                      IDENT "indclass"
                    R_PAREN ")"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "iclass"
              COMMA ","
              WHITESPACE " "
              TARGET
                CALL_EXPR
                  NAME_REF
                    IDENT "unnest"
                  ARG_LIST
                    L_PAREN "("
                    NAME_REF
                      IDENT "indcollation"
                    R_PAREN ")"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "icoll"
          WHITESPACE "\n      "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "pg_index"
          WHITESPACE "\n      "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "indrelid"
              WHITESPACE " "
              L_ANGLE "<"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "16384"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "ss"
      COMMA ","
      WHITESPACE "\n      "
      NAME_REF
        IDENT "pg_attribute"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "a"
      COMMA ","
      WHITESPACE "\n      "
      NAME_REF
        IDENT "pg_opclass"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "opc"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "a"
                DOT "."
                NAME_REF
                  IDENT "attrelid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              NAME_REF
                IDENT "indrelid"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "a"
                DOT "."
                NAME_REF
                  IDENT "attnum"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              NAME_REF
                IDENT "ikey"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "opc"
              DOT "."
              NAME_REF
                IDENT "oid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            NAME_REF
              IDENT "iclass"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n      "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              NAME_REF
                IDENT "opcintype"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              NAME_REF
                IDENT "atttypid"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "icoll"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              NAME_REF
                IDENT "attcollation"
          R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check for system catalogs with collation-sensitive ordering.  This is not"
  WHITESPACE "\n"
  COMMENT "-- a representational error in pg_index, but simply wrong catalog design."
  WHITESPACE "\n"
  COMMENT "-- It's bad because we expect to be able to clone template0 and assign the"
  WHITESPACE "\n"
  COMMENT "-- copy a different database collation.  It would especially not work for"
  WHITESPACE "\n"
  COMMENT "-- shared catalogs."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "attname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "attcollation"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "c"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_attribute"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "a"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "c"
                  DOT "."
                  NAME_REF
                    IDENT "oid"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                NAME_REF
                  IDENT "attrelid"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "c"
                  DOT "."
                  NAME_REF
                    IDENT "oid"
                WHITESPACE " "
                L_ANGLE "<"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "16384"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE "\n    "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "c"
                DOT "."
                NAME_REF
                  IDENT "relkind"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              LITERAL
                STRING "'v'"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "  "
          COMMENT "-- we don't care about columns in views"
          WHITESPACE "\n    "
          BIN_EXPR
            NAME_REF
              IDENT "attcollation"
            WHITESPACE " "
            NEQ "!="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        BIN_EXPR
          NAME_REF
            IDENT "attcollation"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    NAME_REF
                      IDENT "oid"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                NAME_REF
                  IDENT "pg_collation"
              WHITESPACE " "
              WHERE_CLAUSE
                WHERE_KW "WHERE"
                WHITESPACE " "
                BIN_EXPR
                  NAME_REF
                    IDENT "collname"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    STRING "'C'"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Double-check that collation-sensitive indexes have \"C\" collation, too."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "indexrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "indrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "iclass"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "icoll"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "indexrelid"
              COMMA ","
              WHITESPACE " "
              TARGET
                NAME_REF
                  IDENT "indrelid"
              COMMA ","
              WHITESPACE "\n             "
              TARGET
                CALL_EXPR
                  NAME_REF
                    IDENT "unnest"
                  ARG_LIST
                    L_PAREN "("
                    NAME_REF
                      IDENT "indclass"
                    R_PAREN ")"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "iclass"
              COMMA ","
              WHITESPACE " "
              TARGET
                CALL_EXPR
                  NAME_REF
                    IDENT "unnest"
                  ARG_LIST
                    L_PAREN "("
                    NAME_REF
                      IDENT "indcollation"
                    R_PAREN ")"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "icoll"
          WHITESPACE "\n      "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "pg_index"
          WHITESPACE "\n      "
          WHERE_CLAUSE
            WHERE_KW "WHERE"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "indrelid"
              WHITESPACE " "
              L_ANGLE "<"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "16384"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "ss"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "icoll"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        BIN_EXPR
          NAME_REF
            IDENT "icoll"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    NAME_REF
                      IDENT "oid"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                NAME_REF
                  IDENT "pg_collation"
              WHITESPACE " "
              WHERE_CLAUSE
                WHERE_KW "WHERE"
                WHITESPACE " "
                BIN_EXPR
                  NAME_REF
                    IDENT "collname"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    STRING "'C'"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"

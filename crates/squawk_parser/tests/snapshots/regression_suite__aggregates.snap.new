---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/aggregates.sql
---
SOURCE_FILE
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- AGGREGATES"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  COMMENT "-- directory paths are passed to us in environment variables"
  WHITESPACE "\n\n"
  COMMENT "-- avoid bit-exact output here because operations may not be bit-exact."
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "extra_float_digits"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- prepare some test data"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "aggtest"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " \t\t\t"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int2"
      COMMA ","
      WHITESPACE "\n\t"
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE "\t\t\t"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "float4"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COPY_STMT
    COPY_KW "COPY"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "aggtest"
    WHITESPACE " "
    FROM_KW "FROM"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'filename'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ANALYZE_STMT
    ANALYZE_KW "ANALYZE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "four"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "avg_1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "avg_32"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "100"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "any_value"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "v"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "v"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "v"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "any_value"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "v"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            NULL_KW "NULL"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "v"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "v"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "any_value"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "v"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            NULL_KW "NULL"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "v"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "v"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "any_value"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "v"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              STRING "'hello'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'world'"
            R_BRACK "]"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "v"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "v"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- In 7.1, avg(float4) is computed using float8 arithmetic."
  WHITESPACE "\n"
  COMMENT "-- Round the result to 3 digits to avoid platform-specific results."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "avg"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "b"
                R_PAREN ")"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    NUMERIC_KW "numeric"
              L_PAREN "("
              ARG_LIST
                ARG
                  LITERAL
                    INT_NUMBER "10"
                COMMA ","
                ARG
                  LITERAL
                    INT_NUMBER "3"
                R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "avg_107_943"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "gpa"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "avg_3_4"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ONLY_KW "ONLY"
      WHITESPACE " "
      NAME_REF
        IDENT "student"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "four"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "sum_1500"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "sum_198"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "avg_431_773"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "gpa"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "avg_6_8"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      ONLY_KW "ONLY"
      WHITESPACE " "
      NAME_REF
        IDENT "student"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "four"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "max_3"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "max_100"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "aggtest"
                DOT "."
                NAME_REF
                  IDENT "b"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "max_324_78"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "student"
                DOT "."
                NAME_REF
                  IDENT "gpa"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "max_3_7"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "student"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stddev_pop"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stddev_samp"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_pop"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_samp"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stddev_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "b"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stddev_samp"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "b"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "b"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_samp"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "b"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- population variance is defined for a single tuple, sample variance"
  WHITESPACE "\n"
  COMMENT "-- is not"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  FLOAT_NUMBER "1.0"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_samp"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  FLOAT_NUMBER "2.0"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stddev_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  FLOAT_NUMBER "3.0"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stddev_samp"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  FLOAT_NUMBER "4.0"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'inf'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_samp"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'inf'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stddev_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'inf'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stddev_samp"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'inf'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'nan'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_samp"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'nan'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stddev_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'nan'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stddev_samp"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'nan'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  FLOAT_NUMBER "1.0"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float4"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_samp"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  FLOAT_NUMBER "2.0"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float4"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stddev_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  FLOAT_NUMBER "3.0"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float4"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stddev_samp"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  FLOAT_NUMBER "4.0"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float4"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'inf'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float4"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_samp"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'inf'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float4"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stddev_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'inf'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float4"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stddev_samp"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'inf'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float4"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'nan'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float4"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_samp"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'nan'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float4"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stddev_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'nan'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float4"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stddev_samp"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'nan'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float4"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  FLOAT_NUMBER "1.0"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_samp"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  FLOAT_NUMBER "2.0"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stddev_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  FLOAT_NUMBER "3.0"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stddev_samp"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  FLOAT_NUMBER "4.0"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'inf'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_samp"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'inf'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stddev_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'inf'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stddev_samp"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'inf'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'nan'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_samp"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'nan'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stddev_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'nan'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stddev_samp"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'nan'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- verify correct results for min(record) and max(record) aggregates"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  ROW_KW "row"
                ARG_LIST
                  L_PAREN "("
                  NAME_REF
                    IDENT "a"
                  COMMA ","
                  NAME_REF
                    IDENT "b"
                  R_PAREN ")"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  ROW_KW "row"
                ARG_LIST
                  L_PAREN "("
                  NAME_REF
                    IDENT "b"
                  COMMA ","
                  NAME_REF
                    IDENT "a"
                  R_PAREN ")"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  ROW_KW "row"
                ARG_LIST
                  L_PAREN "("
                  NAME_REF
                    IDENT "a"
                  COMMA ","
                  NAME_REF
                    IDENT "b"
                  R_PAREN ")"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  ROW_KW "row"
                ARG_LIST
                  L_PAREN "("
                  NAME_REF
                    IDENT "b"
                  COMMA ","
                  NAME_REF
                    IDENT "a"
                  R_PAREN ")"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- verify correct results for null and NaN inputs"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  NULL_KW "null"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "int4"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  NULL_KW "null"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "int8"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  NULL_KW "null"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  NULL_KW "null"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  NULL_KW "null"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "int4"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  NULL_KW "null"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "int8"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  NULL_KW "null"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  NULL_KW "null"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'NaN'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'NaN'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- verify correct results for infinite inputs"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'1'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'infinity'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'infinity'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'1'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'infinity'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'infinity'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'-infinity'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'infinity'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'-infinity'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'-infinity'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'1'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'infinity'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'infinity'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'1'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'infinity'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'infinity'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'-infinity'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'infinity'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'-infinity'"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'-infinity'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test accuracy with a large input offset"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "100000003"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "100000004"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "100000006"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "100000007"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "var_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "x"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "7000000000005"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "7000000000007"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- SQL2003 binary aggregates"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "regr_count"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "a"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "regr_sxx"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "a"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "regr_syy"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "a"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "regr_sxy"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "a"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "regr_avgx"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "a"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "regr_avgy"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "a"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "regr_r2"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "a"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "regr_slope"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "a"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "regr_intercept"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "a"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "covar_pop"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "a"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "covar_samp"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "a"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "corr"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b"
              COMMA ","
              WHITESPACE " "
              NAME_REF
                IDENT "a"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check single-tuple behavior"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "covar_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  INT_NUMBER "1"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              COMMA ","
              CAST_EXPR
                LITERAL
                  INT_NUMBER "2"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "covar_samp"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  INT_NUMBER "3"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              COMMA ","
              CAST_EXPR
                LITERAL
                  INT_NUMBER "4"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "covar_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  INT_NUMBER "1"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              COMMA ","
              CAST_EXPR
                LITERAL
                  STRING "'inf'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "covar_samp"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  INT_NUMBER "3"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              COMMA ","
              CAST_EXPR
                LITERAL
                  STRING "'inf'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "covar_pop"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  INT_NUMBER "1"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              COMMA ","
              CAST_EXPR
                LITERAL
                  STRING "'nan'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "covar_samp"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  INT_NUMBER "3"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              COMMA ","
              CAST_EXPR
                LITERAL
                  STRING "'nan'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- test accum and combine functions directly"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "regr_test"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "float8"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "float8"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "regr_test"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "10"
      COMMA ","
      LITERAL
        INT_NUMBER "150"
      R_PAREN ")"
      COMMA ","
      L_PAREN "("
      LITERAL
        INT_NUMBER "20"
      COMMA ","
      LITERAL
        INT_NUMBER "250"
      R_PAREN ")"
      COMMA ","
      L_PAREN "("
      LITERAL
        INT_NUMBER "30"
      COMMA ","
      LITERAL
        INT_NUMBER "350"
      R_PAREN ")"
      COMMA ","
      L_PAREN "("
      LITERAL
        INT_NUMBER "80"
      COMMA ","
      LITERAL
        INT_NUMBER "540"
      R_PAREN ")"
      COMMA ","
      L_PAREN "("
      LITERAL
        INT_NUMBER "100"
      COMMA ","
      LITERAL
        INT_NUMBER "200"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "x"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "regr_sxx"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "y"
              COMMA ","
              NAME_REF
                IDENT "x"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "y"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "regr_syy"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "y"
              COMMA ","
              NAME_REF
                IDENT "x"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "regr_sxy"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "y"
              COMMA ","
              NAME_REF
                IDENT "x"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "regr_test"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        IN_KW "IN"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            INT_NUMBER "10"
          COMMA ","
          LITERAL
            INT_NUMBER "20"
          COMMA ","
          LITERAL
            INT_NUMBER "30"
          COMMA ","
          LITERAL
            INT_NUMBER "80"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "x"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "regr_sxx"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "y"
              COMMA ","
              NAME_REF
                IDENT "x"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "y"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "regr_syy"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "y"
              COMMA ","
              NAME_REF
                IDENT "x"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "regr_sxy"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "y"
              COMMA ","
              NAME_REF
                IDENT "x"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "regr_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "float8_accum"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'{4,140,2900}'"
                COLON2 "::"
                ARRAY_TYPE
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "float8"
                  L_BRACK "["
                  R_BRACK "]"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "100"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "float8_regr_accum"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'{4,140,2900,1290,83075,15050}'"
                COLON2 "::"
                ARRAY_TYPE
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "float8"
                  L_BRACK "["
                  R_BRACK "]"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "200"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "100"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "x"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "regr_sxx"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "y"
              COMMA ","
              NAME_REF
                IDENT "x"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "y"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "regr_syy"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "y"
              COMMA ","
              NAME_REF
                IDENT "x"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "regr_sxy"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "y"
              COMMA ","
              NAME_REF
                IDENT "x"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "regr_test"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        IN_KW "IN"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            INT_NUMBER "10"
          COMMA ","
          LITERAL
            INT_NUMBER "20"
          COMMA ","
          LITERAL
            INT_NUMBER "30"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "x"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "regr_sxx"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "y"
              COMMA ","
              NAME_REF
                IDENT "x"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "y"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "regr_syy"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "y"
              COMMA ","
              NAME_REF
                IDENT "x"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "regr_sxy"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "y"
              COMMA ","
              NAME_REF
                IDENT "x"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "regr_test"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        IN_KW "IN"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            INT_NUMBER "80"
          COMMA ","
          LITERAL
            INT_NUMBER "100"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "float8_combine"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'{3,60,200}'"
                COLON2 "::"
                ARRAY_TYPE
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "float8"
                  L_BRACK "["
                  R_BRACK "]"
              COMMA ","
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'{0,0,0}'"
                COLON2 "::"
                ARRAY_TYPE
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "float8"
                  L_BRACK "["
                  R_BRACK "]"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "float8_combine"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'{0,0,0}'"
                COLON2 "::"
                ARRAY_TYPE
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "float8"
                  L_BRACK "["
                  R_BRACK "]"
              COMMA ","
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'{2,180,200}'"
                COLON2 "::"
                ARRAY_TYPE
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "float8"
                  L_BRACK "["
                  R_BRACK "]"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "float8_combine"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'{3,60,200}'"
                COLON2 "::"
                ARRAY_TYPE
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "float8"
                  L_BRACK "["
                  R_BRACK "]"
              COMMA ","
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'{2,180,200}'"
                COLON2 "::"
                ARRAY_TYPE
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "float8"
                  L_BRACK "["
                  R_BRACK "]"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "float8_regr_combine"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'{3,60,200,750,20000,2000}'"
                COLON2 "::"
                ARRAY_TYPE
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "float8"
                  L_BRACK "["
                  R_BRACK "]"
              COMMA ","
              WHITESPACE "\n                           "
              CAST_EXPR
                LITERAL
                  STRING "'{0,0,0,0,0,0}'"
                COLON2 "::"
                ARRAY_TYPE
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "float8"
                  L_BRACK "["
                  R_BRACK "]"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "float8_regr_combine"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'{0,0,0,0,0,0}'"
                COLON2 "::"
                ARRAY_TYPE
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "float8"
                  L_BRACK "["
                  R_BRACK "]"
              COMMA ","
              WHITESPACE "\n                           "
              CAST_EXPR
                LITERAL
                  STRING "'{2,180,200,740,57800,-3400}'"
                COLON2 "::"
                ARRAY_TYPE
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "float8"
                  L_BRACK "["
                  R_BRACK "]"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "float8_regr_combine"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'{3,60,200,750,20000,2000}'"
                COLON2 "::"
                ARRAY_TYPE
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "float8"
                  L_BRACK "["
                  R_BRACK "]"
              COMMA ","
              WHITESPACE "\n                           "
              CAST_EXPR
                LITERAL
                  STRING "'{2,180,200,740,57800,-3400}'"
                COLON2 "::"
                ARRAY_TYPE
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "float8"
                  L_BRACK "["
                  R_BRACK "]"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "regr_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test count, distinct"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "four"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "cnt_1000"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "DISTINCT"
              WHITESPACE " "
              NAME_REF
                IDENT "four"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "cnt_4"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "ten"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "four"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
    WHITESPACE "\n"
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "ten"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "ten"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "ten"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "four"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "DISTINCT"
              WHITESPACE " "
              NAME_REF
                IDENT "four"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
    WHITESPACE "\n"
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "ten"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "ten"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- user-defined aggregates"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "newavg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "four"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "avg_1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "newsum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "four"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "sum_1500"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "newcnt"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "four"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "cnt_1000"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "newcnt"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "cnt_1000"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "oldcnt"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "cnt_1000"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum2"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "q1"
              COMMA ","
              NAME_REF
                IDENT "q2"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "int8_tbl"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test for outer-level aggregates"
  WHITESPACE "\n\n"
  COMMENT "-- this should work"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "ten"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "four"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "a"
    WHITESPACE "\n"
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "ten"
    WHITESPACE "\n"
    HAVING_CLAUSE
      HAVING_KW "having"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          EXISTS_KW "exists"
        WHITESPACE " "
        ARG_LIST
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  LITERAL
                    INT_NUMBER "1"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "onek"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "b"
            WHITESPACE " "
            WHERE_CLAUSE
              WHERE_KW "where"
              WHITESPACE " "
              BIN_EXPR
                CALL_EXPR
                  NAME_REF
                    IDENT "sum"
                  ARG_LIST
                    L_PAREN "("
                    DISTINCT_KW "distinct"
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "a"
                      DOT "."
                      NAME_REF
                        IDENT "four"
                    R_PAREN ")"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "b"
                  DOT "."
                  NAME_REF
                    IDENT "four"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- this should fail because subquery has an agg of its own in WHERE"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "ten"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "four"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "a"
    WHITESPACE "\n"
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "ten"
    WHITESPACE "\n"
    HAVING_CLAUSE
      HAVING_KW "having"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          EXISTS_KW "exists"
        WHITESPACE " "
        ARG_LIST
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  LITERAL
                    INT_NUMBER "1"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "onek"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "b"
            WHITESPACE "\n               "
            WHERE_CLAUSE
              WHERE_KW "where"
              WHITESPACE " "
              BIN_EXPR
                CALL_EXPR
                  NAME_REF
                    IDENT "sum"
                  ARG_LIST
                    L_PAREN "("
                    DISTINCT_KW "distinct"
                    WHITESPACE " "
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "a"
                        DOT "."
                        NAME_REF
                          IDENT "four"
                      WHITESPACE " "
                      PLUS "+"
                      WHITESPACE " "
                      FIELD_EXPR
                        NAME_REF
                          IDENT "b"
                        DOT "."
                        NAME_REF
                          IDENT "four"
                    R_PAREN ")"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "b"
                  DOT "."
                  NAME_REF
                    IDENT "four"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test handling of sublinks within outer-level aggregates."
  WHITESPACE "\n"
  COMMENT "-- Per bug report from Daniel Grace."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE "\n  "
      TARGET_LIST
        TARGET
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "select"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    CALL_EXPR
                      NAME_REF
                        IDENT "max"
                      ARG_LIST
                        L_PAREN "("
                        PAREN_EXPR
                          L_PAREN "("
                          SELECT
                            SELECT_CLAUSE
                              SELECT_KW "select"
                              WHITESPACE " "
                              TARGET_LIST
                                TARGET
                                  FIELD_EXPR
                                    NAME_REF
                                      IDENT "i"
                                    DOT "."
                                    NAME_REF
                                      IDENT "unique2"
                            WHITESPACE " "
                            FROM_CLAUSE
                              FROM_KW "from"
                              WHITESPACE " "
                              NAME_REF
                                IDENT "tenk1"
                              WHITESPACE " "
                              ALIAS
                                NAME
                                  IDENT "i"
                            WHITESPACE " "
                            WHERE_CLAUSE
                              WHERE_KW "where"
                              WHITESPACE " "
                              BIN_EXPR
                                FIELD_EXPR
                                  NAME_REF
                                    IDENT "i"
                                  DOT "."
                                  NAME_REF
                                    IDENT "unique1"
                                WHITESPACE " "
                                EQ "="
                                WHITESPACE " "
                                FIELD_EXPR
                                  NAME_REF
                                    IDENT "o"
                                  DOT "."
                                  NAME_REF
                                    IDENT "unique1"
                          R_PAREN ")"
                        R_PAREN ")"
            R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "o"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test handling of Params within aggregate arguments in hashed aggregation."
  WHITESPACE "\n"
  COMMENT "-- Per bug report from Jeevan Chalke."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "s1"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "s2"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "sm"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s1"
      COMMA ","
      WHITESPACE "\n     "
      LATERAL_KW "lateral"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "s2"
              COMMA ","
              WHITESPACE " "
              TARGET
                CALL_EXPR
                  NAME_REF
                    IDENT "sum"
                  ARG_LIST
                    L_PAREN "("
                    BIN_EXPR
                      NAME_REF
                        IDENT "s1"
                      WHITESPACE " "
                      PLUS "+"
                      WHITESPACE " "
                      NAME_REF
                        IDENT "s2"
                    R_PAREN ")"
                WHITESPACE " "
                NAME
                  IDENT "sm"
          WHITESPACE "\n              "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "generate_series"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "3"
                R_PAREN ")"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "s2"
          WHITESPACE " "
          GROUP_BY_CLAUSE
            GROUP_KW "group"
            WHITESPACE " "
            BY_KW "by"
            WHITESPACE " "
            NAME_REF
              IDENT "s2"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "ss"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "s1"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "s2"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "sm"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s1"
      COMMA ","
      WHITESPACE "\n     "
      LATERAL_KW "lateral"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                NAME_REF
                  IDENT "s2"
              COMMA ","
              WHITESPACE " "
              TARGET
                CALL_EXPR
                  NAME_REF
                    IDENT "sum"
                  ARG_LIST
                    L_PAREN "("
                    BIN_EXPR
                      NAME_REF
                        IDENT "s1"
                      WHITESPACE " "
                      PLUS "+"
                      WHITESPACE " "
                      NAME_REF
                        IDENT "s2"
                    R_PAREN ")"
                WHITESPACE " "
                NAME
                  IDENT "sm"
          WHITESPACE "\n              "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "generate_series"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "3"
                R_PAREN ")"
            WHITESPACE " "
            ALIAS
              NAME
                IDENT "s2"
          WHITESPACE " "
          GROUP_BY_CLAUSE
            GROUP_KW "group"
            WHITESPACE " "
            BY_KW "by"
            WHITESPACE " "
            NAME_REF
              IDENT "s2"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "ss"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "verbose"
    COMMA ","
    WHITESPACE " "
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          ARRAY_EXPR
            ARRAY_KW "array"
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "select"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    CALL_EXPR
                      NAME_REF
                        IDENT "sum"
                      ARG_LIST
                        L_PAREN "("
                        BIN_EXPR
                          NAME_REF
                            IDENT "x"
                          PLUS "+"
                          NAME_REF
                            IDENT "y"
                        R_PAREN ")"
                    WHITESPACE " "
                    NAME
                      IDENT "s"
              WHITESPACE "\n            "
              FROM_CLAUSE
                FROM_KW "from"
                WHITESPACE " "
                CALL_EXPR
                  NAME_REF
                    IDENT "generate_series"
                  ARG_LIST
                    L_PAREN "("
                    LITERAL
                      INT_NUMBER "1"
                    COMMA ","
                    LITERAL
                      INT_NUMBER "3"
                    R_PAREN ")"
                WHITESPACE " "
                ALIAS
                  NAME
                    IDENT "y"
              WHITESPACE " "
              GROUP_BY_CLAUSE
                GROUP_KW "group"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "y"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "s"
            R_PAREN ")"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          ARRAY_EXPR
            ARRAY_KW "array"
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "select"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    CALL_EXPR
                      NAME_REF
                        IDENT "sum"
                      ARG_LIST
                        L_PAREN "("
                        BIN_EXPR
                          NAME_REF
                            IDENT "x"
                          PLUS "+"
                          NAME_REF
                            IDENT "y"
                        R_PAREN ")"
                    WHITESPACE " "
                    NAME
                      IDENT "s"
              WHITESPACE "\n            "
              FROM_CLAUSE
                FROM_KW "from"
                WHITESPACE " "
                CALL_EXPR
                  NAME_REF
                    IDENT "generate_series"
                  ARG_LIST
                    L_PAREN "("
                    LITERAL
                      INT_NUMBER "1"
                    COMMA ","
                    LITERAL
                      INT_NUMBER "3"
                    R_PAREN ")"
                WHITESPACE " "
                ALIAS
                  NAME
                    IDENT "y"
              WHITESPACE " "
              GROUP_BY_CLAUSE
                GROUP_KW "group"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "y"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "s"
            R_PAREN ")"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "--"
    WHITESPACE "\n"
    COMMENT "-- test for bitwise integer aggregates"
    WHITESPACE "\n"
    COMMENT "--"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMPORARY_KW "TEMPORARY"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bitwise_test"
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n  "
      COLUMN
        NAME_REF
          IDENT "i2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "INT2"
      COMMA ","
      WHITESPACE "\n  "
      COLUMN
        NAME_REF
          IDENT "i4"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "INT4"
      COMMA ","
      WHITESPACE "\n  "
      COLUMN
        NAME_REF
          IDENT "i8"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "INT8"
      COMMA ","
      WHITESPACE "\n  "
      COLUMN
        NAME_REF
          IDENT "i"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "INTEGER"
      COMMA ","
      WHITESPACE "\n  "
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "INT2"
      COMMA ","
      WHITESPACE "\n  "
      COLUMN
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        BIT_TYPE
          BIT_KW "BIT"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "4"
            R_PAREN ")"
      WHITESPACE "\n"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- empty case"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE "\n  "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BIT_AND"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "i2"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"?\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BIT_OR"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "i4"
              R_PAREN ")"
          WHITESPACE "  "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"?\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BIT_XOR"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "i8"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"?\""
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "bitwise_test"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE "\n  "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BIT_AND"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "i2"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"1\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BIT_AND"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "i4"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"1\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BIT_AND"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "i8"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"1\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BIT_AND"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "i"
              R_PAREN ")"
          WHITESPACE "  "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"?\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BIT_AND"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "x"
              R_PAREN ")"
          WHITESPACE "  "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"0\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BIT_AND"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "y"
              R_PAREN ")"
          WHITESPACE "  "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"0100\""
        COMMA ","
        WHITESPACE "\n\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BIT_OR"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "i2"
              R_PAREN ")"
          WHITESPACE "  "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"7\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BIT_OR"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "i4"
              R_PAREN ")"
          WHITESPACE "  "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"7\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BIT_OR"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "i8"
              R_PAREN ")"
          WHITESPACE "  "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"7\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BIT_OR"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "i"
              R_PAREN ")"
          WHITESPACE "   "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"?\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BIT_OR"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "x"
              R_PAREN ")"
          WHITESPACE "   "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"7\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BIT_OR"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "y"
              R_PAREN ")"
          WHITESPACE "   "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"1101\""
        COMMA ","
        WHITESPACE "\n\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BIT_XOR"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "i2"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"5\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BIT_XOR"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "i4"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"5\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BIT_XOR"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "i8"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"5\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BIT_XOR"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "i"
              R_PAREN ")"
          WHITESPACE "  "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"?\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BIT_XOR"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "x"
              R_PAREN ")"
          WHITESPACE "  "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"7\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BIT_XOR"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "y"
              R_PAREN ")"
          WHITESPACE "  "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"1101\""
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "bitwise_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- test boolean aggregates"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- first test all possible transition and final states"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE "\n  "
      COMMENT "-- boolean and transitions"
      WHITESPACE "\n  "
      COMMENT "-- null because strict"
      WHITESPACE "\n  "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "booland_statefunc"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  NULL_KW "NULL"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  NULL_KW "NULL"
                R_PAREN ")"
            WHITESPACE "  "
            IS_KW "IS"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "booland_statefunc"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  TRUE_KW "TRUE"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  NULL_KW "NULL"
                R_PAREN ")"
            WHITESPACE "  "
            IS_KW "IS"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "booland_statefunc"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  FALSE_KW "FALSE"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  NULL_KW "NULL"
                R_PAREN ")"
            WHITESPACE " "
            IS_KW "IS"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "booland_statefunc"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  NULL_KW "NULL"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  TRUE_KW "TRUE"
                R_PAREN ")"
            WHITESPACE "  "
            IS_KW "IS"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "booland_statefunc"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  NULL_KW "NULL"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  FALSE_KW "FALSE"
                R_PAREN ")"
            WHITESPACE " "
            IS_KW "IS"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
        COMMA ","
        WHITESPACE "\n  "
        COMMENT "-- and actual computations"
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "booland_statefunc"
            ARG_LIST
              L_PAREN "("
              LITERAL
                TRUE_KW "TRUE"
              COMMA ","
              WHITESPACE " "
              LITERAL
                TRUE_KW "TRUE"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          PREFIX_EXPR
            NOT_KW "NOT"
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "booland_statefunc"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  TRUE_KW "TRUE"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  FALSE_KW "FALSE"
                R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          PREFIX_EXPR
            NOT_KW "NOT"
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "booland_statefunc"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  FALSE_KW "FALSE"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  TRUE_KW "TRUE"
                R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          PREFIX_EXPR
            NOT_KW "NOT"
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "booland_statefunc"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  FALSE_KW "FALSE"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  FALSE_KW "FALSE"
                R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE "\n  "
      COMMENT "-- boolean or transitions"
      WHITESPACE "\n  "
      COMMENT "-- null because strict"
      WHITESPACE "\n  "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "boolor_statefunc"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  NULL_KW "NULL"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  NULL_KW "NULL"
                R_PAREN ")"
            WHITESPACE "  "
            IS_KW "IS"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "boolor_statefunc"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  TRUE_KW "TRUE"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  NULL_KW "NULL"
                R_PAREN ")"
            WHITESPACE "  "
            IS_KW "IS"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "boolor_statefunc"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  FALSE_KW "FALSE"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  NULL_KW "NULL"
                R_PAREN ")"
            WHITESPACE " "
            IS_KW "IS"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "boolor_statefunc"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  NULL_KW "NULL"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  TRUE_KW "TRUE"
                R_PAREN ")"
            WHITESPACE "  "
            IS_KW "IS"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "boolor_statefunc"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  NULL_KW "NULL"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  FALSE_KW "FALSE"
                R_PAREN ")"
            WHITESPACE " "
            IS_KW "IS"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
        COMMA ","
        WHITESPACE "\n  "
        COMMENT "-- actual computations"
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "boolor_statefunc"
            ARG_LIST
              L_PAREN "("
              LITERAL
                TRUE_KW "TRUE"
              COMMA ","
              WHITESPACE " "
              LITERAL
                TRUE_KW "TRUE"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "boolor_statefunc"
            ARG_LIST
              L_PAREN "("
              LITERAL
                TRUE_KW "TRUE"
              COMMA ","
              WHITESPACE " "
              LITERAL
                FALSE_KW "FALSE"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "boolor_statefunc"
            ARG_LIST
              L_PAREN "("
              LITERAL
                FALSE_KW "FALSE"
              COMMA ","
              WHITESPACE " "
              LITERAL
                TRUE_KW "TRUE"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          PREFIX_EXPR
            NOT_KW "NOT"
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "boolor_statefunc"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  FALSE_KW "FALSE"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  FALSE_KW "FALSE"
                R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMPORARY_KW "TEMPORARY"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bool_test"
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n  "
      COLUMN
        NAME_REF
          IDENT "b1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "BOOL"
      COMMA ","
      WHITESPACE "\n  "
      COLUMN
        NAME_REF
          IDENT "b2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "BOOL"
      COMMA ","
      WHITESPACE "\n  "
      COLUMN
        NAME_REF
          IDENT "b3"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "BOOL"
      COMMA ","
      WHITESPACE "\n  "
      COLUMN
        NAME_REF
          IDENT "b4"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "BOOL"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- empty case"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE "\n  "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BOOL_AND"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b1"
              R_PAREN ")"
          WHITESPACE "   "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"n\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BOOL_OR"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b3"
              R_PAREN ")"
          WHITESPACE "    "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"n\""
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "bool_test"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE "\n  "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BOOL_AND"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b1"
              R_PAREN ")"
          WHITESPACE "     "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"f\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BOOL_AND"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b2"
              R_PAREN ")"
          WHITESPACE "     "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BOOL_AND"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b3"
              R_PAREN ")"
          WHITESPACE "     "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"f\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BOOL_AND"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b4"
              R_PAREN ")"
          WHITESPACE "     "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"n\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BOOL_AND"
            ARG_LIST
              L_PAREN "("
              PREFIX_EXPR
                NOT_KW "NOT"
                WHITESPACE " "
                NAME_REF
                  IDENT "b2"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"f\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BOOL_AND"
            ARG_LIST
              L_PAREN "("
              PREFIX_EXPR
                NOT_KW "NOT"
                WHITESPACE " "
                NAME_REF
                  IDENT "b3"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "bool_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE "\n  "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "EVERY"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b1"
              R_PAREN ")"
          WHITESPACE "     "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"f\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "EVERY"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b2"
              R_PAREN ")"
          WHITESPACE "     "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "EVERY"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b3"
              R_PAREN ")"
          WHITESPACE "     "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"f\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "EVERY"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b4"
              R_PAREN ")"
          WHITESPACE "     "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"n\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "EVERY"
            ARG_LIST
              L_PAREN "("
              PREFIX_EXPR
                NOT_KW "NOT"
                WHITESPACE " "
                NAME_REF
                  IDENT "b2"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"f\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "EVERY"
            ARG_LIST
              L_PAREN "("
              PREFIX_EXPR
                NOT_KW "NOT"
                WHITESPACE " "
                NAME_REF
                  IDENT "b3"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "bool_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE "\n  "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BOOL_OR"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b1"
              R_PAREN ")"
          WHITESPACE "      "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BOOL_OR"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b2"
              R_PAREN ")"
          WHITESPACE "      "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BOOL_OR"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b3"
              R_PAREN ")"
          WHITESPACE "      "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"f\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BOOL_OR"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b4"
              R_PAREN ")"
          WHITESPACE "      "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"n\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BOOL_OR"
            ARG_LIST
              L_PAREN "("
              PREFIX_EXPR
                NOT_KW "NOT"
                WHITESPACE " "
                NAME_REF
                  IDENT "b2"
              R_PAREN ")"
          WHITESPACE "  "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"f\""
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "BOOL_OR"
            ARG_LIST
              L_PAREN "("
              PREFIX_EXPR
                NOT_KW "NOT"
                WHITESPACE " "
                NAME_REF
                  IDENT "b3"
              R_PAREN ")"
          WHITESPACE "  "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "\"t\""
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "bool_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test cases that should be optimized into indexscans instead of"
  WHITESPACE "\n"
  COMMENT "-- the generic aggregate implementation."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  COMMENT "-- Basic cases"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "unique1"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "42"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "unique1"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "42"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "unique1"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "42"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "unique1"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "42"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- the planner may choose a generic aggregate here if parallel query is"
  WHITESPACE "\n"
  COMMENT "-- enabled, since that plan will be parallel safe and the \"optimized\""
  WHITESPACE "\n"
  COMMENT "-- plan, which has almost identical cost, will not be.  we want to test"
  WHITESPACE "\n"
  COMMENT "-- the optimized plan, so temporarily disable parallel query."
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    LOCAL_KW "local"
    WHITESPACE " "
    NAME_REF
      IDENT "max_parallel_workers_per_gather"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "unique1"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "42000"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "unique1"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "42000"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "rollback"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- multi-column index (uses tenk1_thous_tenthous)"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "tenthous"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "thousand"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "33"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "tenthous"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "thousand"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "33"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "tenthous"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "thousand"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "33"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "tenthous"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "thousand"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "33"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check parameter propagation into an indexscan subquery"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "f1"
        COMMA ","
        WHITESPACE " "
        TARGET
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "select"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    CALL_EXPR
                      NAME_REF
                        IDENT "min"
                      ARG_LIST
                        L_PAREN "("
                        NAME_REF
                          IDENT "unique1"
                        R_PAREN ")"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "from"
                WHITESPACE " "
                NAME_REF
                  IDENT "tenk1"
              WHITESPACE " "
              WHERE_CLAUSE
                WHERE_KW "where"
                WHITESPACE " "
                BIN_EXPR
                  NAME_REF
                    IDENT "unique1"
                  WHITESPACE " "
                  R_ANGLE ">"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "f1"
            R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "gt"
    WHITESPACE "\n    "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "int4_tbl"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "f1"
        COMMA ","
        WHITESPACE " "
        TARGET
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "select"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    CALL_EXPR
                      NAME_REF
                        IDENT "min"
                      ARG_LIST
                        L_PAREN "("
                        NAME_REF
                          IDENT "unique1"
                        R_PAREN ")"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "from"
                WHITESPACE " "
                NAME_REF
                  IDENT "tenk1"
              WHITESPACE " "
              WHERE_CLAUSE
                WHERE_KW "where"
                WHITESPACE " "
                BIN_EXPR
                  NAME_REF
                    IDENT "unique1"
                  WHITESPACE " "
                  R_ANGLE ">"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "f1"
            R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "gt"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "int4_tbl"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check some cases that were handled incorrectly in 8.3.0"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "distinct"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique2"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "distinct"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique2"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique2"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique2"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique2"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "max"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "unique2"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique2"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "max"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "unique2"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique2"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      BIN_EXPR
        CALL_EXPR
          NAME_REF
            IDENT "max"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "unique2"
            R_PAREN ")"
        PLUS "+"
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique2"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      BIN_EXPR
        CALL_EXPR
          NAME_REF
            IDENT "max"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "unique2"
            R_PAREN ")"
        PLUS "+"
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique2"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "g"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "g"
      WHITESPACE " "
      DESC_KW "desc"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique2"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "generate_series"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              COMMA ","
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "g"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "g"
      WHITESPACE " "
      DESC_KW "desc"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- interesting corner case: constant gets optimized into a seqscan"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "100"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "100"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- try it on an inheritance tree"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "minmaxtest"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "minmaxtest1"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "minmaxtest"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "minmaxtest2"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "minmaxtest"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "minmaxtest3"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "minmaxtest"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "minmaxtesti"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "minmaxtest"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "f1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "minmaxtest1i"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "minmaxtest1"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "f1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "minmaxtest2i"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "minmaxtest2"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "f1"
      WHITESPACE " "
      DESC_KW "desc"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "minmaxtest3i"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "minmaxtest3"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "f1"
      R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        IS_NOT
          IS_KW "is"
          WHITESPACE " "
          NOT_KW "not"
        WHITESPACE " "
        LITERAL
          NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "minmaxtest"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "11"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "12"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "minmaxtest1"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "13"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "14"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "minmaxtest2"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "15"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "16"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "minmaxtest3"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      LITERAL
        INT_NUMBER "17"
      R_PAREN ")"
      COMMA ","
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "18"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "f1"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "f1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "minmaxtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "f1"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "f1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "minmaxtest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- DISTINCT doesn't do anything useful here, but it shouldn't fail"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "distinct"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "f1"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "f1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "minmaxtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "distinct"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "f1"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "f1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "minmaxtest"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "minmaxtest"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- DISTINCT can also trigger wrong answers with hash aggregation (bug #18465)"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    LOCAL_KW "local"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_sort"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "f1"
        COMMA ","
        WHITESPACE " "
        TARGET
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "select"
                WHITESPACE " "
                DISTINCT_CLAUSE
                  DISTINCT_KW "distinct"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    CALL_EXPR
                      NAME_REF
                        IDENT "min"
                      ARG_LIST
                        L_PAREN "("
                        FIELD_EXPR
                          NAME_REF
                            IDENT "t1"
                          DOT "."
                          NAME_REF
                            IDENT "f1"
                        R_PAREN ")"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "from"
                WHITESPACE " "
                NAME_REF
                  IDENT "int4_tbl"
                WHITESPACE " "
                ALIAS
                  NAME
                    IDENT "t1"
              WHITESPACE " "
              WHERE_CLAUSE
                WHERE_KW "where"
                WHITESPACE " "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t1"
                    DOT "."
                    NAME_REF
                      IDENT "f1"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t0"
                    DOT "."
                    NAME_REF
                      IDENT "f1"
            R_PAREN ")"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "int4_tbl"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "f1"
        COMMA ","
        WHITESPACE " "
        TARGET
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "select"
                WHITESPACE " "
                DISTINCT_CLAUSE
                  DISTINCT_KW "distinct"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    CALL_EXPR
                      NAME_REF
                        IDENT "min"
                      ARG_LIST
                        L_PAREN "("
                        FIELD_EXPR
                          NAME_REF
                            IDENT "t1"
                          DOT "."
                          NAME_REF
                            IDENT "f1"
                        R_PAREN ")"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "from"
                WHITESPACE " "
                NAME_REF
                  IDENT "int4_tbl"
                WHITESPACE " "
                ALIAS
                  NAME
                    IDENT "t1"
              WHITESPACE " "
              WHERE_CLAUSE
                WHERE_KW "where"
                WHITESPACE " "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t1"
                    DOT "."
                    NAME_REF
                      IDENT "f1"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t0"
                    DOT "."
                    NAME_REF
                      IDENT "f1"
            R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "int4_tbl"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t0"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "rollback"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check for correct detection of nested-aggregate errors"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  IDENT "min"
                ARG_LIST
                  L_PAREN "("
                  NAME_REF
                    IDENT "unique1"
                  R_PAREN ")"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "select"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    CALL_EXPR
                      NAME_REF
                        IDENT "max"
                      ARG_LIST
                        L_PAREN "("
                        CALL_EXPR
                          NAME_REF
                            IDENT "min"
                          ARG_LIST
                            L_PAREN "("
                            NAME_REF
                              IDENT "unique1"
                            R_PAREN ")"
                        R_PAREN ")"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "from"
                WHITESPACE " "
                NAME_REF
                  IDENT "int8_tbl"
            R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              PAREN_EXPR
                L_PAREN "("
                SELECT
                  SELECT_CLAUSE
                    SELECT_KW "select"
                    WHITESPACE " "
                    TARGET_LIST
                      TARGET
                        CALL_EXPR
                          NAME_REF
                            IDENT "avg"
                          ARG_LIST
                            L_PAREN "("
                            FIELD_EXPR
                              NAME_REF
                                IDENT "a1"
                              DOT "."
                              NAME_REF
                                IDENT "col1"
                            WHITESPACE " "
                            ORDER_BY_CLAUSE
                              ORDER_KW "order"
                              WHITESPACE " "
                              BY_KW "by"
                              WHITESPACE " "
                              PAREN_EXPR
                                L_PAREN "("
                                SELECT
                                  SELECT_CLAUSE
                                    SELECT_KW "select"
                                    WHITESPACE " "
                                    TARGET_LIST
                                      TARGET
                                        CALL_EXPR
                                          NAME_REF
                                            IDENT "avg"
                                          ARG_LIST
                                            L_PAREN "("
                                            FIELD_EXPR
                                              NAME_REF
                                                IDENT "a2"
                                              DOT "."
                                              NAME_REF
                                                IDENT "col2"
                                            R_PAREN ")"
                                  WHITESPACE " "
                                  FROM_CLAUSE
                                    FROM_KW "from"
                                    WHITESPACE " "
                                    NAME_REF
                                      IDENT "tenk1"
                                    WHITESPACE " "
                                    ALIAS
                                      NAME
                                        IDENT "a3"
                                R_PAREN ")"
                            R_PAREN ")"
                  WHITESPACE "\n            "
                  FROM_CLAUSE
                    FROM_KW "from"
                    WHITESPACE " "
                    NAME_REF
                      IDENT "tenk1"
                    WHITESPACE " "
                    ALIAS
                      NAME
                        IDENT "a1"
                      COLUMN_LIST
                        L_PAREN "("
                        COLUMN
                          NAME
                            IDENT "col1"
                        R_PAREN ")"
                R_PAREN ")"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "a2"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "col2"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test removal of redundant GROUP BY columns"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "t1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "d"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "a"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME_REF
              IDENT "b"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "t2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "z"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "x"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME_REF
              IDENT "y"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "t3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "a"
          COMMA ","
          WHITESPACE " "
          COLUMN
            NAME_REF
              IDENT "b"
          R_PAREN ")"
        WHITESPACE " "
        CONSTRAINT_OPTION_LIST
          DEFERRABLE_CONSTRAINT_OPTION
            DEFERRABLE_KW "deferrable"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Non-primary-key columns can be removed from GROUP BY"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      NAME_REF
        IDENT "b"
      COMMA ","
      NAME_REF
        IDENT "c"
      COMMA ","
      NAME_REF
        IDENT "d"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- No removal can happen if the complete PK is not present in GROUP BY"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "c"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      NAME_REF
        IDENT "c"
      COMMA ","
      NAME_REF
        IDENT "d"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test removal across multiple relations"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
      WHITESPACE " "
      JOIN
        INNER_KW "inner"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "t2"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "t1"
              DOT "."
              NAME_REF
                IDENT "a"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "t2"
              DOT "."
              NAME_REF
                IDENT "x"
          WHITESPACE " "
          AND_KW "and"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "t1"
              DOT "."
              NAME_REF
                IDENT "b"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "t2"
              DOT "."
              NAME_REF
                IDENT "y"
    WHITESPACE "\n"
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "t1"
        DOT "."
        NAME_REF
          IDENT "a"
      COMMA ","
      FIELD_EXPR
        NAME_REF
          IDENT "t1"
        DOT "."
        NAME_REF
          IDENT "b"
      COMMA ","
      FIELD_EXPR
        NAME_REF
          IDENT "t1"
        DOT "."
        NAME_REF
          IDENT "c"
      COMMA ","
      FIELD_EXPR
        NAME_REF
          IDENT "t1"
        DOT "."
        NAME_REF
          IDENT "d"
      COMMA ","
      FIELD_EXPR
        NAME_REF
          IDENT "t2"
        DOT "."
        NAME_REF
          IDENT "x"
      COMMA ","
      FIELD_EXPR
        NAME_REF
          IDENT "t2"
        DOT "."
        NAME_REF
          IDENT "y"
      COMMA ","
      FIELD_EXPR
        NAME_REF
          IDENT "t2"
        DOT "."
        NAME_REF
          IDENT "z"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test case where t1 can be optimized but not t2"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            STAR "*"
        COMMA ","
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "x"
        COMMA ","
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "z"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
      WHITESPACE " "
      JOIN
        INNER_KW "inner"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "t2"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "t1"
              DOT "."
              NAME_REF
                IDENT "a"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "t2"
              DOT "."
              NAME_REF
                IDENT "x"
          WHITESPACE " "
          AND_KW "and"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "t1"
              DOT "."
              NAME_REF
                IDENT "b"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "t2"
              DOT "."
              NAME_REF
                IDENT "y"
    WHITESPACE "\n"
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "t1"
        DOT "."
        NAME_REF
          IDENT "a"
      COMMA ","
      FIELD_EXPR
        NAME_REF
          IDENT "t1"
        DOT "."
        NAME_REF
          IDENT "b"
      COMMA ","
      FIELD_EXPR
        NAME_REF
          IDENT "t1"
        DOT "."
        NAME_REF
          IDENT "c"
      COMMA ","
      FIELD_EXPR
        NAME_REF
          IDENT "t1"
        DOT "."
        NAME_REF
          IDENT "d"
      COMMA ","
      FIELD_EXPR
        NAME_REF
          IDENT "t2"
        DOT "."
        NAME_REF
          IDENT "x"
      COMMA ","
      FIELD_EXPR
        NAME_REF
          IDENT "t2"
        DOT "."
        NAME_REF
          IDENT "z"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Cannot optimize when PK is deferrable"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "t3"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      NAME_REF
        IDENT "b"
      COMMA ","
      NAME_REF
        IDENT "c"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "t1c"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    INHERITS_KW "inherits"
    WHITESPACE " "
    L_PAREN "("
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we don't remove any columns when t1 has a child table"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      NAME_REF
        IDENT "b"
      COMMA ","
      NAME_REF
        IDENT "c"
      COMMA ","
      NAME_REF
        IDENT "d"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Okay to remove columns if we're only querying the parent."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      ONLY_KW "only"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      NAME_REF
        IDENT "b"
      COMMA ","
      NAME_REF
        IDENT "c"
      COMMA ","
      NAME_REF
        IDENT "d"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p_t1"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n  "
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n  "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n  "
      COLUMN
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n  "
      COLUMN
        NAME_REF
          IDENT "d"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE "\n  "
      PRIMARY_KEY_CONSTRAINT
        PRIMARY_KW "primary"
        WHITESPACE " "
        KEY_KW "key"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME_REF
              IDENT "a"
          COMMA ","
          COLUMN
            NAME_REF
              IDENT "b"
          R_PAREN ")"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    BY_KW "by"
    WHITESPACE " "
    IDENT "list"
    L_PAREN "("
    NAME_REF
      IDENT "a"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p_t1_1"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p_t1"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "p_t1_2"
    WHITESPACE " "
    PARTITION_KW "partition"
    WHITESPACE " "
    OF_KW "of"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p_t1"
    WHITESPACE " "
    FOR_KW "for"
    WHITESPACE " "
    VALUES_KW "values"
    WHITESPACE " "
    IN_KW "in"
    L_PAREN "("
    LITERAL
      INT_NUMBER "2"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we can remove non-PK columns for partitioned tables."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "p_t1"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      NAME_REF
        IDENT "b"
      COMMA ","
      NAME_REF
        IDENT "c"
      COMMA ","
      NAME_REF
        IDENT "d"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "t2_z_uidx"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t2"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "z"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we don't remove any columns from the GROUP BY for a unique"
  WHITESPACE "\n"
  COMMENT "-- index on a NULLable column."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "y"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "z"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "t2"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "y"
      COMMA ","
      NAME_REF
        IDENT "z"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Make the column NOT NULL and ensure we remove the redundant column"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t2"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "z"
      WHITESPACE " "
      SET_NOT_NULL
        SET_KW "set"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "y"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "z"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "t2"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "y"
      COMMA ","
      NAME_REF
        IDENT "z"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- When there are multiple supporting unique indexes and the GROUP BY contains"
  WHITESPACE "\n"
  COMMENT "-- columns to cover all of those, ensure we pick the index with the least"
  WHITESPACE "\n"
  COMMENT "-- number of columns so that we can remove more columns from the GROUP BY."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "x"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "y"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "z"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "t2"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "x"
      COMMA ","
      NAME_REF
        IDENT "y"
      COMMA ","
      NAME_REF
        IDENT "z"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- As above but try ordering the columns differently to ensure we get the"
  WHITESPACE "\n"
  COMMENT "-- same result."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "x"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "y"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "z"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "t2"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "z"
      COMMA ","
      NAME_REF
        IDENT "x"
      COMMA ","
      NAME_REF
        IDENT "y"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we don't use a partial index as proof of functional dependency"
  WHITESPACE "\n"
  DROP_INDEX_STMT
    DROP_KW "drop"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t2_z_uidx"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "t2_z_uidx"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t2"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "z"
      R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "z"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "y"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "z"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "t2"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "y"
      COMMA ","
      NAME_REF
        IDENT "z"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- A unique index defined as NULLS NOT DISTINCT does not need a supporting NOT"
  WHITESPACE "\n"
  COMMENT "-- NULL constraint on the indexed columns.  Ensure the redundant columns are"
  WHITESPACE "\n"
  COMMENT "-- removed from the GROUP BY for such a table."
  WHITESPACE "\n"
  DROP_INDEX_STMT
    DROP_KW "drop"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t2_z_uidx"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "alter"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t2"
    WHITESPACE " "
    ALTER_COLUMN
      ALTER_KW "alter"
      WHITESPACE " "
      COLUMN_KW "column"
      WHITESPACE " "
      IDENT "z"
      WHITESPACE " "
      DROP_NOT_NULL
        DROP_KW "drop"
        WHITESPACE " "
        NOT_KW "not"
        WHITESPACE " "
        NULL_KW "null"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "create"
    WHITESPACE " "
    UNIQUE_KW "unique"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "t2_z_uidx"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t2"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "z"
      R_PAREN ")"
    WHITESPACE " "
    NULLS_KW "nulls"
    WHITESPACE " "
    NOT_KW "not"
    WHITESPACE " "
    DISTINCT_KW "distinct"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "y"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "z"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "t2"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "y"
      COMMA ","
      NAME_REF
        IDENT "z"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    WHITESPACE " "
    CASCADE_KW "cascade"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t3"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "p_t1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test GROUP BY matching of join columns that are type-coerced due to USING"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "t1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "create"
    WHITESPACE " "
    TEMP_KW "temp"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "t2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "f1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                BIGINT_KW "bigint"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "f2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "oid"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "f1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
      WHITESPACE " "
      JOIN
        LEFT_KW "left"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "t2"
        WHITESPACE " "
        USING_CLAUSE
          USING_KW "using"
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            NAME_REF
              IDENT "f1"
            R_PAREN ")"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "f1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
      WHITESPACE " "
      JOIN
        LEFT_KW "left"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "t2"
        WHITESPACE " "
        USING_CLAUSE
          USING_KW "using"
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            NAME_REF
              IDENT "f1"
            R_PAREN ")"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "t1"
        DOT "."
        NAME_REF
          IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "f1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
      WHITESPACE " "
      JOIN
        LEFT_KW "left"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "t2"
        WHITESPACE " "
        USING_CLAUSE
          USING_KW "using"
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            NAME_REF
              IDENT "f1"
            R_PAREN ")"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "t1"
        DOT "."
        NAME_REF
          IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- only this one should fail:"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "f1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "t1"
      WHITESPACE " "
      JOIN
        LEFT_KW "left"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        NAME_REF
          IDENT "t2"
        WHITESPACE " "
        USING_CLAUSE
          USING_KW "using"
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            NAME_REF
              IDENT "f1"
            R_PAREN ")"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check case where we have to inject nullingrels into coerced join alias"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "f1"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE "\n"
      NAME_REF
        IDENT "t1"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x0"
          COMMA ","
          COLUMN
            NAME
              IDENT "x1"
          R_PAREN ")"
      WHITESPACE " "
      JOIN
        LEFT_KW "left"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          NAME_REF
            IDENT "t1"
          WHITESPACE " "
          NAME_REF
            LEFT_KW "left"
          WHITESPACE " "
          NAME_REF
            JOIN_KW "join"
          WHITESPACE " "
          NAME_REF
            IDENT "t2"
          WHITESPACE " "
          ERROR
            USING_KW "using"
        ALIAS
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "f1"
            R_PAREN ")"
        USING_CLAUSE
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    ON_KW "on"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "x0"
  WHITESPACE " "
  ERROR
    EQ "="
  WHITESPACE " "
  ERROR
    INT_NUMBER "0"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  ERROR
    GROUP_KW "group"
  WHITESPACE " "
  ERROR
    BY_KW "by"
  WHITESPACE " "
  ERROR
    IDENT "f1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- same, for a RelabelType coercion"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "f2"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE "\n"
      NAME_REF
        IDENT "t1"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x0"
          COMMA ","
          COLUMN
            NAME
              IDENT "x1"
          R_PAREN ")"
      WHITESPACE " "
      JOIN
        LEFT_KW "left"
        WHITESPACE " "
        JOIN_KW "join"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          NAME_REF
            IDENT "t1"
          WHITESPACE " "
          NAME_REF
            LEFT_KW "left"
          WHITESPACE " "
          NAME_REF
            JOIN_KW "join"
          WHITESPACE " "
          NAME_REF
            IDENT "t2"
          WHITESPACE " "
          ERROR
            USING_KW "using"
        ALIAS
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "f2"
            R_PAREN ")"
        USING_CLAUSE
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    ON_KW "on"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    IDENT "x0"
  WHITESPACE " "
  ERROR
    EQ "="
  WHITESPACE " "
  ERROR
    INT_NUMBER "0"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  ERROR
    GROUP_KW "group"
  WHITESPACE " "
  ERROR
    BY_KW "by"
  WHITESPACE " "
  ERROR
    IDENT "f2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "t2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test planner's selection of pathkeys for ORDER BY aggregates"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we order by four.  This suits the most aggregate functions."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "two"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "two"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "four"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "four"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "four"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "four"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we order by two.  It's a tie between ordering by two and four but"
  WHITESPACE "\n"
  COMMENT "-- we tiebreak on the aggregate's position."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE "\n  "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "two"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "two"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "four"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "four"
              R_PAREN ")"
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "four"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "four"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "two"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "two"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Similar to above, but tiebreak on ordering by four"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE "\n  "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "four"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "four"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "two"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "two"
              R_PAREN ")"
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "four"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "four"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "two"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "two"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure this one orders by ten since there are 3 aggregates that require ten"
  WHITESPACE "\n"
  COMMENT "-- vs two that suit two and four."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE "\n  "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "four"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "four"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "two"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "two"
              R_PAREN ")"
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "four"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "four"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "two"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "two"
              R_PAREN ")"
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "ten"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "ten"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "ten"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "ten"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "ten"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "ten"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Try a case involving a GROUP BY clause where the GROUP BY column is also"
  WHITESPACE "\n"
  COMMENT "-- part of an aggregate's ORDER BY clause.  We want a sort order that works"
  WHITESPACE "\n"
  COMMENT "-- for the GROUP BY along with the first and the last aggregate."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE "\n  "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique1"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "ten"
                COMMA ","
                WHITESPACE " "
                NAME_REF
                  IDENT "two"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique1"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "four"
              R_PAREN ")"
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique1"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "two"
                COMMA ","
                WHITESPACE " "
                NAME_REF
                  IDENT "four"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE "\n"
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "ten"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure that we never choose to provide presorted input to an Aggref with"
  WHITESPACE "\n"
  COMMENT "-- a volatile function in the ORDER BY / DISTINCT clause.  We want to ensure"
  WHITESPACE "\n"
  COMMENT "-- these sorts are performed individually rather than at the query level."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE "\n  "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique1"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "two"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique1"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "four"
              R_PAREN ")"
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique1"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "four"
                COMMA ","
                WHITESPACE " "
                NAME_REF
                  IDENT "two"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique1"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "two"
                COMMA ","
                WHITESPACE " "
                CALL_EXPR
                  NAME_REF
                    IDENT "random"
                  ARG_LIST
                    L_PAREN "("
                    R_PAREN ")"
              R_PAREN ")"
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique1"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "two"
                COMMA ","
                WHITESPACE " "
                CALL_EXPR
                  NAME_REF
                    IDENT "random"
                  ARG_LIST
                    L_PAREN "("
                    R_PAREN ")"
                COMMA ","
                WHITESPACE " "
                BIN_EXPR
                  CALL_EXPR
                    NAME_REF
                      IDENT "random"
                    ARG_LIST
                      L_PAREN "("
                      R_PAREN ")"
                  WHITESPACE " "
                  PLUS "+"
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "1"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE "\n"
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "ten"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure consecutive NULLs are properly treated as distinct from each other"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_agg"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "val"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                LITERAL
                  NULL_KW "null"
                WHITESPACE " "
                AS_KW "as"
                WHITESPACE " "
                NAME
                  IDENT "val"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "generate_series"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "2"
                R_PAREN ")"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure no ordering is requested when enable_presorted_aggregate is off"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_presorted_aggregate"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "two"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "two"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_presorted_aggregate"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test cases with FILTER clause"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we presort when the aggregate contains plain Vars"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "two"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "two"
              R_PAREN ")"
            WHITESPACE " "
            FILTER_CLAUSE
              FILTER_KW "filter"
              WHITESPACE " "
              L_PAREN "("
              WHERE_KW "where"
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "two"
                WHITESPACE " "
                R_ANGLE ">"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we presort for RelabelType'd Vars"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "string_agg"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "f1"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            STRING "','"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    FILTER_KW "filter"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    WHERE_KW "where"
  WHITESPACE " "
  ERROR
    IDENT "length"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "f1"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    INT_NUMBER "1"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  ERROR
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    IDENT "varchar_tbl"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure we don't presort when the aggregate's argument contains an"
  WHITESPACE "\n"
  COMMENT "-- explicit cast."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "string_agg"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              CAST_EXPR
                NAME_REF
                  IDENT "f1"
                COLON2 "::"
                CHAR_TYPE
                  VARCHAR_KW "varchar"
                  L_PAREN "("
                  ARG_LIST
                    ARG
                      LITERAL
                        INT_NUMBER "2"
                    R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            STRING "','"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    FILTER_KW "filter"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    WHERE_KW "where"
  WHITESPACE " "
  ERROR
    IDENT "length"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "f1"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    INT_NUMBER "1"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  ERROR
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    IDENT "varchar_tbl"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test combinations of DISTINCT and/or ORDER BY"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_agg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "b"
              R_PAREN ")"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "4"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          COMMA ","
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "4"
          COMMA ","
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          COLUMN
            NAME
              IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_agg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "a"
              R_PAREN ")"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "4"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          COMMA ","
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "4"
          COMMA ","
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          COLUMN
            NAME
              IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_agg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "a"
                WHITESPACE " "
                DESC_KW "desc"
              R_PAREN ")"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "4"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          COMMA ","
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "4"
          COMMA ","
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          COLUMN
            NAME
              IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_agg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "a"
                WHITESPACE " "
                DESC_KW "desc"
              R_PAREN ")"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "4"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          COMMA ","
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "4"
          COMMA ","
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          COLUMN
            NAME
              IDENT "b"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_agg"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "a"
              R_PAREN ")"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            NULL_KW "null"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_agg"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "a"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "a"
              R_PAREN ")"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            NULL_KW "null"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_agg"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "a"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "a"
                WHITESPACE " "
                DESC_KW "desc"
              R_PAREN ")"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            NULL_KW "null"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_agg"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "a"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "a"
                WHITESPACE " "
                DESC_KW "desc"
                WHITESPACE " "
                NULLS_KW "nulls"
                WHITESPACE " "
                LAST_KW "last"
              R_PAREN ")"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            NULL_KW "null"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- multi-arg aggs, strict/nonstrict, distinct/order by"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "aggfstr"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              COMMA ","
              NAME_REF
                IDENT "b"
              COMMA ","
              NAME_REF
                IDENT "c"
              R_PAREN ")"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          COMMA ","
          LITERAL
            STRING "'foo'"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          LITERAL
            NULL_KW "null"
          COMMA ","
          LITERAL
            NULL_KW "null"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          COMMA ","
          LITERAL
            INT_NUMBER "2"
          COMMA ","
          LITERAL
            STRING "'bar'"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          COMMA ","
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            STRING "'baz'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          COLUMN
            NAME
              IDENT "b"
          COMMA ","
          COLUMN
            NAME
              IDENT "c"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "aggfns"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              COMMA ","
              NAME_REF
                IDENT "b"
              COMMA ","
              NAME_REF
                IDENT "c"
              R_PAREN ")"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "3"
          COMMA ","
          LITERAL
            STRING "'foo'"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "0"
          COMMA ","
          LITERAL
            NULL_KW "null"
          COMMA ","
          LITERAL
            NULL_KW "null"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          COMMA ","
          LITERAL
            INT_NUMBER "2"
          COMMA ","
          LITERAL
            STRING "'bar'"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          COMMA ","
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            STRING "'baz'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          COMMA ","
          COLUMN
            NAME
              IDENT "b"
          COMMA ","
          COLUMN
            NAME
              IDENT "c"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "aggfstr"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "a"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "b"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "c"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  ERROR
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  SELECT
    VALUES_KW "values"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      STRING "'foo'"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    COMMA ","
    LITERAL
      NULL_KW "null"
    COMMA ","
    LITERAL
      NULL_KW "null"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "2"
    COMMA ","
    LITERAL
      INT_NUMBER "2"
    COMMA ","
    LITERAL
      STRING "'bar'"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      STRING "'baz'"
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "v"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    IDENT "c"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE "\n       "
  ERROR
    IDENT "generate_series"
  ERROR
    L_PAREN "("
  ERROR
    INT_NUMBER "1"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "3"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "aggfns"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "a"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "b"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "c"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  ERROR
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  SELECT
    VALUES_KW "values"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      STRING "'foo'"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    COMMA ","
    LITERAL
      NULL_KW "null"
    COMMA ","
    LITERAL
      NULL_KW "null"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "2"
    COMMA ","
    LITERAL
      INT_NUMBER "2"
    COMMA ","
    LITERAL
      STRING "'bar'"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      STRING "'baz'"
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "v"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    IDENT "c"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE "\n       "
  ERROR
    IDENT "generate_series"
  ERROR
    L_PAREN "("
  ERROR
    INT_NUMBER "1"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "3"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "aggfstr"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "a"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "b"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "c"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  ERROR
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  SELECT
    VALUES_KW "values"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      STRING "'foo'"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    COMMA ","
    LITERAL
      NULL_KW "null"
    COMMA ","
    LITERAL
      NULL_KW "null"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "2"
    COMMA ","
    LITERAL
      INT_NUMBER "2"
    COMMA ","
    LITERAL
      STRING "'bar'"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      STRING "'baz'"
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "v"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    IDENT "c"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE "\n       "
  ERROR
    IDENT "generate_series"
  ERROR
    L_PAREN "("
  ERROR
    INT_NUMBER "1"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "3"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "aggfns"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "a"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "b"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "c"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "b"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  ERROR
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  SELECT
    VALUES_KW "values"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      STRING "'foo'"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    COMMA ","
    LITERAL
      NULL_KW "null"
    COMMA ","
    LITERAL
      NULL_KW "null"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "2"
    COMMA ","
    LITERAL
      INT_NUMBER "2"
    COMMA ","
    LITERAL
      STRING "'bar'"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      STRING "'baz'"
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "v"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    IDENT "c"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE "\n       "
  ERROR
    IDENT "generate_series"
  ERROR
    L_PAREN "("
  ERROR
    INT_NUMBER "1"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "3"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test specific code paths"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "aggfns"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "a"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "a"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "c"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      USING_KW "using"
      WHITESPACE " "
      CUSTOM_OP
        TILDE "~"
        L_ANGLE "<"
        TILDE "~"
      COMMA ","
      NAME_REF
        IDENT "a"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  ERROR
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  SELECT
    VALUES_KW "values"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      STRING "'foo'"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    COMMA ","
    LITERAL
      NULL_KW "null"
    COMMA ","
    LITERAL
      NULL_KW "null"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "2"
    COMMA ","
    LITERAL
      INT_NUMBER "2"
    COMMA ","
    LITERAL
      STRING "'bar'"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      STRING "'baz'"
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "v"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    IDENT "c"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE "\n       "
  ERROR
    IDENT "generate_series"
  ERROR
    L_PAREN "("
  ERROR
    INT_NUMBER "1"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "2"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "aggfns"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "a"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "a"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "c"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      USING_KW "using"
      WHITESPACE " "
      CUSTOM_OP
        TILDE "~"
        L_ANGLE "<"
        TILDE "~"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  ERROR
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  SELECT
    VALUES_KW "values"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      STRING "'foo'"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    COMMA ","
    LITERAL
      NULL_KW "null"
    COMMA ","
    LITERAL
      NULL_KW "null"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "2"
    COMMA ","
    LITERAL
      INT_NUMBER "2"
    COMMA ","
    LITERAL
      STRING "'bar'"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      STRING "'baz'"
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "v"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    IDENT "c"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE "\n       "
  ERROR
    IDENT "generate_series"
  ERROR
    L_PAREN "("
  ERROR
    INT_NUMBER "1"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "2"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "aggfns"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "a"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "a"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "c"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  ERROR
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  SELECT
    VALUES_KW "values"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      STRING "'foo'"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    COMMA ","
    LITERAL
      NULL_KW "null"
    COMMA ","
    LITERAL
      NULL_KW "null"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "2"
    COMMA ","
    LITERAL
      INT_NUMBER "2"
    COMMA ","
    LITERAL
      STRING "'bar'"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      STRING "'baz'"
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "v"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    IDENT "c"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE "\n       "
  ERROR
    IDENT "generate_series"
  ERROR
    L_PAREN "("
  ERROR
    INT_NUMBER "1"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "2"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "aggfns"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "a"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "b"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "c"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      USING_KW "using"
      WHITESPACE " "
      CUSTOM_OP
        TILDE "~"
        L_ANGLE "<"
        TILDE "~"
      COMMA ","
      NAME_REF
        IDENT "b"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  ERROR
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  SELECT
    VALUES_KW "values"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      STRING "'foo'"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    COMMA ","
    LITERAL
      NULL_KW "null"
    COMMA ","
    LITERAL
      NULL_KW "null"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "2"
    COMMA ","
    LITERAL
      INT_NUMBER "2"
    COMMA ","
    LITERAL
      STRING "'bar'"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      STRING "'baz'"
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "v"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    IDENT "c"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE "\n       "
  ERROR
    IDENT "generate_series"
  ERROR
    L_PAREN "("
  ERROR
    INT_NUMBER "1"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "2"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test a more complex permutation that has previous caused issues"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE "\n    "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "string_agg"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              LITERAL
                STRING "'a'"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            STRING "','"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE "\n    "
  ERROR
    IDENT "sum"
  PAREN_EXPR
    L_PAREN "("
    PAREN_EXPR
      L_PAREN "("
      WHITESPACE "\n        "
      SELECT
        SELECT_CLAUSE
          SELECT_KW "select"
          WHITESPACE " "
          TARGET_LIST
            TARGET
              CALL_EXPR
                NAME_REF
                  IDENT "sum"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    INT_NUMBER "1"
                  R_PAREN ")"
        WHITESPACE "\n        "
        FROM_CLAUSE
          FROM_KW "from"
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            SELECT
              VALUES_KW "values"
              L_PAREN "("
              LITERAL
                INT_NUMBER "1"
              R_PAREN ")"
            R_PAREN ")"
          WHITESPACE " "
          ALIAS
            NAME
              IDENT "b"
            COLUMN_LIST
              L_PAREN "("
              COLUMN
                NAME
                  IDENT "id"
              R_PAREN ")"
        WHITESPACE "\n        "
        WHERE_CLAUSE
          WHERE_KW "where"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a"
              DOT "."
              NAME_REF
                IDENT "id"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "b"
              DOT "."
              NAME_REF
                IDENT "id"
      WHITESPACE "\n"
      R_PAREN ")"
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    IDENT "unnest"
  ERROR
    L_PAREN "("
  ERROR
    ARRAY_KW "array"
  ERROR
    L_BRACK "["
  ERROR
    INT_NUMBER "1"
  ERROR
    R_BRACK "]"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "a"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "id"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check node I/O via view creation and usage, also deparsing logic"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "agg_view1"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "aggfns"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "a"
                COMMA ","
                NAME_REF
                  IDENT "b"
                COMMA ","
                NAME_REF
                  IDENT "c"
                R_PAREN ")"
      WHITESPACE "\n    "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            VALUES_KW "values"
            WHITESPACE " "
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "3"
            COMMA ","
            LITERAL
              STRING "'foo'"
            R_PAREN ")"
            COMMA ","
            L_PAREN "("
            LITERAL
              INT_NUMBER "0"
            COMMA ","
            LITERAL
              NULL_KW "null"
            COMMA ","
            LITERAL
              NULL_KW "null"
            R_PAREN ")"
            COMMA ","
            L_PAREN "("
            LITERAL
              INT_NUMBER "2"
            COMMA ","
            LITERAL
              INT_NUMBER "2"
            COMMA ","
            LITERAL
              STRING "'bar'"
            R_PAREN ")"
            COMMA ","
            L_PAREN "("
            LITERAL
              INT_NUMBER "3"
            COMMA ","
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              STRING "'baz'"
            R_PAREN ")"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "v"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "a"
            COMMA ","
            COLUMN
              NAME
                IDENT "b"
            COMMA ","
            COLUMN
              NAME
                IDENT "c"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "agg_view1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_viewdef"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'agg_view1'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "agg_view1"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "aggfns"
              ARG_LIST
                L_PAREN "("
                DISTINCT_KW "distinct"
                WHITESPACE " "
                NAME_REF
                  IDENT "a"
          COMMA ","
          TARGET
            NAME_REF
              IDENT "b"
          COMMA ","
          TARGET
            NAME_REF
              IDENT "c"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n    "
  ERROR
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  SELECT
    VALUES_KW "values"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      STRING "'foo'"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    COMMA ","
    LITERAL
      NULL_KW "null"
    COMMA ","
    LITERAL
      NULL_KW "null"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "2"
    COMMA ","
    LITERAL
      INT_NUMBER "2"
    COMMA ","
    LITERAL
      STRING "'bar'"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      STRING "'baz'"
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "v"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    IDENT "c"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE "\n         "
  ERROR
    IDENT "generate_series"
  ERROR
    L_PAREN "("
  ERROR
    INT_NUMBER "1"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "3"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "agg_view1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_viewdef"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'agg_view1'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "agg_view1"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "aggfns"
              ARG_LIST
                L_PAREN "("
                DISTINCT_KW "distinct"
                WHITESPACE " "
                NAME_REF
                  IDENT "a"
          COMMA ","
          TARGET
            NAME_REF
              IDENT "b"
          COMMA ","
          TARGET
            NAME_REF
              IDENT "c"
      WHITESPACE " "
      ORDER_BY_CLAUSE
        ORDER_KW "order"
        WHITESPACE " "
        BY_KW "by"
        WHITESPACE " "
        NAME_REF
          IDENT "b"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n    "
  ERROR
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  SELECT
    VALUES_KW "values"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      STRING "'foo'"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    COMMA ","
    LITERAL
      NULL_KW "null"
    COMMA ","
    LITERAL
      NULL_KW "null"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "2"
    COMMA ","
    LITERAL
      INT_NUMBER "2"
    COMMA ","
    LITERAL
      STRING "'bar'"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      STRING "'baz'"
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "v"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    IDENT "c"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE "\n         "
  ERROR
    IDENT "generate_series"
  ERROR
    L_PAREN "("
  ERROR
    INT_NUMBER "1"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "3"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "agg_view1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_viewdef"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'agg_view1'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "agg_view1"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "aggfns"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "a"
                COMMA ","
                NAME_REF
                  IDENT "b"
                COMMA ","
                NAME_REF
                  IDENT "c"
                WHITESPACE " "
                ORDER_BY_CLAUSE
                  ORDER_KW "order"
                  WHITESPACE " "
                  BY_KW "by"
                  WHITESPACE " "
                  BIN_EXPR
                    NAME_REF
                      IDENT "b"
                    PLUS "+"
                    LITERAL
                      INT_NUMBER "1"
                R_PAREN ")"
      WHITESPACE "\n    "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            VALUES_KW "values"
            WHITESPACE " "
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "3"
            COMMA ","
            LITERAL
              STRING "'foo'"
            R_PAREN ")"
            COMMA ","
            L_PAREN "("
            LITERAL
              INT_NUMBER "0"
            COMMA ","
            LITERAL
              NULL_KW "null"
            COMMA ","
            LITERAL
              NULL_KW "null"
            R_PAREN ")"
            COMMA ","
            L_PAREN "("
            LITERAL
              INT_NUMBER "2"
            COMMA ","
            LITERAL
              INT_NUMBER "2"
            COMMA ","
            LITERAL
              STRING "'bar'"
            R_PAREN ")"
            COMMA ","
            L_PAREN "("
            LITERAL
              INT_NUMBER "3"
            COMMA ","
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              STRING "'baz'"
            R_PAREN ")"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "v"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "a"
            COMMA ","
            COLUMN
              NAME
                IDENT "b"
            COMMA ","
            COLUMN
              NAME
                IDENT "c"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "agg_view1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_viewdef"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'agg_view1'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "agg_view1"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "aggfns"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "a"
                COMMA ","
                NAME_REF
                  IDENT "a"
                COMMA ","
                NAME_REF
                  IDENT "c"
                WHITESPACE " "
                ORDER_BY_CLAUSE
                  ORDER_KW "order"
                  WHITESPACE " "
                  BY_KW "by"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "b"
                R_PAREN ")"
      WHITESPACE "\n    "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            VALUES_KW "values"
            WHITESPACE " "
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "3"
            COMMA ","
            LITERAL
              STRING "'foo'"
            R_PAREN ")"
            COMMA ","
            L_PAREN "("
            LITERAL
              INT_NUMBER "0"
            COMMA ","
            LITERAL
              NULL_KW "null"
            COMMA ","
            LITERAL
              NULL_KW "null"
            R_PAREN ")"
            COMMA ","
            L_PAREN "("
            LITERAL
              INT_NUMBER "2"
            COMMA ","
            LITERAL
              INT_NUMBER "2"
            COMMA ","
            LITERAL
              STRING "'bar'"
            R_PAREN ")"
            COMMA ","
            L_PAREN "("
            LITERAL
              INT_NUMBER "3"
            COMMA ","
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              STRING "'baz'"
            R_PAREN ")"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "v"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "a"
            COMMA ","
            COLUMN
              NAME
                IDENT "b"
            COMMA ","
            COLUMN
              NAME
                IDENT "c"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "agg_view1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_viewdef"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'agg_view1'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "agg_view1"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "aggfns"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "a"
                COMMA ","
                NAME_REF
                  IDENT "b"
                COMMA ","
                NAME_REF
                  IDENT "c"
                WHITESPACE " "
                ORDER_BY_CLAUSE
                  ORDER_KW "order"
                  WHITESPACE " "
                  BY_KW "by"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "c"
                  WHITESPACE " "
                  USING_KW "using"
                  WHITESPACE " "
                  CUSTOM_OP
                    TILDE "~"
                    L_ANGLE "<"
                    TILDE "~"
                R_PAREN ")"
      WHITESPACE "\n    "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            VALUES_KW "values"
            WHITESPACE " "
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "3"
            COMMA ","
            LITERAL
              STRING "'foo'"
            R_PAREN ")"
            COMMA ","
            L_PAREN "("
            LITERAL
              INT_NUMBER "0"
            COMMA ","
            LITERAL
              NULL_KW "null"
            COMMA ","
            LITERAL
              NULL_KW "null"
            R_PAREN ")"
            COMMA ","
            L_PAREN "("
            LITERAL
              INT_NUMBER "2"
            COMMA ","
            LITERAL
              INT_NUMBER "2"
            COMMA ","
            LITERAL
              STRING "'bar'"
            R_PAREN ")"
            COMMA ","
            L_PAREN "("
            LITERAL
              INT_NUMBER "3"
            COMMA ","
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              STRING "'baz'"
            R_PAREN ")"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "v"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "a"
            COMMA ","
            COLUMN
              NAME
                IDENT "b"
            COMMA ","
            COLUMN
              NAME
                IDENT "c"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "agg_view1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_viewdef"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'agg_view1'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "agg_view1"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n  "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "aggfns"
              ARG_LIST
                L_PAREN "("
                DISTINCT_KW "distinct"
                WHITESPACE " "
                NAME_REF
                  IDENT "a"
          COMMA ","
          TARGET
            NAME_REF
              IDENT "b"
          COMMA ","
          TARGET
            NAME_REF
              IDENT "c"
      WHITESPACE " "
      ORDER_BY_CLAUSE
        ORDER_KW "order"
        WHITESPACE " "
        BY_KW "by"
        WHITESPACE " "
        NAME_REF
          IDENT "a"
        COMMA ","
        NAME_REF
          IDENT "c"
        WHITESPACE " "
        USING_KW "using"
        WHITESPACE " "
        CUSTOM_OP
          TILDE "~"
          L_ANGLE "<"
          TILDE "~"
        COMMA ","
        NAME_REF
          IDENT "b"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n    "
  ERROR
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  SELECT
    VALUES_KW "values"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      STRING "'foo'"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    COMMA ","
    LITERAL
      NULL_KW "null"
    COMMA ","
    LITERAL
      NULL_KW "null"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "2"
    COMMA ","
    LITERAL
      INT_NUMBER "2"
    COMMA ","
    LITERAL
      STRING "'bar'"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      STRING "'baz'"
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "v"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    IDENT "c"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE "\n         "
  ERROR
    IDENT "generate_series"
  ERROR
    L_PAREN "("
  ERROR
    INT_NUMBER "1"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "2"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "agg_view1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_viewdef"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'agg_view1'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_VIEW_STMT
    DROP_KW "drop"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "agg_view1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- incorrect DISTINCT usage errors"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "aggfns"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "a"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "b"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "c"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "i"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  ERROR
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  SELECT
    VALUES_KW "values"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      STRING "'foo'"
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "v"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    IDENT "c"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "generate_series"
  ERROR
    L_PAREN "("
  ERROR
    INT_NUMBER "1"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "2"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "aggfns"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "a"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "b"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "c"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      BIN_EXPR
        NAME_REF
          IDENT "b"
        PLUS "+"
        LITERAL
          INT_NUMBER "1"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  ERROR
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  SELECT
    VALUES_KW "values"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      STRING "'foo'"
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "v"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    IDENT "c"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "generate_series"
  ERROR
    L_PAREN "("
  ERROR
    INT_NUMBER "1"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "2"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "aggfns"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "a"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "b"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "c"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      NAME_REF
        IDENT "b"
      COMMA ","
      NAME_REF
        IDENT "i"
      COMMA ","
      NAME_REF
        IDENT "c"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  ERROR
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  SELECT
    VALUES_KW "values"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      STRING "'foo'"
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "v"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    IDENT "c"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "generate_series"
  ERROR
    L_PAREN "("
  ERROR
    INT_NUMBER "1"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "2"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "aggfns"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "a"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "a"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "c"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      NAME_REF
        IDENT "b"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  ERROR
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  SELECT
    VALUES_KW "values"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      STRING "'foo'"
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "v"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    IDENT "c"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    IDENT "generate_series"
  ERROR
    L_PAREN "("
  ERROR
    INT_NUMBER "1"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "2"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- string_agg tests"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "string_agg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              COMMA ","
              LITERAL
                STRING "','"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          L_PAREN "("
          LITERAL
            STRING "'aaaa'"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            STRING "'bbbb'"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            STRING "'cccc'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "g"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "string_agg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              COMMA ","
              LITERAL
                STRING "','"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          L_PAREN "("
          LITERAL
            STRING "'aaaa'"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            NULL_KW "null"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            STRING "'bbbb'"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            STRING "'cccc'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "g"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "string_agg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              COMMA ","
              LITERAL
                STRING "'AB'"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          L_PAREN "("
          LITERAL
            NULL_KW "null"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            NULL_KW "null"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            STRING "'bbbb'"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            STRING "'cccc'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "g"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "string_agg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "a"
              COMMA ","
              LITERAL
                STRING "','"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          L_PAREN "("
          LITERAL
            NULL_KW "null"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            NULL_KW "null"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "g"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check some implicit casting cases, as per bug #5564"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "string_agg"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "f1"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            STRING "','"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    IDENT "varchar_tbl"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- ok"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "string_agg"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              CAST_EXPR
                NAME_REF
                  IDENT "f1"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        TEXT_KW "text"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            STRING "','"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "f1"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    IDENT "varchar_tbl"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- not ok"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "string_agg"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "f1"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            STRING "','"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      CAST_EXPR
        NAME_REF
          IDENT "f1"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    IDENT "varchar_tbl"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- not ok"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "string_agg"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              CAST_EXPR
                NAME_REF
                  IDENT "f1"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        TEXT_KW "text"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            STRING "','"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      CAST_EXPR
        NAME_REF
          IDENT "f1"
        COLON2 "::"
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    IDENT "varchar_tbl"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- ok"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- string_agg, min, max bytea tests"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "bytea_test_table"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "v"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "bytea"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "string_agg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "v"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "''"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "bytea_test_table"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bytea_test_table"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      CALL_EXPR
        NAME_REF
          IDENT "decode"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'ff'"
          COMMA ","
          LITERAL
            STRING "'hex'"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "string_agg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "v"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "''"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "bytea_test_table"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bytea_test_table"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      CALL_EXPR
        NAME_REF
          IDENT "decode"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'aa'"
          COMMA ","
          LITERAL
            STRING "'hex'"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "string_agg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "v"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "''"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "bytea_test_table"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "string_agg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "v"
              COMMA ","
              WHITESPACE " "
              LITERAL
                NULL_KW "NULL"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "bytea_test_table"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "string_agg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "v"
              COMMA ","
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "decode"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    STRING "'ee'"
                  COMMA ","
                  WHITESPACE " "
                  LITERAL
                    STRING "'hex'"
                  R_PAREN ")"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "bytea_test_table"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "v"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "bytea_test_table"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "v"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "bytea_test_table"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bytea_test_table"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      CALL_EXPR
        NAME_REF
          IDENT "decode"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'ffff'"
          COMMA ","
          LITERAL
            STRING "'hex'"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bytea_test_table"
    WHITESPACE " "
    SELECT
      VALUES_KW "values"
      L_PAREN "("
      CALL_EXPR
        NAME_REF
          IDENT "decode"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'aaaa'"
          COMMA ","
          LITERAL
            STRING "'hex'"
          R_PAREN ")"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "v"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "bytea_test_table"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "v"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "bytea_test_table"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "bytea_test_table"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test parallel string_agg and array_agg"
    WHITESPACE "\n"
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "pagg_test"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "with"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "autovacuum_enabled"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              OFF_KW "off"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "insert"
    WHITESPACE " "
    INTO_KW "into"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pagg_test"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            PAREN_EXPR
              L_PAREN "("
              CASE_EXPR
                CASE_KW "case"
                WHITESPACE " "
                BIN_EXPR
                  NAME_REF
                    IDENT "x"
                  WHITESPACE " "
                  PERCENT "%"
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "4"
                WHITESPACE " "
                WHEN_CLAUSE
                  WHEN_KW "when"
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "1"
                  WHITESPACE " "
                  THEN_KW "then"
                  WHITESPACE " "
                  LITERAL
                    NULL_KW "null"
                WHITESPACE " "
                ELSE_KW "else"
                WHITESPACE " "
                NAME_REF
                  IDENT "x"
                WHITESPACE " "
                END_KW "end"
              R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "x"
              WHITESPACE " "
              PERCENT "%"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "10"
      WHITESPACE "\n"
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "5000"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "parallel_setup_cost"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "parallel_tuple_cost"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "parallel_leader_participation"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "min_parallel_table_scan_size"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "bytea_output"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'escape'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "max_parallel_workers_per_gather"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- create a view as we otherwise have to repeat this query a few times."
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "v_pagg_test"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE "\n\t"
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "y"
          COMMA ","
          WHITESPACE "\n\t"
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "min"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "t"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "tmin"
          COMMA ","
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "max"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "t"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "tmax"
          COMMA ","
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "count"
              ARG_LIST
                L_PAREN "("
                DISTINCT_KW "distinct"
                WHITESPACE " "
                NAME_REF
                  IDENT "t"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "tndistinct"
          COMMA ","
          WHITESPACE "\n\t"
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "min"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "b"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "bmin"
          COMMA ","
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "max"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "b"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "bmax"
          COMMA ","
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "count"
              ARG_LIST
                L_PAREN "("
                DISTINCT_KW "distinct"
                WHITESPACE " "
                NAME_REF
                  IDENT "b"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "bndistinct"
          COMMA ","
          WHITESPACE "\n\t"
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "min"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "a"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "amin"
          COMMA ","
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "max"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "a"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "amax"
          COMMA ","
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "count"
              ARG_LIST
                L_PAREN "("
                DISTINCT_KW "distinct"
                WHITESPACE " "
                NAME_REF
                  IDENT "a"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "andistinct"
          COMMA ","
          WHITESPACE "\n\t"
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "min"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "aa"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "aamin"
          COMMA ","
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "max"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "aa"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "aamax"
          COMMA ","
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "count"
              ARG_LIST
                L_PAREN "("
                DISTINCT_KW "distinct"
                WHITESPACE " "
                NAME_REF
                  IDENT "aa"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "aandistinct"
      WHITESPACE "\n"
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          WHITESPACE "\n\t"
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE "\n\t\t"
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "y"
                COMMA ","
                WHITESPACE "\n\t\t"
                TARGET
                  CAST_EXPR
                    CALL_EXPR
                      NAME_REF
                        IDENT "unnest"
                      ARG_LIST
                        L_PAREN "("
                        CALL_EXPR
                          NAME_REF
                            IDENT "regexp_split_to_array"
                          ARG_LIST
                            L_PAREN "("
                            FIELD_EXPR
                              NAME_REF
                                IDENT "a1"
                              DOT "."
                              NAME_REF
                                IDENT "t"
                            COMMA ","
                            WHITESPACE " "
                            LITERAL
                              STRING "','"
                            R_PAREN ")"
                        R_PAREN ")"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            INT_KW "int"
                  WHITESPACE " "
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "t"
                COMMA ","
                WHITESPACE "\n\t\t"
                TARGET
                  CALL_EXPR
                    NAME_REF
                      IDENT "unnest"
                    ARG_LIST
                      L_PAREN "("
                      CALL_EXPR
                        NAME_REF
                          IDENT "regexp_split_to_array"
                        ARG_LIST
                          L_PAREN "("
                          CAST_EXPR
                            FIELD_EXPR
                              NAME_REF
                                IDENT "a1"
                              DOT "."
                              NAME_REF
                                IDENT "b"
                            COLON2 "::"
                            PATH_TYPE
                              PATH
                                PATH_SEGMENT
                                  NAME_REF
                                    TEXT_KW "text"
                          COMMA ","
                          WHITESPACE " "
                          LITERAL
                            STRING "','"
                          R_PAREN ")"
                      R_PAREN ")"
                  WHITESPACE " "
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "b"
                COMMA ","
                WHITESPACE "\n\t\t"
                TARGET
                  CALL_EXPR
                    NAME_REF
                      IDENT "unnest"
                    ARG_LIST
                      L_PAREN "("
                      FIELD_EXPR
                        NAME_REF
                          IDENT "a1"
                        DOT "."
                        NAME_REF
                          IDENT "a"
                      R_PAREN ")"
                  WHITESPACE " "
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "a"
                COMMA ","
                WHITESPACE "\n\t\t"
                TARGET
                  CALL_EXPR
                    NAME_REF
                      IDENT "unnest"
                    ARG_LIST
                      L_PAREN "("
                      FIELD_EXPR
                        NAME_REF
                          IDENT "a1"
                        DOT "."
                        NAME_REF
                          IDENT "aa"
                      R_PAREN ")"
                  WHITESPACE " "
                  AS_KW "AS"
                  WHITESPACE " "
                  NAME
                    IDENT "aa"
            WHITESPACE "\n\t"
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              PAREN_EXPR
                L_PAREN "("
                WHITESPACE "\n\t\t"
                SELECT
                  SELECT_CLAUSE
                    SELECT_KW "select"
                    WHITESPACE "\n\t\t\t"
                    TARGET_LIST
                      TARGET
                        NAME_REF
                          IDENT "y"
                      COMMA ","
                      WHITESPACE "\n\t\t\t"
                      TARGET
                        CALL_EXPR
                          NAME_REF
                            IDENT "string_agg"
                          ARG_LIST
                            L_PAREN "("
                            CAST_EXPR
                              NAME_REF
                                IDENT "x"
                              COLON2 "::"
                              PATH_TYPE
                                PATH
                                  PATH_SEGMENT
                                    NAME_REF
                                      TEXT_KW "text"
                            COMMA ","
                            WHITESPACE " "
                            LITERAL
                              STRING "','"
                            R_PAREN ")"
                        WHITESPACE " "
                        AS_KW "AS"
                        WHITESPACE " "
                        NAME
                          IDENT "t"
                      COMMA ","
                      WHITESPACE "\n\t\t\t"
                      TARGET
                        CALL_EXPR
                          NAME_REF
                            IDENT "string_agg"
                          ARG_LIST
                            L_PAREN "("
                            CAST_EXPR
                              CAST_EXPR
                                NAME_REF
                                  IDENT "x"
                                COLON2 "::"
                                PATH_TYPE
                                  PATH
                                    PATH_SEGMENT
                                      NAME_REF
                                        TEXT_KW "text"
                              COLON2 "::"
                              PATH_TYPE
                                PATH
                                  PATH_SEGMENT
                                    NAME_REF
                                      IDENT "bytea"
                            COMMA ","
                            WHITESPACE " "
                            LITERAL
                              STRING "','"
                            R_PAREN ")"
                        WHITESPACE " "
                        AS_KW "AS"
                        WHITESPACE " "
                        NAME
                          IDENT "b"
                      COMMA ","
                      WHITESPACE "\n\t\t\t"
                      TARGET
                        CALL_EXPR
                          NAME_REF
                            IDENT "array_agg"
                          ARG_LIST
                            L_PAREN "("
                            NAME_REF
                              IDENT "x"
                            R_PAREN ")"
                        WHITESPACE " "
                        AS_KW "AS"
                        WHITESPACE " "
                        NAME
                          IDENT "a"
                      COMMA ","
                      WHITESPACE "\n\t\t\t"
                      TARGET
                        CALL_EXPR
                          NAME_REF
                            IDENT "array_agg"
                          ARG_LIST
                            L_PAREN "("
                            ARRAY_EXPR
                              ARRAY_KW "ARRAY"
                              L_BRACK "["
                              NAME_REF
                                IDENT "x"
                              R_BRACK "]"
                            R_PAREN ")"
                        WHITESPACE " "
                        AS_KW "AS"
                        WHITESPACE " "
                        NAME
                          IDENT "aa"
                  WHITESPACE "\n\t\t"
                  FROM_CLAUSE
                    FROM_KW "from"
                    WHITESPACE " "
                    NAME_REF
                      IDENT "pagg_test"
                  WHITESPACE "\n\t\t"
                  GROUP_BY_CLAUSE
                    GROUP_KW "group"
                    WHITESPACE " "
                    BY_KW "by"
                    WHITESPACE " "
                    NAME_REF
                      IDENT "y"
                WHITESPACE "\n\t"
                R_PAREN ")"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "a1"
          WHITESPACE "\n"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "a2"
      WHITESPACE "\n"
      GROUP_BY_CLAUSE
        GROUP_KW "group"
        WHITESPACE " "
        BY_KW "by"
        WHITESPACE " "
        NAME_REF
          IDENT "y"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure results are correct."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "v_pagg_test"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "y"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure parallel aggregation is actually being used."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "v_pagg_test"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "y"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure results are the same without parallel aggregation."
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "max_parallel_workers_per_gather"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "v_pagg_test"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "y"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check that we don't fail on anonymous record types."
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "max_parallel_workers_per_gather"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_dims"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  IDENT "array_agg"
                ARG_LIST
                  L_PAREN "("
                  NAME_REF
                    IDENT "s"
                  R_PAREN ")"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "pagg_test"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_dims"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  IDENT "array_agg"
                ARG_LIST
                  L_PAREN "("
                  NAME_REF
                    IDENT "s"
                  R_PAREN ")"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "pagg_test"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "s"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Clean up"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "max_parallel_workers_per_gather"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "bytea_output"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "min_parallel_table_scan_size"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "parallel_leader_participation"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "parallel_tuple_cost"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "parallel_setup_cost"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_VIEW_STMT
    DROP_KW "drop"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "v_pagg_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "pagg_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- FILTER tests"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique1"
              R_PAREN ")"
            WHITESPACE " "
            FILTER_CLAUSE
              FILTER_KW "filter"
              WHITESPACE " "
              L_PAREN "("
              WHERE_KW "where"
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "unique1"
                WHITESPACE " "
                R_ANGLE ">"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "100"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              BIN_EXPR
                LITERAL
                  INT_NUMBER "1"
                SLASH "/"
                NAME_REF
                  IDENT "ten"
              R_PAREN ")"
            WHITESPACE " "
            FILTER_CLAUSE
              FILTER_KW "filter"
              WHITESPACE " "
              L_PAREN "("
              WHERE_KW "where"
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "ten"
                WHITESPACE " "
                R_ANGLE ">"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "0"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "ten"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "four"
              R_PAREN ")"
            WHITESPACE " "
            FILTER_CLAUSE
              FILTER_KW "filter"
              WHITESPACE " "
              L_PAREN "("
              WHERE_KW "where"
              WHITESPACE " "
              BIN_EXPR
                CAST_EXPR
                  NAME_REF
                    IDENT "four"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          TEXT_KW "text"
                WHITESPACE " "
                CUSTOM_OP
                  TILDE "~"
                WHITESPACE " "
                LITERAL
                  STRING "'123'"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "a"
    WHITESPACE "\n"
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "ten"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "ten"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "four"
              R_PAREN ")"
            WHITESPACE " "
            FILTER_CLAUSE
              FILTER_KW "filter"
              WHITESPACE " "
              L_PAREN "("
              WHERE_KW "where"
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "four"
                WHITESPACE " "
                R_ANGLE ">"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "10"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "onek"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "a"
    WHITESPACE "\n"
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "ten"
    WHITESPACE "\n"
    HAVING_CLAUSE
      HAVING_KW "having"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          EXISTS_KW "exists"
        WHITESPACE " "
        ARG_LIST
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  LITERAL
                    INT_NUMBER "1"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "onek"
              WHITESPACE " "
              ALIAS
                NAME
                  IDENT "b"
            WHITESPACE " "
            WHERE_CLAUSE
              WHERE_KW "where"
              WHITESPACE " "
              BIN_EXPR
                CALL_EXPR
                  NAME_REF
                    IDENT "sum"
                  ARG_LIST
                    L_PAREN "("
                    DISTINCT_KW "distinct"
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "a"
                      DOT "."
                      NAME_REF
                        IDENT "four"
                    R_PAREN ")"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "b"
                  DOT "."
                  NAME_REF
                    IDENT "four"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              BIN_EXPR
                NAME_REF
                  IDENT "foo"
                WHITESPACE " "
                COLLATE_KW "COLLATE"
                WHITESPACE " "
                NAME_REF
                  IDENT "\"C\""
              R_PAREN ")"
            WHITESPACE " "
            FILTER_CLAUSE
              FILTER_KW "filter"
              WHITESPACE " "
              L_PAREN "("
              WHERE_KW "where"
              WHITESPACE " "
              BIN_EXPR
                PAREN_EXPR
                  L_PAREN "("
                  BIN_EXPR
                    NAME_REF
                      IDENT "bar"
                    WHITESPACE " "
                    COLLATE_KW "collate"
                    WHITESPACE " "
                    NAME_REF
                      IDENT "\"POSIX\""
                  R_PAREN ")"
                WHITESPACE " "
                R_ANGLE ">"
                WHITESPACE " "
                LITERAL
                  STRING "'0'"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'a'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'b'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "foo"
          COMMA ","
          COLUMN
            NAME
              IDENT "bar"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "any_value"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "v"
              R_PAREN ")"
            WHITESPACE " "
            FILTER_CLAUSE
              FILTER_KW "filter"
              WHITESPACE " "
              L_PAREN "("
              WHERE_KW "where"
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "v"
                WHITESPACE " "
                R_ANGLE ">"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "2"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "v"
        WHITESPACE " "
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "v"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- outer reference in FILTER (PostgreSQL extension)"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "select"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    CALL_EXPR
                      NAME_REF
                        IDENT "count"
                      ARG_LIST
                        L_PAREN "("
                        STAR "*"
                        R_PAREN ")"
              WHITESPACE "\n        "
              FROM_CLAUSE
                FROM_KW "from"
                WHITESPACE " "
                PAREN_EXPR
                  L_PAREN "("
                  SELECT
                    VALUES_KW "values"
                    WHITESPACE " "
                    L_PAREN "("
                    LITERAL
                      INT_NUMBER "1"
                    R_PAREN ")"
                  R_PAREN ")"
                WHITESPACE " "
                ALIAS
                  NAME
                    IDENT "t0"
                  COLUMN_LIST
                    L_PAREN "("
                    COLUMN
                      NAME
                        IDENT "inner_c"
                    R_PAREN ")"
            R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t1"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "outer_c"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- inner query is aggregation query"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "select"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    CALL_EXPR
                      NAME_REF
                        IDENT "count"
                      ARG_LIST
                        L_PAREN "("
                        STAR "*"
                        R_PAREN ")"
                      WHITESPACE " "
                      FILTER_CLAUSE
                        FILTER_KW "filter"
                        WHITESPACE " "
                        L_PAREN "("
                        WHERE_KW "where"
                        WHITESPACE " "
                        BIN_EXPR
                          NAME_REF
                            IDENT "outer_c"
                          WHITESPACE " "
                          NEQB "<>"
                          WHITESPACE " "
                          LITERAL
                            INT_NUMBER "0"
                        R_PAREN ")"
              WHITESPACE "\n        "
              FROM_CLAUSE
                FROM_KW "from"
                WHITESPACE " "
                PAREN_EXPR
                  L_PAREN "("
                  SELECT
                    VALUES_KW "values"
                    WHITESPACE " "
                    L_PAREN "("
                    LITERAL
                      INT_NUMBER "1"
                    R_PAREN ")"
                  R_PAREN ")"
                WHITESPACE " "
                ALIAS
                  NAME
                    IDENT "t0"
                  COLUMN_LIST
                    L_PAREN "("
                    COLUMN
                      NAME
                        IDENT "inner_c"
                    R_PAREN ")"
            R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t1"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "outer_c"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- outer query is aggregation query"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "select"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    CALL_EXPR
                      NAME_REF
                        IDENT "count"
                      ARG_LIST
                        L_PAREN "("
                        NAME_REF
                          IDENT "inner_c"
                        R_PAREN ")"
                      WHITESPACE " "
                      FILTER_CLAUSE
                        FILTER_KW "filter"
                        WHITESPACE " "
                        L_PAREN "("
                        WHERE_KW "where"
                        WHITESPACE " "
                        BIN_EXPR
                          NAME_REF
                            IDENT "outer_c"
                          WHITESPACE " "
                          NEQB "<>"
                          WHITESPACE " "
                          LITERAL
                            INT_NUMBER "0"
                        R_PAREN ")"
              WHITESPACE "\n        "
              FROM_CLAUSE
                FROM_KW "from"
                WHITESPACE " "
                PAREN_EXPR
                  L_PAREN "("
                  SELECT
                    VALUES_KW "values"
                    WHITESPACE " "
                    L_PAREN "("
                    LITERAL
                      INT_NUMBER "1"
                    R_PAREN ")"
                  R_PAREN ")"
                WHITESPACE " "
                ALIAS
                  NAME
                    IDENT "t0"
                  COLUMN_LIST
                    L_PAREN "("
                    COLUMN
                      NAME
                        IDENT "inner_c"
                    R_PAREN ")"
            R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t1"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "outer_c"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- inner query is aggregation query"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE "\n  "
      TARGET_LIST
        TARGET
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "select"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    CALL_EXPR
                      NAME_REF
                        IDENT "max"
                      ARG_LIST
                        L_PAREN "("
                        PAREN_EXPR
                          L_PAREN "("
                          SELECT
                            SELECT_CLAUSE
                              SELECT_KW "select"
                              WHITESPACE " "
                              TARGET_LIST
                                TARGET
                                  FIELD_EXPR
                                    NAME_REF
                                      IDENT "i"
                                    DOT "."
                                    NAME_REF
                                      IDENT "unique2"
                            WHITESPACE " "
                            FROM_CLAUSE
                              FROM_KW "from"
                              WHITESPACE " "
                              NAME_REF
                                IDENT "tenk1"
                              WHITESPACE " "
                              ALIAS
                                NAME
                                  IDENT "i"
                            WHITESPACE " "
                            WHERE_CLAUSE
                              WHERE_KW "where"
                              WHITESPACE " "
                              BIN_EXPR
                                FIELD_EXPR
                                  NAME_REF
                                    IDENT "i"
                                  DOT "."
                                  NAME_REF
                                    IDENT "unique1"
                                WHITESPACE " "
                                EQ "="
                                WHITESPACE " "
                                FIELD_EXPR
                                  NAME_REF
                                    IDENT "o"
                                  DOT "."
                                  NAME_REF
                                    IDENT "unique1"
                          R_PAREN ")"
                        R_PAREN ")"
                      WHITESPACE "\n     "
                      FILTER_CLAUSE
                        FILTER_KW "filter"
                        WHITESPACE " "
                        L_PAREN "("
                        WHERE_KW "where"
                        WHITESPACE " "
                        BIN_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "o"
                            DOT "."
                            NAME_REF
                              IDENT "unique1"
                          WHITESPACE " "
                          L_ANGLE "<"
                          WHITESPACE " "
                          LITERAL
                            INT_NUMBER "10"
                        R_PAREN ")"
            R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "o"
  SEMICOLON ";"
  WHITESPACE "\t\t\t\t\t"
  COMMENT "-- outer query is aggregation query"
  WHITESPACE "\n\n"
  COMMENT "-- subquery in FILTER clause (PostgreSQL extension)"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique1"
              R_PAREN ")"
            WHITESPACE " "
            FILTER_CLAUSE
              FILTER_KW "FILTER"
              WHITESPACE " "
              L_PAREN "("
              WHERE_KW "WHERE"
              WHITESPACE "\n  "
              BIN_EXPR
                NAME_REF
                  IDENT "unique1"
                WHITESPACE " "
                IN_KW "IN"
                WHITESPACE " "
                PAREN_EXPR
                  L_PAREN "("
                  SELECT
                    SELECT_CLAUSE
                      SELECT_KW "SELECT"
                      WHITESPACE " "
                      TARGET_LIST
                        TARGET
                          NAME_REF
                            IDENT "unique1"
                    WHITESPACE " "
                    FROM_CLAUSE
                      FROM_KW "FROM"
                      WHITESPACE " "
                      NAME_REF
                        IDENT "onek"
                    WHITESPACE " "
                    WHERE_CLAUSE
                      WHERE_KW "where"
                      WHITESPACE " "
                      BIN_EXPR
                        NAME_REF
                          IDENT "unique1"
                        WHITESPACE " "
                        L_ANGLE "<"
                        WHITESPACE " "
                        LITERAL
                          INT_NUMBER "100"
                  R_PAREN ")"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- exercise lots of aggregate parts with FILTER"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "aggfns"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "a"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "b"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "c"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "a"
      COMMA ","
      NAME_REF
        IDENT "c"
      WHITESPACE " "
      USING_KW "using"
      WHITESPACE " "
      CUSTOM_OP
        TILDE "~"
        L_ANGLE "<"
        TILDE "~"
      COMMA ","
      NAME_REF
        IDENT "b"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    FILTER_KW "filter"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  ERROR
    WHERE_KW "where"
  WHITESPACE " "
  ERROR
    IDENT "a"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    INT_NUMBER "1"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n    "
  ERROR
    FROM_KW "from"
  WHITESPACE " "
  ERROR
    L_PAREN "("
  SELECT
    VALUES_KW "values"
    WHITESPACE " "
    L_PAREN "("
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      STRING "'foo'"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "0"
    COMMA ","
    LITERAL
      NULL_KW "null"
    COMMA ","
    LITERAL
      NULL_KW "null"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "2"
    COMMA ","
    LITERAL
      INT_NUMBER "2"
    COMMA ","
    LITERAL
      STRING "'bar'"
    R_PAREN ")"
    COMMA ","
    L_PAREN "("
    LITERAL
      INT_NUMBER "3"
    COMMA ","
    LITERAL
      INT_NUMBER "1"
    COMMA ","
    LITERAL
      STRING "'baz'"
    R_PAREN ")"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "v"
  ERROR
    L_PAREN "("
  ERROR
    IDENT "a"
  ERROR
    COMMA ","
  ERROR
    IDENT "b"
  ERROR
    COMMA ","
  ERROR
    IDENT "c"
  ERROR
    R_PAREN ")"
  ERROR
    COMMA ","
  WHITESPACE "\n    "
  ERROR
    IDENT "generate_series"
  ERROR
    L_PAREN "("
  ERROR
    INT_NUMBER "1"
  ERROR
    COMMA ","
  ERROR
    INT_NUMBER "2"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check handling of bare boolean Var in FILTER"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "0"
              R_PAREN ")"
            WHITESPACE " "
            FILTER_CLAUSE
              FILTER_KW "filter"
              WHITESPACE " "
              L_PAREN "("
              WHERE_KW "where"
              WHITESPACE " "
              NAME_REF
                IDENT "b1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "bool_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "select"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    CALL_EXPR
                      NAME_REF
                        IDENT "max"
                      ARG_LIST
                        L_PAREN "("
                        LITERAL
                          INT_NUMBER "0"
                        R_PAREN ")"
                      WHITESPACE " "
                      FILTER_CLAUSE
                        FILTER_KW "filter"
                        WHITESPACE " "
                        L_PAREN "("
                        WHERE_KW "where"
                        WHITESPACE " "
                        NAME_REF
                          IDENT "b1"
                        R_PAREN ")"
            R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "bool_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check for correct detection of nested-aggregate errors in FILTER"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique1"
              R_PAREN ")"
            WHITESPACE " "
            FILTER_CLAUSE
              FILTER_KW "filter"
              WHITESPACE " "
              L_PAREN "("
              WHERE_KW "where"
              WHITESPACE " "
              BIN_EXPR
                CALL_EXPR
                  NAME_REF
                    IDENT "sum"
                  ARG_LIST
                    L_PAREN "("
                    NAME_REF
                      IDENT "ten"
                    R_PAREN ")"
                WHITESPACE " "
                R_ANGLE ">"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "0"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "select"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    CALL_EXPR
                      NAME_REF
                        IDENT "max"
                      ARG_LIST
                        L_PAREN "("
                        NAME_REF
                          IDENT "unique1"
                        R_PAREN ")"
                      WHITESPACE " "
                      FILTER_CLAUSE
                        FILTER_KW "filter"
                        WHITESPACE " "
                        L_PAREN "("
                        WHERE_KW "where"
                        WHITESPACE " "
                        BIN_EXPR
                          CALL_EXPR
                            NAME_REF
                              IDENT "sum"
                            ARG_LIST
                              L_PAREN "("
                              NAME_REF
                                IDENT "ten"
                              R_PAREN ")"
                          WHITESPACE " "
                          R_ANGLE ">"
                          WHITESPACE " "
                          LITERAL
                            INT_NUMBER "0"
                        R_PAREN ")"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "from"
                WHITESPACE " "
                NAME_REF
                  IDENT "int8_tbl"
            R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "unique1"
              R_PAREN ")"
            WHITESPACE " "
            FILTER_CLAUSE
              FILTER_KW "filter"
              WHITESPACE " "
              L_PAREN "("
              WHERE_KW "where"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "bool_or"
                ARG_LIST
                  L_PAREN "("
                  BIN_EXPR
                    NAME_REF
                      IDENT "ten"
                    WHITESPACE " "
                    R_ANGLE ">"
                    WHITESPACE " "
                    LITERAL
                      INT_NUMBER "0"
                  R_PAREN ")"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          PAREN_EXPR
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "select"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    CALL_EXPR
                      NAME_REF
                        IDENT "max"
                      ARG_LIST
                        L_PAREN "("
                        NAME_REF
                          IDENT "unique1"
                        R_PAREN ")"
                      WHITESPACE " "
                      FILTER_CLAUSE
                        FILTER_KW "filter"
                        WHITESPACE " "
                        L_PAREN "("
                        WHERE_KW "where"
                        WHITESPACE " "
                        CALL_EXPR
                          NAME_REF
                            IDENT "bool_or"
                          ARG_LIST
                            L_PAREN "("
                            BIN_EXPR
                              NAME_REF
                                IDENT "ten"
                              WHITESPACE " "
                              R_ANGLE ">"
                              WHITESPACE " "
                              LITERAL
                                INT_NUMBER "0"
                            R_PAREN ")"
                        R_PAREN ")"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "from"
                WHITESPACE " "
                NAME_REF
                  IDENT "int8_tbl"
            R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- ordered-set aggregates"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "p"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "percentile_cont"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "p"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                CAST_EXPR
                  NAME_REF
                    IDENT "x"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "float8"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "5"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
      COMMA ","
      WHITESPACE "\n     "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              INT_NUMBER "0"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "float8"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.25"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.4"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.5"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.6"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.75"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.9"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "p"
          R_PAREN ")"
    WHITESPACE "\n"
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "p"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "p"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "p"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "percentile_cont"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "p"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "p"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "x"
              R_PAREN ")"
    WHITESPACE "  "
    COMMENT "-- error"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "5"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
      COMMA ","
      WHITESPACE "\n     "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              INT_NUMBER "0"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "float8"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.25"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.4"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.5"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.6"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.75"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.9"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "p"
          R_PAREN ")"
    WHITESPACE "\n"
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "p"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "p"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "p"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                CAST_EXPR
                  NAME_REF
                    IDENT "x"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "float8"
              R_PAREN ")"
    WHITESPACE "  "
    COMMENT "-- error"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "5"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
      COMMA ","
      WHITESPACE "\n     "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              INT_NUMBER "0"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "float8"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.25"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.4"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.5"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.6"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.75"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.9"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "p"
          R_PAREN ")"
    WHITESPACE "\n"
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "p"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "p"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "p"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "percentile_cont"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "p"
              COMMA ","
              NAME_REF
                IDENT "p"
              R_PAREN ")"
    WHITESPACE "  "
    COMMENT "-- error"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "5"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
      COMMA ","
      WHITESPACE "\n     "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          CAST_EXPR
            LITERAL
              INT_NUMBER "0"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "float8"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.25"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.4"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.5"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.6"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.75"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            FLOAT_NUMBER "0.9"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "p"
          R_PAREN ")"
    WHITESPACE "\n"
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "p"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "p"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "percentile_cont"
            ARG_LIST
              L_PAREN "("
              LITERAL
                FLOAT_NUMBER "0.5"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "b"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "percentile_cont"
            ARG_LIST
              L_PAREN "("
              LITERAL
                FLOAT_NUMBER "0.5"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "b"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "b"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "aggtest"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "percentile_cont"
            ARG_LIST
              L_PAREN "("
              LITERAL
                FLOAT_NUMBER "0.5"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "thousand"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "percentile_disc"
            ARG_LIST
              L_PAREN "("
              LITERAL
                FLOAT_NUMBER "0.5"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "thousand"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "rank"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "x"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "4"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "cume_dist"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "x"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "4"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "percent_rank"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "x"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "4"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "5"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "dense_rank"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "x"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "4"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "percentile_disc"
            ARG_LIST
              L_PAREN "("
              ARRAY_EXPR
                ARRAY_KW "array"
                L_BRACK "["
                LITERAL
                  INT_NUMBER "0"
                COMMA ","
                LITERAL
                  FLOAT_NUMBER "0.1"
                COMMA ","
                LITERAL
                  FLOAT_NUMBER "0.25"
                COMMA ","
                LITERAL
                  FLOAT_NUMBER "0.5"
                COMMA ","
                LITERAL
                  FLOAT_NUMBER "0.75"
                COMMA ","
                LITERAL
                  FLOAT_NUMBER "0.9"
                COMMA ","
                LITERAL
                  INT_NUMBER "1"
                R_BRACK "]"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "thousand"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "percentile_cont"
            ARG_LIST
              L_PAREN "("
              ARRAY_EXPR
                ARRAY_KW "array"
                L_BRACK "["
                LITERAL
                  INT_NUMBER "0"
                COMMA ","
                LITERAL
                  FLOAT_NUMBER "0.25"
                COMMA ","
                LITERAL
                  FLOAT_NUMBER "0.5"
                COMMA ","
                LITERAL
                  FLOAT_NUMBER "0.75"
                COMMA ","
                LITERAL
                  INT_NUMBER "1"
                R_BRACK "]"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "thousand"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "percentile_disc"
            ARG_LIST
              L_PAREN "("
              ARRAY_EXPR
                ARRAY_KW "array"
                L_BRACK "["
                ARRAY_EXPR
                  L_BRACK "["
                  LITERAL
                    NULL_KW "null"
                  COMMA ","
                  LITERAL
                    INT_NUMBER "1"
                  COMMA ","
                  LITERAL
                    FLOAT_NUMBER "0.5"
                  R_BRACK "]"
                COMMA ","
                ARRAY_EXPR
                  L_BRACK "["
                  LITERAL
                    FLOAT_NUMBER "0.75"
                  COMMA ","
                  LITERAL
                    FLOAT_NUMBER "0.25"
                  COMMA ","
                  LITERAL
                    NULL_KW "null"
                  R_BRACK "]"
                R_BRACK "]"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "thousand"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "percentile_cont"
            ARG_LIST
              L_PAREN "("
              ARRAY_EXPR
                ARRAY_KW "array"
                L_BRACK "["
                LITERAL
                  INT_NUMBER "0"
                COMMA ","
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                LITERAL
                  FLOAT_NUMBER "0.25"
                COMMA ","
                LITERAL
                  FLOAT_NUMBER "0.75"
                COMMA ","
                LITERAL
                  FLOAT_NUMBER "0.5"
                COMMA ","
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                LITERAL
                  FLOAT_NUMBER "0.3"
                COMMA ","
                LITERAL
                  FLOAT_NUMBER "0.32"
                COMMA ","
                LITERAL
                  FLOAT_NUMBER "0.35"
                COMMA ","
                LITERAL
                  FLOAT_NUMBER "0.38"
                COMMA ","
                LITERAL
                  FLOAT_NUMBER "0.4"
                R_BRACK "]"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "x"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "6"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "ten"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              MODE_KW "mode"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "string4"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "ten"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "percentile_disc"
            ARG_LIST
              L_PAREN "("
              ARRAY_EXPR
                ARRAY_KW "array"
                L_BRACK "["
                LITERAL
                  FLOAT_NUMBER "0.25"
                COMMA ","
                LITERAL
                  FLOAT_NUMBER "0.5"
                COMMA ","
                LITERAL
                  FLOAT_NUMBER "0.75"
                R_BRACK "]"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "x"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "unnest"
        ARG_LIST
          L_PAREN "("
          CAST_EXPR
            LITERAL
              STRING "'{fred,jim,fred,jack,jill,fred,jill,jim,jim,sheila,jim,sheila}'"
            COLON2 "::"
            ARRAY_TYPE
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
              L_BRACK "["
              R_BRACK "]"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "u"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check collation propagates up in suitable cases:"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_collation_for"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  IDENT "percentile_disc"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    INT_NUMBER "1"
                  R_PAREN ")"
                WHITESPACE " "
                WITHIN_CLAUSE
                  WITHIN_KW "within"
                  WHITESPACE " "
                  GROUP_KW "group"
                  WHITESPACE " "
                  L_PAREN "("
                  ORDER_BY_CLAUSE
                    ORDER_KW "order"
                    WHITESPACE " "
                    BY_KW "by"
                    WHITESPACE " "
                    BIN_EXPR
                      NAME_REF
                        IDENT "x"
                      WHITESPACE " "
                      COLLATE_KW "collate"
                      WHITESPACE " "
                      NAME_REF
                        IDENT "\"POSIX\""
                  R_PAREN ")"
              R_PAREN ")"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'fred'"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            STRING "'jim'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ordered-set aggs created with CREATE AGGREGATE"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "test_rank"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "x"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "4"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "test_percentile_disc"
            ARG_LIST
              L_PAREN "("
              LITERAL
                FLOAT_NUMBER "0.5"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "thousand"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ordered-set aggs can't use ungrouped vars in direct args:"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "rank"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "x"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "x"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "5"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- outer-level agg can't use a grouped arg of a lower level, either:"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          ARRAY_EXPR
            ARRAY_KW "array"
            L_PAREN "("
            SELECT
              SELECT_CLAUSE
                SELECT_KW "select"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    CALL_EXPR
                      NAME_REF
                        IDENT "percentile_disc"
                      ARG_LIST
                        L_PAREN "("
                        NAME_REF
                          IDENT "a"
                        R_PAREN ")"
                      WHITESPACE " "
                      WITHIN_CLAUSE
                        WITHIN_KW "within"
                        WHITESPACE " "
                        GROUP_KW "group"
                        WHITESPACE " "
                        L_PAREN "("
                        ORDER_BY_CLAUSE
                          ORDER_KW "order"
                          WHITESPACE " "
                          BY_KW "by"
                          WHITESPACE " "
                          NAME_REF
                            IDENT "x"
                        R_PAREN ")"
              WHITESPACE "\n               "
              FROM_CLAUSE
                FROM_KW "from"
                WHITESPACE " "
                PAREN_EXPR
                  L_PAREN "("
                  SELECT
                    VALUES_KW "values"
                    WHITESPACE " "
                    L_PAREN "("
                    LITERAL
                      FLOAT_NUMBER "0.3"
                    R_PAREN ")"
                    COMMA ","
                    L_PAREN "("
                    LITERAL
                      FLOAT_NUMBER "0.7"
                    R_PAREN ")"
                  R_PAREN ")"
                WHITESPACE " "
                ALIAS
                  NAME
                    IDENT "v"
                  COLUMN_LIST
                    L_PAREN "("
                    COLUMN
                      NAME
                        IDENT "a"
                    R_PAREN ")"
              WHITESPACE " "
              GROUP_BY_CLAUSE
                GROUP_KW "group"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "a"
            R_PAREN ")"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "5"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "g"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- agg in the direct args is a grouping violation, too:"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "rank"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  IDENT "sum"
                ARG_LIST
                  L_PAREN "("
                  NAME_REF
                    IDENT "x"
                  R_PAREN ")"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "x"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "5"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- hypothetical-set type unification and argument-count failures:"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "rank"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "x"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'fred'"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            STRING "'jim'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "rank"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "3"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "stringu1"
                COMMA ","
                NAME_REF
                  IDENT "stringu2"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "rank"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'fred'"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "x"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "5"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "rank"
            ARG_LIST
              L_PAREN "("
              BIN_EXPR
                CAST_EXPR
                  LITERAL
                    STRING "'adam'"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          TEXT_KW "text"
                WHITESPACE " "
                COLLATE_KW "collate"
                WHITESPACE " "
                NAME_REF
                  IDENT "\"C\""
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                BIN_EXPR
                  NAME_REF
                    IDENT "x"
                  WHITESPACE " "
                  COLLATE_KW "collate"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "\"POSIX\""
              R_PAREN ")"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'fred'"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            STRING "'jim'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- hypothetical-set type unification successes:"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "rank"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'adam'"
                COLON2 "::"
                CHAR_TYPE
                  VARCHAR_KW "varchar"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "x"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            STRING "'fred'"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            STRING "'jim'"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "rank"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'3'"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "x"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "5"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- divide by zero check"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "percent_rank"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "0"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "x"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "generate_series"
        ARG_LIST
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "0"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- deparse and multiple features:"
  WHITESPACE "\n"
  CREATE_VIEW_STMT
    CREATE_KW "create"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "aggordview1"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "ten"
          COMMA ","
          WHITESPACE "\n       "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "percentile_disc"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  FLOAT_NUMBER "0.5"
                R_PAREN ")"
              WHITESPACE " "
              WITHIN_CLAUSE
                WITHIN_KW "within"
                WHITESPACE " "
                GROUP_KW "group"
                WHITESPACE " "
                L_PAREN "("
                ORDER_BY_CLAUSE
                  ORDER_KW "order"
                  WHITESPACE " "
                  BY_KW "by"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "thousand"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "p50"
          COMMA ","
          WHITESPACE "\n       "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "percentile_disc"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  FLOAT_NUMBER "0.5"
                R_PAREN ")"
              WHITESPACE " "
              WITHIN_CLAUSE
                WITHIN_KW "within"
                WHITESPACE " "
                GROUP_KW "group"
                WHITESPACE " "
                L_PAREN "("
                ORDER_BY_CLAUSE
                  ORDER_KW "order"
                  WHITESPACE " "
                  BY_KW "by"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "thousand"
                R_PAREN ")"
              WHITESPACE " "
              FILTER_CLAUSE
                FILTER_KW "filter"
                WHITESPACE " "
                L_PAREN "("
                WHERE_KW "where"
                WHITESPACE " "
                BIN_EXPR
                  NAME_REF
                    IDENT "hundred"
                  EQ "="
                  LITERAL
                    INT_NUMBER "1"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "px"
          COMMA ","
          WHITESPACE "\n       "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "rank"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "5"
                COMMA ","
                LITERAL
                  STRING "'AZZZZ'"
                COMMA ","
                LITERAL
                  INT_NUMBER "50"
                R_PAREN ")"
              WHITESPACE " "
              WITHIN_CLAUSE
                WITHIN_KW "within"
                WHITESPACE " "
                GROUP_KW "group"
                WHITESPACE " "
                L_PAREN "("
                ORDER_BY_CLAUSE
                  ORDER_KW "order"
                  WHITESPACE " "
                  BY_KW "by"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "hundred"
                  COMMA ","
                  WHITESPACE " "
                  NAME_REF
                    IDENT "string4"
                  WHITESPACE " "
                  DESC_KW "desc"
                  COMMA ","
                  WHITESPACE " "
                  NAME_REF
                    IDENT "hundred"
                R_PAREN ")"
      WHITESPACE "\n  "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "tenk1"
      WHITESPACE "\n "
      GROUP_BY_CLAUSE
        GROUP_KW "group"
        WHITESPACE " "
        BY_KW "by"
        WHITESPACE " "
        NAME_REF
          IDENT "ten"
      WHITESPACE " "
      ORDER_BY_CLAUSE
        ORDER_KW "order"
        WHITESPACE " "
        BY_KW "by"
        WHITESPACE " "
        NAME_REF
          IDENT "ten"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_get_viewdef"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'aggordview1'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "aggordview1"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "ten"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_VIEW_STMT
    DROP_KW "drop"
    WHITESPACE " "
    VIEW_KW "view"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "aggordview1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- variadic aggregates"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "least_agg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "q1"
              COMMA ","
              NAME_REF
                IDENT "q2"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "int8_tbl"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "least_agg"
            ARG_LIST
              L_PAREN "("
              VARIADIC_KW "variadic"
              WHITESPACE " "
              ARRAY_EXPR
                ARRAY_KW "array"
                L_BRACK "["
                NAME_REF
                  IDENT "q1"
                COMMA ","
                NAME_REF
                  IDENT "q2"
                R_BRACK "]"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "int8_tbl"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "cleast_agg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "q1"
              COMMA ","
              NAME_REF
                IDENT "q2"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "int8_tbl"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "cleast_agg"
            ARG_LIST
              L_PAREN "("
              LITERAL
                FLOAT_NUMBER "4.5"
              COMMA ","
              NAME_REF
                IDENT "f1"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "int4_tbl"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "cleast_agg"
            ARG_LIST
              L_PAREN "("
              VARIADIC_KW "variadic"
              WHITESPACE " "
              ARRAY_EXPR
                ARRAY_KW "array"
                L_BRACK "["
                LITERAL
                  FLOAT_NUMBER "4.5"
                COMMA ","
                NAME_REF
                  IDENT "f1"
                R_BRACK "]"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "int4_tbl"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_typeof"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  IDENT "cleast_agg"
                ARG_LIST
                  L_PAREN "("
                  VARIADIC_KW "variadic"
                  WHITESPACE " "
                  ARRAY_EXPR
                    ARRAY_KW "array"
                    L_BRACK "["
                    LITERAL
                      FLOAT_NUMBER "4.5"
                    COMMA ","
                    NAME_REF
                      IDENT "f1"
                    R_BRACK "]"
                  R_PAREN ")"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "int4_tbl"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test aggregates with common transition functions share the same states"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
    WHITESPACE " "
    WORK_KW "work"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TYPE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TYPE_KW "type"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "avg_state"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    L_PAREN "("
    NAME_REF
      IDENT "total"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BIGINT_KW "bigint"
    COMMA ","
    WHITESPACE " "
    NAME_REF
      IDENT "count"
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            BIGINT_KW "bigint"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "avg_transfn"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "state"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "avg_state"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "n"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "avg_state"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$\ndeclare new_state avg_state;\nbegin\n\traise notice 'avg_transfn called with %', n;\n\tif state is null then\n\t\tif n is not null then\n\t\t\tnew_state.total := n;\n\t\t\tnew_state.count := 1;\n\t\t\treturn new_state;\n\t\tend if;\n\t\treturn null;\n\telsif n is not null then\n\t\tstate.total := state.total + n;\n\t\tstate.count := state.count + 1;\n\t\treturn state;\n\tend if;\n\n\treturn null;\nend\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "avg_finalfn"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "state"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "avg_state"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "int4"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nbegin\n\tif state is null then\n\t\treturn NULL;\n\telse\n\t\treturn state.total / state.count;\n\tend if;\nend\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "sum_finalfn"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "state"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "avg_state"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "int4"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nbegin\n\tif state is null then\n\t\treturn NULL;\n\telse\n\t\treturn state.total;\n\tend if;\nend\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_AGGREGATE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    AGGREGATE_KW "aggregate"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "my_avg"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "int4"
      R_PAREN ")"
    WHITESPACE "\n"
    L_PAREN "("
    WHITESPACE "\n   "
    NAME
      IDENT "stype"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "avg_state"
    COMMA ","
    WHITESPACE "\n   "
    NAME
      IDENT "sfunc"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "avg_transfn"
    COMMA ","
    WHITESPACE "\n   "
    NAME
      IDENT "finalfunc"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "avg_finalfn"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_AGGREGATE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    AGGREGATE_KW "aggregate"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "my_sum"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "int4"
      R_PAREN ")"
    WHITESPACE "\n"
    L_PAREN "("
    WHITESPACE "\n   "
    NAME
      IDENT "stype"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "avg_state"
    COMMA ","
    WHITESPACE "\n   "
    NAME
      IDENT "sfunc"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "avg_transfn"
    COMMA ","
    WHITESPACE "\n   "
    NAME
      IDENT "finalfunc"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "sum_finalfn"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- aggregate state should be shared as aggs are the same."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "my_avg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "one"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "my_avg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "one"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "one"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- aggregate state should be shared as transfn is the same for both aggs."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "my_avg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "one"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "my_sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "one"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "one"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- same as previous one, but with DISTINCT, which requires sorting the input."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "my_avg"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "one"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "my_sum"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "one"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "one"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- shouldn't share states due to the distinctness not matching."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "my_avg"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "one"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "my_sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "one"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "one"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- shouldn't share states due to the filter clause not matching."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "my_avg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "one"
              R_PAREN ")"
            WHITESPACE " "
            FILTER_CLAUSE
              FILTER_KW "filter"
              WHITESPACE " "
              L_PAREN "("
              WHERE_KW "where"
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "one"
                WHITESPACE " "
                R_ANGLE ">"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "1"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "my_sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "one"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "one"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- this should not share the state due to different input columns."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "my_avg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "one"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "my_sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "two"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          COMMA ","
          LITERAL
            INT_NUMBER "4"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "one"
          COMMA ","
          COLUMN
            NAME
              IDENT "two"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- exercise cases where OSAs share state"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE "\n  "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "percentile_cont"
            ARG_LIST
              L_PAREN "("
              LITERAL
                FLOAT_NUMBER "0.5"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "a"
              R_PAREN ")"
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "percentile_disc"
            ARG_LIST
              L_PAREN "("
              LITERAL
                FLOAT_NUMBER "0.5"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "a"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          L_PAREN "("
          CAST_EXPR
            LITERAL
              INT_NUMBER "1"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "float8"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "5"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "7"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE "\n  "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "percentile_cont"
            ARG_LIST
              L_PAREN "("
              LITERAL
                FLOAT_NUMBER "0.25"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "a"
              R_PAREN ")"
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "percentile_disc"
            ARG_LIST
              L_PAREN "("
              LITERAL
                FLOAT_NUMBER "0.5"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "a"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          L_PAREN "("
          CAST_EXPR
            LITERAL
              INT_NUMBER "1"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "float8"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "5"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "7"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- these can't share state currently"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE "\n  "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "rank"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "4"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "a"
              R_PAREN ")"
        COMMA ","
        WHITESPACE "\n  "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "dense_rank"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "4"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "within"
              WHITESPACE " "
              GROUP_KW "group"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "order"
                WHITESPACE " "
                BY_KW "by"
                WHITESPACE " "
                NAME_REF
                  IDENT "a"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "5"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "7"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "a"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test that aggs with the same sfunc and initcond share the same agg state"
  WHITESPACE "\n"
  CREATE_AGGREGATE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    AGGREGATE_KW "aggregate"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "my_sum_init"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "int4"
      R_PAREN ")"
    WHITESPACE "\n"
    L_PAREN "("
    WHITESPACE "\n   "
    NAME
      IDENT "stype"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "avg_state"
    COMMA ","
    WHITESPACE "\n   "
    NAME
      IDENT "sfunc"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "avg_transfn"
    COMMA ","
    WHITESPACE "\n   "
    NAME
      IDENT "finalfunc"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "sum_finalfn"
    COMMA ","
    WHITESPACE "\n   "
    NAME
      IDENT "initcond"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'(10,0)'"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_AGGREGATE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    AGGREGATE_KW "aggregate"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "my_avg_init"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "int4"
      R_PAREN ")"
    WHITESPACE "\n"
    L_PAREN "("
    WHITESPACE "\n   "
    NAME
      IDENT "stype"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "avg_state"
    COMMA ","
    WHITESPACE "\n   "
    NAME
      IDENT "sfunc"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "avg_transfn"
    COMMA ","
    WHITESPACE "\n   "
    NAME
      IDENT "finalfunc"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "avg_finalfn"
    COMMA ","
    WHITESPACE "\n   "
    NAME
      IDENT "initcond"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'(10,0)'"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_AGGREGATE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    AGGREGATE_KW "aggregate"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "my_avg_init2"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "int4"
      R_PAREN ")"
    WHITESPACE "\n"
    L_PAREN "("
    WHITESPACE "\n   "
    NAME
      IDENT "stype"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "avg_state"
    COMMA ","
    WHITESPACE "\n   "
    NAME
      IDENT "sfunc"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "avg_transfn"
    COMMA ","
    WHITESPACE "\n   "
    NAME
      IDENT "finalfunc"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "avg_finalfn"
    COMMA ","
    WHITESPACE "\n   "
    NAME
      IDENT "initcond"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'(4,0)'"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- state should be shared if INITCONDs are matching"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "my_sum_init"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "one"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "my_avg_init"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "one"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "one"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Varying INITCONDs should cause the states not to be shared."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "my_sum_init"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "one"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "my_avg_init2"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "one"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "one"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ROLLBACK_STMT
    ROLLBACK_KW "rollback"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test aggregate state sharing to ensure it works if one aggregate has a"
  WHITESPACE "\n"
  COMMENT "-- finalfn and the other one has none."
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "begin"
    WHITESPACE " "
    WORK_KW "work"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    OR_REPLACE
      OR_KW "or"
      WHITESPACE " "
      REPLACE_KW "replace"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "sum_transfn"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "state"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "n"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "int4"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$\ndeclare new_state int4;\nbegin\n\traise notice 'sum_transfn called with %', n;\n\tif state is null then\n\t\tif n is not null then\n\t\t\tnew_state := n;\n\t\t\treturn new_state;\n\t\tend if;\n\t\treturn null;\n\telsif n is not null then\n\t\tstate := state + n;\n\t\treturn state;\n\tend if;\n\n\treturn null;\nend\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "create"
    WHITESPACE " "
    FUNCTION_KW "function"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "halfsum_finalfn"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "state"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "int4"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "returns"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "int4"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "as"
        WHITESPACE "\n"
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nbegin\n\tif state is null then\n\t\treturn NULL;\n\telse\n\t\treturn state / 2;\n\tend if;\nend\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "language"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_AGGREGATE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    AGGREGATE_KW "aggregate"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "my_sum"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "int4"
      R_PAREN ")"
    WHITESPACE "\n"
    L_PAREN "("
    WHITESPACE "\n   "
    NAME
      IDENT "stype"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    COMMA ","
    WHITESPACE "\n   "
    NAME
      IDENT "sfunc"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "sum_transfn"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_AGGREGATE_STMT
    CREATE_KW "create"
    WHITESPACE " "
    AGGREGATE_KW "aggregate"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "my_half_sum"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "int4"
      R_PAREN ")"
    WHITESPACE "\n"
    L_PAREN "("
    WHITESPACE "\n   "
    NAME
      IDENT "stype"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4"
    COMMA ","
    WHITESPACE "\n   "
    NAME
      IDENT "sfunc"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "sum_transfn"
    COMMA ","
    WHITESPACE "\n   "
    NAME
      IDENT "finalfunc"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "halfsum_finalfn"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Agg state should be shared even though my_sum has no finalfn"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "my_sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "one"
              R_PAREN ")"
        COMMA ","
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "my_half_sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "one"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "values"
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "4"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "one"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ROLLBACK_STMT
    ROLLBACK_KW "rollback"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- test that the aggregate transition logic correctly handles"
  WHITESPACE "\n"
  COMMENT "-- transition / combine functions returning NULL"
  WHITESPACE "\n\n"
  COMMENT "-- First test the case of a normal transition function returning NULL"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "balkifnull"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "int8"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          IDENT "int4"
      R_PAREN ")"
    WHITESPACE "\n"
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "int8"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      STRICT_FUNC_OPTION
        STRICT_KW "STRICT"
      WHITESPACE "\n"
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nBEGIN\n    IF $1 IS NULL THEN\n       RAISE 'erroneously called with NULL argument';\n    END IF;\n    RETURN NULL;\nEND$$"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_AGGREGATE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    AGGREGATE_KW "AGGREGATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "balk"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "int4"
      R_PAREN ")"
    WHITESPACE "\n"
    L_PAREN "("
    WHITESPACE "\n    "
    NAME
      IDENT "SFUNC"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "balkifnull"
      L_PAREN "("
      ARG_LIST
        ARG
          NAME_REF
            IDENT "int8"
        COMMA ","
        WHITESPACE " "
        ARG
          NAME_REF
            IDENT "int4"
        R_PAREN ")"
    COMMA ","
    WHITESPACE "\n    "
    NAME
      IDENT "STYPE"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int8"
    COMMA ","
    WHITESPACE "\n    "
    NAME
      PARALLEL_KW "PARALLEL"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "SAFE"
    COMMA ","
    WHITESPACE "\n    "
    NAME
      IDENT "INITCOND"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'0'"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "balk"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "hundred"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- GROUP BY optimization by reordering GROUP BY clauses"
  WHITESPACE "\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "btg"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE "\n  "
        TARGET_LIST
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "i"
              WHITESPACE " "
              PERCENT "%"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "10"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "x"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "i"
              WHITESPACE " "
              PERCENT "%"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "10"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "y"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            BIN_EXPR
              LITERAL
                STRING "'abc'"
              WHITESPACE " "
              CUSTOM_OP
                PIPE "|"
                PIPE "|"
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "i"
                WHITESPACE " "
                PERCENT "%"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "10"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "z"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            NAME_REF
              IDENT "i"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "w"
      WHITESPACE "\n"
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "100"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "btg_x_y_idx"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "btg"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "x"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "y"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ANALYZE_STMT
    ANALYZE_KW "ANALYZE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "btg"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_hashagg"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Utilize the ordering of index scan to avoid a Sort operation"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "btg"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "y"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Engage incremental sort"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "btg"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "z"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "y"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "w"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Utilize the ordering of subquery scan to avoid a Sort operation"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          SELECT_CLAUSE
            SELECT_KW "SELECT"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "FROM"
            WHITESPACE " "
            NAME_REF
              IDENT "btg"
          WHITESPACE " "
          ORDER_BY_CLAUSE
            ORDER_KW "ORDER"
            WHITESPACE " "
            BY_KW "BY"
            WHITESPACE " "
            NAME_REF
              IDENT "x"
            COMMA ","
            WHITESPACE " "
            NAME_REF
              IDENT "y"
            COMMA ","
            WHITESPACE " "
            NAME_REF
              IDENT "w"
            COMMA ","
            WHITESPACE " "
            NAME_REF
              IDENT "z"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "q1"
    WHITESPACE "\n"
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "w"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "x"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "z"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "y"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Utilize the ordering of merge join to avoid a Sort operation"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_hashjoin"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_nestloop"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "btg"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t1"
      WHITESPACE " "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "btg"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "t2"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "w"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "t2"
                DOT "."
                NAME_REF
                  IDENT "w"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "x"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "t2"
                DOT "."
                NAME_REF
                  IDENT "x"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "t1"
              DOT "."
              NAME_REF
                IDENT "z"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "t2"
              DOT "."
              NAME_REF
                IDENT "z"
    WHITESPACE "\n  "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "t1"
        DOT "."
        NAME_REF
          IDENT "w"
      COMMA ","
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "t1"
        DOT "."
        NAME_REF
          IDENT "z"
      COMMA ","
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "t1"
        DOT "."
        NAME_REF
          IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_nestloop"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_hashjoin"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Should work with and without GROUP-BY optimization"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "btg"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "w"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "x"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "z"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "y"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "y"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "x"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "z"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "w"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Utilize incremental sort to make the ORDER BY rule a bit cheaper"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "btg"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "w"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "x"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "y"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "z"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "x"
        STAR "*"
        NAME_REF
          IDENT "x"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "z"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test the case where the number of incoming subtree path keys is more than"
  WHITESPACE "\n"
  COMMENT "-- the number of grouping keys."
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "btg_y_x_w_idx"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "btg"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "y"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "x"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "w"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    VERBOSE_KW "VERBOSE"
    COMMA ","
    WHITESPACE " "
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "y"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "x"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_agg"
            ARG_LIST
              L_PAREN "("
              DISTINCT_KW "distinct"
              WHITESPACE " "
              NAME_REF
                IDENT "w"
              R_PAREN ")"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "btg"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "y"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "0"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "x"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "y"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Ensure that we do not select the aggregate pathkeys instead of the grouping"
  WHITESPACE "\n"
  COMMENT "-- pathkeys"
  WHITESPACE "\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "group_agg_pk"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE "\n  "
        TARGET_LIST
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "i"
              WHITESPACE " "
              PERCENT "%"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "10"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "x"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "i"
              WHITESPACE " "
              PERCENT "%"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "y"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "i"
              WHITESPACE " "
              PERCENT "%"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "z"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            LITERAL
              INT_NUMBER "2"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "w"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "i"
              WHITESPACE " "
              PERCENT "%"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "10"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "f"
      WHITESPACE "\n"
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "100"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n"
  ANALYZE_STMT
    ANALYZE_KW "ANALYZE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "group_agg_pk"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_nestloop"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_hashjoin"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "c1"
                DOT "."
                NAME_REF
                  IDENT "f"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "ORDER"
                WHITESPACE " "
                BY_KW "BY"
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "c1"
                  DOT "."
                  NAME_REF
                    IDENT "x"
                COMMA ","
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "c1"
                  DOT "."
                  NAME_REF
                    IDENT "y"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "group_agg_pk"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "c1"
      WHITESPACE " "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "group_agg_pk"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "c2"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "x"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "c2"
            DOT "."
            NAME_REF
              IDENT "x"
    WHITESPACE "\n"
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "c1"
        DOT "."
        NAME_REF
          IDENT "w"
      COMMA ","
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "c1"
        DOT "."
        NAME_REF
          IDENT "z"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "c1"
                DOT "."
                NAME_REF
                  IDENT "f"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "ORDER"
                WHITESPACE " "
                BY_KW "BY"
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "c1"
                  DOT "."
                  NAME_REF
                    IDENT "x"
                COMMA ","
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "c1"
                  DOT "."
                  NAME_REF
                    IDENT "y"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "group_agg_pk"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "c1"
      WHITESPACE " "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "group_agg_pk"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "c2"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "x"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "c2"
            DOT "."
            NAME_REF
              IDENT "x"
    WHITESPACE "\n"
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "c1"
        DOT "."
        NAME_REF
          IDENT "w"
      COMMA ","
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "c1"
        DOT "."
        NAME_REF
          IDENT "z"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Pathkeys, built in a subtree, can be used to optimize GROUP-BY clause"
  WHITESPACE "\n"
  COMMENT "-- ordering.  Also, here we check that it doesn't depend on the initial clause"
  WHITESPACE "\n"
  COMMENT "-- order in the GROUP-BY list."
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "y"
        COMMA ","
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "x"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "group_agg_pk"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "c1"
      WHITESPACE "\n  "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "group_agg_pk"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "c2"
        WHITESPACE "\n  "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "x"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "c2"
            DOT "."
            NAME_REF
              IDENT "x"
    WHITESPACE "\n"
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "c1"
        DOT "."
        NAME_REF
          IDENT "y"
      COMMA ","
      FIELD_EXPR
        NAME_REF
          IDENT "c1"
        DOT "."
        NAME_REF
          IDENT "x"
      COMMA ","
      FIELD_EXPR
        NAME_REF
          IDENT "c2"
        DOT "."
        NAME_REF
          IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "y"
        COMMA ","
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "x"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "group_agg_pk"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "c1"
      WHITESPACE "\n  "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "group_agg_pk"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "c2"
        WHITESPACE "\n  "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "x"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "c2"
            DOT "."
            NAME_REF
              IDENT "x"
    WHITESPACE "\n"
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "c1"
        DOT "."
        NAME_REF
          IDENT "y"
      COMMA ","
      FIELD_EXPR
        NAME_REF
          IDENT "c2"
        DOT "."
        NAME_REF
          IDENT "x"
      COMMA ","
      FIELD_EXPR
        NAME_REF
          IDENT "c1"
        DOT "."
        NAME_REF
          IDENT "x"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_nestloop"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_hashjoin"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "group_agg_pk"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test the case where the ordering of the scan matches the ordering within the"
    WHITESPACE "\n"
    COMMENT "-- aggregate but cannot be found in the group-by list"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "agg_sort_order"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "c1"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "c2"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    UNIQUE_KW "UNIQUE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "agg_sort_order_c2_idx"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "agg_sort_order"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "c2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "agg_sort_order"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "i"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "i"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "100"
            R_PAREN ")"
        ALIAS
          NAME
            IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n"
  ANALYZE_STMT
    ANALYZE_KW "ANALYZE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "agg_sort_order"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "array_agg"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "c1"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "ORDER"
                WHITESPACE " "
                BY_KW "BY"
                WHITESPACE " "
                NAME_REF
                  IDENT "c2"
              R_PAREN ")"
        COMMA ","
        TARGET
          NAME_REF
            IDENT "c2"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "agg_sort_order"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "c2"
        WHITESPACE " "
        L_ANGLE "<"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "100"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      NAME_REF
        IDENT "c1"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "agg_sort_order"
    WHITESPACE " "
    CASCADE_KW "CASCADE"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "btg"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_hashagg"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Secondly test the case of a parallel aggregate combiner function"
  WHITESPACE "\n"
  COMMENT "-- returning NULL. For that use normal transition function, but a"
  WHITESPACE "\n"
  COMMENT "-- combiner function returning NULL."
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "balkifnull"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "int8"
      COMMA ","
      WHITESPACE " "
      PARAM
        PATH_TYPE
          IDENT "int8"
      R_PAREN ")"
    WHITESPACE "\n"
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "int8"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      PARALLEL_FUNC_OPTION
        PARALLEL_KW "PARALLEL"
        WHITESPACE " "
        IDENT "SAFE"
      WHITESPACE "\n"
      STRICT_FUNC_OPTION
        STRICT_KW "STRICT"
      WHITESPACE "\n"
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nBEGIN\n    IF $1 IS NULL THEN\n       RAISE 'erroneously called with NULL argument';\n    END IF;\n    RETURN NULL;\nEND$$"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_AGGREGATE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    AGGREGATE_KW "AGGREGATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "balk"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "int4"
      R_PAREN ")"
    WHITESPACE "\n"
    L_PAREN "("
    WHITESPACE "\n    "
    NAME
      IDENT "SFUNC"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int4_sum"
      L_PAREN "("
      ARG_LIST
        ARG
          NAME_REF
            IDENT "int8"
        COMMA ","
        WHITESPACE " "
        ARG
          NAME_REF
            IDENT "int4"
        R_PAREN ")"
    COMMA ","
    WHITESPACE "\n    "
    NAME
      IDENT "STYPE"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "int8"
    COMMA ","
    WHITESPACE "\n    "
    NAME
      IDENT "COMBINEFUNC"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "balkifnull"
      L_PAREN "("
      ARG_LIST
        ARG
          NAME_REF
            IDENT "int8"
        COMMA ","
        WHITESPACE " "
        ARG
          NAME_REF
            IDENT "int8"
        R_PAREN ")"
    COMMA ","
    WHITESPACE "\n    "
    NAME
      PARALLEL_KW "PARALLEL"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "SAFE"
    COMMA ","
    WHITESPACE "\n    "
    NAME
      IDENT "INITCOND"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'0'"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- force use of parallelism"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "tenk1"
    WHITESPACE " "
    SET_STORAGE_PARAMS
      SET_KW "set"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "parallel_workers"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "parallel_setup_cost"
    EQ "="
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "max_parallel_workers_per_gather"
    EQ "="
    LITERAL
      INT_NUMBER "4"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "balk"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "hundred"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "balk"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "hundred"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test multiple usage of an aggregate whose finalfn returns a R/W datum"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rwagg_sfunc"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anyarray"
      COMMA ","
      WHITESPACE " "
      PARAM
        NAME
          IDENT "y"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anyarray"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "anyarray"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "IMMUTABLE"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nBEGIN\n    RETURN array_fill(y[1], ARRAY[4]);\nEND;\n$$"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rwagg_finalfunc"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "x"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "anyarray"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "anyarray"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      STRICT_FUNC_OPTION
        STRICT_KW "STRICT"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "IMMUTABLE"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nDECLARE\n    res x%TYPE;\nBEGIN\n    -- assignment is essential for this test, it expands the array to R/W\n    res := array_fill(x[1], ARRAY[4]);\n    RETURN res;\nEND;\n$$"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_AGGREGATE_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    AGGREGATE_KW "AGGREGATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "rwagg"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "anyarray"
      R_PAREN ")"
    WHITESPACE " "
    L_PAREN "("
    WHITESPACE "\n    "
    NAME
      IDENT "STYPE"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "anyarray"
    COMMA ","
    WHITESPACE "\n    "
    NAME
      IDENT "SFUNC"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "rwagg_sfunc"
    COMMA ","
    WHITESPACE "\n    "
    NAME
      IDENT "FINALFUNC"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PATH_TYPE
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "rwagg_finalfunc"
    WHITESPACE "\n"
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "eatarray"
    PARAM_LIST
      L_PAREN "("
      PARAM
        NAME
          IDENT "x"
        WHITESPACE " "
        ARRAY_TYPE
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  REAL_KW "real"
          L_BRACK "["
          R_BRACK "]"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      ARRAY_TYPE
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                REAL_KW "real"
        L_BRACK "["
        R_BRACK "]"
    WHITESPACE "\n"
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      STRICT_FUNC_OPTION
        STRICT_KW "STRICT"
      WHITESPACE " "
      VOLATILITY_FUNC_OPTION
        IMMUTABLE_KW "IMMUTABLE"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nBEGIN\n    x[1] := x[1] + 1;\n    RETURN x;\nEND;\n$$"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "eatarray"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  IDENT "rwagg"
                ARG_LIST
                  L_PAREN "("
                  ARRAY_EXPR
                    ARRAY_KW "ARRAY"
                    L_BRACK "["
                    CAST_EXPR
                      LITERAL
                        FLOAT_NUMBER "1.0"
                      COLON2 "::"
                      PATH_TYPE
                        PATH
                          PATH_SEGMENT
                            NAME_REF
                              REAL_KW "real"
                    R_BRACK "]"
                  R_PAREN ")"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "eatarray"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  IDENT "rwagg"
                ARG_LIST
                  L_PAREN "("
                  ARRAY_EXPR
                    ARRAY_KW "ARRAY"
                    L_BRACK "["
                    CAST_EXPR
                      LITERAL
                        FLOAT_NUMBER "1.0"
                      COLON2 "::"
                      PATH_TYPE
                        PATH
                          PATH_SEGMENT
                            NAME_REF
                              REAL_KW "real"
                    R_BRACK "]"
                  R_PAREN ")"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test coverage for aggregate combine/serial/deserial functions"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "parallel_setup_cost"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "parallel_tuple_cost"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "min_parallel_table_scan_size"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "max_parallel_workers_per_gather"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "4"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "parallel_leader_participation"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_indexonlyscan"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- variance(int4) covers numeric_poly_combine"
  WHITESPACE "\n"
  COMMENT "-- sum(int8) covers int8_avg_combine"
  WHITESPACE "\n"
  COMMENT "-- regr_count(float8, float8) covers int8inc_float8_float8 and aggregates with > 1 arg"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    VERBOSE_KW "VERBOSE"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "variance"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "unique1"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "int4"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "unique1"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "int8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "regr_count"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "unique1"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              COMMA ","
              WHITESPACE " "
              CAST_EXPR
                NAME_REF
                  IDENT "unique1"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        COMPOUND_SELECT
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  STAR "*"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "tenk1"
          WHITESPACE "\n      "
          UNION_KW "UNION"
          WHITESPACE " "
          ALL_KW "ALL"
          WHITESPACE " "
          COMPOUND_SELECT
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    STAR "*"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                NAME_REF
                  IDENT "tenk1"
            WHITESPACE "\n      "
            UNION_KW "UNION"
            WHITESPACE " "
            ALL_KW "ALL"
            WHITESPACE " "
            COMPOUND_SELECT
              SELECT
                SELECT_CLAUSE
                  SELECT_KW "SELECT"
                  WHITESPACE " "
                  TARGET_LIST
                    TARGET
                      STAR "*"
                WHITESPACE " "
                FROM_CLAUSE
                  FROM_KW "FROM"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "tenk1"
              WHITESPACE "\n      "
              UNION_KW "UNION"
              WHITESPACE " "
              ALL_KW "ALL"
              WHITESPACE " "
              SELECT
                SELECT_CLAUSE
                  SELECT_KW "SELECT"
                  WHITESPACE " "
                  TARGET_LIST
                    TARGET
                      STAR "*"
                WHITESPACE " "
                FROM_CLAUSE
                  FROM_KW "FROM"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "tenk1"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "u"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "variance"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "unique1"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "int4"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "unique1"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "int8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "regr_count"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "unique1"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              COMMA ","
              WHITESPACE " "
              CAST_EXPR
                NAME_REF
                  IDENT "unique1"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "float8"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        COMPOUND_SELECT
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  STAR "*"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "tenk1"
          WHITESPACE "\n      "
          UNION_KW "UNION"
          WHITESPACE " "
          ALL_KW "ALL"
          WHITESPACE " "
          COMPOUND_SELECT
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    STAR "*"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                NAME_REF
                  IDENT "tenk1"
            WHITESPACE "\n      "
            UNION_KW "UNION"
            WHITESPACE " "
            ALL_KW "ALL"
            WHITESPACE " "
            COMPOUND_SELECT
              SELECT
                SELECT_CLAUSE
                  SELECT_KW "SELECT"
                  WHITESPACE " "
                  TARGET_LIST
                    TARGET
                      STAR "*"
                WHITESPACE " "
                FROM_CLAUSE
                  FROM_KW "FROM"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "tenk1"
              WHITESPACE "\n      "
              UNION_KW "UNION"
              WHITESPACE " "
              ALL_KW "ALL"
              WHITESPACE " "
              SELECT
                SELECT_CLAUSE
                  SELECT_KW "SELECT"
                  WHITESPACE " "
                  TARGET_LIST
                    TARGET
                      STAR "*"
                WHITESPACE " "
                FROM_CLAUSE
                  FROM_KW "FROM"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "tenk1"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "u"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- variance(int8) covers numeric_combine"
  WHITESPACE "\n"
  COMMENT "-- avg(numeric) covers numeric_avg_combine"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    VERBOSE_KW "VERBOSE"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "variance"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "unique1"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "int8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "unique1"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        COMPOUND_SELECT
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  STAR "*"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "tenk1"
          WHITESPACE "\n      "
          UNION_KW "UNION"
          WHITESPACE " "
          ALL_KW "ALL"
          WHITESPACE " "
          COMPOUND_SELECT
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    STAR "*"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                NAME_REF
                  IDENT "tenk1"
            WHITESPACE "\n      "
            UNION_KW "UNION"
            WHITESPACE " "
            ALL_KW "ALL"
            WHITESPACE " "
            COMPOUND_SELECT
              SELECT
                SELECT_CLAUSE
                  SELECT_KW "SELECT"
                  WHITESPACE " "
                  TARGET_LIST
                    TARGET
                      STAR "*"
                WHITESPACE " "
                FROM_CLAUSE
                  FROM_KW "FROM"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "tenk1"
              WHITESPACE "\n      "
              UNION_KW "UNION"
              WHITESPACE " "
              ALL_KW "ALL"
              WHITESPACE " "
              SELECT
                SELECT_CLAUSE
                  SELECT_KW "SELECT"
                  WHITESPACE " "
                  TARGET_LIST
                    TARGET
                      STAR "*"
                WHITESPACE " "
                FROM_CLAUSE
                  FROM_KW "FROM"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "tenk1"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "u"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "variance"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "unique1"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "int8"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "avg"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "unique1"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        COMPOUND_SELECT
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  STAR "*"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "tenk1"
          WHITESPACE "\n      "
          UNION_KW "UNION"
          WHITESPACE " "
          ALL_KW "ALL"
          WHITESPACE " "
          COMPOUND_SELECT
            SELECT
              SELECT_CLAUSE
                SELECT_KW "SELECT"
                WHITESPACE " "
                TARGET_LIST
                  TARGET
                    STAR "*"
              WHITESPACE " "
              FROM_CLAUSE
                FROM_KW "FROM"
                WHITESPACE " "
                NAME_REF
                  IDENT "tenk1"
            WHITESPACE "\n      "
            UNION_KW "UNION"
            WHITESPACE " "
            ALL_KW "ALL"
            WHITESPACE " "
            COMPOUND_SELECT
              SELECT
                SELECT_CLAUSE
                  SELECT_KW "SELECT"
                  WHITESPACE " "
                  TARGET_LIST
                    TARGET
                      STAR "*"
                WHITESPACE " "
                FROM_CLAUSE
                  FROM_KW "FROM"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "tenk1"
              WHITESPACE "\n      "
              UNION_KW "UNION"
              WHITESPACE " "
              ALL_KW "ALL"
              WHITESPACE " "
              SELECT
                SELECT_CLAUSE
                  SELECT_KW "SELECT"
                  WHITESPACE " "
                  TARGET_LIST
                    TARGET
                      STAR "*"
                WHITESPACE " "
                FROM_CLAUSE
                  FROM_KW "FROM"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "tenk1"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "u"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test coverage for dense_rank"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "dense_rank"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "x"
              R_PAREN ")"
            WHITESPACE " "
            WITHIN_CLAUSE
              WITHIN_KW "WITHIN"
              WHITESPACE " "
              GROUP_KW "GROUP"
              WHITESPACE " "
              L_PAREN "("
              ORDER_BY_CLAUSE
                ORDER_KW "ORDER"
                WHITESPACE " "
                BY_KW "BY"
                WHITESPACE " "
                NAME_REF
                  IDENT "x"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          WHITESPACE " "
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
          COMMA ","
          L_PAREN "("
          LITERAL
            INT_NUMBER "3"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "v"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          R_PAREN ")"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "GROUP"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        NAME_REF
          IDENT "x"
        R_PAREN ")"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- Ensure that the STRICT checks for aggregates does not take NULLness"
  WHITESPACE "\n"
  COMMENT "-- of ORDER BY columns into account. See bug report around"
  WHITESPACE "\n"
  COMMENT "-- 2a505161-2727-2473-7c46-591ed108ac52@email.cz"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "x"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "ORDER"
                WHITESPACE " "
                BY_KW "BY"
                WHITESPACE " "
                NAME_REF
                  IDENT "y"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          WHITESPACE " "
          LITERAL
            NULL_KW "NULL"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "d"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          COMMA ","
          COLUMN
            NAME
              IDENT "y"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "min"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "x"
              WHITESPACE " "
              ORDER_BY_CLAUSE
                ORDER_KW "ORDER"
                WHITESPACE " "
                BY_KW "BY"
                WHITESPACE " "
                NAME_REF
                  IDENT "y"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        SELECT
          VALUES_KW "VALUES"
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
        R_PAREN ")"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "d"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "x"
          COMMA ","
          COLUMN
            NAME
              IDENT "y"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check collation-sensitive matching between grouping expressions"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "v"
            CUSTOM_OP
              PIPE "|"
              PIPE "|"
            LITERAL
              STRING "'a'"
        COMMA ","
        WHITESPACE " "
        TARGET
          CASE_EXPR
            CASE_KW "case"
            WHITESPACE " "
            BIN_EXPR
              NAME_REF
                IDENT "v"
              CUSTOM_OP
                PIPE "|"
                PIPE "|"
              LITERAL
                STRING "'a'"
            WHITESPACE " "
            WHEN_CLAUSE
              WHEN_KW "when"
              WHITESPACE " "
              LITERAL
                STRING "'aa'"
              WHITESPACE " "
              THEN_KW "then"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
            WHITESPACE " "
            ELSE_KW "else"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
            WHITESPACE " "
            END_KW "end"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "unnest"
        ARG_LIST
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              STRING "'a'"
            COMMA ","
            LITERAL
              STRING "'b'"
            R_BRACK "]"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "u"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "v"
          R_PAREN ")"
    WHITESPACE "\n "
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "v"
        CUSTOM_OP
          PIPE "|"
          PIPE "|"
        LITERAL
          STRING "'a'"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "v"
            CUSTOM_OP
              PIPE "|"
              PIPE "|"
            LITERAL
              STRING "'a'"
        COMMA ","
        WHITESPACE " "
        TARGET
          CASE_EXPR
            CASE_KW "case"
            WHITESPACE " "
            WHEN_CLAUSE
              WHEN_KW "when"
              WHITESPACE " "
              BIN_EXPR
                BIN_EXPR
                  NAME_REF
                    IDENT "v"
                  CUSTOM_OP
                    PIPE "|"
                    PIPE "|"
                  LITERAL
                    STRING "'a'"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  STRING "'aa'"
              WHITESPACE " "
              THEN_KW "then"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
            WHITESPACE " "
            ELSE_KW "else"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
            WHITESPACE " "
            END_KW "end"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "unnest"
        ARG_LIST
          L_PAREN "("
          ARRAY_EXPR
            ARRAY_KW "array"
            L_BRACK "["
            LITERAL
              STRING "'a'"
            COMMA ","
            LITERAL
              STRING "'b'"
            R_BRACK "]"
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "u"
        COLUMN_LIST
          L_PAREN "("
          COLUMN
            NAME
              IDENT "v"
          R_PAREN ")"
    WHITESPACE "\n "
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "v"
        CUSTOM_OP
          PIPE "|"
          PIPE "|"
        LITERAL
          STRING "'a'"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Make sure that generation of HashAggregate for uniqification purposes"
  WHITESPACE "\n"
  COMMENT "-- does not lead to array overflow due to unexpected duplicate hash keys"
  WHITESPACE "\n"
  COMMENT "-- see CAFeeJoKKu0u+A_A9R9316djW-YW3-+Gtgvy3ju655qRHR3jtdA@mail.gmail.com"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_memoize"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n  "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          LITERAL
            INT_NUMBER "1"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE "\n   "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        TUPLE_EXPR
          L_PAREN "("
          NAME_REF
            IDENT "hundred"
          COMMA ","
          WHITESPACE " "
          NAME_REF
            IDENT "thousand"
          R_PAREN ")"
        WHITESPACE " "
        IN_KW "in"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  NAME_REF
                    IDENT "twothousand"
                COMMA ","
                WHITESPACE " "
                TARGET
                  NAME_REF
                    IDENT "twothousand"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "onek"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "reset"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_memoize"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Hash Aggregation Spill tests"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_sort"
    EQ "="
    LITERAL
      FALSE_KW "false"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "work_mem"
    EQ "="
    LITERAL
      STRING "'64kB'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "unique1"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "twothousand"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk1"
    WHITESPACE "\n"
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "unique1"
    WHITESPACE "\n"
    HAVING_CLAUSE
      HAVING_KW "having"
      WHITESPACE " "
      BIN_EXPR
        CALL_EXPR
          NAME_REF
            IDENT "sum"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "fivethous"
            R_PAREN ")"
        WHITESPACE " "
        R_ANGLE ">"
        WHITESPACE " "
        LITERAL
          INT_NUMBER "4975"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "sum"
        ARG_LIST
          L_PAREN "("
          NAME_REF
            IDENT "twothousand"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "work_mem"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_sort"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Compare results between plans using sorting and plans using hash"
  WHITESPACE "\n"
  COMMENT "-- aggregation. Force spilling in both cases by setting work_mem low."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "work_mem"
    EQ "="
    LITERAL
      STRING "'64kB'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "agg_data_2k"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "g"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "0"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1999"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "g"
  SEMICOLON ";"
  WHITESPACE "\n"
  ANALYZE_STMT
    ANALYZE_KW "analyze"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "agg_data_2k"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "agg_data_20k"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "g"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "0"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "19999"
            R_PAREN ")"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "g"
  SEMICOLON ";"
  WHITESPACE "\n"
  ANALYZE_STMT
    ANALYZE_KW "analyze"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "agg_data_20k"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Produce results with sorting."
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_hashagg"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      FALSE_KW "false"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "jit_above_cost"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "g"
            PERCENT "%"
            LITERAL
              INT_NUMBER "10000"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "c1"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "g"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "c2"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "c3"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "agg_data_20k"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "g"
        PERCENT "%"
        LITERAL
          INT_NUMBER "10000"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "agg_group_1"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "g"
              PERCENT "%"
              LITERAL
                INT_NUMBER "10000"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "c1"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "sum"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  NAME_REF
                    IDENT "g"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          NUMERIC_KW "numeric"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "c2"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "count"
              ARG_LIST
                L_PAREN "("
                STAR "*"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "c3"
      WHITESPACE "\n  "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "agg_data_20k"
      WHITESPACE " "
      GROUP_BY_CLAUSE
        GROUP_KW "group"
        WHITESPACE " "
        BY_KW "by"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "g"
          PERCENT "%"
          LITERAL
            INT_NUMBER "10000"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "agg_group_2"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE "\n  "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            VALUES_KW "values"
            WHITESPACE " "
            L_PAREN "("
            LITERAL
              INT_NUMBER "100"
            R_PAREN ")"
            COMMA ","
            WHITESPACE " "
            L_PAREN "("
            LITERAL
              INT_NUMBER "300"
            R_PAREN ")"
            COMMA ","
            WHITESPACE " "
            L_PAREN "("
            LITERAL
              INT_NUMBER "500"
            R_PAREN ")"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "r"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "a"
            R_PAREN ")"
        COMMA ","
        WHITESPACE "\n  "
        LATERAL_KW "lateral"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          WHITESPACE "\n    "
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  CAST_EXPR
                    PAREN_EXPR
                      L_PAREN "("
                      BIN_EXPR
                        NAME_REF
                          IDENT "g"
                        SLASH "/"
                        LITERAL
                          INT_NUMBER "2"
                      R_PAREN ")"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            NUMERIC_KW "numeric"
                  WHITESPACE " "
                  AS_KW "as"
                  WHITESPACE " "
                  NAME
                    IDENT "c1"
                COMMA ","
                WHITESPACE "\n           "
                TARGET
                  CALL_EXPR
                    NAME_REF
                      IDENT "array_agg"
                    ARG_LIST
                      L_PAREN "("
                      CAST_EXPR
                        NAME_REF
                          IDENT "g"
                        COLON2 "::"
                        PATH_TYPE
                          PATH
                            PATH_SEGMENT
                              NAME_REF
                                NUMERIC_KW "numeric"
                      R_PAREN ")"
                  WHITESPACE " "
                  AS_KW "as"
                  WHITESPACE " "
                  NAME
                    IDENT "c2"
                COMMA ","
                WHITESPACE "\n\t   "
                TARGET
                  CALL_EXPR
                    NAME_REF
                      IDENT "count"
                    ARG_LIST
                      L_PAREN "("
                      STAR "*"
                      R_PAREN ")"
                  WHITESPACE " "
                  AS_KW "as"
                  WHITESPACE " "
                  NAME
                    IDENT "c3"
            WHITESPACE "\n    "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "agg_data_2k"
            WHITESPACE "\n    "
            WHERE_CLAUSE
              WHERE_KW "where"
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "g"
                WHITESPACE " "
                L_ANGLE "<"
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "r"
                  DOT "."
                  NAME_REF
                    IDENT "a"
            WHITESPACE "\n    "
            GROUP_BY_CLAUSE
              GROUP_KW "group"
              WHITESPACE " "
              BY_KW "by"
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "g"
                SLASH "/"
                LITERAL
                  INT_NUMBER "2"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "s"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "jit_above_cost"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "agg_group_3"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CAST_EXPR
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  NAME_REF
                    IDENT "g"
                  SLASH "/"
                  LITERAL
                    INT_NUMBER "2"
                R_PAREN ")"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      NUMERIC_KW "numeric"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "c1"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "sum"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  LITERAL
                    INT_NUMBER "7"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "int4"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "c2"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "count"
              ARG_LIST
                L_PAREN "("
                STAR "*"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "c3"
      WHITESPACE "\n  "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "agg_data_2k"
      WHITESPACE " "
      GROUP_BY_CLAUSE
        GROUP_KW "group"
        WHITESPACE " "
        BY_KW "by"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "g"
          SLASH "/"
          LITERAL
            INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "agg_group_4"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CAST_EXPR
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  NAME_REF
                    IDENT "g"
                  SLASH "/"
                  LITERAL
                    INT_NUMBER "2"
                R_PAREN ")"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      NUMERIC_KW "numeric"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "c1"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "array_agg"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  NAME_REF
                    IDENT "g"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          NUMERIC_KW "numeric"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "c2"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "count"
              ARG_LIST
                L_PAREN "("
                STAR "*"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "c3"
      WHITESPACE "\n  "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "agg_data_2k"
      WHITESPACE " "
      GROUP_BY_CLAUSE
        GROUP_KW "group"
        WHITESPACE " "
        BY_KW "by"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "g"
          SLASH "/"
          LITERAL
            INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Produce results with hash aggregation"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_hashagg"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      TRUE_KW "true"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_sort"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      FALSE_KW "false"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "jit_above_cost"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "explain"
    WHITESPACE " "
    L_PAREN "("
    IDENT "costs"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "g"
            PERCENT "%"
            LITERAL
              INT_NUMBER "10000"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "c1"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                NAME_REF
                  IDENT "g"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        NUMERIC_KW "numeric"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "c2"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "c3"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "agg_data_20k"
    WHITESPACE " "
    GROUP_BY_CLAUSE
      GROUP_KW "group"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "g"
        PERCENT "%"
        LITERAL
          INT_NUMBER "10000"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "agg_hash_1"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            BIN_EXPR
              NAME_REF
                IDENT "g"
              PERCENT "%"
              LITERAL
                INT_NUMBER "10000"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "c1"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "sum"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  NAME_REF
                    IDENT "g"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          NUMERIC_KW "numeric"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "c2"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "count"
              ARG_LIST
                L_PAREN "("
                STAR "*"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "c3"
      WHITESPACE "\n  "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "agg_data_20k"
      WHITESPACE " "
      GROUP_BY_CLAUSE
        GROUP_KW "group"
        WHITESPACE " "
        BY_KW "by"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "g"
          PERCENT "%"
          LITERAL
            INT_NUMBER "10000"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "agg_hash_2"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE "\n  "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            VALUES_KW "values"
            WHITESPACE " "
            L_PAREN "("
            LITERAL
              INT_NUMBER "100"
            R_PAREN ")"
            COMMA ","
            WHITESPACE " "
            L_PAREN "("
            LITERAL
              INT_NUMBER "300"
            R_PAREN ")"
            COMMA ","
            WHITESPACE " "
            L_PAREN "("
            LITERAL
              INT_NUMBER "500"
            R_PAREN ")"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "r"
          COLUMN_LIST
            L_PAREN "("
            COLUMN
              NAME
                IDENT "a"
            R_PAREN ")"
        COMMA ","
        WHITESPACE "\n  "
        LATERAL_KW "lateral"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          WHITESPACE "\n    "
          SELECT
            SELECT_CLAUSE
              SELECT_KW "select"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  CAST_EXPR
                    PAREN_EXPR
                      L_PAREN "("
                      BIN_EXPR
                        NAME_REF
                          IDENT "g"
                        SLASH "/"
                        LITERAL
                          INT_NUMBER "2"
                      R_PAREN ")"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            NUMERIC_KW "numeric"
                  WHITESPACE " "
                  AS_KW "as"
                  WHITESPACE " "
                  NAME
                    IDENT "c1"
                COMMA ","
                WHITESPACE "\n           "
                TARGET
                  CALL_EXPR
                    NAME_REF
                      IDENT "array_agg"
                    ARG_LIST
                      L_PAREN "("
                      CAST_EXPR
                        NAME_REF
                          IDENT "g"
                        COLON2 "::"
                        PATH_TYPE
                          PATH
                            PATH_SEGMENT
                              NAME_REF
                                NUMERIC_KW "numeric"
                      R_PAREN ")"
                  WHITESPACE " "
                  AS_KW "as"
                  WHITESPACE " "
                  NAME
                    IDENT "c2"
                COMMA ","
                WHITESPACE "\n\t   "
                TARGET
                  CALL_EXPR
                    NAME_REF
                      IDENT "count"
                    ARG_LIST
                      L_PAREN "("
                      STAR "*"
                      R_PAREN ")"
                  WHITESPACE " "
                  AS_KW "as"
                  WHITESPACE " "
                  NAME
                    IDENT "c3"
            WHITESPACE "\n    "
            FROM_CLAUSE
              FROM_KW "from"
              WHITESPACE " "
              NAME_REF
                IDENT "agg_data_2k"
            WHITESPACE "\n    "
            WHERE_CLAUSE
              WHERE_KW "where"
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "g"
                WHITESPACE " "
                L_ANGLE "<"
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "r"
                  DOT "."
                  NAME_REF
                    IDENT "a"
            WHITESPACE "\n    "
            GROUP_BY_CLAUSE
              GROUP_KW "group"
              WHITESPACE " "
              BY_KW "by"
              WHITESPACE " "
              BIN_EXPR
                NAME_REF
                  IDENT "g"
                SLASH "/"
                LITERAL
                  INT_NUMBER "2"
          R_PAREN ")"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "s"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "jit_above_cost"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "agg_hash_3"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CAST_EXPR
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  NAME_REF
                    IDENT "g"
                  SLASH "/"
                  LITERAL
                    INT_NUMBER "2"
                R_PAREN ")"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      NUMERIC_KW "numeric"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "c1"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "sum"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  LITERAL
                    INT_NUMBER "7"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "int4"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "c2"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "count"
              ARG_LIST
                L_PAREN "("
                STAR "*"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "c3"
      WHITESPACE "\n  "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "agg_data_2k"
      WHITESPACE " "
      GROUP_BY_CLAUSE
        GROUP_KW "group"
        WHITESPACE " "
        BY_KW "by"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "g"
          SLASH "/"
          LITERAL
            INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "create"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "agg_hash_4"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CAST_EXPR
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  NAME_REF
                    IDENT "g"
                  SLASH "/"
                  LITERAL
                    INT_NUMBER "2"
                R_PAREN ")"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      NUMERIC_KW "numeric"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "c1"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "array_agg"
              ARG_LIST
                L_PAREN "("
                CAST_EXPR
                  NAME_REF
                    IDENT "g"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          NUMERIC_KW "numeric"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "c2"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "count"
              ARG_LIST
                L_PAREN "("
                STAR "*"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "c3"
      WHITESPACE "\n  "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        NAME_REF
          IDENT "agg_data_2k"
      WHITESPACE " "
      GROUP_BY_CLAUSE
        GROUP_KW "group"
        WHITESPACE " "
        BY_KW "by"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "g"
          SLASH "/"
          LITERAL
            INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_sort"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      TRUE_KW "true"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "set"
    WHITESPACE " "
    NAME_REF
      IDENT "work_mem"
    WHITESPACE " "
    TO_KW "to"
    WHITESPACE " "
    DEFAULT_KW "default"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Compare group aggregation results to hash aggregation results"
  WHITESPACE "\n\n"
  COMPOUND_SELECT
    PAREN_EXPR
      L_PAREN "("
      COMPOUND_SELECT
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "agg_hash_1"
        WHITESPACE " "
        EXCEPT_KW "except"
        WHITESPACE " "
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "agg_group_1"
      R_PAREN ")"
    WHITESPACE "\n  "
    UNION_KW "union"
    WHITESPACE " "
    ALL_KW "all"
    WHITESPACE "\n"
    PAREN_EXPR
      L_PAREN "("
      COMPOUND_SELECT
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "agg_group_1"
        WHITESPACE " "
        EXCEPT_KW "except"
        WHITESPACE " "
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "agg_hash_1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMPOUND_SELECT
    PAREN_EXPR
      L_PAREN "("
      COMPOUND_SELECT
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "agg_hash_2"
        WHITESPACE " "
        EXCEPT_KW "except"
        WHITESPACE " "
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "agg_group_2"
      R_PAREN ")"
    WHITESPACE "\n  "
    UNION_KW "union"
    WHITESPACE " "
    ALL_KW "all"
    WHITESPACE "\n"
    PAREN_EXPR
      L_PAREN "("
      COMPOUND_SELECT
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "agg_group_2"
        WHITESPACE " "
        EXCEPT_KW "except"
        WHITESPACE " "
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "agg_hash_2"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMPOUND_SELECT
    PAREN_EXPR
      L_PAREN "("
      COMPOUND_SELECT
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "agg_hash_3"
        WHITESPACE " "
        EXCEPT_KW "except"
        WHITESPACE " "
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "agg_group_3"
      R_PAREN ")"
    WHITESPACE "\n  "
    UNION_KW "union"
    WHITESPACE " "
    ALL_KW "all"
    WHITESPACE "\n"
    PAREN_EXPR
      L_PAREN "("
      COMPOUND_SELECT
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "agg_group_3"
        WHITESPACE " "
        EXCEPT_KW "except"
        WHITESPACE " "
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "agg_hash_3"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMPOUND_SELECT
    PAREN_EXPR
      L_PAREN "("
      COMPOUND_SELECT
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "agg_hash_4"
        WHITESPACE " "
        EXCEPT_KW "except"
        WHITESPACE " "
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "agg_group_4"
      R_PAREN ")"
    WHITESPACE "\n  "
    UNION_KW "union"
    WHITESPACE " "
    ALL_KW "all"
    WHITESPACE "\n"
    PAREN_EXPR
      L_PAREN "("
      COMPOUND_SELECT
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "agg_group_4"
        WHITESPACE " "
        EXCEPT_KW "except"
        WHITESPACE " "
        SELECT
          SELECT_CLAUSE
            SELECT_KW "select"
            WHITESPACE " "
            TARGET_LIST
              TARGET
                STAR "*"
          WHITESPACE " "
          FROM_CLAUSE
            FROM_KW "from"
            WHITESPACE " "
            NAME_REF
              IDENT "agg_hash_4"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "agg_group_1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "agg_group_2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "agg_group_3"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "agg_group_4"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "agg_hash_1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "agg_hash_2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "agg_hash_3"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "drop"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "agg_hash_4"
  SEMICOLON ";"
  WHITESPACE "\n"
---
ERROR@278: expected string literal
ERROR@278: expected SEMICOLON
ERROR@279: expected command, found COLON
ERROR@280: expected command, found STRING
ERROR@8084: expected R_PAREN
ERROR@8085: expected command, found OFF_KW
ERROR@8088: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@8088: expected SEMICOLON
ERROR@8088: expected command, found R_PAREN
ERROR@8444: expected R_PAREN
ERROR@8445: expected command, found OFF_KW
ERROR@8448: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@8448: expected SEMICOLON
ERROR@8448: expected command, found R_PAREN
ERROR@11333: expected R_PAREN
ERROR@11334: expected command, found OFF_KW
ERROR@11337: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@11337: expected SEMICOLON
ERROR@11337: expected command, found R_PAREN
ERROR@11419: expected R_PAREN
ERROR@11420: expected command, found OFF_KW
ERROR@11423: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@11423: expected SEMICOLON
ERROR@11423: expected command, found R_PAREN
ERROR@11505: expected R_PAREN
ERROR@11506: expected command, found OFF_KW
ERROR@11509: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@11509: expected SEMICOLON
ERROR@11509: expected command, found R_PAREN
ERROR@11629: expected R_PAREN
ERROR@11630: expected command, found OFF_KW
ERROR@11633: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@11633: expected SEMICOLON
ERROR@11633: expected command, found R_PAREN
ERROR@12084: expected R_PAREN
ERROR@12085: expected command, found OFF_KW
ERROR@12088: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@12088: expected SEMICOLON
ERROR@12088: expected command, found R_PAREN
ERROR@12275: expected R_PAREN
ERROR@12276: expected command, found OFF_KW
ERROR@12279: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@12279: expected SEMICOLON
ERROR@12279: expected command, found R_PAREN
ERROR@12403: expected R_PAREN
ERROR@12404: expected command, found OFF_KW
ERROR@12407: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@12407: expected SEMICOLON
ERROR@12407: expected command, found R_PAREN
ERROR@12590: expected R_PAREN
ERROR@12591: expected command, found OFF_KW
ERROR@12594: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@12594: expected SEMICOLON
ERROR@12594: expected command, found R_PAREN
ERROR@12846: expected R_PAREN
ERROR@12847: expected command, found OFF_KW
ERROR@12850: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@12850: expected SEMICOLON
ERROR@12850: expected command, found R_PAREN
ERROR@12950: expected R_PAREN
ERROR@12951: expected command, found OFF_KW
ERROR@12954: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@12954: expected SEMICOLON
ERROR@12954: expected command, found R_PAREN
ERROR@13058: expected R_PAREN
ERROR@13059: expected command, found OFF_KW
ERROR@13062: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@13062: expected SEMICOLON
ERROR@13062: expected command, found R_PAREN
ERROR@13188: expected R_PAREN
ERROR@13189: expected command, found OFF_KW
ERROR@13192: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@13192: expected SEMICOLON
ERROR@13192: expected command, found R_PAREN
ERROR@13322: expected R_PAREN
ERROR@13323: expected command, found OFF_KW
ERROR@13326: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@13326: expected SEMICOLON
ERROR@13326: expected command, found R_PAREN
ERROR@13562: expected R_PAREN
ERROR@13563: expected command, found OFF_KW
ERROR@13566: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@13566: expected SEMICOLON
ERROR@13566: expected command, found R_PAREN
ERROR@14234: expected R_PAREN
ERROR@14235: expected command, found OFF_KW
ERROR@14238: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@14238: expected SEMICOLON
ERROR@14238: expected command, found R_PAREN
ERROR@14406: expected R_PAREN
ERROR@14407: expected command, found OFF_KW
ERROR@14410: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@14410: expected SEMICOLON
ERROR@14410: expected command, found R_PAREN
ERROR@14675: expected R_PAREN
ERROR@14676: expected command, found OFF_KW
ERROR@14679: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@14679: expected SEMICOLON
ERROR@14679: expected command, found R_PAREN
ERROR@15507: expected R_PAREN
ERROR@15508: expected command, found OFF_KW
ERROR@15511: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@15511: expected SEMICOLON
ERROR@15511: expected command, found R_PAREN
ERROR@15634: expected R_PAREN
ERROR@15635: expected command, found OFF_KW
ERROR@15638: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@15638: expected SEMICOLON
ERROR@15638: expected command, found R_PAREN
ERROR@15732: expected R_PAREN
ERROR@15733: expected command, found OFF_KW
ERROR@15736: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@15736: expected SEMICOLON
ERROR@15736: expected command, found R_PAREN
ERROR@15910: expected R_PAREN
ERROR@15911: expected command, found OFF_KW
ERROR@15914: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@15914: expected SEMICOLON
ERROR@15914: expected command, found R_PAREN
ERROR@16087: expected R_PAREN
ERROR@16088: expected command, found OFF_KW
ERROR@16091: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@16091: expected SEMICOLON
ERROR@16091: expected command, found R_PAREN
ERROR@16246: expected R_PAREN
ERROR@16247: expected command, found OFF_KW
ERROR@16250: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@16250: expected SEMICOLON
ERROR@16250: expected command, found R_PAREN
ERROR@16363: expected R_PAREN
ERROR@16364: expected command, found OFF_KW
ERROR@16367: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@16367: expected SEMICOLON
ERROR@16367: expected command, found R_PAREN
ERROR@16714: expected R_PAREN
ERROR@16715: expected command, found OFF_KW
ERROR@16718: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@16718: expected SEMICOLON
ERROR@16718: expected command, found R_PAREN
ERROR@16913: expected R_PAREN
ERROR@16914: expected command, found OFF_KW
ERROR@16917: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@16917: expected SEMICOLON
ERROR@16917: expected command, found R_PAREN
ERROR@17081: expected R_PAREN
ERROR@17082: expected command, found OFF_KW
ERROR@17085: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@17085: expected SEMICOLON
ERROR@17085: expected command, found R_PAREN
ERROR@17363: expected R_PAREN
ERROR@17364: expected command, found OFF_KW
ERROR@17367: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@17367: expected SEMICOLON
ERROR@17367: expected command, found R_PAREN
ERROR@17511: expected R_PAREN
ERROR@17512: expected command, found OFF_KW
ERROR@17515: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@17515: expected SEMICOLON
ERROR@17515: expected command, found R_PAREN
ERROR@17710: expected R_PAREN
ERROR@17711: expected command, found OFF_KW
ERROR@17714: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@17714: expected SEMICOLON
ERROR@17714: expected command, found R_PAREN
ERROR@18093: expected R_PAREN
ERROR@18094: expected command, found OFF_KW
ERROR@18097: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@18097: expected SEMICOLON
ERROR@18097: expected command, found R_PAREN
ERROR@18755: expected COMMA
ERROR@18760: expected COMMA
ERROR@18765: expected COMMA
ERROR@18768: expected COMMA
ERROR@18769: expected an expression, found USING_KW
ERROR@18774: expected R_PAREN
ERROR@18778: expected USING_KW
ERROR@18778: expected L_PAREN
ERROR@18778: expected SEMICOLON
ERROR@18778: expected command, found R_PAREN
ERROR@18780: expected command, found ON_KW
ERROR@18783: expected command, found L_PAREN
ERROR@18784: expected command, found IDENT
ERROR@18787: expected command, found EQ
ERROR@18789: expected command, found INT_NUMBER
ERROR@18790: expected command, found R_PAREN
ERROR@18792: expected command, found GROUP_KW
ERROR@18798: expected command, found BY_KW
ERROR@18801: expected command, found IDENT
ERROR@18892: expected COMMA
ERROR@18897: expected COMMA
ERROR@18902: expected COMMA
ERROR@18905: expected COMMA
ERROR@18906: expected an expression, found USING_KW
ERROR@18911: expected R_PAREN
ERROR@18915: expected USING_KW
ERROR@18915: expected L_PAREN
ERROR@18915: expected SEMICOLON
ERROR@18915: expected command, found R_PAREN
ERROR@18917: expected command, found ON_KW
ERROR@18920: expected command, found L_PAREN
ERROR@18921: expected command, found IDENT
ERROR@18924: expected command, found EQ
ERROR@18926: expected command, found INT_NUMBER
ERROR@18927: expected command, found R_PAREN
ERROR@18929: expected command, found GROUP_KW
ERROR@18935: expected command, found BY_KW
ERROR@18938: expected command, found IDENT
ERROR@19118: expected R_PAREN
ERROR@19119: expected command, found OFF_KW
ERROR@19122: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@19122: expected SEMICOLON
ERROR@19122: expected command, found R_PAREN
ERROR@19349: expected R_PAREN
ERROR@19350: expected command, found OFF_KW
ERROR@19353: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@19353: expected SEMICOLON
ERROR@19353: expected command, found R_PAREN
ERROR@19542: expected R_PAREN
ERROR@19543: expected command, found OFF_KW
ERROR@19546: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@19546: expected SEMICOLON
ERROR@19546: expected command, found R_PAREN
ERROR@19794: expected R_PAREN
ERROR@19795: expected command, found OFF_KW
ERROR@19798: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@19798: expected SEMICOLON
ERROR@19798: expected command, found R_PAREN
ERROR@20221: expected R_PAREN
ERROR@20222: expected command, found OFF_KW
ERROR@20225: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@20225: expected SEMICOLON
ERROR@20225: expected command, found R_PAREN
ERROR@20597: expected R_PAREN
ERROR@20598: expected command, found OFF_KW
ERROR@20601: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@20601: expected SEMICOLON
ERROR@20601: expected command, found R_PAREN
ERROR@21107: expected R_PAREN
ERROR@21108: expected command, found OFF_KW
ERROR@21111: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@21111: expected SEMICOLON
ERROR@21111: expected command, found R_PAREN
ERROR@21303: expected R_PAREN
ERROR@21304: expected command, found OFF_KW
ERROR@21307: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@21307: expected SEMICOLON
ERROR@21307: expected command, found R_PAREN
ERROR@21432: expected R_PAREN
ERROR@21433: expected command, found OFF_KW
ERROR@21436: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@21436: expected SEMICOLON
ERROR@21436: expected command, found R_PAREN
ERROR@21467: expected R_PAREN
ERROR@21472: expected SEMICOLON
ERROR@21472: expected command, found R_PAREN
ERROR@21474: expected command, found FILTER_KW
ERROR@21481: expected command, found L_PAREN
ERROR@21482: expected command, found WHERE_KW
ERROR@21488: expected command, found IDENT
ERROR@21494: expected command, found L_PAREN
ERROR@21495: expected command, found IDENT
ERROR@21497: expected command, found R_PAREN
ERROR@21499: expected command, found R_ANGLE
ERROR@21501: expected command, found INT_NUMBER
ERROR@21502: expected command, found R_PAREN
ERROR@21504: expected command, found FROM_KW
ERROR@21509: expected command, found IDENT
ERROR@21624: expected R_PAREN
ERROR@21625: expected command, found OFF_KW
ERROR@21628: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@21628: expected SEMICOLON
ERROR@21628: expected command, found R_PAREN
ERROR@21671: expected R_PAREN
ERROR@21676: expected SEMICOLON
ERROR@21676: expected command, found R_PAREN
ERROR@21678: expected command, found FILTER_KW
ERROR@21685: expected command, found L_PAREN
ERROR@21686: expected command, found WHERE_KW
ERROR@21692: expected command, found IDENT
ERROR@21698: expected command, found L_PAREN
ERROR@21699: expected command, found IDENT
ERROR@21701: expected command, found R_PAREN
ERROR@21703: expected command, found R_ANGLE
ERROR@21705: expected command, found INT_NUMBER
ERROR@21706: expected command, found R_PAREN
ERROR@21708: expected command, found FROM_KW
ERROR@21713: expected command, found IDENT
ERROR@22754: expected R_PAREN
ERROR@22758: expected SEMICOLON
ERROR@22758: expected command, found R_PAREN
ERROR@22762: expected command, found FROM_KW
ERROR@22767: expected command, found L_PAREN
ERROR@22824: expected SEMICOLON
ERROR@22824: expected command, found R_PAREN
ERROR@22826: expected command, found IDENT
ERROR@22827: expected command, found L_PAREN
ERROR@22828: expected command, found IDENT
ERROR@22829: expected command, found COMMA
ERROR@22830: expected command, found IDENT
ERROR@22831: expected command, found COMMA
ERROR@22832: expected command, found IDENT
ERROR@22833: expected command, found R_PAREN
ERROR@22834: expected command, found COMMA
ERROR@22843: expected command, found IDENT
ERROR@22858: expected command, found L_PAREN
ERROR@22859: expected command, found INT_NUMBER
ERROR@22860: expected command, found COMMA
ERROR@22861: expected command, found INT_NUMBER
ERROR@22862: expected command, found R_PAREN
ERROR@22864: expected command, found IDENT
ERROR@22891: expected R_PAREN
ERROR@22895: expected SEMICOLON
ERROR@22895: expected command, found R_PAREN
ERROR@22899: expected command, found FROM_KW
ERROR@22904: expected command, found L_PAREN
ERROR@22961: expected SEMICOLON
ERROR@22961: expected command, found R_PAREN
ERROR@22963: expected command, found IDENT
ERROR@22964: expected command, found L_PAREN
ERROR@22965: expected command, found IDENT
ERROR@22966: expected command, found COMMA
ERROR@22967: expected command, found IDENT
ERROR@22968: expected command, found COMMA
ERROR@22969: expected command, found IDENT
ERROR@22970: expected command, found R_PAREN
ERROR@22971: expected command, found COMMA
ERROR@22980: expected command, found IDENT
ERROR@22995: expected command, found L_PAREN
ERROR@22996: expected command, found INT_NUMBER
ERROR@22997: expected command, found COMMA
ERROR@22998: expected command, found INT_NUMBER
ERROR@22999: expected command, found R_PAREN
ERROR@23001: expected command, found IDENT
ERROR@23030: expected R_PAREN
ERROR@23045: expected SEMICOLON
ERROR@23045: expected command, found R_PAREN
ERROR@23049: expected command, found FROM_KW
ERROR@23054: expected command, found L_PAREN
ERROR@23111: expected SEMICOLON
ERROR@23111: expected command, found R_PAREN
ERROR@23113: expected command, found IDENT
ERROR@23114: expected command, found L_PAREN
ERROR@23115: expected command, found IDENT
ERROR@23116: expected command, found COMMA
ERROR@23117: expected command, found IDENT
ERROR@23118: expected command, found COMMA
ERROR@23119: expected command, found IDENT
ERROR@23120: expected command, found R_PAREN
ERROR@23121: expected command, found COMMA
ERROR@23130: expected command, found IDENT
ERROR@23145: expected command, found L_PAREN
ERROR@23146: expected command, found INT_NUMBER
ERROR@23147: expected command, found COMMA
ERROR@23148: expected command, found INT_NUMBER
ERROR@23149: expected command, found R_PAREN
ERROR@23151: expected command, found IDENT
ERROR@23178: expected R_PAREN
ERROR@23193: expected SEMICOLON
ERROR@23193: expected command, found R_PAREN
ERROR@23197: expected command, found FROM_KW
ERROR@23202: expected command, found L_PAREN
ERROR@23259: expected SEMICOLON
ERROR@23259: expected command, found R_PAREN
ERROR@23261: expected command, found IDENT
ERROR@23262: expected command, found L_PAREN
ERROR@23263: expected command, found IDENT
ERROR@23264: expected command, found COMMA
ERROR@23265: expected command, found IDENT
ERROR@23266: expected command, found COMMA
ERROR@23267: expected command, found IDENT
ERROR@23268: expected command, found R_PAREN
ERROR@23269: expected command, found COMMA
ERROR@23278: expected command, found IDENT
ERROR@23293: expected command, found L_PAREN
ERROR@23294: expected command, found INT_NUMBER
ERROR@23295: expected command, found COMMA
ERROR@23296: expected command, found INT_NUMBER
ERROR@23297: expected command, found R_PAREN
ERROR@23299: expected command, found IDENT
ERROR@23356: expected R_PAREN
ERROR@23383: expected SEMICOLON
ERROR@23383: expected command, found R_PAREN
ERROR@23387: expected command, found FROM_KW
ERROR@23392: expected command, found L_PAREN
ERROR@23449: expected SEMICOLON
ERROR@23449: expected command, found R_PAREN
ERROR@23451: expected command, found IDENT
ERROR@23452: expected command, found L_PAREN
ERROR@23453: expected command, found IDENT
ERROR@23454: expected command, found COMMA
ERROR@23455: expected command, found IDENT
ERROR@23456: expected command, found COMMA
ERROR@23457: expected command, found IDENT
ERROR@23458: expected command, found R_PAREN
ERROR@23459: expected command, found COMMA
ERROR@23468: expected command, found IDENT
ERROR@23483: expected command, found L_PAREN
ERROR@23484: expected command, found INT_NUMBER
ERROR@23485: expected command, found COMMA
ERROR@23486: expected command, found INT_NUMBER
ERROR@23487: expected command, found R_PAREN
ERROR@23489: expected command, found IDENT
ERROR@23516: expected R_PAREN
ERROR@23541: expected SEMICOLON
ERROR@23541: expected command, found R_PAREN
ERROR@23545: expected command, found FROM_KW
ERROR@23550: expected command, found L_PAREN
ERROR@23607: expected SEMICOLON
ERROR@23607: expected command, found R_PAREN
ERROR@23609: expected command, found IDENT
ERROR@23610: expected command, found L_PAREN
ERROR@23611: expected command, found IDENT
ERROR@23612: expected command, found COMMA
ERROR@23613: expected command, found IDENT
ERROR@23614: expected command, found COMMA
ERROR@23615: expected command, found IDENT
ERROR@23616: expected command, found R_PAREN
ERROR@23617: expected command, found COMMA
ERROR@23626: expected command, found IDENT
ERROR@23641: expected command, found L_PAREN
ERROR@23642: expected command, found INT_NUMBER
ERROR@23643: expected command, found COMMA
ERROR@23644: expected command, found INT_NUMBER
ERROR@23645: expected command, found R_PAREN
ERROR@23647: expected command, found IDENT
ERROR@23674: expected R_PAREN
ERROR@23689: expected SEMICOLON
ERROR@23689: expected command, found R_PAREN
ERROR@23693: expected command, found FROM_KW
ERROR@23698: expected command, found L_PAREN
ERROR@23755: expected SEMICOLON
ERROR@23755: expected command, found R_PAREN
ERROR@23757: expected command, found IDENT
ERROR@23758: expected command, found L_PAREN
ERROR@23759: expected command, found IDENT
ERROR@23760: expected command, found COMMA
ERROR@23761: expected command, found IDENT
ERROR@23762: expected command, found COMMA
ERROR@23763: expected command, found IDENT
ERROR@23764: expected command, found R_PAREN
ERROR@23765: expected command, found COMMA
ERROR@23774: expected command, found IDENT
ERROR@23789: expected command, found L_PAREN
ERROR@23790: expected command, found INT_NUMBER
ERROR@23791: expected command, found COMMA
ERROR@23792: expected command, found INT_NUMBER
ERROR@23793: expected command, found R_PAREN
ERROR@23795: expected command, found IDENT
ERROR@23822: expected R_PAREN
ERROR@23851: expected SEMICOLON
ERROR@23851: expected command, found R_PAREN
ERROR@23855: expected command, found FROM_KW
ERROR@23860: expected command, found L_PAREN
ERROR@23917: expected SEMICOLON
ERROR@23917: expected command, found R_PAREN
ERROR@23919: expected command, found IDENT
ERROR@23920: expected command, found L_PAREN
ERROR@23921: expected command, found IDENT
ERROR@23922: expected command, found COMMA
ERROR@23923: expected command, found IDENT
ERROR@23924: expected command, found COMMA
ERROR@23925: expected command, found IDENT
ERROR@23926: expected command, found R_PAREN
ERROR@23927: expected command, found COMMA
ERROR@23936: expected command, found IDENT
ERROR@23951: expected command, found L_PAREN
ERROR@23952: expected command, found INT_NUMBER
ERROR@23953: expected command, found COMMA
ERROR@23954: expected command, found INT_NUMBER
ERROR@23955: expected command, found R_PAREN
ERROR@23957: expected command, found IDENT
ERROR@24062: expected R_PAREN
ERROR@24067: expected SEMICOLON
ERROR@24067: expected command, found R_PAREN
ERROR@24068: expected command, found COMMA
ERROR@24074: expected command, found IDENT
ERROR@24161: expected SEMICOLON
ERROR@24162: expected command, found FROM_KW
ERROR@24167: expected command, found IDENT
ERROR@24173: expected command, found L_PAREN
ERROR@24174: expected command, found ARRAY_KW
ERROR@24179: expected command, found L_BRACK
ERROR@24180: expected command, found INT_NUMBER
ERROR@24181: expected command, found R_BRACK
ERROR@24182: expected command, found R_PAREN
ERROR@24184: expected command, found IDENT
ERROR@24185: expected command, found L_PAREN
ERROR@24186: expected command, found IDENT
ERROR@24188: expected command, found R_PAREN
ERROR@24522: expected R_PAREN
ERROR@24526: expected SEMICOLON
ERROR@24526: expected command, found R_PAREN
ERROR@24532: expected command, found FROM_KW
ERROR@24537: expected command, found L_PAREN
ERROR@24594: expected SEMICOLON
ERROR@24594: expected command, found R_PAREN
ERROR@24596: expected command, found IDENT
ERROR@24597: expected command, found L_PAREN
ERROR@24598: expected command, found IDENT
ERROR@24599: expected command, found COMMA
ERROR@24600: expected command, found IDENT
ERROR@24601: expected command, found COMMA
ERROR@24602: expected command, found IDENT
ERROR@24603: expected command, found R_PAREN
ERROR@24604: expected command, found COMMA
ERROR@24615: expected command, found IDENT
ERROR@24630: expected command, found L_PAREN
ERROR@24631: expected command, found INT_NUMBER
ERROR@24632: expected command, found COMMA
ERROR@24633: expected command, found INT_NUMBER
ERROR@24634: expected command, found R_PAREN
ERROR@24636: expected command, found IDENT
ERROR@24774: expected R_PAREN
ERROR@24789: expected SEMICOLON
ERROR@24789: expected command, found R_PAREN
ERROR@24795: expected command, found FROM_KW
ERROR@24800: expected command, found L_PAREN
ERROR@24857: expected SEMICOLON
ERROR@24857: expected command, found R_PAREN
ERROR@24859: expected command, found IDENT
ERROR@24860: expected command, found L_PAREN
ERROR@24861: expected command, found IDENT
ERROR@24862: expected command, found COMMA
ERROR@24863: expected command, found IDENT
ERROR@24864: expected command, found COMMA
ERROR@24865: expected command, found IDENT
ERROR@24866: expected command, found R_PAREN
ERROR@24867: expected command, found COMMA
ERROR@24878: expected command, found IDENT
ERROR@24893: expected command, found L_PAREN
ERROR@24894: expected command, found INT_NUMBER
ERROR@24895: expected command, found COMMA
ERROR@24896: expected command, found INT_NUMBER
ERROR@24897: expected command, found R_PAREN
ERROR@24899: expected command, found IDENT
ERROR@25712: expected R_PAREN
ERROR@25741: expected SEMICOLON
ERROR@25741: expected command, found R_PAREN
ERROR@25747: expected command, found FROM_KW
ERROR@25752: expected command, found L_PAREN
ERROR@25809: expected SEMICOLON
ERROR@25809: expected command, found R_PAREN
ERROR@25811: expected command, found IDENT
ERROR@25812: expected command, found L_PAREN
ERROR@25813: expected command, found IDENT
ERROR@25814: expected command, found COMMA
ERROR@25815: expected command, found IDENT
ERROR@25816: expected command, found COMMA
ERROR@25817: expected command, found IDENT
ERROR@25818: expected command, found R_PAREN
ERROR@25819: expected command, found COMMA
ERROR@25830: expected command, found IDENT
ERROR@25845: expected command, found L_PAREN
ERROR@25846: expected command, found INT_NUMBER
ERROR@25847: expected command, found COMMA
ERROR@25848: expected command, found INT_NUMBER
ERROR@25849: expected command, found R_PAREN
ERROR@25851: expected command, found IDENT
ERROR@26009: expected R_PAREN
ERROR@26024: expected SEMICOLON
ERROR@26024: expected command, found R_PAREN
ERROR@26028: expected command, found FROM_KW
ERROR@26033: expected command, found L_PAREN
ERROR@26052: expected SEMICOLON
ERROR@26052: expected command, found R_PAREN
ERROR@26054: expected command, found IDENT
ERROR@26055: expected command, found L_PAREN
ERROR@26056: expected command, found IDENT
ERROR@26057: expected command, found COMMA
ERROR@26058: expected command, found IDENT
ERROR@26059: expected command, found COMMA
ERROR@26060: expected command, found IDENT
ERROR@26061: expected command, found R_PAREN
ERROR@26062: expected command, found COMMA
ERROR@26064: expected command, found IDENT
ERROR@26079: expected command, found L_PAREN
ERROR@26080: expected command, found INT_NUMBER
ERROR@26081: expected command, found COMMA
ERROR@26082: expected command, found INT_NUMBER
ERROR@26083: expected command, found R_PAREN
ERROR@26085: expected command, found IDENT
ERROR@26112: expected R_PAREN
ERROR@26131: expected SEMICOLON
ERROR@26131: expected command, found R_PAREN
ERROR@26135: expected command, found FROM_KW
ERROR@26140: expected command, found L_PAREN
ERROR@26159: expected SEMICOLON
ERROR@26159: expected command, found R_PAREN
ERROR@26161: expected command, found IDENT
ERROR@26162: expected command, found L_PAREN
ERROR@26163: expected command, found IDENT
ERROR@26164: expected command, found COMMA
ERROR@26165: expected command, found IDENT
ERROR@26166: expected command, found COMMA
ERROR@26167: expected command, found IDENT
ERROR@26168: expected command, found R_PAREN
ERROR@26169: expected command, found COMMA
ERROR@26171: expected command, found IDENT
ERROR@26186: expected command, found L_PAREN
ERROR@26187: expected command, found INT_NUMBER
ERROR@26188: expected command, found COMMA
ERROR@26189: expected command, found INT_NUMBER
ERROR@26190: expected command, found R_PAREN
ERROR@26192: expected command, found IDENT
ERROR@26219: expected R_PAREN
ERROR@26240: expected SEMICOLON
ERROR@26240: expected command, found R_PAREN
ERROR@26244: expected command, found FROM_KW
ERROR@26249: expected command, found L_PAREN
ERROR@26268: expected SEMICOLON
ERROR@26268: expected command, found R_PAREN
ERROR@26270: expected command, found IDENT
ERROR@26271: expected command, found L_PAREN
ERROR@26272: expected command, found IDENT
ERROR@26273: expected command, found COMMA
ERROR@26274: expected command, found IDENT
ERROR@26275: expected command, found COMMA
ERROR@26276: expected command, found IDENT
ERROR@26277: expected command, found R_PAREN
ERROR@26278: expected command, found COMMA
ERROR@26280: expected command, found IDENT
ERROR@26295: expected command, found L_PAREN
ERROR@26296: expected command, found INT_NUMBER
ERROR@26297: expected command, found COMMA
ERROR@26298: expected command, found INT_NUMBER
ERROR@26299: expected command, found R_PAREN
ERROR@26301: expected command, found IDENT
ERROR@26328: expected R_PAREN
ERROR@26345: expected SEMICOLON
ERROR@26345: expected command, found R_PAREN
ERROR@26349: expected command, found FROM_KW
ERROR@26354: expected command, found L_PAREN
ERROR@26373: expected SEMICOLON
ERROR@26373: expected command, found R_PAREN
ERROR@26375: expected command, found IDENT
ERROR@26376: expected command, found L_PAREN
ERROR@26377: expected command, found IDENT
ERROR@26378: expected command, found COMMA
ERROR@26379: expected command, found IDENT
ERROR@26380: expected command, found COMMA
ERROR@26381: expected command, found IDENT
ERROR@26382: expected command, found R_PAREN
ERROR@26383: expected command, found COMMA
ERROR@26385: expected command, found IDENT
ERROR@26400: expected command, found L_PAREN
ERROR@26401: expected command, found INT_NUMBER
ERROR@26402: expected command, found COMMA
ERROR@26403: expected command, found INT_NUMBER
ERROR@26404: expected command, found R_PAREN
ERROR@26406: expected command, found IDENT
ERROR@26799: expected R_PAREN
ERROR@26816: expected SEMICOLON
ERROR@26816: expected command, found R_PAREN
ERROR@26818: expected command, found FROM_KW
ERROR@26823: expected command, found IDENT
ERROR@26878: expected R_PAREN
ERROR@26895: expected SEMICOLON
ERROR@26895: expected command, found R_PAREN
ERROR@26897: expected command, found FROM_KW
ERROR@26902: expected command, found IDENT
ERROR@26955: expected R_PAREN
ERROR@26978: expected SEMICOLON
ERROR@26978: expected command, found R_PAREN
ERROR@26980: expected command, found FROM_KW
ERROR@26985: expected command, found IDENT
ERROR@27044: expected R_PAREN
ERROR@27067: expected SEMICOLON
ERROR@27067: expected command, found R_PAREN
ERROR@27069: expected command, found FROM_KW
ERROR@27074: expected command, found IDENT
ERROR@29167: expected R_PAREN
ERROR@29168: expected command, found OFF_KW
ERROR@29171: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@29171: expected SEMICOLON
ERROR@29171: expected command, found R_PAREN
ERROR@29463: expected R_PAREN
ERROR@29464: expected command, found OFF_KW
ERROR@29467: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@29467: expected SEMICOLON
ERROR@29467: expected command, found R_PAREN
ERROR@31341: expected R_PAREN
ERROR@31370: expected SEMICOLON
ERROR@31370: expected command, found R_PAREN
ERROR@31372: expected command, found FILTER_KW
ERROR@31379: expected command, found L_PAREN
ERROR@31380: expected command, found WHERE_KW
ERROR@31386: expected command, found IDENT
ERROR@31388: expected command, found R_ANGLE
ERROR@31390: expected command, found INT_NUMBER
ERROR@31391: expected command, found R_PAREN
ERROR@31397: expected command, found FROM_KW
ERROR@31402: expected command, found L_PAREN
ERROR@31459: expected SEMICOLON
ERROR@31459: expected command, found R_PAREN
ERROR@31461: expected command, found IDENT
ERROR@31462: expected command, found L_PAREN
ERROR@31463: expected command, found IDENT
ERROR@31464: expected command, found COMMA
ERROR@31465: expected command, found IDENT
ERROR@31466: expected command, found COMMA
ERROR@31467: expected command, found IDENT
ERROR@31468: expected command, found R_PAREN
ERROR@31469: expected command, found COMMA
ERROR@31475: expected command, found IDENT
ERROR@31490: expected command, found L_PAREN
ERROR@31491: expected command, found INT_NUMBER
ERROR@31492: expected command, found COMMA
ERROR@31493: expected command, found INT_NUMBER
ERROR@31494: expected command, found R_PAREN
ERROR@31496: expected command, found IDENT
ERROR@41779: expected R_PAREN
ERROR@41780: expected command, found OFF_KW
ERROR@41783: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@41783: expected SEMICOLON
ERROR@41783: expected command, found R_PAREN
ERROR@41867: expected R_PAREN
ERROR@41868: expected command, found OFF_KW
ERROR@41871: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@41871: expected SEMICOLON
ERROR@41871: expected command, found R_PAREN
ERROR@42001: expected R_PAREN
ERROR@42002: expected command, found OFF_KW
ERROR@42005: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@42005: expected SEMICOLON
ERROR@42005: expected command, found R_PAREN
ERROR@42228: expected R_PAREN
ERROR@42229: expected command, found OFF_KW
ERROR@42232: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@42232: expected SEMICOLON
ERROR@42232: expected command, found R_PAREN
ERROR@42467: expected R_PAREN
ERROR@42468: expected command, found OFF_KW
ERROR@42471: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@42471: expected SEMICOLON
ERROR@42471: expected command, found R_PAREN
ERROR@42622: expected R_PAREN
ERROR@42623: expected command, found OFF_KW
ERROR@42626: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@42626: expected SEMICOLON
ERROR@42626: expected command, found R_PAREN
ERROR@42867: expected R_PAREN
ERROR@42868: expected command, found OFF_KW
ERROR@42871: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@42871: expected SEMICOLON
ERROR@42871: expected command, found R_PAREN
ERROR@43266: expected R_PAREN
ERROR@43267: expected command, found OFF_KW
ERROR@43270: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@43270: expected SEMICOLON
ERROR@43270: expected command, found R_PAREN
ERROR@43700: expected R_PAREN
ERROR@43701: expected command, found OFF_KW
ERROR@43704: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@43704: expected SEMICOLON
ERROR@43704: expected command, found R_PAREN
ERROR@43823: expected R_PAREN
ERROR@43824: expected command, found OFF_KW
ERROR@43827: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@43827: expected SEMICOLON
ERROR@43827: expected command, found R_PAREN
ERROR@44370: expected R_PAREN
ERROR@44371: expected command, found OFF_KW
ERROR@44374: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@44374: expected SEMICOLON
ERROR@44374: expected command, found R_PAREN
ERROR@45299: expected R_PAREN
ERROR@45300: expected command, found OFF_KW
ERROR@45303: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@45303: expected SEMICOLON
ERROR@45303: expected command, found R_PAREN
ERROR@46708: expected R_PAREN
ERROR@46709: expected command, found OFF_KW
ERROR@46712: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@46712: expected SEMICOLON
ERROR@46712: expected command, found COMMA
ERROR@46714: expected command, found VERBOSE_KW
ERROR@46721: expected command, found R_PAREN
ERROR@47293: expected R_PAREN
ERROR@47294: expected command, found OFF_KW
ERROR@47297: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@47297: expected SEMICOLON
ERROR@47297: expected command, found COMMA
ERROR@47299: expected command, found VERBOSE_KW
ERROR@47306: expected command, found R_PAREN
ERROR@48738: expected R_PAREN
ERROR@48739: expected command, found OFF_KW
ERROR@48742: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@48742: expected SEMICOLON
ERROR@48742: expected command, found R_PAREN
ERROR@49588: expected R_PAREN
ERROR@49589: expected command, found OFF_KW
ERROR@49592: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@49592: expected SEMICOLON
ERROR@49592: expected command, found R_PAREN
ERROR@50497: expected R_PAREN
ERROR@50498: expected command, found OFF_KW
ERROR@50501: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@50501: expected SEMICOLON
ERROR@50501: expected command, found R_PAREN

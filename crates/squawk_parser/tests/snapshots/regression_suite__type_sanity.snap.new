---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/type_sanity.sql
---
SOURCE_FILE
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- TYPE_SANITY"
  WHITESPACE "\n"
  COMMENT "-- Sanity checks for common errors in making type-related system tables:"
  WHITESPACE "\n"
  COMMENT "-- pg_type, pg_class, pg_attribute, pg_range."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- None of the SELECTs here should ever find any matching entries,"
  WHITESPACE "\n"
  COMMENT "-- so the expected output is easy to maintain ;-)."
  WHITESPACE "\n"
  COMMENT "-- A test failure indicates someone messed up an entry in the system tables."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- NB: we assume the oidjoins test will have caught any dangling links,"
  WHITESPACE "\n"
  COMMENT "-- that is OID or REGPROC fields that are not zero and do not match some"
  WHITESPACE "\n"
  COMMENT "-- row in the linked-to table.  However, if we want to enforce that a link"
  WHITESPACE "\n"
  COMMENT "-- field can't be 0, we have to check it here."
  WHITESPACE "\n\n"
  COMMENT "-- directory paths and dlsuffix are passed to us in environment variables"
  WHITESPACE "\n\n\n"
  COMMENT "-- **************** pg_type ****************"
  WHITESPACE "\n\n"
  COMMENT "-- Look for illegal values in pg_type fields."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "t1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t1"
                    DOT "."
                    NAME_REF
                      IDENT "typnamespace"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "0"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE "\n    "
                PAREN_EXPR
                  L_PAREN "("
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "t1"
                          DOT "."
                          NAME_REF
                            IDENT "typlen"
                        WHITESPACE " "
                        LTEQ "<="
                        WHITESPACE " "
                        LITERAL
                          INT_NUMBER "0"
                      WHITESPACE " "
                      AND_KW "AND"
                      WHITESPACE " "
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "t1"
                          DOT "."
                          NAME_REF
                            IDENT "typlen"
                        WHITESPACE " "
                        NEQ "!="
                        WHITESPACE " "
                        PREFIX_EXPR
                          MINUS "-"
                          LITERAL
                            INT_NUMBER "1"
                    WHITESPACE " "
                    AND_KW "AND"
                    WHITESPACE " "
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "t1"
                        DOT "."
                        NAME_REF
                          IDENT "typlen"
                      WHITESPACE " "
                      NEQ "!="
                      WHITESPACE " "
                      PREFIX_EXPR
                        MINUS "-"
                        LITERAL
                          INT_NUMBER "2"
                  R_PAREN ")"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE "\n    "
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t1"
                    DOT "."
                    NAME_REF
                      IDENT "typtype"
                  WHITESPACE " "
                  NOT_IN
                    NOT_KW "not"
                    WHITESPACE " "
                    IN_KW "in"
                  WHITESPACE " "
                  TUPLE_EXPR
                    L_PAREN "("
                    LITERAL
                      STRING "'b'"
                    COMMA ","
                    WHITESPACE " "
                    LITERAL
                      STRING "'c'"
                    COMMA ","
                    WHITESPACE " "
                    LITERAL
                      STRING "'d'"
                    COMMA ","
                    WHITESPACE " "
                    LITERAL
                      STRING "'e'"
                    COMMA ","
                    WHITESPACE " "
                    LITERAL
                      STRING "'m'"
                    COMMA ","
                    WHITESPACE " "
                    LITERAL
                      STRING "'p'"
                    COMMA ","
                    WHITESPACE " "
                    LITERAL
                      STRING "'r'"
                    R_PAREN ")"
                R_PAREN ")"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE "\n    "
            PREFIX_EXPR
              NOT_KW "NOT"
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "typisdefined"
          WHITESPACE " "
          OR_KW "OR"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "typalign"
              WHITESPACE " "
              NOT_IN
                NOT_KW "not"
                WHITESPACE " "
                IN_KW "in"
              WHITESPACE " "
              TUPLE_EXPR
                L_PAREN "("
                LITERAL
                  STRING "'c'"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  STRING "'s'"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  STRING "'i'"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  STRING "'d'"
                R_PAREN ")"
            R_PAREN ")"
        WHITESPACE " "
        OR_KW "OR"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "t1"
              DOT "."
              NAME_REF
                IDENT "typstorage"
            WHITESPACE " "
            NOT_IN
              NOT_KW "not"
              WHITESPACE " "
              IN_KW "in"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                STRING "'p'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'x'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'e'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'m'"
              R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Look for \"pass by value\" types that can't be passed by value."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "t1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "typbyval"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE "\n    "
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "t1"
                      DOT "."
                      NAME_REF
                        IDENT "typlen"
                    WHITESPACE " "
                    NEQ "!="
                    WHITESPACE " "
                    LITERAL
                      INT_NUMBER "1"
                  WHITESPACE " "
                  OR_KW "OR"
                  WHITESPACE " "
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "t1"
                      DOT "."
                      NAME_REF
                        IDENT "typalign"
                    WHITESPACE " "
                    NEQ "!="
                    WHITESPACE " "
                    LITERAL
                      STRING "'c'"
                R_PAREN ")"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE "\n    "
            PAREN_EXPR
              L_PAREN "("
              BIN_EXPR
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t1"
                    DOT "."
                    NAME_REF
                      IDENT "typlen"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "2"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE " "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t1"
                    DOT "."
                    NAME_REF
                      IDENT "typalign"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  LITERAL
                    STRING "'s'"
              R_PAREN ")"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "t1"
                  DOT "."
                  NAME_REF
                    IDENT "typlen"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "4"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "t1"
                  DOT "."
                  NAME_REF
                    IDENT "typalign"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                LITERAL
                  STRING "'i'"
            R_PAREN ")"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "typlen"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "8"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "typalign"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              LITERAL
                STRING "'d'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Look for \"toastable\" types that aren't varlena."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "t1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typstorage"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          LITERAL
            STRING "'p'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "t1"
              DOT "."
              NAME_REF
                IDENT "typbyval"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "typlen"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              PREFIX_EXPR
                MINUS "-"
                LITERAL
                  INT_NUMBER "1"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Look for complex types that do not have a typrelid entry,"
  WHITESPACE "\n"
  COMMENT "-- or basic types that do."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "t1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "typtype"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'c'"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "typrelid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
          R_PAREN ")"
        WHITESPACE " "
        OR_KW "OR"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "typtype"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              LITERAL
                STRING "'c'"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "typrelid"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Look for types that should have an array type but don't."
  WHITESPACE "\n"
  COMMENT "-- Generally anything that's not a pseudotype should have an array type."
  WHITESPACE "\n"
  COMMENT "-- However, we do have a small number of exceptions."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "t1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "t1"
              DOT "."
              NAME_REF
                IDENT "typtype"
            WHITESPACE " "
            NOT_IN
              NOT_KW "not"
              WHITESPACE " "
              IN_KW "in"
            WHITESPACE " "
            PAREN_EXPR
              L_PAREN "("
              LITERAL
                STRING "'p'"
              R_PAREN ")"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "t1"
              DOT "."
              NAME_REF
                IDENT "typname"
            WHITESPACE " "
            NOT_LIKE
              NOT_KW "NOT"
              WHITESPACE " "
              LIKE_KW "LIKE"
            WHITESPACE " "
            LITERAL
              ESC_STRING "E'\\\\_%'"
        WHITESPACE "\n    "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              EXISTS_KW "EXISTS"
            WHITESPACE "\n    "
            ARG_LIST
              L_PAREN "("
              SELECT
                SELECT_CLAUSE
                  SELECT_KW "SELECT"
                  WHITESPACE " "
                  TARGET_LIST
                    TARGET
                      LITERAL
                        INT_NUMBER "1"
                WHITESPACE " "
                FROM_CLAUSE
                  FROM_KW "FROM"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "pg_type"
                  WHITESPACE " "
                  ALIAS
                    AS_KW "as"
                    WHITESPACE " "
                    NAME
                      IDENT "t2"
                WHITESPACE "\n     "
                WHERE_CLAUSE
                  WHERE_KW "WHERE"
                  WHITESPACE " "
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "t2"
                          DOT "."
                          NAME_REF
                            IDENT "typname"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        CAST_EXPR
                          PAREN_EXPR
                            L_PAREN "("
                            BIN_EXPR
                              LITERAL
                                STRING "'_'"
                              WHITESPACE " "
                              CUSTOM_OP
                                PIPE "|"
                                PIPE "|"
                              WHITESPACE " "
                              FIELD_EXPR
                                NAME_REF
                                  IDENT "t1"
                                DOT "."
                                NAME_REF
                                  IDENT "typname"
                            R_PAREN ")"
                          COLON2 "::"
                          PATH_TYPE
                            PATH
                              PATH_SEGMENT
                                NAME_REF
                                  NAME_KW "name"
                      WHITESPACE " "
                      AND_KW "AND"
                      WHITESPACE "\n           "
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "t2"
                          DOT "."
                          NAME_REF
                            IDENT "typelem"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        FIELD_EXPR
                          NAME_REF
                            IDENT "t1"
                          DOT "."
                          NAME_REF
                            IDENT "oid"
                    WHITESPACE " "
                    AND_KW "and"
                    WHITESPACE " "
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "t1"
                        DOT "."
                        NAME_REF
                          IDENT "typarray"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      FIELD_EXPR
                        NAME_REF
                          IDENT "t2"
                        DOT "."
                        NAME_REF
                          IDENT "oid"
              R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      FIELD_EXPR
        NAME_REF
          IDENT "t1"
        DOT "."
        NAME_REF
          IDENT "oid"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Make sure typarray points to a \"true\" array type of our own base"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "basetype"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "typname"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "arraytype"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "typsubscript"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE "   "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t1"
      WHITESPACE " "
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_type"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "t2"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "t1"
              DOT "."
              NAME_REF
                IDENT "typarray"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "t2"
              DOT "."
              NAME_REF
                IDENT "oid"
          R_PAREN ")"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE "  "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typarray"
          WHITESPACE " "
          NEQB "<>"
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n       "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t2"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              IS_KW "IS"
              WHITESPACE " "
              LITERAL
                NULL_KW "NULL"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE "\n        "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t2"
                DOT "."
                NAME_REF
                  IDENT "typsubscript"
              WHITESPACE " "
              NEQB "<>"
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'array_subscript_handler'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regproc"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Look for range types that do not have a pg_range entry"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "t1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typtype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'r'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n   "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              EXISTS_KW "EXISTS"
            ARG_LIST
              L_PAREN "("
              SELECT
                SELECT_CLAUSE
                  SELECT_KW "SELECT"
                  WHITESPACE " "
                  TARGET_LIST
                    TARGET
                      LITERAL
                        INT_NUMBER "1"
                WHITESPACE " "
                FROM_CLAUSE
                  FROM_KW "FROM"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "pg_range"
                  WHITESPACE " "
                  ALIAS
                    NAME
                      IDENT "r"
                WHITESPACE " "
                WHERE_CLAUSE
                  WHERE_KW "WHERE"
                  WHITESPACE " "
                  BIN_EXPR
                    NAME_REF
                      IDENT "rngtypid"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "t1"
                      DOT "."
                      NAME_REF
                        IDENT "oid"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Look for range types whose typalign isn't sufficient"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typalign"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "typalign"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "t1"
      WHITESPACE "\n     "
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_range"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "r"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "rngtypid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
      WHITESPACE "\n     "
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_type"
        WHITESPACE " "
        ALIAS
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "t2"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "rngsubtype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "oid"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typtype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'r'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "typalign"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              PAREN_EXPR
                L_PAREN "("
                CASE_EXPR
                  CASE_KW "CASE"
                  WHITESPACE " "
                  WHEN_CLAUSE
                    WHEN_KW "WHEN"
                    WHITESPACE " "
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "t2"
                        DOT "."
                        NAME_REF
                          IDENT "typalign"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      LITERAL
                        STRING "'d'"
                    WHITESPACE " "
                    THEN_KW "THEN"
                    WHITESPACE " "
                    CAST_EXPR
                      LITERAL
                        STRING "'d'"
                      COLON2 "::"
                      PATH_TYPE
                        PATH
                          PATH_SEGMENT
                            NAME_REF
                              IDENT "\"char\""
                  WHITESPACE "\n                          "
                  ELSE_KW "ELSE"
                  WHITESPACE " "
                  CAST_EXPR
                    LITERAL
                      STRING "'i'"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "\"char\""
                  WHITESPACE " "
                  END_KW "END"
                R_PAREN ")"
            WHITESPACE "\n     "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t2"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              IS_KW "IS"
              WHITESPACE " "
              LITERAL
                NULL_KW "NULL"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Text conversion routines must be provided."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "t1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "t1"
              DOT "."
              NAME_REF
                IDENT "typinput"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          WHITESPACE " "
          OR_KW "OR"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "t1"
              DOT "."
              NAME_REF
                IDENT "typoutput"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check for bogus typinput routines"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typinput"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                PAREN_EXPR
                  L_PAREN "("
                  BIN_EXPR
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p1"
                        DOT "."
                        NAME_REF
                          IDENT "pronargs"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      LITERAL
                        INT_NUMBER "1"
                    WHITESPACE " "
                    AND_KW "AND"
                    WHITESPACE " "
                    BIN_EXPR
                      INDEX_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p1"
                          DOT "."
                          NAME_REF
                            IDENT "proargtypes"
                        L_BRACK "["
                        LITERAL
                          INT_NUMBER "0"
                        R_BRACK "]"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      CAST_EXPR
                        LITERAL
                          STRING "'cstring'"
                        COLON2 "::"
                        PATH_TYPE
                          PATH
                            PATH_SEGMENT
                              NAME_REF
                                IDENT "regtype"
                  R_PAREN ")"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE "\n     "
                PAREN_EXPR
                  L_PAREN "("
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p1"
                          DOT "."
                          NAME_REF
                            IDENT "pronargs"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        LITERAL
                          INT_NUMBER "2"
                      WHITESPACE " "
                      AND_KW "AND"
                      WHITESPACE " "
                      BIN_EXPR
                        INDEX_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p1"
                            DOT "."
                            NAME_REF
                              IDENT "proargtypes"
                          L_BRACK "["
                          LITERAL
                            INT_NUMBER "0"
                          R_BRACK "]"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        CAST_EXPR
                          LITERAL
                            STRING "'cstring'"
                          COLON2 "::"
                          PATH_TYPE
                            PATH
                              PATH_SEGMENT
                                NAME_REF
                                  IDENT "regtype"
                    WHITESPACE " "
                    AND_KW "AND"
                    WHITESPACE "\n      "
                    BIN_EXPR
                      INDEX_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p1"
                          DOT "."
                          NAME_REF
                            IDENT "proargtypes"
                        L_BRACK "["
                        LITERAL
                          INT_NUMBER "1"
                        R_BRACK "]"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      CAST_EXPR
                        LITERAL
                          STRING "'oid'"
                        COLON2 "::"
                        PATH_TYPE
                          PATH
                            PATH_SEGMENT
                              NAME_REF
                                IDENT "regtype"
                  R_PAREN ")"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE "\n     "
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p1"
                          DOT "."
                          NAME_REF
                            IDENT "pronargs"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        LITERAL
                          INT_NUMBER "3"
                      WHITESPACE " "
                      AND_KW "AND"
                      WHITESPACE " "
                      BIN_EXPR
                        INDEX_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p1"
                            DOT "."
                            NAME_REF
                              IDENT "proargtypes"
                          L_BRACK "["
                          LITERAL
                            INT_NUMBER "0"
                          R_BRACK "]"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        CAST_EXPR
                          LITERAL
                            STRING "'cstring'"
                          COLON2 "::"
                          PATH_TYPE
                            PATH
                              PATH_SEGMENT
                                NAME_REF
                                  IDENT "regtype"
                    WHITESPACE " "
                    AND_KW "AND"
                    WHITESPACE "\n      "
                    BIN_EXPR
                      INDEX_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p1"
                          DOT "."
                          NAME_REF
                            IDENT "proargtypes"
                        L_BRACK "["
                        LITERAL
                          INT_NUMBER "1"
                        R_BRACK "]"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      CAST_EXPR
                        LITERAL
                          STRING "'oid'"
                        COLON2 "::"
                        PATH_TYPE
                          PATH
                            PATH_SEGMENT
                              NAME_REF
                                IDENT "regtype"
                  WHITESPACE " "
                  AND_KW "AND"
                  WHITESPACE "\n      "
                  BIN_EXPR
                    INDEX_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p1"
                        DOT "."
                        NAME_REF
                          IDENT "proargtypes"
                      L_BRACK "["
                      LITERAL
                        INT_NUMBER "2"
                      R_BRACK "]"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    CAST_EXPR
                      LITERAL
                        STRING "'int4'"
                      COLON2 "::"
                      PATH_TYPE
                        PATH
                          PATH_SEGMENT
                            NAME_REF
                              IDENT "regtype"
                R_PAREN ")"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- As of 8.0, this check finds refcursor, which is borrowing"
  WHITESPACE "\n"
  COMMENT "-- other types' I/O routines"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "typinput"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "oid"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "typtype"
              WHITESPACE " "
              IN_KW "in"
              WHITESPACE " "
              TUPLE_EXPR
                L_PAREN "("
                LITERAL
                  STRING "'b'"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  STRING "'p'"
                R_PAREN ")"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          PREFIX_EXPR
            NOT_KW "NOT"
            WHITESPACE "\n    "
            PAREN_EXPR
              L_PAREN "("
              BIN_EXPR
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t1"
                    DOT "."
                    NAME_REF
                      IDENT "typelem"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "0"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE " "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t1"
                    DOT "."
                    NAME_REF
                      IDENT "typlen"
                  WHITESPACE " "
                  L_ANGLE "<"
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "0"
              R_PAREN ")"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "prorettype"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "t1"
                  DOT "."
                  NAME_REF
                    IDENT "oid"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              PREFIX_EXPR
                NOT_KW "NOT"
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "proretset"
            R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Varlena array types will point to array_in"
  WHITESPACE "\n"
  COMMENT "-- Exception as of 8.1: int2vector and oidvector have their own I/O routines"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "t1"
              DOT "."
              NAME_REF
                IDENT "typinput"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p1"
              DOT "."
              NAME_REF
                IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "t1"
                  DOT "."
                  NAME_REF
                    IDENT "typelem"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "0"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "t1"
                  DOT "."
                  NAME_REF
                    IDENT "typlen"
                WHITESPACE " "
                L_ANGLE "<"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "0"
            R_PAREN ")"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'array_in'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regproc"
            R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- typinput routines should not be volatile"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typinput"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "provolatile"
          WHITESPACE " "
          NOT_IN
            NOT_KW "NOT"
            WHITESPACE " "
            IN_KW "IN"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'i'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'s'"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Composites, domains, enums, multiranges, ranges should all use the same input routines"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "typtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "typinput"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "t1"
          DOT "."
          NAME_REF
            IDENT "typtype"
        WHITESPACE " "
        NOT_IN
          NOT_KW "not"
          WHITESPACE " "
          IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            STRING "'b'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'p'"
          R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check for bogus typoutput routines"
  WHITESPACE "\n\n"
  COMMENT "-- As of 8.0, this check finds refcursor, which is borrowing"
  WHITESPACE "\n"
  COMMENT "-- other types' I/O routines"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "t1"
              DOT "."
              NAME_REF
                IDENT "typoutput"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p1"
              DOT "."
              NAME_REF
                IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "t1"
              DOT "."
              NAME_REF
                IDENT "typtype"
            WHITESPACE " "
            IN_KW "in"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                STRING "'b'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'p'"
              R_PAREN ")"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "pronargs"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "1"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE "\n     "
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  BIN_EXPR
                    INDEX_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p1"
                        DOT "."
                        NAME_REF
                          IDENT "proargtypes"
                      L_BRACK "["
                      LITERAL
                        INT_NUMBER "0"
                      R_BRACK "]"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "t1"
                      DOT "."
                      NAME_REF
                        IDENT "oid"
                  WHITESPACE " "
                  OR_KW "OR"
                  WHITESPACE "\n      "
                  PAREN_EXPR
                    L_PAREN "("
                    BIN_EXPR
                      BIN_EXPR
                        BIN_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p1"
                            DOT "."
                            NAME_REF
                              IDENT "oid"
                          WHITESPACE " "
                          EQ "="
                          WHITESPACE " "
                          CAST_EXPR
                            LITERAL
                              STRING "'array_out'"
                            COLON2 "::"
                            PATH_TYPE
                              PATH
                                PATH_SEGMENT
                                  NAME_REF
                                    IDENT "regproc"
                        WHITESPACE " "
                        AND_KW "AND"
                        WHITESPACE "\n       "
                        BIN_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "t1"
                            DOT "."
                            NAME_REF
                              IDENT "typelem"
                          WHITESPACE " "
                          NEQ "!="
                          WHITESPACE " "
                          LITERAL
                            INT_NUMBER "0"
                      WHITESPACE " "
                      AND_KW "AND"
                      WHITESPACE " "
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "t1"
                          DOT "."
                          NAME_REF
                            IDENT "typlen"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        PREFIX_EXPR
                          MINUS "-"
                          LITERAL
                            INT_NUMBER "1"
                    R_PAREN ")"
                R_PAREN ")"
            R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typoutput"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "prorettype"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                CAST_EXPR
                  LITERAL
                    STRING "'cstring'"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "regtype"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              PREFIX_EXPR
                NOT_KW "NOT"
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "proretset"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- typoutput routines should not be volatile"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typoutput"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "provolatile"
          WHITESPACE " "
          NOT_IN
            NOT_KW "NOT"
            WHITESPACE " "
            IN_KW "IN"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'i'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'s'"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Composites, enums, multiranges, ranges should all use the same output routines"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "typtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "typoutput"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "t1"
          DOT "."
          NAME_REF
            IDENT "typtype"
        WHITESPACE " "
        NOT_IN
          NOT_KW "not"
          WHITESPACE " "
          IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            STRING "'b'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'d'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'p'"
          R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Domains should have same typoutput as their base types"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "typname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      WHITESPACE " "
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_type"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "t2"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typbasetype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "oid"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typtype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'d'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typoutput"
          WHITESPACE " "
          IS_DISTINCT_FROM
            IS_KW "IS"
            WHITESPACE " "
            DISTINCT_KW "DISTINCT"
            WHITESPACE " "
            FROM_KW "FROM"
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "typoutput"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check for bogus typreceive routines"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typreceive"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                PAREN_EXPR
                  L_PAREN "("
                  BIN_EXPR
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p1"
                        DOT "."
                        NAME_REF
                          IDENT "pronargs"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      LITERAL
                        INT_NUMBER "1"
                    WHITESPACE " "
                    AND_KW "AND"
                    WHITESPACE " "
                    BIN_EXPR
                      INDEX_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p1"
                          DOT "."
                          NAME_REF
                            IDENT "proargtypes"
                        L_BRACK "["
                        LITERAL
                          INT_NUMBER "0"
                        R_BRACK "]"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      CAST_EXPR
                        LITERAL
                          STRING "'internal'"
                        COLON2 "::"
                        PATH_TYPE
                          PATH
                            PATH_SEGMENT
                              NAME_REF
                                IDENT "regtype"
                  R_PAREN ")"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE "\n     "
                PAREN_EXPR
                  L_PAREN "("
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p1"
                          DOT "."
                          NAME_REF
                            IDENT "pronargs"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        LITERAL
                          INT_NUMBER "2"
                      WHITESPACE " "
                      AND_KW "AND"
                      WHITESPACE " "
                      BIN_EXPR
                        INDEX_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p1"
                            DOT "."
                            NAME_REF
                              IDENT "proargtypes"
                          L_BRACK "["
                          LITERAL
                            INT_NUMBER "0"
                          R_BRACK "]"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        CAST_EXPR
                          LITERAL
                            STRING "'internal'"
                          COLON2 "::"
                          PATH_TYPE
                            PATH
                              PATH_SEGMENT
                                NAME_REF
                                  IDENT "regtype"
                    WHITESPACE " "
                    AND_KW "AND"
                    WHITESPACE "\n      "
                    BIN_EXPR
                      INDEX_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p1"
                          DOT "."
                          NAME_REF
                            IDENT "proargtypes"
                        L_BRACK "["
                        LITERAL
                          INT_NUMBER "1"
                        R_BRACK "]"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      CAST_EXPR
                        LITERAL
                          STRING "'oid'"
                        COLON2 "::"
                        PATH_TYPE
                          PATH
                            PATH_SEGMENT
                              NAME_REF
                                IDENT "regtype"
                  R_PAREN ")"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE "\n     "
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p1"
                          DOT "."
                          NAME_REF
                            IDENT "pronargs"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        LITERAL
                          INT_NUMBER "3"
                      WHITESPACE " "
                      AND_KW "AND"
                      WHITESPACE " "
                      BIN_EXPR
                        INDEX_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p1"
                            DOT "."
                            NAME_REF
                              IDENT "proargtypes"
                          L_BRACK "["
                          LITERAL
                            INT_NUMBER "0"
                          R_BRACK "]"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        CAST_EXPR
                          LITERAL
                            STRING "'internal'"
                          COLON2 "::"
                          PATH_TYPE
                            PATH
                              PATH_SEGMENT
                                NAME_REF
                                  IDENT "regtype"
                    WHITESPACE " "
                    AND_KW "AND"
                    WHITESPACE "\n      "
                    BIN_EXPR
                      INDEX_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "p1"
                          DOT "."
                          NAME_REF
                            IDENT "proargtypes"
                        L_BRACK "["
                        LITERAL
                          INT_NUMBER "1"
                        R_BRACK "]"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      CAST_EXPR
                        LITERAL
                          STRING "'oid'"
                        COLON2 "::"
                        PATH_TYPE
                          PATH
                            PATH_SEGMENT
                              NAME_REF
                                IDENT "regtype"
                  WHITESPACE " "
                  AND_KW "AND"
                  WHITESPACE "\n      "
                  BIN_EXPR
                    INDEX_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p1"
                        DOT "."
                        NAME_REF
                          IDENT "proargtypes"
                      L_BRACK "["
                      LITERAL
                        INT_NUMBER "2"
                      R_BRACK "]"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    CAST_EXPR
                      LITERAL
                        STRING "'int4'"
                      COLON2 "::"
                      PATH_TYPE
                        PATH
                          PATH_SEGMENT
                            NAME_REF
                              IDENT "regtype"
                R_PAREN ")"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- As of 7.4, this check finds refcursor, which is borrowing"
  WHITESPACE "\n"
  COMMENT "-- other types' I/O routines"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "typreceive"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "oid"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "typtype"
              WHITESPACE " "
              IN_KW "in"
              WHITESPACE " "
              TUPLE_EXPR
                L_PAREN "("
                LITERAL
                  STRING "'b'"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  STRING "'p'"
                R_PAREN ")"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          PREFIX_EXPR
            NOT_KW "NOT"
            WHITESPACE "\n    "
            PAREN_EXPR
              L_PAREN "("
              BIN_EXPR
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t1"
                    DOT "."
                    NAME_REF
                      IDENT "typelem"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "0"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE " "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t1"
                    DOT "."
                    NAME_REF
                      IDENT "typlen"
                  WHITESPACE " "
                  L_ANGLE "<"
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "0"
              R_PAREN ")"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "prorettype"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "t1"
                  DOT "."
                  NAME_REF
                    IDENT "oid"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              PREFIX_EXPR
                NOT_KW "NOT"
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "proretset"
            R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Varlena array types will point to array_recv"
  WHITESPACE "\n"
  COMMENT "-- Exception as of 8.1: int2vector and oidvector have their own I/O routines"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "t1"
              DOT "."
              NAME_REF
                IDENT "typreceive"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p1"
              DOT "."
              NAME_REF
                IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "t1"
                  DOT "."
                  NAME_REF
                    IDENT "typelem"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "0"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "t1"
                  DOT "."
                  NAME_REF
                    IDENT "typlen"
                WHITESPACE " "
                L_ANGLE "<"
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "0"
            R_PAREN ")"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "p1"
                DOT "."
                NAME_REF
                  IDENT "oid"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'array_recv'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regproc"
            R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Suspicious if typreceive doesn't take same number of args as typinput"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p2"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p2"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "t1"
              DOT "."
              NAME_REF
                IDENT "typinput"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p1"
              DOT "."
              NAME_REF
                IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "t1"
              DOT "."
              NAME_REF
                IDENT "typreceive"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p2"
              DOT "."
              NAME_REF
                IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "pronargs"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p2"
            DOT "."
            NAME_REF
              IDENT "pronargs"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- typreceive routines should not be volatile"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typreceive"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "provolatile"
          WHITESPACE " "
          NOT_IN
            NOT_KW "NOT"
            WHITESPACE " "
            IN_KW "IN"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'i'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'s'"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Composites, domains, enums, multiranges, ranges should all use the same receive routines"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "typtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "typreceive"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "t1"
          DOT "."
          NAME_REF
            IDENT "typtype"
        WHITESPACE " "
        NOT_IN
          NOT_KW "not"
          WHITESPACE " "
          IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            STRING "'b'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'p'"
          R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check for bogus typsend routines"
  WHITESPACE "\n\n"
  COMMENT "-- As of 7.4, this check finds refcursor, which is borrowing"
  WHITESPACE "\n"
  COMMENT "-- other types' I/O routines"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "t1"
              DOT "."
              NAME_REF
                IDENT "typsend"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "p1"
              DOT "."
              NAME_REF
                IDENT "oid"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "t1"
              DOT "."
              NAME_REF
                IDENT "typtype"
            WHITESPACE " "
            IN_KW "in"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                STRING "'b'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'p'"
              R_PAREN ")"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "pronargs"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "1"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE "\n     "
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  BIN_EXPR
                    INDEX_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p1"
                        DOT "."
                        NAME_REF
                          IDENT "proargtypes"
                      L_BRACK "["
                      LITERAL
                        INT_NUMBER "0"
                      R_BRACK "]"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    FIELD_EXPR
                      NAME_REF
                        IDENT "t1"
                      DOT "."
                      NAME_REF
                        IDENT "oid"
                  WHITESPACE " "
                  OR_KW "OR"
                  WHITESPACE "\n      "
                  PAREN_EXPR
                    L_PAREN "("
                    BIN_EXPR
                      BIN_EXPR
                        BIN_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "p1"
                            DOT "."
                            NAME_REF
                              IDENT "oid"
                          WHITESPACE " "
                          EQ "="
                          WHITESPACE " "
                          CAST_EXPR
                            LITERAL
                              STRING "'array_send'"
                            COLON2 "::"
                            PATH_TYPE
                              PATH
                                PATH_SEGMENT
                                  NAME_REF
                                    IDENT "regproc"
                        WHITESPACE " "
                        AND_KW "AND"
                        WHITESPACE "\n       "
                        BIN_EXPR
                          FIELD_EXPR
                            NAME_REF
                              IDENT "t1"
                            DOT "."
                            NAME_REF
                              IDENT "typelem"
                          WHITESPACE " "
                          NEQ "!="
                          WHITESPACE " "
                          LITERAL
                            INT_NUMBER "0"
                      WHITESPACE " "
                      AND_KW "AND"
                      WHITESPACE " "
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "t1"
                          DOT "."
                          NAME_REF
                            IDENT "typlen"
                        WHITESPACE " "
                        EQ "="
                        WHITESPACE " "
                        PREFIX_EXPR
                          MINUS "-"
                          LITERAL
                            INT_NUMBER "1"
                    R_PAREN ")"
                R_PAREN ")"
            R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typsend"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "prorettype"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                CAST_EXPR
                  LITERAL
                    STRING "'bytea'"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "regtype"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              PREFIX_EXPR
                NOT_KW "NOT"
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "proretset"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- typsend routines should not be volatile"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typsend"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "provolatile"
          WHITESPACE " "
          NOT_IN
            NOT_KW "NOT"
            WHITESPACE " "
            IN_KW "IN"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'i'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'s'"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Composites, enums, multiranges, ranges should all use the same send routines"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      DISTINCT_CLAUSE
        DISTINCT_KW "DISTINCT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "typtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "typsend"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "t1"
          DOT "."
          NAME_REF
            IDENT "typtype"
        WHITESPACE " "
        NOT_IN
          NOT_KW "not"
          WHITESPACE " "
          IN_KW "in"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            STRING "'b'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'d'"
          COMMA ","
          WHITESPACE " "
          LITERAL
            STRING "'p'"
          R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Domains should have same typsend as their base types"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "typname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      WHITESPACE " "
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_type"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "t2"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typbasetype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "oid"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typtype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'d'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typsend"
          WHITESPACE " "
          IS_DISTINCT_FROM
            IS_KW "IS"
            WHITESPACE " "
            DISTINCT_KW "DISTINCT"
            WHITESPACE " "
            FROM_KW "FROM"
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "typsend"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check for bogus typmodin routines"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typmodin"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p1"
                      DOT "."
                      NAME_REF
                        IDENT "pronargs"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    LITERAL
                      INT_NUMBER "1"
                  WHITESPACE " "
                  AND_KW "AND"
                  WHITESPACE "\n     "
                  BIN_EXPR
                    INDEX_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p1"
                        DOT "."
                        NAME_REF
                          IDENT "proargtypes"
                      L_BRACK "["
                      LITERAL
                        INT_NUMBER "0"
                      R_BRACK "]"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    CAST_EXPR
                      LITERAL
                        STRING "'cstring[]'"
                      COLON2 "::"
                      PATH_TYPE
                        PATH
                          PATH_SEGMENT
                            NAME_REF
                              IDENT "regtype"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE "\n     "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p1"
                    DOT "."
                    NAME_REF
                      IDENT "prorettype"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  CAST_EXPR
                    LITERAL
                      STRING "'int4'"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "regtype"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              PREFIX_EXPR
                NOT_KW "NOT"
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "proretset"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- typmodin routines should not be volatile"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typmodin"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "provolatile"
          WHITESPACE " "
          NOT_IN
            NOT_KW "NOT"
            WHITESPACE " "
            IN_KW "IN"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'i'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'s'"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check for bogus typmodout routines"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typmodout"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p1"
                      DOT "."
                      NAME_REF
                        IDENT "pronargs"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    LITERAL
                      INT_NUMBER "1"
                  WHITESPACE " "
                  AND_KW "AND"
                  WHITESPACE "\n     "
                  BIN_EXPR
                    INDEX_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p1"
                        DOT "."
                        NAME_REF
                          IDENT "proargtypes"
                      L_BRACK "["
                      LITERAL
                        INT_NUMBER "0"
                      R_BRACK "]"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    CAST_EXPR
                      LITERAL
                        STRING "'int4'"
                      COLON2 "::"
                      PATH_TYPE
                        PATH
                          PATH_SEGMENT
                            NAME_REF
                              IDENT "regtype"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE "\n     "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p1"
                    DOT "."
                    NAME_REF
                      IDENT "prorettype"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  CAST_EXPR
                    LITERAL
                      STRING "'cstring'"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "regtype"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              PREFIX_EXPR
                NOT_KW "NOT"
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "proretset"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- typmodout routines should not be volatile"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typmodout"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "provolatile"
          WHITESPACE " "
          NOT_IN
            NOT_KW "NOT"
            WHITESPACE " "
            IN_KW "IN"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'i'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'s'"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Array types should have same typmodin/out as their element types"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "typname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typelem"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "t1"
                  DOT "."
                  NAME_REF
                    IDENT "typmodin"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "t2"
                  DOT "."
                  NAME_REF
                    IDENT "typmodin"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "t1"
                  DOT "."
                  NAME_REF
                    IDENT "typmodout"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "t2"
                  DOT "."
                  NAME_REF
                    IDENT "typmodout"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Array types should have same typdelim as their element types"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "typname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typarray"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t1"
                DOT "."
                NAME_REF
                  IDENT "typdelim"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "t2"
                DOT "."
                NAME_REF
                  IDENT "typdelim"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Look for array types whose typalign isn't sufficient"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typalign"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "typalign"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t2"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typarray"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t2"
            DOT "."
            NAME_REF
              IDENT "typalign"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            CASE_EXPR
              CASE_KW "CASE"
              WHITESPACE " "
              WHEN_CLAUSE
                WHEN_KW "WHEN"
                WHITESPACE " "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t1"
                    DOT "."
                    NAME_REF
                      IDENT "typalign"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  LITERAL
                    STRING "'d'"
                WHITESPACE " "
                THEN_KW "THEN"
                WHITESPACE " "
                CAST_EXPR
                  LITERAL
                    STRING "'d'"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "\"char\""
              WHITESPACE "\n                         "
              ELSE_KW "ELSE"
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'i'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "\"char\""
              WHITESPACE " "
              END_KW "END"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check for typelem set without a handler"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typelem"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typelem"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typsubscript"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check for misuse of standard subscript handlers"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typelem"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typlen"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typbyval"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typsubscript"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'array_subscript_handler'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t1"
                    DOT "."
                    NAME_REF
                      IDENT "typelem"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "0"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE " "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t1"
                    DOT "."
                    NAME_REF
                      IDENT "typlen"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  PREFIX_EXPR
                    MINUS "-"
                    LITERAL
                      INT_NUMBER "1"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              PREFIX_EXPR
                NOT_KW "NOT"
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "t1"
                  DOT "."
                  NAME_REF
                    IDENT "typbyval"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typelem"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typlen"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typbyval"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typsubscript"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'raw_array_subscript_handler'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regproc"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t1"
                    DOT "."
                    NAME_REF
                      IDENT "typelem"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "0"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE " "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t1"
                    DOT "."
                    NAME_REF
                      IDENT "typlen"
                  WHITESPACE " "
                  R_ANGLE ">"
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "0"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              PREFIX_EXPR
                NOT_KW "NOT"
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "t1"
                  DOT "."
                  NAME_REF
                    IDENT "typbyval"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check for bogus typanalyze routines"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_proc"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "p1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typanalyze"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "p1"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "p1"
                      DOT "."
                      NAME_REF
                        IDENT "pronargs"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    LITERAL
                      INT_NUMBER "1"
                  WHITESPACE " "
                  AND_KW "AND"
                  WHITESPACE "\n     "
                  BIN_EXPR
                    INDEX_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "p1"
                        DOT "."
                        NAME_REF
                          IDENT "proargtypes"
                      L_BRACK "["
                      LITERAL
                        INT_NUMBER "0"
                      R_BRACK "]"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    CAST_EXPR
                      LITERAL
                        STRING "'internal'"
                      COLON2 "::"
                      PATH_TYPE
                        PATH
                          PATH_SEGMENT
                            NAME_REF
                              IDENT "regtype"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE "\n     "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "p1"
                    DOT "."
                    NAME_REF
                      IDENT "prorettype"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  CAST_EXPR
                    LITERAL
                      STRING "'bool'"
                    COLON2 "::"
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "regtype"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE " "
              PREFIX_EXPR
                NOT_KW "NOT"
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "p1"
                  DOT "."
                  NAME_REF
                    IDENT "proretset"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- there does not seem to be a reason to care about volatility of typanalyze"
  WHITESPACE "\n\n"
  COMMENT "-- domains inherit their base type's typanalyze"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "d"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "d"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "d"
            DOT "."
            NAME_REF
              IDENT "typanalyze"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t"
            DOT "."
            NAME_REF
              IDENT "typanalyze"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "d"
      WHITESPACE " "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_type"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "t"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "d"
            DOT "."
            NAME_REF
              IDENT "typbasetype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "t"
            DOT "."
            NAME_REF
              IDENT "oid"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "d"
          DOT "."
          NAME_REF
            IDENT "typanalyze"
        WHITESPACE " "
        NEQ "!="
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "t"
          DOT "."
          NAME_REF
            IDENT "typanalyze"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- range_typanalyze should be used for all and only range types"
  WHITESPACE "\n"
  COMMENT "-- (but exclude domains, which we checked above)"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t"
            DOT "."
            NAME_REF
              IDENT "typanalyze"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t"
      WHITESPACE " "
      JOIN
        LEFT_KW "LEFT"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_range"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "r"
        WHITESPACE " "
        ON_KW "on"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t"
            DOT "."
            NAME_REF
              IDENT "oid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "rngtypid"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t"
            DOT "."
            NAME_REF
              IDENT "typbasetype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        BIN_EXPR
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t"
                DOT "."
                NAME_REF
                  IDENT "typanalyze"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'range_typanalyze'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regproc"
            R_PAREN ")"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "r"
                DOT "."
                NAME_REF
                  IDENT "rngtypid"
              WHITESPACE " "
              IS_NOT
                IS_KW "IS"
                WHITESPACE " "
                NOT_KW "NOT"
              WHITESPACE " "
              LITERAL
                NULL_KW "NULL"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- array_typanalyze should be used for all and only array types"
  WHITESPACE "\n"
  COMMENT "-- (but exclude domains, which we checked above)"
  WHITESPACE "\n"
  COMMENT "-- As of 9.2 this finds int2vector and oidvector, which are weird anyway"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t"
            DOT "."
            NAME_REF
              IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t"
            DOT "."
            NAME_REF
              IDENT "typanalyze"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t"
            DOT "."
            NAME_REF
              IDENT "typbasetype"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        BIN_EXPR
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t"
                DOT "."
                NAME_REF
                  IDENT "typanalyze"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'array_typanalyze'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regproc"
            R_PAREN ")"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE "\n    "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "t"
                DOT "."
                NAME_REF
                  IDENT "typsubscript"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              CAST_EXPR
                LITERAL
                  STRING "'array_subscript_handler'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regproc"
            R_PAREN ")"
    WHITESPACE "\n"
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- **************** pg_class ****************"
  WHITESPACE "\n\n"
  COMMENT "-- Look for illegal values in pg_class fields"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "relname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "c1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "relkind"
            WHITESPACE " "
            NOT_IN
              NOT_KW "NOT"
              WHITESPACE " "
              IN_KW "IN"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                STRING "'r'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'i'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'S'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'t'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'v'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'m'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'c'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'f'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'p'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'I'"
              R_PAREN ")"
          WHITESPACE " "
          OR_KW "OR"
          WHITESPACE "\n    "
          BIN_EXPR
            NAME_REF
              IDENT "relpersistence"
            WHITESPACE " "
            NOT_IN
              NOT_KW "NOT"
              WHITESPACE " "
              IN_KW "IN"
            WHITESPACE " "
            TUPLE_EXPR
              L_PAREN "("
              LITERAL
                STRING "'p'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'u'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'t'"
              R_PAREN ")"
        WHITESPACE " "
        OR_KW "OR"
        WHITESPACE "\n    "
        BIN_EXPR
          NAME_REF
            IDENT "relreplident"
          WHITESPACE " "
          NOT_IN
            NOT_KW "NOT"
            WHITESPACE " "
            IN_KW "IN"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'d'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'n'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'f'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'i'"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- All tables, indexes, partitioned indexes and matviews should have an"
  WHITESPACE "\n"
  COMMENT "-- access method."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "relname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "c1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "relkind"
          WHITESPACE " "
          NOT_IN
            NOT_KW "NOT"
            WHITESPACE " "
            IN_KW "IN"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'S'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'v'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'f'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'c'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'p'"
            R_PAREN ")"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE "\n    "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "relam"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Conversely, sequences, views, foreign tables, types and partitioned"
  WHITESPACE "\n"
  COMMENT "-- tables shouldn't have them."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "relname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "c1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "relkind"
          WHITESPACE " "
          IN_KW "IN"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'S'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'v'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'f'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'c'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'p'"
            R_PAREN ")"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE "\n    "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "relam"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Indexes and partitioned indexes should have AMs of type 'i'."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pc"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pc"
            DOT "."
            NAME_REF
              IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pa"
            DOT "."
            NAME_REF
              IDENT "amname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pa"
            DOT "."
            NAME_REF
              IDENT "amtype"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "pc"
      WHITESPACE " "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_am"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "pa"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "pc"
              DOT "."
              NAME_REF
                IDENT "relam"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "pa"
              DOT "."
              NAME_REF
                IDENT "oid"
          R_PAREN ")"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "pc"
            DOT "."
            NAME_REF
              IDENT "relkind"
          WHITESPACE " "
          IN_KW "IN"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'i'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'I'"
            R_PAREN ")"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE "\n    "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "pa"
            DOT "."
            NAME_REF
              IDENT "amtype"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          LITERAL
            STRING "'i'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Tables, matviews etc should have AMs of type 't'"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pc"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pc"
            DOT "."
            NAME_REF
              IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pa"
            DOT "."
            NAME_REF
              IDENT "amname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "pa"
            DOT "."
            NAME_REF
              IDENT "amtype"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "pc"
      WHITESPACE " "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_am"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "pa"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "pc"
              DOT "."
              NAME_REF
                IDENT "relam"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            FIELD_EXPR
              NAME_REF
                IDENT "pa"
              DOT "."
              NAME_REF
                IDENT "oid"
          R_PAREN ")"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "pc"
            DOT "."
            NAME_REF
              IDENT "relkind"
          WHITESPACE " "
          IN_KW "IN"
          WHITESPACE " "
          TUPLE_EXPR
            L_PAREN "("
            LITERAL
              STRING "'r'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'t'"
            COMMA ","
            WHITESPACE " "
            LITERAL
              STRING "'m'"
            R_PAREN ")"
        WHITESPACE " "
        AND_KW "and"
        WHITESPACE "\n    "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "pa"
            DOT "."
            NAME_REF
              IDENT "amtype"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          LITERAL
            STRING "'t'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- **************** pg_attribute ****************"
  WHITESPACE "\n\n"
  COMMENT "-- Look for illegal values in pg_attribute fields"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "attrelid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "attname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_attribute"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "a1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "a1"
                  DOT "."
                  NAME_REF
                    IDENT "attrelid"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "0"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE " "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "a1"
                  DOT "."
                  NAME_REF
                    IDENT "atttypid"
                WHITESPACE " "
                EQ "="
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "0"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "a1"
                DOT "."
                NAME_REF
                  IDENT "attnum"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
          WHITESPACE " "
          OR_KW "OR"
          WHITESPACE "\n    "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "a1"
              DOT "."
              NAME_REF
                IDENT "attinhcount"
            WHITESPACE " "
            L_ANGLE "<"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        WHITESPACE " "
        OR_KW "OR"
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "a1"
                DOT "."
                NAME_REF
                  IDENT "attinhcount"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            PREFIX_EXPR
              NOT_KW "NOT"
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "a1"
                DOT "."
                NAME_REF
                  IDENT "attislocal"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Cross-check attnum against parent relation"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "attrelid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "attname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "relname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_attribute"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "a1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "c1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "attrelid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "attnum"
          WHITESPACE " "
          R_ANGLE ">"
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "relnatts"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Detect missing pg_attribute entries: should have as many non-system"
  WHITESPACE "\n"
  COMMENT "-- attributes as parent relation expects"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "c1"
            DOT "."
            NAME_REF
              IDENT "relname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "c1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        FIELD_EXPR
          NAME_REF
            IDENT "c1"
          DOT "."
          NAME_REF
            IDENT "relnatts"
        WHITESPACE " "
        NEQ "!="
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  CALL_EXPR
                    NAME_REF
                      IDENT "count"
                    ARG_LIST
                      L_PAREN "("
                      STAR "*"
                      R_PAREN ")"
            WHITESPACE " "
            FROM_CLAUSE
              FROM_KW "FROM"
              WHITESPACE " "
              NAME_REF
                IDENT "pg_attribute"
              WHITESPACE " "
              ALIAS
                AS_KW "AS"
                WHITESPACE " "
                NAME
                  IDENT "a1"
            WHITESPACE "\n                      "
            WHERE_CLAUSE
              WHERE_KW "WHERE"
              WHITESPACE " "
              BIN_EXPR
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "a1"
                    DOT "."
                    NAME_REF
                      IDENT "attrelid"
                  WHITESPACE " "
                  EQ "="
                  WHITESPACE " "
                  FIELD_EXPR
                    NAME_REF
                      IDENT "c1"
                    DOT "."
                    NAME_REF
                      IDENT "oid"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE " "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "a1"
                    DOT "."
                    NAME_REF
                      IDENT "attnum"
                  WHITESPACE " "
                  R_ANGLE ">"
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "0"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Cross-check against pg_type entry"
  WHITESPACE "\n"
  COMMENT "-- NOTE: we allow attstorage to be 'plain' even when typstorage is not;"
  WHITESPACE "\n"
  COMMENT "-- this is mainly for toast tables."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "attrelid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "attname"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "typname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_attribute"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "a1"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "t1"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "a1"
            DOT "."
            NAME_REF
              IDENT "atttypid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "t1"
            DOT "."
            NAME_REF
              IDENT "oid"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "a1"
                    DOT "."
                    NAME_REF
                      IDENT "attlen"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t1"
                    DOT "."
                    NAME_REF
                      IDENT "typlen"
                WHITESPACE " "
                OR_KW "OR"
                WHITESPACE "\n     "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "a1"
                    DOT "."
                    NAME_REF
                      IDENT "attalign"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t1"
                    DOT "."
                    NAME_REF
                      IDENT "typalign"
              WHITESPACE " "
              OR_KW "OR"
              WHITESPACE "\n     "
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "a1"
                  DOT "."
                  NAME_REF
                    IDENT "attbyval"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "t1"
                  DOT "."
                  NAME_REF
                    IDENT "typbyval"
            WHITESPACE " "
            OR_KW "OR"
            WHITESPACE "\n     "
            PAREN_EXPR
              L_PAREN "("
              BIN_EXPR
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "a1"
                    DOT "."
                    NAME_REF
                      IDENT "attstorage"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  FIELD_EXPR
                    NAME_REF
                      IDENT "t1"
                    DOT "."
                    NAME_REF
                      IDENT "typstorage"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE " "
                BIN_EXPR
                  FIELD_EXPR
                    NAME_REF
                      IDENT "a1"
                    DOT "."
                    NAME_REF
                      IDENT "attstorage"
                  WHITESPACE " "
                  NEQ "!="
                  WHITESPACE " "
                  LITERAL
                    STRING "'p'"
              R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Look for IsCatalogTextUniqueIndexOid() omissions."
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "is_catalog_text_unique_index_oid"
    PARAM_LIST
      L_PAREN "("
      PARAM
        PATH_TYPE
          IDENT "oid"
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "bool"
    WHITESPACE "\n    "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'regresslib'"
  ERROR
    COMMA ","
  WHITESPACE " "
  ERROR
    STRING "'is_catalog_text_unique_index_oid'"
  WHITESPACE "\n    "
  ERROR
    LANGUAGE_KW "LANGUAGE"
  WHITESPACE " "
  ERROR
    IDENT "C"
  WHITESPACE " "
  ERROR
    STRICT_KW "STRICT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            NAME_REF
              IDENT "indexrelid"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regclass"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_index"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      PAREN_EXPR
        L_PAREN "("
        BIN_EXPR
          CALL_EXPR
            NAME_REF
              IDENT "is_catalog_text_unique_index_oid"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "indexrelid"
              R_PAREN ")"
          WHITESPACE " "
          NEQB "<>"
          WHITESPACE "\n       "
          PAREN_EXPR
            L_PAREN "("
            BIN_EXPR
              BIN_EXPR
                NAME_REF
                  IDENT "indisunique"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE "\n        "
                BIN_EXPR
                  NAME_REF
                    IDENT "indexrelid"
                  WHITESPACE " "
                  L_ANGLE "<"
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "16384"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE "\n        "
              CALL_EXPR
                NAME_REF
                  EXISTS_KW "EXISTS"
                WHITESPACE " "
                ARG_LIST
                  L_PAREN "("
                  SELECT
                    SELECT_CLAUSE
                      SELECT_KW "SELECT"
                      WHITESPACE " "
                      TARGET_LIST
                        TARGET
                          LITERAL
                            INT_NUMBER "1"
                    WHITESPACE " "
                    FROM_CLAUSE
                      FROM_KW "FROM"
                      WHITESPACE " "
                      NAME_REF
                        IDENT "pg_attribute"
                    WHITESPACE "\n                "
                    WHERE_CLAUSE
                      WHERE_KW "WHERE"
                      WHITESPACE " "
                      BIN_EXPR
                        BIN_EXPR
                          NAME_REF
                            IDENT "attrelid"
                          WHITESPACE " "
                          EQ "="
                          WHITESPACE " "
                          NAME_REF
                            IDENT "indexrelid"
                        WHITESPACE " "
                        AND_KW "AND"
                        WHITESPACE " "
                        BIN_EXPR
                          NAME_REF
                            IDENT "atttypid"
                          WHITESPACE " "
                          EQ "="
                          WHITESPACE " "
                          CAST_EXPR
                            LITERAL
                              STRING "'text'"
                            COLON2 "::"
                            PATH_TYPE
                              PATH
                                PATH_SEGMENT
                                  NAME_REF
                                    IDENT "regtype"
                  R_PAREN ")"
            R_PAREN ")"
        R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- **************** pg_range ****************"
  WHITESPACE "\n\n"
  COMMENT "-- Look for illegal values in pg_range fields."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "rngtypid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "rngsubtype"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_range"
      WHITESPACE " "
      ALIAS
        AS_KW "as"
        WHITESPACE " "
        NAME
          IDENT "r"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "r"
              DOT "."
              NAME_REF
                IDENT "rngtypid"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          WHITESPACE " "
          OR_KW "OR"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "r"
              DOT "."
              NAME_REF
                IDENT "rngsubtype"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
        WHITESPACE " "
        OR_KW "OR"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "rngsubopc"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- rngcollation should be specified iff subtype is collatable"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "rngtypid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "rngsubtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "rngcollation"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "t"
            DOT "."
            NAME_REF
              IDENT "typcollation"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_range"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "r"
      WHITESPACE " "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_type"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "t"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "t"
            DOT "."
            NAME_REF
              IDENT "oid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "rngsubtype"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "rngcollation"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
        WHITESPACE " "
        NEQ "!="
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            NAME_REF
              IDENT "typcollation"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- opclass had better be a btree opclass accepting the subtype."
  WHITESPACE "\n"
  COMMENT "-- We must allow anyarray matches, cf IsBinaryCoercible()"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "rngtypid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "rngsubtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o"
            DOT "."
            NAME_REF
              IDENT "opcmethod"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "o"
            DOT "."
            NAME_REF
              IDENT "opcname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_range"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "r"
      WHITESPACE " "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_opclass"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "o"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "o"
            DOT "."
            NAME_REF
              IDENT "oid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "rngsubopc"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "o"
            DOT "."
            NAME_REF
              IDENT "opcmethod"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "403"
        WHITESPACE " "
        OR_KW "OR"
        WHITESPACE "\n    "
        PAREN_EXPR
          L_PAREN "("
          BIN_EXPR
            PAREN_EXPR
              L_PAREN "("
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "o"
                  DOT "."
                  NAME_REF
                    IDENT "opcintype"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "r"
                  DOT "."
                  NAME_REF
                    IDENT "rngsubtype"
              R_PAREN ")"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE " "
            PREFIX_EXPR
              NOT_KW "NOT"
              WHITESPACE "\n     "
              PAREN_EXPR
                L_PAREN "("
                BIN_EXPR
                  BIN_EXPR
                    FIELD_EXPR
                      NAME_REF
                        IDENT "o"
                      DOT "."
                      NAME_REF
                        IDENT "opcintype"
                    WHITESPACE " "
                    EQ "="
                    WHITESPACE " "
                    CAST_EXPR
                      LITERAL
                        STRING "'pg_catalog.anyarray'"
                      COLON2 "::"
                      PATH_TYPE
                        PATH
                          PATH_SEGMENT
                            NAME_REF
                              IDENT "regtype"
                  WHITESPACE " "
                  AND_KW "AND"
                  WHITESPACE "\n      "
                  CALL_EXPR
                    NAME_REF
                      EXISTS_KW "EXISTS"
                    ARG_LIST
                      L_PAREN "("
                      SELECT
                        SELECT_CLAUSE
                          SELECT_KW "select"
                          WHITESPACE " "
                          TARGET_LIST
                            TARGET
                              LITERAL
                                INT_NUMBER "1"
                        WHITESPACE " "
                        FROM_CLAUSE
                          FROM_KW "from"
                          WHITESPACE " "
                          FIELD_EXPR
                            NAME_REF
                              IDENT "pg_catalog"
                            DOT "."
                            NAME_REF
                              IDENT "pg_type"
                        WHITESPACE " "
                        WHERE_CLAUSE
                          WHERE_KW "where"
                          WHITESPACE "\n             "
                          BIN_EXPR
                            BIN_EXPR
                              BIN_EXPR
                                NAME_REF
                                  IDENT "oid"
                                WHITESPACE " "
                                EQ "="
                                WHITESPACE " "
                                FIELD_EXPR
                                  NAME_REF
                                    IDENT "r"
                                  DOT "."
                                  NAME_REF
                                    IDENT "rngsubtype"
                              WHITESPACE " "
                              AND_KW "and"
                              WHITESPACE " "
                              BIN_EXPR
                                NAME_REF
                                  IDENT "typelem"
                                WHITESPACE " "
                                NEQ "!="
                                WHITESPACE " "
                                LITERAL
                                  INT_NUMBER "0"
                            WHITESPACE " "
                            AND_KW "and"
                            WHITESPACE "\n             "
                            BIN_EXPR
                              NAME_REF
                                IDENT "typsubscript"
                              WHITESPACE " "
                              EQ "="
                              WHITESPACE " "
                              CAST_EXPR
                                LITERAL
                                  STRING "'array_subscript_handler'"
                                COLON2 "::"
                                PATH_TYPE
                                  PATH
                                    PATH_SEGMENT
                                      NAME_REF
                                        IDENT "regproc"
                      R_PAREN ")"
                R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- canonical function, if any, had better match the range type"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "rngtypid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "rngsubtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_range"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "r"
      WHITESPACE " "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_proc"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "p"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "oid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "rngcanonical"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            NAME_REF
              IDENT "pronargs"
            WHITESPACE " "
            NEQ "!="
            WHITESPACE " "
            LITERAL
              INT_NUMBER "1"
          WHITESPACE " "
          OR_KW "OR"
          WHITESPACE " "
          BIN_EXPR
            INDEX_EXPR
              NAME_REF
                IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "0"
              R_BRACK "]"
            WHITESPACE " "
            NEQ "!="
            WHITESPACE " "
            NAME_REF
              IDENT "rngtypid"
        WHITESPACE " "
        OR_KW "OR"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "prorettype"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          NAME_REF
            IDENT "rngtypid"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- subdiff function, if any, had better match the subtype"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "rngtypid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "rngsubtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "proname"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_range"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "r"
      WHITESPACE " "
      JOIN
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "pg_proc"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "p"
        WHITESPACE " "
        ON_KW "ON"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "p"
            DOT "."
            NAME_REF
              IDENT "oid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "rngsubdiff"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              NAME_REF
                IDENT "pronargs"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              LITERAL
                INT_NUMBER "2"
            WHITESPACE "\n    "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              INDEX_EXPR
                NAME_REF
                  IDENT "proargtypes"
                L_BRACK "["
                LITERAL
                  INT_NUMBER "0"
                R_BRACK "]"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              NAME_REF
                IDENT "rngsubtype"
          WHITESPACE " "
          OR_KW "OR"
          WHITESPACE " "
          BIN_EXPR
            INDEX_EXPR
              NAME_REF
                IDENT "proargtypes"
              L_BRACK "["
              LITERAL
                INT_NUMBER "1"
              R_BRACK "]"
            WHITESPACE " "
            NEQ "!="
            WHITESPACE " "
            NAME_REF
              IDENT "rngsubtype"
        WHITESPACE "\n    "
        OR_KW "OR"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "prorettype"
          WHITESPACE " "
          NEQ "!="
          WHITESPACE " "
          CAST_EXPR
            LITERAL
              STRING "'pg_catalog.float8'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "regtype"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- every range should have a valid multirange"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "rngtypid"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "rngsubtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "rngmultitypid"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_range"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "r"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "rngmultitypid"
          WHITESPACE " "
          IS_KW "IS"
          WHITESPACE " "
          LITERAL
            NULL_KW "NULL"
        WHITESPACE " "
        OR_KW "OR"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "r"
            DOT "."
            NAME_REF
              IDENT "rngmultitypid"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "0"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Create a table that holds all the known in-core data types and leave it"
  WHITESPACE "\n"
  COMMENT "-- around so as pg_upgrade is able to test their binary compatibility."
  WHITESPACE "\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "tab_core_types"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE "\n  "
        TARGET_LIST
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'(11,12)'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "point"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'(1,1),(2,2)'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "line"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'((11,11),(12,12))'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "lseg"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'((11,11),(13,13))'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "box"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'((11,12),(13,13),(14,14))'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      PATH_KW "path"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "openedpath"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'[(11,12),(13,13),(14,14)]'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      PATH_KW "path"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "closedpath"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'((11,12),(13,13),(14,14))'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "polygon"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'1,1,1'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "circle"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'today'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "date"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'now'"
              COLON2 "::"
              TIME_TYPE
                NAME_REF
                  TIME_KW "time"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'now'"
              COLON2 "::"
              TIME_TYPE
                NAME_REF
                  TIMESTAMP_KW "timestamp"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'now'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "timetz"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'now'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "timestamptz"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'12 seconds'"
              COLON2 "::"
              INTERVAL_TYPE
                INTERVAL_KW "interval"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'{\"reason\":\"because\"}'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      JSON_KW "json"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'{\"when\":\"now\"}'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "jsonb"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'$.a[*] ? (@ > 2)'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "jsonpath"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'127.0.0.1'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "inet"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'127.0.0.0/8'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "cidr"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'00:01:03:86:1c:ba'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "macaddr8"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'00:01:03:86:1c:ba'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "macaddr"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                INT_NUMBER "2"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "int2"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              LITERAL
                INT_NUMBER "4"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "int4"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              LITERAL
                INT_NUMBER "8"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "int8"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                INT_NUMBER "4"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "float4"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'8'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "float8"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              CALL_EXPR
                NAME_REF
                  IDENT "pi"
                ARG_LIST
                  L_PAREN "("
                  R_PAREN ")"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      NUMERIC_KW "numeric"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'foo'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "\"char\""
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'c'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "bpchar"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'abc'"
              COLON2 "::"
              CHAR_TYPE
                VARCHAR_KW "varchar"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'name'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      NAME_KW "name"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'txt'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      TEXT_KW "text"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                TRUE_KW "true"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "bool"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                ESC_STRING "E'\\\\xDEADBEEF'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "bytea"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                BIT_STRING "B'10001'"
              COLON2 "::"
              BIT_TYPE
                BIT_KW "bit"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                BIT_STRING "B'10001'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "varbit"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "varbit"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'12.34'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "money"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'abc'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "refcursor"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'1 2'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "int2vector"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'1 2'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "oidvector"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              CALL_EXPR
                NAME_REF
                  FORMAT_KW "format"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    STRING "'%I=UC/%I'"
                  COMMA ","
                  WHITESPACE " "
                  NAME_REF
                    USER_KW "USER"
                  COMMA ","
                  WHITESPACE " "
                  NAME_REF
                    USER_KW "USER"
                  R_PAREN ")"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "aclitem"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "aclitem"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'a fat cat sat on a mat and ate a fat rat'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "tsvector"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'fat & rat'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "tsquery"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "uuid"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'11'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "xid8"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'pg_class'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'regtype'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regtype"
            WHITESPACE " "
            NAME
              TYPE_KW "type"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'pg_monitor'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regrole"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              CAST_EXPR
                LITERAL
                  STRING "'pg_class'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "oid"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'(1,1)'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "tid"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'2'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "xid"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'3'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "cid"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'10:20:10,14,15'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "txid_snapshot"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'10:20:10,14,15'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "pg_snapshot"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'16/B374D848'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "pg_lsn"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                INT_NUMBER "1"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "information_schema"
                  DOT "."
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "cardinal_number"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'l'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "information_schema"
                  DOT "."
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "character_data"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'n'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "information_schema"
                  DOT "."
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "sql_identifier"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'now'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "information_schema"
                  DOT "."
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "time_stamp"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'YES'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "information_schema"
                  DOT "."
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "yes_or_no"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'(1,2)'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "int4range"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'{(1,2)}'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "int4multirange"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'(3,4)'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "int8range"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'{(3,4)}'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "int8multirange"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'(3,4)'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "numrange"
          COMMA ","
          WHITESPACE " "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'{(3,4)}'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "nummultirange"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'(2020-01-02, 2021-02-03)'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "daterange"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'{(2020-01-02, 2021-02-03)}'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "datemultirange"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'(2020-01-02 03:04:05, 2021-02-03 06:07:08)'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "tsrange"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'{(2020-01-02 03:04:05, 2021-02-03 06:07:08)}'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "tsmultirange"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'(2020-01-02 03:04:05, 2021-02-03 06:07:08)'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "tstzrange"
          COMMA ","
          WHITESPACE "\n  "
          TARGET
            CAST_EXPR
              LITERAL
                STRING "'{(2020-01-02 03:04:05, 2021-02-03 06:07:08)}'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "tstzmultirange"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Sanity check on the previous table, checking that all core types are"
  WHITESPACE "\n"
  COMMENT "-- included in this table."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "oid"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "typname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "typtype"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "typelem"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "typarray"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_type"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  NAME_REF
                    IDENT "oid"
                  WHITESPACE " "
                  L_ANGLE "<"
                  WHITESPACE " "
                  LITERAL
                    INT_NUMBER "16384"
                WHITESPACE " "
                AND_KW "AND"
                WHITESPACE "\n    "
                COMMENT "-- Exclude pseudotypes and composite types."
                WHITESPACE "\n    "
                BIN_EXPR
                  NAME_REF
                    IDENT "typtype"
                  WHITESPACE " "
                  NOT_IN
                    NOT_KW "NOT"
                    WHITESPACE " "
                    IN_KW "IN"
                  WHITESPACE " "
                  TUPLE_EXPR
                    L_PAREN "("
                    LITERAL
                      STRING "'p'"
                    COMMA ","
                    WHITESPACE " "
                    LITERAL
                      STRING "'c'"
                    R_PAREN ")"
              WHITESPACE " "
              AND_KW "AND"
              WHITESPACE "\n    "
              COMMENT "-- These reg* types cannot be pg_upgraded, so discard them."
              WHITESPACE "\n    "
              BIN_EXPR
                NAME_REF
                  IDENT "oid"
                WHITESPACE " "
                NEQ "!="
                WHITESPACE " "
                CALL_EXPR
                  NAME_REF
                    ALL_KW "ALL"
                  L_PAREN "("
                  CAST_EXPR
                    ARRAY_EXPR
                      ARRAY_KW "ARRAY"
                      L_BRACK "["
                      LITERAL
                        STRING "'regproc'"
                      COMMA ","
                      WHITESPACE " "
                      LITERAL
                        STRING "'regprocedure'"
                      COMMA ","
                      WHITESPACE " "
                      LITERAL
                        STRING "'regoper'"
                      COMMA ","
                      WHITESPACE "\n                     "
                      LITERAL
                        STRING "'regoperator'"
                      COMMA ","
                      WHITESPACE " "
                      LITERAL
                        STRING "'regconfig'"
                      COMMA ","
                      WHITESPACE " "
                      LITERAL
                        STRING "'regdictionary'"
                      COMMA ","
                      WHITESPACE "\n                     "
                      LITERAL
                        STRING "'regnamespace'"
                      COMMA ","
                      WHITESPACE " "
                      LITERAL
                        STRING "'regcollation'"
                      R_BRACK "]"
                    COLON2 "::"
                    ARRAY_TYPE
                      PATH_TYPE
                        PATH
                          PATH_SEGMENT
                            NAME_REF
                              IDENT "regtype"
                      L_BRACK "["
                      R_BRACK "]"
                  R_PAREN ")"
            WHITESPACE " "
            AND_KW "AND"
            WHITESPACE "\n    "
            COMMENT "-- Discard types that do not accept input values as these cannot be"
            WHITESPACE "\n    "
            COMMENT "-- tested easily."
            WHITESPACE "\n    "
            COMMENT "-- Note: XML might be disabled at compile-time."
            WHITESPACE "\n    "
            BIN_EXPR
              NAME_REF
                IDENT "oid"
              WHITESPACE " "
              NEQ "!="
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  ALL_KW "ALL"
                L_PAREN "("
                CAST_EXPR
                  ARRAY_EXPR
                    ARRAY_KW "ARRAY"
                    L_BRACK "["
                    LITERAL
                      STRING "'gtsvector'"
                    COMMA ","
                    WHITESPACE " "
                    LITERAL
                      STRING "'pg_node_tree'"
                    COMMA ","
                    WHITESPACE "\n                     "
                    LITERAL
                      STRING "'pg_ndistinct'"
                    COMMA ","
                    WHITESPACE " "
                    LITERAL
                      STRING "'pg_dependencies'"
                    COMMA ","
                    WHITESPACE " "
                    LITERAL
                      STRING "'pg_mcv_list'"
                    COMMA ","
                    WHITESPACE "\n                     "
                    LITERAL
                      STRING "'pg_brin_bloom_summary'"
                    COMMA ","
                    WHITESPACE "\n                     "
                    LITERAL
                      STRING "'pg_brin_minmax_multi_summary'"
                    COMMA ","
                    WHITESPACE " "
                    LITERAL
                      STRING "'xml'"
                    R_BRACK "]"
                  COLON2 "::"
                  ARRAY_TYPE
                    PATH_TYPE
                      PATH
                        PATH_SEGMENT
                          NAME_REF
                            IDENT "regtype"
                    L_BRACK "["
                    R_BRACK "]"
                R_PAREN ")"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE "\n    "
          COMMENT "-- Discard arrays."
          WHITESPACE "\n    "
          PREFIX_EXPR
            NOT_KW "NOT"
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                EXISTS_KW "EXISTS"
              WHITESPACE " "
              ARG_LIST
                L_PAREN "("
                SELECT
                  SELECT_CLAUSE
                    SELECT_KW "SELECT"
                    WHITESPACE " "
                    TARGET_LIST
                      TARGET
                        LITERAL
                          INT_NUMBER "1"
                  WHITESPACE " "
                  FROM_CLAUSE
                    FROM_KW "FROM"
                    WHITESPACE " "
                    NAME_REF
                      IDENT "pg_type"
                    WHITESPACE " "
                    ALIAS
                      NAME
                        IDENT "u"
                  WHITESPACE " "
                  WHERE_CLAUSE
                    WHERE_KW "WHERE"
                    WHITESPACE " "
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "u"
                        DOT "."
                        NAME_REF
                          IDENT "typarray"
                      WHITESPACE " "
                      EQ "="
                      WHITESPACE " "
                      FIELD_EXPR
                        NAME_REF
                          IDENT "t"
                        DOT "."
                        NAME_REF
                          IDENT "oid"
                R_PAREN ")"
        WHITESPACE "\n    "
        COMMENT "-- Exclude everything from the table created above.  This checks"
        WHITESPACE "\n    "
        COMMENT "-- that no in-core types are missing in tab_core_types."
        WHITESPACE "\n    "
        AND_KW "AND"
        WHITESPACE " "
        PREFIX_EXPR
          NOT_KW "NOT"
          WHITESPACE " "
          CALL_EXPR
            NAME_REF
              EXISTS_KW "EXISTS"
            WHITESPACE " "
            ARG_LIST
              L_PAREN "("
              SELECT
                SELECT_CLAUSE
                  SELECT_KW "SELECT"
                  WHITESPACE " "
                  TARGET_LIST
                    TARGET
                      LITERAL
                        INT_NUMBER "1"
                WHITESPACE "\n                    "
                FROM_CLAUSE
                  FROM_KW "FROM"
                  WHITESPACE " "
                  NAME_REF
                    IDENT "pg_attribute"
                  WHITESPACE " "
                  ALIAS
                    NAME
                      IDENT "a"
                WHITESPACE "\n                    "
                WHERE_CLAUSE
                  WHERE_KW "WHERE"
                  WHITESPACE " "
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "a"
                          DOT "."
                          NAME_REF
                            IDENT "atttypid"
                        EQ "="
                        FIELD_EXPR
                          NAME_REF
                            IDENT "t"
                          DOT "."
                          NAME_REF
                            IDENT "oid"
                      WHITESPACE " "
                      AND_KW "AND"
                      WHITESPACE "\n                          "
                      BIN_EXPR
                        FIELD_EXPR
                          NAME_REF
                            IDENT "a"
                          DOT "."
                          NAME_REF
                            IDENT "attnum"
                        WHITESPACE " "
                        R_ANGLE ">"
                        WHITESPACE " "
                        LITERAL
                          INT_NUMBER "0"
                    WHITESPACE " "
                    AND_KW "AND"
                    WHITESPACE "\n                          "
                    BIN_EXPR
                      FIELD_EXPR
                        NAME_REF
                          IDENT "a"
                        DOT "."
                        NAME_REF
                          IDENT "attrelid"
                      EQ "="
                      CAST_EXPR
                        LITERAL
                          STRING "'tab_core_types'"
                        COLON2 "::"
                        PATH_TYPE
                          PATH
                            PATH_SEGMENT
                              NAME_REF
                                IDENT "regclass"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
---
ERROR@15411: expected string literal
ERROR@15411: expected SEMICOLON
ERROR@15412: expected command, found COLON
ERROR@15413: expected command, found STRING
ERROR@15425: expected command, found COMMA
ERROR@15427: expected command, found STRING
ERROR@15466: expected command, found LANGUAGE_KW
ERROR@15475: expected command, found IDENT
ERROR@15477: expected command, found STRICT_KW

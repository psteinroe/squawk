---
source: crates/squawk_parser/tests/regression_suite.rs
assertion_line: 87
input_file: crates/squawk_parser/tests/data/regression_suite/stats.sql
---
SOURCE_FILE
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Test cumulative stats system"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Must be run after tenk2 has been created (by create_table),"
  WHITESPACE "\n"
  COMMENT "-- populated (by create_misc) and indexed (by create_index)."
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n\n"
  COMMENT "-- conditio sine qua non"
  WHITESPACE "\n"
  SHOW_STMT
    SHOW_KW "SHOW"
    WHITESPACE " "
    NAME_REF
      IDENT "track_counts"
  SEMICOLON ";"
  WHITESPACE "  "
  COMMENT "-- must be on"
  WHITESPACE "\n\n"
  COMMENT "-- List of backend types, contexts and objects tracked in pg_stat_io."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "backend_type"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            OBJECT_KW "object"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "context"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_io"
    WHITESPACE "\n  "
    ORDER_BY_CLAUSE
      ORDER_KW "ORDER"
      WHITESPACE " "
      BY_KW "BY"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "backend_type"
        WHITESPACE " "
        COLLATE_KW "COLLATE"
        WHITESPACE " "
        NAME_REF
          IDENT "\"C\""
      COMMA ","
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          OBJECT_KW "object"
        WHITESPACE " "
        COLLATE_KW "COLLATE"
        WHITESPACE " "
        NAME_REF
          IDENT "\"C\""
      COMMA ","
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "context"
        WHITESPACE " "
        COLLATE_KW "COLLATE"
        WHITESPACE " "
        NAME_REF
          IDENT "\"C\""
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ensure that both seqscan and indexscan plans are allowed"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "on"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_indexscan"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "on"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- for the moment, we don't want index-only scans here"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_indexonlyscan"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- not enabled by default, but we want to test it..."
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "track_functions"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    LITERAL
      STRING "'all'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- record dboid for later use"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "oid"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "dboid"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_database"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "datname"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "current_database"
          ARG_LIST
            L_PAREN "("
            R_PAREN ")"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- save counters"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "stats_fetch_consistency"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    SNAPSHOT_KW "snapshot"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "prevstats"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            FIELD_EXPR
              NAME_REF
                IDENT "t"
              DOT "."
              NAME_REF
                IDENT "seq_scan"
          COMMA ","
          WHITESPACE " "
          TARGET
            FIELD_EXPR
              NAME_REF
                IDENT "t"
              DOT "."
              NAME_REF
                IDENT "seq_tup_read"
          COMMA ","
          WHITESPACE " "
          TARGET
            FIELD_EXPR
              NAME_REF
                IDENT "t"
              DOT "."
              NAME_REF
                IDENT "idx_scan"
          COMMA ","
          WHITESPACE " "
          TARGET
            FIELD_EXPR
              NAME_REF
                IDENT "t"
              DOT "."
              NAME_REF
                IDENT "idx_tup_fetch"
          COMMA ","
          WHITESPACE "\n       "
          TARGET
            PAREN_EXPR
              L_PAREN "("
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "b"
                  DOT "."
                  NAME_REF
                    IDENT "heap_blks_read"
                WHITESPACE " "
                PLUS "+"
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "b"
                  DOT "."
                  NAME_REF
                    IDENT "heap_blks_hit"
              R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "heap_blks"
          COMMA ","
          WHITESPACE "\n       "
          TARGET
            PAREN_EXPR
              L_PAREN "("
              BIN_EXPR
                FIELD_EXPR
                  NAME_REF
                    IDENT "b"
                  DOT "."
                  NAME_REF
                    IDENT "idx_blks_read"
                WHITESPACE " "
                PLUS "+"
                WHITESPACE " "
                FIELD_EXPR
                  NAME_REF
                    IDENT "b"
                  DOT "."
                  NAME_REF
                    IDENT "idx_blks_hit"
              R_PAREN ")"
            WHITESPACE " "
            AS_KW "AS"
            WHITESPACE " "
            NAME
              IDENT "idx_blks"
          COMMA ","
          WHITESPACE "\n       "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "pg_stat_get_snapshot_timestamp"
              ARG_LIST
                L_PAREN "("
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "snap_ts"
      WHITESPACE "\n  "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_catalog"
          DOT "."
          NAME_REF
            IDENT "pg_stat_user_tables"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "t"
        COMMA ","
        WHITESPACE "\n       "
        FIELD_EXPR
          NAME_REF
            IDENT "pg_catalog"
          DOT "."
          NAME_REF
            IDENT "pg_statio_user_tables"
        WHITESPACE " "
        ALIAS
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "b"
      WHITESPACE "\n "
      WHERE_CLAUSE
        WHERE_KW "WHERE"
        WHITESPACE " "
        BIN_EXPR
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "t"
              DOT "."
              NAME_REF
                IDENT "relname"
            EQ "="
            LITERAL
              STRING "'tenk2'"
          WHITESPACE " "
          AND_KW "AND"
          WHITESPACE " "
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "b"
              DOT "."
              NAME_REF
                IDENT "relname"
            EQ "="
            LITERAL
              STRING "'tenk2'"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- test effects of TRUNCATE on n_live_tup/n_dead_tup counters"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "trunc_stats_test"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "serial"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "trunc_stats_test1"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "serial"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "stuff"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "trunc_stats_test2"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "serial"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "trunc_stats_test3"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "serial"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "stuff"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "trunc_stats_test4"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                IDENT "serial"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check that n_live_tup is reset to 0 after truncate"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  TRUNCATE_STMT
    TRUNCATE_KW "TRUNCATE"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "trunc_stats_test"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test involving a truncate in a transaction; 4 ins but only 1 live"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test1"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test1"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test1"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "id"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "id"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        IN_KW "IN"
        WHITESPACE " "
        TUPLE_EXPR
          L_PAREN "("
          LITERAL
            INT_NUMBER "1"
          COMMA ","
          WHITESPACE " "
          LITERAL
            INT_NUMBER "2"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DELETE_STMT
    DELETE_KW "DELETE"
    WHITESPACE " "
    FROM_KW "FROM"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "3"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test1"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "id"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    BIN_EXPR
      NAME_REF
        IDENT "id"
      WHITESPACE " "
      PLUS "+"
      WHITESPACE " "
      LITERAL
        INT_NUMBER "100"
  SEMICOLON ";"
  WHITESPACE "\n"
  TRUNCATE_STMT
    TRUNCATE_KW "TRUNCATE"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "trunc_stats_test1"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test1"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- use a savepoint: 1 insert, 1 live"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test2"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test2"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  SAVEPOINT_STMT
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "p1"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test2"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  TRUNCATE_STMT
    TRUNCATE_KW "TRUNCATE"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "trunc_stats_test2"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test2"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  RELEASE_SAVEPOINT_STMT
    RELEASE_KW "RELEASE"
    WHITESPACE " "
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "p1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- rollback a savepoint: this should count 4 inserts and have 2"
  WHITESPACE "\n"
  COMMENT "-- live tuples after commit (and 2 dead ones due to aborted subxact)"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test3"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test3"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  SAVEPOINT_STMT
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "p1"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test3"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test3"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  TRUNCATE_STMT
    TRUNCATE_KW "TRUNCATE"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "trunc_stats_test3"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test3"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "p1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- rollback a truncate: this should count 2 inserts and produce 2 dead tuples"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test4"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test4"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  TRUNCATE_STMT
    TRUNCATE_KW "TRUNCATE"
    WHITESPACE " "
    TABLE_LIST
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "trunc_stats_test4"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test4"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- do a seqscan"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk2"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- do an indexscan"
  WHITESPACE "\n"
  COMMENT "-- make sure it is not a bitmap scan, which might skip fetching heap tuples"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_bitmapscan"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "tenk2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "unique1"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_bitmapscan"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ensure pending stats are flushed"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_force_next_flush"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check effects"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "stats_fetch_consistency"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    SNAPSHOT_KW "snapshot"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "relname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "n_tup_ins"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "n_tup_upd"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "n_tup_del"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "n_live_tup"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "n_dead_tup"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_user_tables"
    WHITESPACE "\n "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "relname"
        WHITESPACE " "
        LIKE_KW "like"
        WHITESPACE " "
        LITERAL
          STRING "'trunc_stats_test%'"
    WHITESPACE " "
    ORDER_BY_CLAUSE
      ORDER_KW "order"
      WHITESPACE " "
      BY_KW "by"
      WHITESPACE " "
      NAME_REF
        IDENT "relname"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "st"
              DOT "."
              NAME_REF
                IDENT "seq_scan"
            WHITESPACE " "
            GTEQ ">="
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "pr"
                DOT "."
                NAME_REF
                  IDENT "seq_scan"
              WHITESPACE " "
              PLUS "+"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "st"
              DOT "."
              NAME_REF
                IDENT "seq_tup_read"
            WHITESPACE " "
            GTEQ ">="
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "pr"
                DOT "."
                NAME_REF
                  IDENT "seq_tup_read"
              WHITESPACE " "
              PLUS "+"
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "cl"
                DOT "."
                NAME_REF
                  IDENT "reltuples"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "st"
              DOT "."
              NAME_REF
                IDENT "idx_scan"
            WHITESPACE " "
            GTEQ ">="
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "pr"
                DOT "."
                NAME_REF
                  IDENT "idx_scan"
              WHITESPACE " "
              PLUS "+"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "st"
              DOT "."
              NAME_REF
                IDENT "idx_tup_fetch"
            WHITESPACE " "
            GTEQ ">="
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "pr"
                DOT "."
                NAME_REF
                  IDENT "idx_tup_fetch"
              WHITESPACE " "
              PLUS "+"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_user_tables"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "st"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "cl"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "prevstats"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "pr"
    WHITESPACE "\n "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "st"
            DOT "."
            NAME_REF
              IDENT "relname"
          EQ "="
          LITERAL
            STRING "'tenk2'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "cl"
            DOT "."
            NAME_REF
              IDENT "relname"
          EQ "="
          LITERAL
            STRING "'tenk2'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "st"
                DOT "."
                NAME_REF
                  IDENT "heap_blks_read"
              WHITESPACE " "
              PLUS "+"
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "st"
                DOT "."
                NAME_REF
                  IDENT "heap_blks_hit"
            WHITESPACE " "
            GTEQ ">="
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "pr"
                DOT "."
                NAME_REF
                  IDENT "heap_blks"
              WHITESPACE " "
              PLUS "+"
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "cl"
                DOT "."
                NAME_REF
                  IDENT "relpages"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          BIN_EXPR
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "st"
                DOT "."
                NAME_REF
                  IDENT "idx_blks_read"
              WHITESPACE " "
              PLUS "+"
              WHITESPACE " "
              FIELD_EXPR
                NAME_REF
                  IDENT "st"
                DOT "."
                NAME_REF
                  IDENT "idx_blks_hit"
            WHITESPACE " "
            GTEQ ">="
            WHITESPACE " "
            BIN_EXPR
              FIELD_EXPR
                NAME_REF
                  IDENT "pr"
                DOT "."
                NAME_REF
                  IDENT "idx_blks"
              WHITESPACE " "
              PLUS "+"
              WHITESPACE " "
              LITERAL
                INT_NUMBER "1"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_statio_user_tables"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "st"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "pg_class"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "cl"
      COMMA ","
      WHITESPACE " "
      NAME_REF
        IDENT "prevstats"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "pr"
    WHITESPACE "\n "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "st"
            DOT "."
            NAME_REF
              IDENT "relname"
          EQ "="
          LITERAL
            STRING "'tenk2'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          FIELD_EXPR
            NAME_REF
              IDENT "cl"
            DOT "."
            NAME_REF
              IDENT "relname"
          EQ "="
          LITERAL
            STRING "'tenk2'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            FIELD_EXPR
              NAME_REF
                IDENT "pr"
              DOT "."
              NAME_REF
                IDENT "snap_ts"
            WHITESPACE " "
            L_ANGLE "<"
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "pg_stat_get_snapshot_timestamp"
              ARG_LIST
                L_PAREN "("
                R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "snapshot_newer"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "prevstats"
      WHITESPACE " "
      ALIAS
        AS_KW "AS"
        WHITESPACE " "
        NAME
          IDENT "pr"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "----"
  WHITESPACE "\n"
  COMMENT "-- Basic tests for track_functions"
  WHITESPACE "\n"
  COMMENT "---"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "stats_test_func1"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "VOID"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$BEGIN END;$$"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              LITERAL
                STRING "'stats_test_func1()'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regprocedure"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "stats_test_func1_oid"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "stats_test_func2"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "VOID"
    WHITESPACE " "
    FUNC_OPTION_LIST
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
      WHITESPACE " "
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$BEGIN END;$$"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              LITERAL
                STRING "'stats_test_func2()'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regprocedure"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "stats_test_func2_oid"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- test that stats are accumulated"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "stats_fetch_consistency"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NONE_KW "none"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_function_calls"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "stats_test_func1_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_xact_function_calls"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "stats_test_func1_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stats_test_func1"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_xact_function_calls"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "stats_test_func1_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stats_test_func1"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_xact_function_calls"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "stats_test_func1_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_function_calls"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "stats_test_func1_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Verify that function stats are not transactional"
  WHITESPACE "\n\n"
  COMMENT "-- rolled back savepoint in committing transaction"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stats_test_func2"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SAVEPOINT_STMT
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "foo"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stats_test_func2"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "foo"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_xact_function_calls"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "stats_test_func2_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stats_test_func2"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- rolled back transaction"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stats_test_func2"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_force_next_flush"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check collected stats"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "funcname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "calls"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_user_functions"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "funcid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        ERROR
          COLON ":"
  ERROR
    IDENT "stats_test_func1_oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "funcname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "calls"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_user_functions"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "funcid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        ERROR
          COLON ":"
  ERROR
    IDENT "stats_test_func2_oid"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- check that a rolled back drop function stats leaves stats alive"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "funcname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "calls"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_user_functions"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "funcid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        ERROR
          COLON ":"
  ERROR
    IDENT "stats_test_func1_oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "stats_test_func1"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- shouldn't be visible via view"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "funcname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "calls"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_user_functions"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "funcid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        ERROR
          COLON ":"
  ERROR
    IDENT "stats_test_func1_oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- but still via oid access"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_function_calls"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "stats_test_func1_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "funcname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "calls"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_user_functions"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "funcid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        ERROR
          COLON ":"
  ERROR
    IDENT "stats_test_func1_oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_function_calls"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "stats_test_func1_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- check that function dropped in main transaction leaves no stats behind"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "stats_test_func1"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "funcname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "calls"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_user_functions"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "funcid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        ERROR
          COLON ":"
  ERROR
    IDENT "stats_test_func1_oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_function_calls"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "stats_test_func1_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check that function dropped in a subtransaction leaves no stats behind"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stats_test_func2"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SAVEPOINT_STMT
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "stats_test_func2"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SAVEPOINT_STMT
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "b"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "stats_test_func2"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "funcname"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "calls"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_user_functions"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "funcid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        ERROR
          COLON ":"
  ERROR
    IDENT "stats_test_func2_oid"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_function_calls"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "stats_test_func2_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  CREATE_TABLE
    COMMENT "-- Check that stats for relations are dropped. For that we need to access stats"
    WHITESPACE "\n"
    COMMENT "-- by oid after the DROP TABLE. Save oids."
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "drop_stats_test"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "drop_stats_test"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              LITERAL
                STRING "'drop_stats_test'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "drop_stats_test_oid"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "drop_stats_test_xact"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "drop_stats_test_xact"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              LITERAL
                STRING "'drop_stats_test_xact'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "drop_stats_test_xact_oid"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "drop_stats_test_subxact"
    TABLE_ARGS
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "drop_stats_test_subxact"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              LITERAL
                STRING "'drop_stats_test_subxact'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "drop_stats_test_subxact_oid"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_force_next_flush"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_live_tuples"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "drop_stats_test_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "drop_stats_test"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_live_tuples"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "drop_stats_test_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_xact_tuples_inserted"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "drop_stats_test_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check that rollback protects against having stats dropped and that local"
  WHITESPACE "\n"
  COMMENT "-- modifications don't pose a problem"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_live_tuples"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "drop_stats_test_xact_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_tuples_inserted"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "drop_stats_test_xact_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_xact_tuples_inserted"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "drop_stats_test_xact_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "drop_stats_test_xact"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_xact_tuples_inserted"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "drop_stats_test_xact_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "drop_stats_test_xact"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_xact_tuples_inserted"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "drop_stats_test_xact_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_force_next_flush"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_live_tuples"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "drop_stats_test_xact_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_tuples_inserted"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "drop_stats_test_xact_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- transactional drop"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_live_tuples"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "drop_stats_test_xact_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_tuples_inserted"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "drop_stats_test_xact_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "drop_stats_test_xact"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_xact_tuples_inserted"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "drop_stats_test_xact_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "drop_stats_test_xact"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_xact_tuples_inserted"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "drop_stats_test_xact_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_force_next_flush"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_live_tuples"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "drop_stats_test_xact_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_tuples_inserted"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "drop_stats_test_xact_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- savepoint rollback (2 levels)"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_live_tuples"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "drop_stats_test_subxact_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "drop_stats_test_subxact"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  SAVEPOINT_STMT
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "sp1"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "drop_stats_test_subxact"
    WHITESPACE " "
    DEFAULT_KW "DEFAULT"
    WHITESPACE " "
    VALUES_KW "VALUES"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_xact_tuples_inserted"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "drop_stats_test_subxact_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SAVEPOINT_STMT
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "sp2"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "drop_stats_test_subxact"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "sp2"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_xact_tuples_inserted"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "drop_stats_test_subxact_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_force_next_flush"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_live_tuples"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "drop_stats_test_subxact_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- savepoint rolback (1 level)"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_live_tuples"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "drop_stats_test_subxact_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  SAVEPOINT_STMT
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "sp1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "drop_stats_test_subxact"
  SEMICOLON ";"
  WHITESPACE "\n"
  SAVEPOINT_STMT
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "sp2"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "sp1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_live_tuples"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "drop_stats_test_subxact_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- and now actually drop"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_live_tuples"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "drop_stats_test_subxact_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  SAVEPOINT_STMT
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "sp1"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "drop_stats_test_subxact"
  SEMICOLON ";"
  WHITESPACE "\n"
  SAVEPOINT_STMT
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "sp2"
  SEMICOLON ";"
  WHITESPACE "\n"
  RELEASE_SAVEPOINT_STMT
    RELEASE_KW "RELEASE"
    WHITESPACE " "
    SAVEPOINT_KW "SAVEPOINT"
    WHITESPACE " "
    NAME_REF
      IDENT "sp1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_live_tuples"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "drop_stats_test_subxact_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test1"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test2"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test3"
    COMMA ","
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "trunc_stats_test4"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "prevstats"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-----"
  WHITESPACE "\n"
  COMMENT "-- Test that last_seq_scan, last_idx_scan are correctly maintained"
  WHITESPACE "\n"
  COMMENT "--"
  WHITESPACE "\n"
  COMMENT "-- Perform test using a temporary table. That way autovacuum etc won't"
  WHITESPACE "\n"
  COMMENT "-- interfere. To be able to check that timestamps increase, we sleep for 100ms"
  WHITESPACE "\n"
  COMMENT "-- between tests, assuming that there aren't systems with a coarser timestamp"
  WHITESPACE "\n"
  COMMENT "-- granularity."
  WHITESPACE "\n"
  COMMENT "-----"
  WHITESPACE "\n\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMPORARY_KW "TEMPORARY"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_last_scan"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "idx_col"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "primary"
          WHITESPACE " "
          KEY_KW "key"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "noidx_col"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_last_scan"
    COLUMN_LIST
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "idx_col"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "noidx_col"
      R_PAREN ")"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_force_next_flush"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "last_seq_scan"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "last_idx_scan"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_all_tables"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "relid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'test_last_scan'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_reset_single_table_counters"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'test_last_scan'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "seq_scan"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "idx_scan"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_all_tables"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "relid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'test_last_scan'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ensure we start out with exactly one index and sequential scan"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "on"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_indexscan"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "on"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_bitmapscan"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "test_last_scan"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "noidx_col"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "test_last_scan"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "noidx_col"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "test_last_scan"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "idx_col"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "test_last_scan"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "idx_col"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_force_next_flush"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fetch timestamps from before the next test"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "last_seq_scan"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "test_last_seq"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "last_idx_scan"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "test_last_idx"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_all_tables"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "relid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'test_last_scan'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_sleep"
            ARG_LIST
              L_PAREN "("
              LITERAL
                FLOAT_NUMBER "0.1"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE " "
  COMMENT "-- assume a minimum timestamp granularity of 100ms"
  WHITESPACE "\n\n"
  COMMENT "-- cause one sequential scan"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "on"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_indexscan"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_bitmapscan"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "test_last_scan"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "noidx_col"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "test_last_scan"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "noidx_col"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_force_next_flush"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- check that just sequential scan stats were incremented"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "seq_scan"
        COMMA ","
        WHITESPACE " "
        ERROR
          COLON ":"
        TARGET
          BIN_EXPR
            LITERAL
              STRING "'test_last_seq'"
            WHITESPACE " "
            L_ANGLE "<"
            WHITESPACE " "
            NAME_REF
              IDENT "last_seq_scan"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "seq_ok"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "idx_scan"
        COMMA ","
        WHITESPACE " "
        ERROR
          COLON ":"
        TARGET
          BIN_EXPR
            LITERAL
              STRING "'test_last_idx'"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            NAME_REF
              IDENT "last_idx_scan"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "idx_ok"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_all_tables"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "relid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'test_last_scan'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fetch timestamps from before the next test"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "last_seq_scan"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "test_last_seq"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "last_idx_scan"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "test_last_idx"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_all_tables"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "relid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'test_last_scan'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_sleep"
            ARG_LIST
              L_PAREN "("
              LITERAL
                FLOAT_NUMBER "0.1"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- cause one index scan"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_indexscan"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "on"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_bitmapscan"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "test_last_scan"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "idx_col"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "test_last_scan"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "idx_col"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_force_next_flush"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- check that just index scan stats were incremented"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "seq_scan"
        COMMA ","
        WHITESPACE " "
        ERROR
          COLON ":"
        TARGET
          BIN_EXPR
            LITERAL
              STRING "'test_last_seq'"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            NAME_REF
              IDENT "last_seq_scan"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "seq_ok"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "idx_scan"
        COMMA ","
        WHITESPACE " "
        ERROR
          COLON ":"
        TARGET
          BIN_EXPR
            LITERAL
              STRING "'test_last_idx'"
            WHITESPACE " "
            L_ANGLE "<"
            WHITESPACE " "
            NAME_REF
              IDENT "last_idx_scan"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "idx_ok"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_all_tables"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "relid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'test_last_scan'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- fetch timestamps from before the next test"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "last_seq_scan"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "test_last_seq"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "last_idx_scan"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "test_last_idx"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_all_tables"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "relid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'test_last_scan'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_sleep"
            ARG_LIST
              L_PAREN "("
              LITERAL
                FLOAT_NUMBER "0.1"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- cause one bitmap index scan"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_indexscan"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_bitmapscan"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "on"
  SEMICOLON ";"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "off"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "test_last_scan"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "idx_col"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "count"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "test_last_scan"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "idx_col"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_force_next_flush"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- check that just index scan stats were incremented"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "seq_scan"
        COMMA ","
        WHITESPACE " "
        ERROR
          COLON ":"
        TARGET
          BIN_EXPR
            LITERAL
              STRING "'test_last_seq'"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            NAME_REF
              IDENT "last_seq_scan"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "seq_ok"
        COMMA ","
        WHITESPACE " "
        TARGET
          NAME_REF
            IDENT "idx_scan"
        COMMA ","
        WHITESPACE " "
        ERROR
          COLON ":"
        TARGET
          BIN_EXPR
            LITERAL
              STRING "'test_last_idx'"
            WHITESPACE " "
            L_ANGLE "<"
            WHITESPACE " "
            NAME_REF
              IDENT "last_idx_scan"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "idx_ok"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_all_tables"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "relid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'test_last_scan'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-----"
  WHITESPACE "\n"
  COMMENT "-- Test reset of some stats for shared table"
  WHITESPACE "\n"
  COMMENT "-----"
  WHITESPACE "\n\n"
  COMMENT "-- This updates the comment of the database currently in use in"
  WHITESPACE "\n"
  COMMENT "-- pg_shdescription with a fake value, then sets it back to its"
  WHITESPACE "\n"
  COMMENT "-- original value."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "shobj_description"
            ARG_LIST
              L_PAREN "("
              FIELD_EXPR
                NAME_REF
                  IDENT "d"
                DOT "."
                NAME_REF
                  IDENT "oid"
              COMMA ","
              WHITESPACE " "
              LITERAL
                STRING "'pg_database'"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "description_before"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_database"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "d"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "datname"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "current_database"
          ARG_LIST
            L_PAREN "("
            R_PAREN ")"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- force some stats in pg_shdescription."
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "current_database"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "as"
          WHITESPACE " "
          NAME
            IDENT "datname"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT_STMT
    COMMENT_KW "COMMENT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    DATABASE_KW "DATABASE"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "\"datname\""
  WHITESPACE " "
  ERROR
    IS_KW "IS"
  WHITESPACE " "
  ERROR
    STRING "'This is a test comment'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_force_next_flush"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- check that the stats are reset."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            PAREN_EXPR
              L_PAREN "("
              BIN_EXPR
                NAME_REF
                  IDENT "n_tup_ins"
                WHITESPACE " "
                PLUS "+"
                WHITESPACE " "
                NAME_REF
                  IDENT "n_tup_upd"
              R_PAREN ")"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "has_data"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_all_tables"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "relid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'pg_shdescription'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_reset_single_table_counters"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                LITERAL
                  STRING "'pg_shdescription'"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "regclass"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            PAREN_EXPR
              L_PAREN "("
              BIN_EXPR
                NAME_REF
                  IDENT "n_tup_ins"
                WHITESPACE " "
                PLUS "+"
                WHITESPACE " "
                NAME_REF
                  IDENT "n_tup_upd"
              R_PAREN ")"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "0"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "has_data"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_all_tables"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "relid"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CAST_EXPR
          LITERAL
            STRING "'pg_shdescription'"
          COLON2 "::"
          PATH_TYPE
            PATH
              PATH_SEGMENT
                NAME_REF
                  IDENT "regclass"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- set back comment"
  WHITESPACE "\n  "
  COMMENT_STMT
    COMMENT_KW "COMMENT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    DATABASE_KW "DATABASE"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "\"datname\""
  WHITESPACE " "
  ERROR
    IS_KW "IS"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    STRING "'description_before'"
  SEMICOLON ";"
  WHITESPACE "\n  "
  COMMENT_STMT
    COMMENT_KW "COMMENT"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    DATABASE_KW "DATABASE"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "\"datname\""
  WHITESPACE " "
  ERROR
    IS_KW "IS"
  WHITESPACE " "
  ERROR
    NULL_KW "NULL"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-----"
  WHITESPACE "\n"
  COMMENT "-- Test that various stats views are being properly populated"
  WHITESPACE "\n"
  COMMENT "-----"
  WHITESPACE "\n\n"
  COMMENT "-- Test that sessions is incremented when a new session is started in pg_stat_database"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "sessions"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "db_stat_sessions"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_database"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "datname"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  CALL_EXPR
                    NAME_REF
                      IDENT "current_database"
                    ARG_LIST
                      L_PAREN "("
                      R_PAREN ")"
          R_PAREN ")"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_force_next_flush"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "sessions"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            ERROR
              COLON ":"
          NAME
            IDENT "db_stat_sessions"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_database"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "datname"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  CALL_EXPR
                    NAME_REF
                      IDENT "current_database"
                    ARG_LIST
                      L_PAREN "("
                      R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test pg_stat_checkpointer checkpointer-related stats, together with pg_stat_wal"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "num_requested"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "rqst_ckpts_before"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_checkpointer"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test pg_stat_wal"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "wal_bytes"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "wal_bytes_before"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_wal"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test pg_stat_get_backend_wal()"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "wal_bytes"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "backend_wal_bytes_before"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "pg_stat_get_backend_wal"
        ARG_LIST
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              IDENT "pg_backend_pid"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
          R_PAREN ")"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Make a temp table so our temp schema exists"
  WHITESPACE "\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMP_KW "TEMP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_stats_temp"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              INT_NUMBER "17"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_stats_temp"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Checkpoint twice: The checkpointer reports stats after reporting completion"
  WHITESPACE "\n"
  COMMENT "-- of the checkpoint. But after a second checkpoint we'll see at least the"
  WHITESPACE "\n"
  COMMENT "-- results of the first."
  WHITESPACE "\n"
  CHECKPOINT_STMT
    CHECKPOINT_KW "CHECKPOINT"
  SEMICOLON ";"
  WHITESPACE "\n"
  CHECKPOINT_STMT
    CHECKPOINT_KW "CHECKPOINT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "num_requested"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            ERROR
              COLON ":"
          NAME
            IDENT "rqst_ckpts_before"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_checkpointer"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "wal_bytes"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            ERROR
              COLON ":"
          NAME
            IDENT "wal_bytes_before"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_wal"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_force_next_flush"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "wal_bytes"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            ERROR
              COLON ":"
          NAME
            IDENT "backend_wal_bytes_before"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "pg_stat_get_backend_wal"
        ARG_LIST
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              IDENT "pg_backend_pid"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test pg_stat_get_backend_idset() and some allied functions."
  WHITESPACE "\n"
  COMMENT "-- In particular, verify that their notion of backend ID matches"
  WHITESPACE "\n"
  COMMENT "-- our temp schema index."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            INDEX_EXPR
              PAREN_EXPR
                L_PAREN "("
                CALL_EXPR
                  NAME_REF
                    IDENT "current_schemas"
                  ARG_LIST
                    L_PAREN "("
                    LITERAL
                      TRUE_KW "true"
                    R_PAREN ")"
                R_PAREN ")"
              L_BRACK "["
              LITERAL
                INT_NUMBER "1"
              R_BRACK "]"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            PAREN_EXPR
              L_PAREN "("
              BIN_EXPR
                LITERAL
                  STRING "'pg_temp_'"
                WHITESPACE " "
                CUSTOM_OP
                  PIPE "|"
                  PIPE "|"
                WHITESPACE " "
                CAST_EXPR
                  NAME_REF
                    IDENT "beid"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          TEXT_KW "text"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            MATCH_KW "match"
    WHITESPACE "\n"
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "pg_stat_get_backend_idset"
        ARG_LIST
          L_PAREN "("
          R_PAREN ")"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "beid"
    WHITESPACE "\n"
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        CALL_EXPR
          NAME_REF
            IDENT "pg_stat_get_backend_pid"
          ARG_LIST
            L_PAREN "("
            NAME_REF
              IDENT "beid"
            R_PAREN ")"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "pg_backend_pid"
          ARG_LIST
            L_PAREN "("
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-----"
  WHITESPACE "\n"
  COMMENT "-- Test that resetting stats works for reset timestamp"
  WHITESPACE "\n"
  COMMENT "-----"
  WHITESPACE "\n\n"
  COMMENT "-- Test that reset_slru with a specified SLRU works."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "stats_reset"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "slru_commit_ts_reset_ts"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_slru"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          NAME_KW "name"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'commit_timestamp'"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "stats_reset"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "slru_notify_reset_ts"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_slru"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          NAME_KW "name"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'notify'"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_reset_slru"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'commit_timestamp'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "stats_reset"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            ERROR
              COLON ":"
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'slru_commit_ts_reset_ts'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "timestamptz"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_slru"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          NAME_KW "name"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'commit_timestamp'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "stats_reset"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "slru_commit_ts_reset_ts"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_slru"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          NAME_KW "name"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'commit_timestamp'"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test that multiple SLRUs are reset when no specific SLRU provided to reset function"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_reset_slru"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "stats_reset"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            ERROR
              COLON ":"
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'slru_commit_ts_reset_ts'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "timestamptz"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_slru"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          NAME_KW "name"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'commit_timestamp'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "stats_reset"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            ERROR
              COLON ":"
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'slru_notify_reset_ts'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "timestamptz"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_slru"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          NAME_KW "name"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'notify'"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test that reset_shared with archiver specified as the stats type works"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "stats_reset"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "archiver_reset_ts"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_archiver"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_reset_shared"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'archiver'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "stats_reset"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            ERROR
              COLON ":"
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'archiver_reset_ts'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "timestamptz"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_archiver"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test that reset_shared with bgwriter specified as the stats type works"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "stats_reset"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "bgwriter_reset_ts"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_bgwriter"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_reset_shared"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'bgwriter'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "stats_reset"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            ERROR
              COLON ":"
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'bgwriter_reset_ts'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "timestamptz"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_bgwriter"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test that reset_shared with checkpointer specified as the stats type works"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "stats_reset"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "checkpointer_reset_ts"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_checkpointer"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_reset_shared"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'checkpointer'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "stats_reset"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            ERROR
              COLON ":"
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'checkpointer_reset_ts'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "timestamptz"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_checkpointer"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test that reset_shared with recovery_prefetch specified as the stats type works"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "stats_reset"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "recovery_prefetch_reset_ts"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_recovery_prefetch"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_reset_shared"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'recovery_prefetch'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "stats_reset"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            ERROR
              COLON ":"
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'recovery_prefetch_reset_ts'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "timestamptz"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_recovery_prefetch"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test that reset_shared with slru specified as the stats type works"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "max"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "stats_reset"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "slru_reset_ts"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_slru"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_reset_shared"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'slru'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "max"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "stats_reset"
                R_PAREN ")"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            ERROR
              COLON ":"
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'slru_reset_ts'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "timestamptz"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_slru"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test that reset_shared with wal specified as the stats type works"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "stats_reset"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "wal_reset_ts"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_wal"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_reset_shared"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'wal'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "stats_reset"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            ERROR
              COLON ":"
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'wal_reset_ts'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "timestamptz"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_wal"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test error case for reset_shared with unknown stats type"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_reset_shared"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'unknown'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test that reset works for pg_stat_database"
  WHITESPACE "\n\n"
  COMMENT "-- Since pg_stat_database stats_reset starts out as NULL, reset it once first so we have something to compare it to"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_reset"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "stats_reset"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "db_reset_ts"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_database"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "datname"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  CALL_EXPR
                    NAME_REF
                      IDENT "current_database"
                    ARG_LIST
                      L_PAREN "("
                      R_PAREN ")"
          R_PAREN ")"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_reset"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            NAME_REF
              IDENT "stats_reset"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            ERROR
              COLON ":"
        TARGET
          CAST_EXPR
            LITERAL
              STRING "'db_reset_ts'"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "timestamptz"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_database"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "datname"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        PAREN_EXPR
          L_PAREN "("
          SELECT
            SELECT_CLAUSE
              SELECT_KW "SELECT"
              WHITESPACE " "
              TARGET_LIST
                TARGET
                  CALL_EXPR
                    NAME_REF
                      IDENT "current_database"
                    ARG_LIST
                      L_PAREN "("
                      R_PAREN ")"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "----"
  WHITESPACE "\n"
  COMMENT "-- pg_stat_get_snapshot_timestamp behavior"
  WHITESPACE "\n"
  COMMENT "----"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "stats_fetch_consistency"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    SNAPSHOT_KW "snapshot"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- no snapshot yet, return NULL"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_snapshot_timestamp"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- any attempt at accessing stats will build snapshot"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_function_calls"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "0"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "pg_stat_get_snapshot_timestamp"
              ARG_LIST
                L_PAREN "("
                R_PAREN ")"
            WHITESPACE " "
            GTEQ ">="
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "NOW"
              ARG_LIST
                L_PAREN "("
                R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- shows NULL again after clearing"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_clear_snapshot"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_snapshot_timestamp"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "----"
  WHITESPACE "\n"
  COMMENT "-- Changing stats_fetch_consistency in a transaction."
  WHITESPACE "\n"
  COMMENT "----"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Stats filled under the cache mode"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "stats_fetch_consistency"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    CACHE_KW "cache"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_function_calls"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "0"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "pg_stat_get_snapshot_timestamp"
              ARG_LIST
                L_PAREN "("
                R_PAREN ")"
            WHITESPACE " "
            IS_NOT
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "snapshot_ok"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Success in accessing pre-existing snapshot data."
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "stats_fetch_consistency"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    SNAPSHOT_KW "snapshot"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "pg_stat_get_snapshot_timestamp"
              ARG_LIST
                L_PAREN "("
                R_PAREN ")"
            WHITESPACE " "
            IS_NOT
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "snapshot_ok"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_function_calls"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "0"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "pg_stat_get_snapshot_timestamp"
              ARG_LIST
                L_PAREN "("
                R_PAREN ")"
            WHITESPACE " "
            IS_NOT
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "snapshot_ok"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Snapshot cleared."
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "stats_fetch_consistency"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    NONE_KW "none"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "pg_stat_get_snapshot_timestamp"
              ARG_LIST
                L_PAREN "("
                R_PAREN ")"
            WHITESPACE " "
            IS_NOT
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "snapshot_ok"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_function_calls"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "0"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "pg_stat_get_snapshot_timestamp"
              ARG_LIST
                L_PAREN "("
                R_PAREN ")"
            WHITESPACE " "
            IS_NOT
              IS_KW "IS"
              WHITESPACE " "
              NOT_KW "NOT"
            WHITESPACE " "
            LITERAL
              NULL_KW "NULL"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "snapshot_ok"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "----"
  WHITESPACE "\n"
  COMMENT "-- pg_stat_have_stats behavior"
  WHITESPACE "\n"
  COMMENT "----"
  WHITESPACE "\n"
  COMMENT "-- fixed-numbered stats exist"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_have_stats"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'bgwriter'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- unknown stats kinds error out"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_have_stats"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'zaphod'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- db stats have objid 0"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_have_stats"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'database'"
              COMMA ","
              WHITESPACE " "
              ERROR
                COLON ":"
          NAME
            IDENT "dboid"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "1"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_have_stats"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'database'"
              COMMA ","
              WHITESPACE " "
              ERROR
                COLON ":"
          NAME
            IDENT "dboid"
        COMMA ","
        WHITESPACE " "
        TARGET
          LITERAL
            INT_NUMBER "0"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- pg_stat_have_stats returns true for committed index creation"
  WHITESPACE "\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "table"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "stats_test_tab1"
    WHITESPACE " "
    AS_KW "as"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "select"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "generate_series"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                LITERAL
                  INT_NUMBER "10"
                R_PAREN ")"
            WHITESPACE " "
            NAME
              IDENT "a"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "stats_test_idx1"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "stats_test_tab1"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              LITERAL
                STRING "'stats_test_idx1'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "stats_test_idx1_oid"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "stats_test_tab1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "3"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_have_stats"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'relation'"
              COMMA ","
              WHITESPACE " "
              ERROR
                COLON ":"
          NAME
            IDENT "dboid"
        COMMA ","
        WHITESPACE " "
        ERROR
          COLON ":"
        TARGET
          NAME_REF
            IDENT "stats_test_idx1_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- pg_stat_have_stats returns false for dropped index with stats"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_have_stats"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'relation'"
              COMMA ","
              WHITESPACE " "
              ERROR
                COLON ":"
          NAME
            IDENT "dboid"
        COMMA ","
        WHITESPACE " "
        ERROR
          COLON ":"
        TARGET
          NAME_REF
            IDENT "stats_test_idx1_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_INDEX_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "stats_test_idx1"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_have_stats"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'relation'"
              COMMA ","
              WHITESPACE " "
              ERROR
                COLON ":"
          NAME
            IDENT "dboid"
        COMMA ","
        WHITESPACE " "
        ERROR
          COLON ":"
        TARGET
          NAME_REF
            IDENT "stats_test_idx1_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- pg_stat_have_stats returns false for rolled back index creation"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "stats_test_idx1"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "stats_test_tab1"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              LITERAL
                STRING "'stats_test_idx1'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "stats_test_idx1_oid"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "stats_test_tab1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "3"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_have_stats"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'relation'"
              COMMA ","
              WHITESPACE " "
              ERROR
                COLON ":"
          NAME
            IDENT "dboid"
        COMMA ","
        WHITESPACE " "
        ERROR
          COLON ":"
        TARGET
          NAME_REF
            IDENT "stats_test_idx1_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_have_stats"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'relation'"
              COMMA ","
              WHITESPACE " "
              ERROR
                COLON ":"
          NAME
            IDENT "dboid"
        COMMA ","
        WHITESPACE " "
        ERROR
          COLON ":"
        TARGET
          NAME_REF
            IDENT "stats_test_idx1_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- pg_stat_have_stats returns true for reindex CONCURRENTLY"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    NAME
      IDENT "stats_test_idx1"
    WHITESPACE " "
    ON_KW "on"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "stats_test_tab1"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              LITERAL
                STRING "'stats_test_idx1'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "stats_test_idx1_oid"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "select"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "a"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "from"
      WHITESPACE " "
      NAME_REF
        IDENT "stats_test_tab1"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "where"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "3"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_have_stats"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'relation'"
              COMMA ","
              WHITESPACE " "
              ERROR
                COLON ":"
          NAME
            IDENT "dboid"
        COMMA ","
        WHITESPACE " "
        ERROR
          COLON ":"
        TARGET
          NAME_REF
            IDENT "stats_test_idx1_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  REINDEX_STMT
    REINDEX_KW "REINDEX"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    CONCURRENTLY_KW "CONCURRENTLY"
    WHITESPACE " "
    NAME
      IDENT "stats_test_idx1"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- false for previous oid"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_have_stats"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'relation'"
              COMMA ","
              WHITESPACE " "
              ERROR
                COLON ":"
          NAME
            IDENT "dboid"
        COMMA ","
        WHITESPACE " "
        ERROR
          COLON ":"
        TARGET
          NAME_REF
            IDENT "stats_test_idx1_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- true for new oid"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CAST_EXPR
            CAST_EXPR
              LITERAL
                STRING "'stats_test_idx1'"
              COLON2 "::"
              PATH_TYPE
                PATH
                  PATH_SEGMENT
                    NAME_REF
                      IDENT "regclass"
            COLON2 "::"
            PATH_TYPE
              PATH
                PATH_SEGMENT
                  NAME_REF
                    IDENT "oid"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "stats_test_idx1_oid"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_have_stats"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'relation'"
              COMMA ","
              WHITESPACE " "
              ERROR
                COLON ":"
          NAME
            IDENT "dboid"
        COMMA ","
        WHITESPACE " "
        ERROR
          COLON ":"
        TARGET
          NAME_REF
            IDENT "stats_test_idx1_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- pg_stat_have_stats returns true for a rolled back drop index with stats"
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_have_stats"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'relation'"
              COMMA ","
              WHITESPACE " "
              ERROR
                COLON ":"
          NAME
            IDENT "dboid"
        COMMA ","
        WHITESPACE " "
        ERROR
          COLON ":"
        TARGET
          NAME_REF
            IDENT "stats_test_idx1_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_INDEX_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    INDEX_KW "index"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "stats_test_idx1"
  SEMICOLON ";"
  WHITESPACE "\n"
  ROLLBACK_STMT
    ROLLBACK_KW "ROLLBACK"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_have_stats"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'relation'"
              COMMA ","
              WHITESPACE " "
              ERROR
                COLON ":"
          NAME
            IDENT "dboid"
        COMMA ","
        WHITESPACE " "
        ERROR
          COLON ":"
        TARGET
          NAME_REF
            IDENT "stats_test_idx1_oid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- put enable_seqscan back to on"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "on"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- ensure that stats accessors handle NULL input correctly"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_replication_slot"
            ARG_LIST
              L_PAREN "("
              LITERAL
                NULL_KW "NULL"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_subscription_stats"
            ARG_LIST
              L_PAREN "("
              LITERAL
                NULL_KW "NULL"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n\n"
  COMMENT "-- Test that the following operations are tracked in pg_stat_io and in"
  WHITESPACE "\n"
  COMMENT "-- backend stats:"
  WHITESPACE "\n"
  COMMENT "-- - reads of target blocks into shared buffers"
  WHITESPACE "\n"
  COMMENT "-- - writes of shared buffers to permanent storage"
  WHITESPACE "\n"
  COMMENT "-- - extends of relations using shared buffers"
  WHITESPACE "\n"
  COMMENT "-- - fsyncs done to ensure the durability of data dirtying shared buffers"
  WHITESPACE "\n"
  COMMENT "-- - shared buffer hits"
  WHITESPACE "\n"
  COMMENT "-- - WAL writes and fsyncs in IOContext IOCONTEXT_NORMAL"
  WHITESPACE "\n\n"
  COMMENT "-- There is no test for blocks evicted from shared buffers, because we cannot"
  WHITESPACE "\n"
  COMMENT "-- be sure of the state of shared buffers at the point the test is run."
  WHITESPACE "\n\n"
  COMMENT "-- Create a regular table and insert some data to generate IOCONTEXT_NORMAL"
  WHITESPACE "\n"
  COMMENT "-- extends."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          NAME_REF
            IDENT "pid"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "checkpointer_pid"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_activity"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "backend_type"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'checkpointer'"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "extends"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "io_sum_shared_before_extends"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_io"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "context"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'normal'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            OBJECT_KW "object"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'relation'"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "extends"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "my_io_sum_shared_before_extends"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "pg_stat_get_backend_io"
        ARG_LIST
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              IDENT "pg_backend_pid"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
          R_PAREN ")"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "context"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'normal'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            OBJECT_KW "object"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'relation'"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "writes"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "writes"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "fsyncs"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "fsyncs"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_io"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          OBJECT_KW "object"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'relation'"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE " "
  ERROR
    IDENT "io_sum_shared_before_"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "writes"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "writes"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "fsyncs"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "fsyncs"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "pg_stat_get_backend_io"
        ARG_LIST
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              IDENT "pg_backend_pid"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
          R_PAREN ")"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          OBJECT_KW "object"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'relation'"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE " "
  ERROR
    IDENT "my_io_sum_shared_before_"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "writes"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "writes"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "fsyncs"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "fsyncs"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_io"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "context"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'normal'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            OBJECT_KW "object"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'wal'"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE " "
  ERROR
    IDENT "io_sum_wal_normal_before_"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_io_shared"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_io_shared"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "i"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "100"
            R_PAREN ")"
        ALIAS
          NAME
            IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_force_next_flush"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "extends"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "io_sum_shared_after_extends"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_io"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "context"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'normal'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            OBJECT_KW "object"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'relation'"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_shared_after_extends"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_shared_before_extends"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "extends"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "my_io_sum_shared_after_extends"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "pg_stat_get_backend_io"
        ARG_LIST
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              IDENT "pg_backend_pid"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
          R_PAREN ")"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "context"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'normal'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            OBJECT_KW "object"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'relation'"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "my_io_sum_shared_after_extends"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "my_io_sum_shared_before_extends"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- After a checkpoint, there should be some additional IOCONTEXT_NORMAL writes"
  WHITESPACE "\n"
  COMMENT "-- and fsyncs in the global stats (usually not for the backend)."
  WHITESPACE "\n"
  COMMENT "-- See comment above for rationale for two explicit CHECKPOINTs."
  WHITESPACE "\n"
  CHECKPOINT_STMT
    CHECKPOINT_KW "CHECKPOINT"
  SEMICOLON ";"
  WHITESPACE "\n"
  CHECKPOINT_STMT
    CHECKPOINT_KW "CHECKPOINT"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "writes"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "writes"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "fsyncs"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "fsyncs"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_io"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          OBJECT_KW "object"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'relation'"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE " "
  ERROR
    IDENT "io_sum_shared_after_"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_shared_after_writes"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_shared_before_writes"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "current_setting"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  STRING "'fsync'"
                R_PAREN ")"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'off'"
            WHITESPACE "\n  "
            NAME
              OR_KW "OR"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_shared_after_fsyncs"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_shared_before_fsyncs"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "writes"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "writes"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "fsyncs"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "fsyncs"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "pg_stat_get_backend_io"
        ARG_LIST
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              IDENT "pg_backend_pid"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
          R_PAREN ")"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          OBJECT_KW "object"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'relation'"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE " "
  ERROR
    IDENT "my_io_sum_shared_after_"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "my_io_sum_shared_after_writes"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  ERROR
    EQ "="
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "my_io_sum_shared_before_writes"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "current_setting"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  STRING "'fsync'"
                R_PAREN ")"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'off'"
            WHITESPACE "\n  "
            NAME
              OR_KW "OR"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "my_io_sum_shared_after_fsyncs"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  ERROR
    EQ "="
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "my_io_sum_shared_before_fsyncs"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "writes"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "writes"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "fsyncs"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "fsyncs"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_io"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "context"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'normal'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            OBJECT_KW "object"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'wal'"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE " "
  ERROR
    IDENT "io_sum_wal_normal_after_"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            CALL_EXPR
              NAME_REF
                IDENT "current_setting"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  STRING "'synchronous_commit'"
                R_PAREN ")"
            WHITESPACE " "
            EQ "="
            WHITESPACE " "
            LITERAL
              STRING "'on'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_wal_normal_after_writes"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_wal_normal_before_writes"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            BIN_EXPR
              CALL_EXPR
                NAME_REF
                  IDENT "current_setting"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    STRING "'fsync'"
                  R_PAREN ")"
              WHITESPACE " "
              EQ "="
              WHITESPACE " "
              LITERAL
                STRING "'off'"
            WHITESPACE "\n  "
            OR_KW "OR"
            WHITESPACE " "
            BIN_EXPR
              CALL_EXPR
                NAME_REF
                  IDENT "current_setting"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    STRING "'wal_sync_method'"
                  R_PAREN ")"
              WHITESPACE " "
              IN_KW "IN"
              WHITESPACE " "
              TUPLE_EXPR
                L_PAREN "("
                LITERAL
                  STRING "'open_sync'"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  STRING "'open_datasync'"
                R_PAREN ")"
              WHITESPACE "\n  "
              NAME
                OR_KW "OR"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_wal_normal_after_fsyncs"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_wal_normal_before_fsyncs"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Change the tablespace so that the table is rewritten directly, then SELECT"
  WHITESPACE "\n"
  COMMENT "-- from it to cause it to be read back into shared buffers."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "reads"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "io_sum_shared_before_reads"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_io"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "context"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'normal'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            OBJECT_KW "object"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'relation'"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Do this in a transaction to prevent spurious failures due to concurrent accesses to our newly"
  WHITESPACE "\n"
  COMMENT "-- rewritten table, e.g. by autovacuum."
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_io_shared"
    WHITESPACE " "
    SET_TABLESPACE
      SET_KW "SET"
      WHITESPACE " "
      TABLESPACE_KW "TABLESPACE"
      WHITESPACE " "
      NAME_REF
        IDENT "regress_tblspace"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- SELECT from the table so that the data is read into shared buffers and"
  WHITESPACE "\n"
  COMMENT "-- context 'normal', object 'relation' reads are counted."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "test_io_shared"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_force_next_flush"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "reads"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "io_sum_shared_after_reads"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_io"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "context"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'normal'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            OBJECT_KW "object"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'relation'"
  WHITESPACE "  "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_shared_after_reads"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_shared_before_reads"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "hits"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "io_sum_shared_before_hits"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_io"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "context"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'normal'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            OBJECT_KW "object"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'relation'"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Select from the table again to count hits."
  WHITESPACE "\n"
  COMMENT "-- Ensure we generate hits by forcing a nested loop self-join with no"
  WHITESPACE "\n"
  COMMENT "-- materialize node. The outer side's buffer will stay pinned, preventing its"
  WHITESPACE "\n"
  COMMENT "-- eviction, while we loop through the inner side and generate hits."
  WHITESPACE "\n"
  BEGIN_STMT
    BEGIN_KW "BEGIN"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_nestloop"
    WHITESPACE " "
    TO_KW "TO"
  WHITESPACE " "
  ERROR
    ON_KW "on"
  SEMICOLON ";"
  WHITESPACE " "
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_mergejoin"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_hashjoin"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE " "
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    LOCAL_KW "LOCAL"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_material"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- ensure plan stays as we expect it to"
  WHITESPACE "\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "test_io_shared"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t1"
      WHITESPACE " "
      JOIN
        INNER_KW "INNER"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "test_io_shared"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "t2"
        WHITESPACE " "
        USING_CLAUSE
          USING_KW "USING"
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            NAME_REF
              IDENT "a"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "test_io_shared"
      WHITESPACE " "
      ALIAS
        NAME
          IDENT "t1"
      WHITESPACE " "
      JOIN
        INNER_KW "INNER"
        WHITESPACE " "
        JOIN_KW "JOIN"
        WHITESPACE " "
        NAME_REF
          IDENT "test_io_shared"
        WHITESPACE " "
        ALIAS
          NAME
            IDENT "t2"
        WHITESPACE " "
        USING_CLAUSE
          USING_KW "USING"
          WHITESPACE " "
          PAREN_EXPR
            L_PAREN "("
            NAME_REF
              IDENT "a"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMIT_STMT
    COMMIT_KW "COMMIT"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_force_next_flush"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "hits"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "io_sum_shared_after_hits"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_io"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "context"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'normal'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            OBJECT_KW "object"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'relation'"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_shared_after_hits"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_shared_before_hits"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_io_shared"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test that the follow IOCONTEXT_LOCAL IOOps are tracked in pg_stat_io:"
  WHITESPACE "\n"
  COMMENT "-- - eviction of local buffers in order to reuse them"
  WHITESPACE "\n"
  COMMENT "-- - reads of temporary table blocks into local buffers"
  WHITESPACE "\n"
  COMMENT "-- - writes of local buffers to permanent storage"
  WHITESPACE "\n"
  COMMENT "-- - extends of temporary tables"
  WHITESPACE "\n\n"
  COMMENT "-- Set temp_buffers to its minimum so that we can trigger writes with fewer"
  WHITESPACE "\n"
  COMMENT "-- inserted tuples. Do so in a new session in case temporary tables have been"
  WHITESPACE "\n"
  COMMENT "-- accessed by previous tests in this session."
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "temp_buffers"
    WHITESPACE " "
    TO_KW "TO"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "100"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TEMPORARY_KW "TEMPORARY"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_io_local"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "TEXT"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "extends"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "extends"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "evictions"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "evictions"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "writes"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "writes"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_io"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "context"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'normal'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            OBJECT_KW "object"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'temp relation'"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE " "
  ERROR
    IDENT "io_sum_local_before_"
  WHITESPACE "\n"
  COMMENT "-- Insert tuples into the temporary table, generating extends in the stats."
  WHITESPACE "\n"
  COMMENT "-- Insert enough values that we need to reuse and write out dirty local"
  WHITESPACE "\n"
  COMMENT "-- buffers, generating evictions and writes."
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_io_local"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "generate_series"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  INT_NUMBER "1"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "5000"
                R_PAREN ")"
            WHITESPACE " "
            AS_KW "as"
            WHITESPACE " "
            NAME
              IDENT "id"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "repeat"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  STRING "'a'"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "200"
                R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Ensure the table is large enough to exceed our temp_buffers setting."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            BIN_EXPR
              CALL_EXPR
                NAME_REF
                  IDENT "pg_relation_size"
                ARG_LIST
                  L_PAREN "("
                  LITERAL
                    STRING "'test_io_local'"
                  R_PAREN ")"
              WHITESPACE " "
              SLASH "/"
              WHITESPACE " "
              CAST_EXPR
                CALL_EXPR
                  NAME_REF
                    IDENT "current_setting"
                  ARG_LIST
                    L_PAREN "("
                    LITERAL
                      STRING "'block_size'"
                    R_PAREN ")"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "int8"
            WHITESPACE " "
            R_ANGLE ">"
            WHITESPACE " "
            LITERAL
              INT_NUMBER "100"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "reads"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "io_sum_local_before_reads"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_io"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "context"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'normal'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            OBJECT_KW "object"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'temp relation'"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Read in evicted buffers, generating reads."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "test_io_local"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_force_next_flush"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "evictions"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "evictions"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "reads"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "reads"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "writes"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "writes"
        COMMA ","
        WHITESPACE "\n       "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "extends"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "extends"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_io"
    WHITESPACE "\n  "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "context"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'normal'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            OBJECT_KW "object"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'temp relation'"
  WHITESPACE "  "
  SEMICOLON ";"
  WHITESPACE " "
  ERROR
    IDENT "io_sum_local_after_"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_local_after_evictions"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_local_before_evictions"
  ERROR
    COMMA ","
  WHITESPACE "\n       "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_local_after_reads"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_local_before_reads"
  ERROR
    COMMA ","
  WHITESPACE "\n       "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_local_after_writes"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_local_before_writes"
  ERROR
    COMMA ","
  WHITESPACE "\n       "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_local_after_extends"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_local_before_extends"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Change the tablespaces so that the temporary table is rewritten to other"
  WHITESPACE "\n"
  COMMENT "-- local buffers, exercising a different codepath than standard local buffer"
  WHITESPACE "\n"
  COMMENT "-- writes."
  WHITESPACE "\n"
  ALTER_TABLE
    ALTER_KW "ALTER"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_io_local"
    WHITESPACE " "
    SET_TABLESPACE
      SET_KW "SET"
      WHITESPACE " "
      TABLESPACE_KW "TABLESPACE"
      WHITESPACE " "
      NAME_REF
        IDENT "regress_tblspace"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_force_next_flush"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "writes"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "io_sum_local_new_tblspc_writes"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_io"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "context"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'normal'"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            OBJECT_KW "object"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            STRING "'temp relation'"
  WHITESPACE "  "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_local_new_tblspc_writes"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_local_after_writes"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "temp_buffers"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test that reuse of strategy buffers and reads of blocks into these reused"
  WHITESPACE "\n"
  COMMENT "-- buffers while VACUUMing are tracked in pg_stat_io. If there is sufficient"
  WHITESPACE "\n"
  COMMENT "-- demand for shared buffers from concurrent queries, some buffers may be"
  WHITESPACE "\n"
  COMMENT "-- pinned by other backends before they can be reused. In such cases, the"
  WHITESPACE "\n"
  COMMENT "-- backend will evict a buffer from outside the ring and add it to the"
  WHITESPACE "\n"
  COMMENT "-- ring. This is considered an eviction and not a reuse."
  WHITESPACE "\n\n"
  COMMENT "-- Set wal_skip_threshold smaller than the expected size of"
  WHITESPACE "\n"
  COMMENT "-- test_io_vac_strategy so that, even if wal_level is minimal, VACUUM FULL will"
  WHITESPACE "\n"
  COMMENT "-- fsync the newly rewritten test_io_vac_strategy instead of writing it to WAL."
  WHITESPACE "\n"
  COMMENT "-- Writing it to WAL will result in the newly written relation pages being in"
  WHITESPACE "\n"
  COMMENT "-- shared buffers -- preventing us from testing BAS_VACUUM BufferAccessStrategy"
  WHITESPACE "\n"
  COMMENT "-- reads."
  WHITESPACE "\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "wal_skip_threshold"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      STRING "'1 kB'"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "reuses"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "reuses"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "reads"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "reads"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "evictions"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "evictions"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_io"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "context"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'vacuum'"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE " "
  ERROR
    IDENT "io_sum_vac_strategy_before_"
  WHITESPACE "\n"
  CREATE_TABLE
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_io_vac_strategy"
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "autovacuum_enabled"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        STRING "'false'"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_io_vac_strategy"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "i"
          COMMA ","
          WHITESPACE " "
          TARGET
            NAME_REF
              IDENT "i"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "from"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "4500"
            R_PAREN ")"
        ALIAS
          NAME
            IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Ensure that the next VACUUM will need to perform IO by rewriting the table"
  WHITESPACE "\n"
  COMMENT "-- first with VACUUM (FULL)."
  WHITESPACE "\n"
  VACUUM_STMT
    VACUUM_KW "VACUUM"
    WHITESPACE " "
    L_PAREN "("
    FULL_KW "FULL"
    R_PAREN ")"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_io_vac_strategy"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Use the minimum BUFFER_USAGE_LIMIT to cause reuses or evictions with the"
  WHITESPACE "\n"
  COMMENT "-- smallest table possible."
  WHITESPACE "\n"
  VACUUM_STMT
    VACUUM_KW "VACUUM"
    WHITESPACE " "
    L_PAREN "("
    PARALLEL_KW "PARALLEL"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "0"
    COMMA ","
    WHITESPACE " "
    IDENT "BUFFER_USAGE_LIMIT"
    WHITESPACE " "
    LITERAL
      INT_NUMBER "128"
    R_PAREN ")"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "test_io_vac_strategy"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_force_next_flush"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "reuses"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "reuses"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "reads"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "reads"
        COMMA ","
        WHITESPACE " "
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "evictions"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "evictions"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_io"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "context"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'vacuum'"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE " "
  ERROR
    IDENT "io_sum_vac_strategy_after_"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_vac_strategy_after_reads"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_vac_strategy_before_reads"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          PAREN_EXPR
            L_PAREN "("
            ERROR
              COLON ":"
          NAME
            IDENT "io_sum_vac_strategy_after_reuses"
        WHITESPACE " "
        TARGET
          PREFIX_EXPR
            PLUS "+"
            WHITESPACE " "
            ERROR
              COLON ":"
          NAME
            IDENT "io_sum_vac_strategy_after_evictions"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE "\n  "
  ERROR
    L_PAREN "("
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_vac_strategy_before_reuses"
  WHITESPACE " "
  ERROR
    PLUS "+"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_vac_strategy_before_evictions"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  RESET_STMT
    RESET_KW "RESET"
    WHITESPACE " "
    NAME_REF
      IDENT "wal_skip_threshold"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test that extends done by a CTAS, which uses a BAS_BULKWRITE"
  WHITESPACE "\n"
  COMMENT "-- BufferAccessStrategy, are tracked in pg_stat_io."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "extends"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "io_sum_bulkwrite_strategy_extends_before"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_io"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "context"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'bulkwrite'"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_TABLE_AS_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "test_io_bulkwrite_strategy"
    WHITESPACE " "
    AS_KW "AS"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            NAME_REF
              IDENT "i"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "100"
            R_PAREN ")"
        ALIAS
          NAME
            IDENT "i"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_force_next_flush"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "sum"
            ARG_LIST
              L_PAREN "("
              NAME_REF
                IDENT "extends"
              R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "io_sum_bulkwrite_strategy_extends_after"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_io"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "context"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          STRING "'bulkwrite'"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_bulkwrite_strategy_extends_after"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_sum_bulkwrite_strategy_extends_before"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Test IO stats reset"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_have_stats"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'io'"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
              COMMA ","
              WHITESPACE " "
              LITERAL
                INT_NUMBER "0"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        CALL_EXPR
                          NAME_REF
                            IDENT "sum"
                          ARG_LIST
                            L_PAREN "("
                            NAME_REF
                              IDENT "evictions"
                            R_PAREN ")"
                        WHITESPACE " "
                        PLUS "+"
                        WHITESPACE " "
                        CALL_EXPR
                          NAME_REF
                            IDENT "sum"
                          ARG_LIST
                            L_PAREN "("
                            NAME_REF
                              IDENT "reuses"
                            R_PAREN ")"
                      WHITESPACE " "
                      PLUS "+"
                      WHITESPACE " "
                      CALL_EXPR
                        NAME_REF
                          IDENT "sum"
                        ARG_LIST
                          L_PAREN "("
                          NAME_REF
                            IDENT "extends"
                          R_PAREN ")"
                    WHITESPACE " "
                    PLUS "+"
                    WHITESPACE " "
                    CALL_EXPR
                      NAME_REF
                        IDENT "sum"
                      ARG_LIST
                        L_PAREN "("
                        NAME_REF
                          IDENT "fsyncs"
                        R_PAREN ")"
                  WHITESPACE " "
                  PLUS "+"
                  WHITESPACE " "
                  CALL_EXPR
                    NAME_REF
                      IDENT "sum"
                    ARG_LIST
                      L_PAREN "("
                      NAME_REF
                        IDENT "reads"
                      R_PAREN ")"
                WHITESPACE " "
                PLUS "+"
                WHITESPACE " "
                CALL_EXPR
                  NAME_REF
                    IDENT "sum"
                  ARG_LIST
                    L_PAREN "("
                    NAME_REF
                      IDENT "writes"
                    R_PAREN ")"
              WHITESPACE " "
              PLUS "+"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "sum"
                ARG_LIST
                  L_PAREN "("
                  NAME_REF
                    IDENT "writebacks"
                  R_PAREN ")"
            WHITESPACE " "
            PLUS "+"
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "sum"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "hits"
                R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "io_stats_pre_reset"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_io"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        CALL_EXPR
                          NAME_REF
                            IDENT "sum"
                          ARG_LIST
                            L_PAREN "("
                            NAME_REF
                              IDENT "evictions"
                            R_PAREN ")"
                        WHITESPACE " "
                        PLUS "+"
                        WHITESPACE " "
                        CALL_EXPR
                          NAME_REF
                            IDENT "sum"
                          ARG_LIST
                            L_PAREN "("
                            NAME_REF
                              IDENT "reuses"
                            R_PAREN ")"
                      WHITESPACE " "
                      PLUS "+"
                      WHITESPACE " "
                      CALL_EXPR
                        NAME_REF
                          IDENT "sum"
                        ARG_LIST
                          L_PAREN "("
                          NAME_REF
                            IDENT "extends"
                          R_PAREN ")"
                    WHITESPACE " "
                    PLUS "+"
                    WHITESPACE " "
                    CALL_EXPR
                      NAME_REF
                        IDENT "sum"
                      ARG_LIST
                        L_PAREN "("
                        NAME_REF
                          IDENT "fsyncs"
                        R_PAREN ")"
                  WHITESPACE " "
                  PLUS "+"
                  WHITESPACE " "
                  CALL_EXPR
                    NAME_REF
                      IDENT "sum"
                    ARG_LIST
                      L_PAREN "("
                      NAME_REF
                        IDENT "reads"
                      R_PAREN ")"
                WHITESPACE " "
                PLUS "+"
                WHITESPACE " "
                CALL_EXPR
                  NAME_REF
                    IDENT "sum"
                  ARG_LIST
                    L_PAREN "("
                    NAME_REF
                      IDENT "writes"
                    R_PAREN ")"
              WHITESPACE " "
              PLUS "+"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "sum"
                ARG_LIST
                  L_PAREN "("
                  NAME_REF
                    IDENT "writebacks"
                  R_PAREN ")"
            WHITESPACE " "
            PLUS "+"
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "sum"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "hits"
                R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "my_io_stats_pre_reset"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "pg_stat_get_backend_io"
        ARG_LIST
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              IDENT "pg_backend_pid"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
          R_PAREN ")"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_reset_shared"
            ARG_LIST
              L_PAREN "("
              LITERAL
                STRING "'io'"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        CALL_EXPR
                          NAME_REF
                            IDENT "sum"
                          ARG_LIST
                            L_PAREN "("
                            NAME_REF
                              IDENT "evictions"
                            R_PAREN ")"
                        WHITESPACE " "
                        PLUS "+"
                        WHITESPACE " "
                        CALL_EXPR
                          NAME_REF
                            IDENT "sum"
                          ARG_LIST
                            L_PAREN "("
                            NAME_REF
                              IDENT "reuses"
                            R_PAREN ")"
                      WHITESPACE " "
                      PLUS "+"
                      WHITESPACE " "
                      CALL_EXPR
                        NAME_REF
                          IDENT "sum"
                        ARG_LIST
                          L_PAREN "("
                          NAME_REF
                            IDENT "extends"
                          R_PAREN ")"
                    WHITESPACE " "
                    PLUS "+"
                    WHITESPACE " "
                    CALL_EXPR
                      NAME_REF
                        IDENT "sum"
                      ARG_LIST
                        L_PAREN "("
                        NAME_REF
                          IDENT "fsyncs"
                        R_PAREN ")"
                  WHITESPACE " "
                  PLUS "+"
                  WHITESPACE " "
                  CALL_EXPR
                    NAME_REF
                      IDENT "sum"
                    ARG_LIST
                      L_PAREN "("
                      NAME_REF
                        IDENT "reads"
                      R_PAREN ")"
                WHITESPACE " "
                PLUS "+"
                WHITESPACE " "
                CALL_EXPR
                  NAME_REF
                    IDENT "sum"
                  ARG_LIST
                    L_PAREN "("
                    NAME_REF
                      IDENT "writes"
                    R_PAREN ")"
              WHITESPACE " "
              PLUS "+"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "sum"
                ARG_LIST
                  L_PAREN "("
                  NAME_REF
                    IDENT "writebacks"
                  R_PAREN ")"
            WHITESPACE " "
            PLUS "+"
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "sum"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "hits"
                R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "io_stats_post_reset"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "pg_stat_io"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_stats_post_reset"
  WHITESPACE " "
  ERROR
    L_ANGLE "<"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "io_stats_pre_reset"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        CALL_EXPR
                          NAME_REF
                            IDENT "sum"
                          ARG_LIST
                            L_PAREN "("
                            NAME_REF
                              IDENT "evictions"
                            R_PAREN ")"
                        WHITESPACE " "
                        PLUS "+"
                        WHITESPACE " "
                        CALL_EXPR
                          NAME_REF
                            IDENT "sum"
                          ARG_LIST
                            L_PAREN "("
                            NAME_REF
                              IDENT "reuses"
                            R_PAREN ")"
                      WHITESPACE " "
                      PLUS "+"
                      WHITESPACE " "
                      CALL_EXPR
                        NAME_REF
                          IDENT "sum"
                        ARG_LIST
                          L_PAREN "("
                          NAME_REF
                            IDENT "extends"
                          R_PAREN ")"
                    WHITESPACE " "
                    PLUS "+"
                    WHITESPACE " "
                    CALL_EXPR
                      NAME_REF
                        IDENT "sum"
                      ARG_LIST
                        L_PAREN "("
                        NAME_REF
                          IDENT "fsyncs"
                        R_PAREN ")"
                  WHITESPACE " "
                  PLUS "+"
                  WHITESPACE " "
                  CALL_EXPR
                    NAME_REF
                      IDENT "sum"
                    ARG_LIST
                      L_PAREN "("
                      NAME_REF
                        IDENT "reads"
                      R_PAREN ")"
                WHITESPACE " "
                PLUS "+"
                WHITESPACE " "
                CALL_EXPR
                  NAME_REF
                    IDENT "sum"
                  ARG_LIST
                    L_PAREN "("
                    NAME_REF
                      IDENT "writes"
                    R_PAREN ")"
              WHITESPACE " "
              PLUS "+"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "sum"
                ARG_LIST
                  L_PAREN "("
                  NAME_REF
                    IDENT "writebacks"
                  R_PAREN ")"
            WHITESPACE " "
            PLUS "+"
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "sum"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "hits"
                R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "my_io_stats_post_reset"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "pg_stat_get_backend_io"
        ARG_LIST
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              IDENT "pg_backend_pid"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
          R_PAREN ")"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- pg_stat_reset_shared() did not reset backend IO stats"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "my_io_stats_pre_reset"
  WHITESPACE " "
  ERROR
    L_ANGLE "<"
  ERROR
    EQ "="
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "my_io_stats_post_reset"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- but pg_stat_reset_backend_stats() does"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_reset_backend_stats"
            ARG_LIST
              L_PAREN "("
              CALL_EXPR
                NAME_REF
                  IDENT "pg_backend_pid"
                ARG_LIST
                  L_PAREN "("
                  R_PAREN ")"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          BIN_EXPR
            BIN_EXPR
              BIN_EXPR
                BIN_EXPR
                  BIN_EXPR
                    BIN_EXPR
                      BIN_EXPR
                        CALL_EXPR
                          NAME_REF
                            IDENT "sum"
                          ARG_LIST
                            L_PAREN "("
                            NAME_REF
                              IDENT "evictions"
                            R_PAREN ")"
                        WHITESPACE " "
                        PLUS "+"
                        WHITESPACE " "
                        CALL_EXPR
                          NAME_REF
                            IDENT "sum"
                          ARG_LIST
                            L_PAREN "("
                            NAME_REF
                              IDENT "reuses"
                            R_PAREN ")"
                      WHITESPACE " "
                      PLUS "+"
                      WHITESPACE " "
                      CALL_EXPR
                        NAME_REF
                          IDENT "sum"
                        ARG_LIST
                          L_PAREN "("
                          NAME_REF
                            IDENT "extends"
                          R_PAREN ")"
                    WHITESPACE " "
                    PLUS "+"
                    WHITESPACE " "
                    CALL_EXPR
                      NAME_REF
                        IDENT "sum"
                      ARG_LIST
                        L_PAREN "("
                        NAME_REF
                          IDENT "fsyncs"
                        R_PAREN ")"
                  WHITESPACE " "
                  PLUS "+"
                  WHITESPACE " "
                  CALL_EXPR
                    NAME_REF
                      IDENT "sum"
                    ARG_LIST
                      L_PAREN "("
                      NAME_REF
                        IDENT "reads"
                      R_PAREN ")"
                WHITESPACE " "
                PLUS "+"
                WHITESPACE " "
                CALL_EXPR
                  NAME_REF
                    IDENT "sum"
                  ARG_LIST
                    L_PAREN "("
                    NAME_REF
                      IDENT "writes"
                    R_PAREN ")"
              WHITESPACE " "
              PLUS "+"
              WHITESPACE " "
              CALL_EXPR
                NAME_REF
                  IDENT "sum"
                ARG_LIST
                  L_PAREN "("
                  NAME_REF
                    IDENT "writebacks"
                  R_PAREN ")"
            WHITESPACE " "
            PLUS "+"
            WHITESPACE " "
            CALL_EXPR
              NAME_REF
                IDENT "sum"
              ARG_LIST
                L_PAREN "("
                NAME_REF
                  IDENT "hits"
                R_PAREN ")"
          WHITESPACE " "
          AS_KW "AS"
          WHITESPACE " "
          NAME
            IDENT "my_io_stats_post_backend_reset"
    WHITESPACE "\n  "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "pg_stat_get_backend_io"
        ARG_LIST
          L_PAREN "("
          CALL_EXPR
            NAME_REF
              IDENT "pg_backend_pid"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
          R_PAREN ")"
  WHITESPACE " "
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "my_io_stats_pre_reset"
  WHITESPACE " "
  ERROR
    R_ANGLE ">"
  WHITESPACE " "
  ERROR
    COLON ":"
  ERROR
    IDENT "my_io_stats_post_backend_reset"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- Check invalid input for pg_stat_get_backend_io()"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_backend_io"
            ARG_LIST
              L_PAREN "("
              LITERAL
                NULL_KW "NULL"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_backend_io"
            ARG_LIST
              L_PAREN "("
              LITERAL
                INT_NUMBER "0"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  COMMENT "-- Auxiliary processes return no data."
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_backend_io"
            ARG_LIST
              L_PAREN "("
              ERROR
                COLON ":"
          NAME
            IDENT "checkpointer_pid"
  ERROR
    R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- test BRIN index doesn't block HOT update"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "brin_hot"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n  "
      COLUMN
        NAME_REF
          IDENT "id"
        WHITESPACE "  "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
        WHITESPACE " "
        PRIMARY_KEY_CONSTRAINT
          PRIMARY_KW "PRIMARY"
          WHITESPACE " "
          KEY_KW "KEY"
      COMMA ","
      WHITESPACE "\n  "
      COLUMN
        NAME_REF
          IDENT "val"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INTEGER_KW "integer"
        WHITESPACE " "
        NOT_NULL_CONSTRAINT
          NOT_KW "NOT"
          WHITESPACE " "
          NULL_KW "NULL"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "autovacuum_enabled"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              OFF_KW "off"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "fillfactor"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "70"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "brin_hot"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            STAR "*"
          COMMA ","
          WHITESPACE " "
          TARGET
            LITERAL
              INT_NUMBER "0"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "235"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    NAME
      IDENT "val_brin"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "brin_hot"
    WHITESPACE " "
    USING_KW "using"
    WHITESPACE " "
    NAME_REF
      IDENT "brin"
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "val"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_FUNCTION_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "wait_for_hot_stats"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
    WHITESPACE " "
    RET_TYPE
      RETURNS_KW "RETURNS"
      WHITESPACE " "
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              IDENT "void"
    WHITESPACE " "
    FUNC_OPTION_LIST
      AS_FUNC_OPTION
        AS_KW "AS"
        WHITESPACE " "
        LITERAL
          DOLLAR_QUOTED_STRING "$$\nDECLARE\n  start_time timestamptz := clock_timestamp();\n  updated bool;\nBEGIN\n  -- we don't want to wait forever; loop will exit after 30 seconds\n  FOR i IN 1 .. 300 LOOP\n    SELECT (pg_stat_get_tuples_hot_updated('brin_hot'::regclass::oid) > 0) INTO updated;\n    EXIT WHEN updated;\n\n    -- wait a little\n    PERFORM pg_sleep_for('100 milliseconds');\n    -- reset stats snapshot so we can test again\n    PERFORM pg_stat_clear_snapshot();\n  END LOOP;\n  -- report time waited in postmaster log (where it won't change test output)\n  RAISE log 'wait_for_hot_stats delayed % seconds',\n    EXTRACT(epoch FROM clock_timestamp() - start_time);\nEND\n$$"
      WHITESPACE " "
      LANGUAGE_FUNC_OPTION
        LANGUAGE_KW "LANGUAGE"
        WHITESPACE " "
        IDENT "plpgsql"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "brin_hot"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "val"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    PREFIX_EXPR
      MINUS "-"
      LITERAL
        INT_NUMBER "3"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "id"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "42"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- We can't just call wait_for_hot_stats() at this point, because we only"
  WHITESPACE "\n"
  COMMENT "-- transmit stats when the session goes idle, and we probably didn't"
  WHITESPACE "\n"
  COMMENT "-- transmit the last couple of counts yet thanks to the rate-limiting logic"
  WHITESPACE "\n"
  COMMENT "-- in pgstat_report_stat().  But instead of waiting for the rate limiter's"
  WHITESPACE "\n"
  COMMENT "-- timeout to elapse, let's just start a new session.  The old one will"
  WHITESPACE "\n"
  COMMENT "-- then send its stats before dying."
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "wait_for_hot_stats"
            ARG_LIST
              L_PAREN "("
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "pg_stat_get_tuples_hot_updated"
            ARG_LIST
              L_PAREN "("
              CAST_EXPR
                CAST_EXPR
                  LITERAL
                    STRING "'brin_hot'"
                  COLON2 "::"
                  PATH_TYPE
                    PATH
                      PATH_SEGMENT
                        NAME_REF
                          IDENT "regclass"
                COLON2 "::"
                PATH_TYPE
                  PATH
                    PATH_SEGMENT
                      NAME_REF
                        IDENT "oid"
              R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "brin_hot"
  SEMICOLON ";"
  WHITESPACE "\n"
  DROP_FUNCTION_STMT
    DROP_KW "DROP"
    WHITESPACE " "
    FUNCTION_KW "FUNCTION"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "wait_for_hot_stats"
    PARAM_LIST
      L_PAREN "("
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test handling of index predicates - updating attributes in precicates"
    WHITESPACE "\n"
    COMMENT "-- should not block HOT when summarizing indexes are involved. We update"
    WHITESPACE "\n"
    COMMENT "-- a row that was not indexed due to the index predicate, and becomes"
    WHITESPACE "\n"
    COMMENT "-- indexable - the HOT-updated tuple is forwarded to the BRIN index."
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "brin_hot_2"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "b"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "brin_hot_2"
    WHITESPACE " "
    SELECT
      VALUES_KW "VALUES"
      WHITESPACE " "
      L_PAREN "("
      LITERAL
        INT_NUMBER "1"
      COMMA ","
      WHITESPACE " "
      LITERAL
        INT_NUMBER "100"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "brin_hot_2"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    NAME_REF
      IDENT "brin"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "b"
      R_PAREN ")"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "brin_hot_2"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "brin_hot_2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "2"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "100"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "brin_hot_2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "2"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "100"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    OFF_KW "off"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "brin_hot_2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "2"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "100"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "brin_hot_2"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        BIN_EXPR
          NAME_REF
            IDENT "a"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "2"
        WHITESPACE " "
        AND_KW "AND"
        WHITESPACE " "
        BIN_EXPR
          NAME_REF
            IDENT "b"
          WHITESPACE " "
          EQ "="
          WHITESPACE " "
          LITERAL
            INT_NUMBER "100"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "brin_hot_2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test that updates to indexed columns are still propagated to the"
    WHITESPACE "\n"
    COMMENT "-- BRIN column."
    WHITESPACE "\n"
    COMMENT "-- https://postgr.es/m/05ebcb44-f383-86e3-4f31-0a97a55634cf@enterprisedb.com"
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "brin_hot_3"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      COLUMN
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                INT_KW "int"
      COMMA ","
      WHITESPACE " "
      COLUMN
        NAME_REF
          IDENT "filler"
        WHITESPACE " "
        PATH_TYPE
          PATH
            PATH_SEGMENT
              NAME_REF
                TEXT_KW "text"
      R_PAREN ")"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "fillfactor"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "10"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "brin_hot_3"
    WHITESPACE " "
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              INT_NUMBER "1"
          COMMA ","
          WHITESPACE " "
          TARGET
            CALL_EXPR
              NAME_REF
                IDENT "repeat"
              ARG_LIST
                L_PAREN "("
                LITERAL
                  STRING "' '"
                COMMA ","
                WHITESPACE " "
                LITERAL
                  INT_NUMBER "500"
                R_PAREN ")"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            WHITESPACE " "
            LITERAL
              INT_NUMBER "20"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  CREATE_INDEX_STMT
    CREATE_KW "CREATE"
    WHITESPACE " "
    INDEX_KW "INDEX"
    WHITESPACE " "
    ON_KW "ON"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "brin_hot_3"
    WHITESPACE " "
    USING_KW "USING"
    WHITESPACE " "
    NAME_REF
      IDENT "brin"
    WHITESPACE " "
    INDEX_PARAMS
      L_PAREN "("
      NAME_REF
        IDENT "a"
      R_PAREN ")"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "WITH"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "pages_per_range"
      WHITESPACE " "
      EQ "="
      WHITESPACE " "
      LITERAL
        INT_NUMBER "1"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n"
  UPDATE_STMT
    UPDATE_KW "UPDATE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "brin_hot_3"
    WHITESPACE " "
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "a"
    WHITESPACE " "
    EQ "="
    WHITESPACE " "
    LITERAL
      INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  EXPLAIN_STMT
    EXPLAIN_KW "EXPLAIN"
    WHITESPACE " "
    L_PAREN "("
    IDENT "COSTS"
    WHITESPACE " "
    ERROR
      OFF_KW "OFF"
  ERROR
    R_PAREN ")"
  WHITESPACE " "
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "brin_hot_3"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          CALL_EXPR
            NAME_REF
              IDENT "COUNT"
            ARG_LIST
              L_PAREN "("
              STAR "*"
              R_PAREN ")"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      NAME_REF
        IDENT "brin_hot_3"
    WHITESPACE " "
    WHERE_CLAUSE
      WHERE_KW "WHERE"
      WHITESPACE " "
      BIN_EXPR
        NAME_REF
          IDENT "a"
        WHITESPACE " "
        EQ "="
        WHITESPACE " "
        LITERAL
          INT_NUMBER "2"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "brin_hot_3"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SET_STMT
    SET_KW "SET"
    WHITESPACE " "
    NAME_REF
      IDENT "enable_seqscan"
    WHITESPACE " "
    EQ "="
  WHITESPACE " "
  ERROR
    ON_KW "on"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  CREATE_TABLE
    COMMENT "-- Test that estimation of relation size works with tuples wider than the"
    WHITESPACE "\n"
    COMMENT "-- relation fillfactor. We create a table with wide inline attributes and"
    WHITESPACE "\n"
    COMMENT "-- low fillfactor, insert rows and then see how many rows EXPLAIN shows"
    WHITESPACE "\n"
    COMMENT "-- before running analyze. We disable autovacuum so that it does not"
    WHITESPACE "\n"
    COMMENT "-- interfere with the test."
    WHITESPACE "\n"
    CREATE_KW "CREATE"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME
          IDENT "table_fillfactor"
    WHITESPACE " "
    TABLE_ARGS
      L_PAREN "("
      WHITESPACE "\n  "
      COLUMN
        NAME_REF
          IDENT "n"
        WHITESPACE " "
        CHAR_TYPE
          CHAR_KW "char"
          L_PAREN "("
          ARG_LIST
            ARG
              LITERAL
                INT_NUMBER "1000"
            R_PAREN ")"
      WHITESPACE "\n"
      R_PAREN ")"
    WHITESPACE " "
    CONSTRAINT_STORAGE_PARAMS
      WITH_KW "with"
      WHITESPACE " "
      L_PAREN "("
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "fillfactor"
      EQ "="
      LITERAL
        INT_NUMBER "10"
      COMMA ","
      WHITESPACE " "
      PATH
        PATH_SEGMENT
          NAME_REF
            IDENT "autovacuum_enabled"
      EQ "="
      PATH_TYPE
        PATH
          PATH_SEGMENT
            NAME_REF
              OFF_KW "off"
      R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  INSERT_STMT
    INSERT_KW "INSERT"
    WHITESPACE " "
    INTO_KW "INTO"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "table_fillfactor"
    WHITESPACE "\n"
    SELECT
      SELECT_CLAUSE
        SELECT_KW "SELECT"
        WHITESPACE " "
        TARGET_LIST
          TARGET
            LITERAL
              STRING "'x'"
      WHITESPACE " "
      FROM_CLAUSE
        FROM_KW "FROM"
        WHITESPACE " "
        CALL_EXPR
          NAME_REF
            IDENT "generate_series"
          ARG_LIST
            L_PAREN "("
            LITERAL
              INT_NUMBER "1"
            COMMA ","
            LITERAL
              INT_NUMBER "1000"
            R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  SELECT
    SELECT_CLAUSE
      SELECT_KW "SELECT"
      WHITESPACE " "
      TARGET_LIST
        TARGET
          STAR "*"
    WHITESPACE " "
    FROM_CLAUSE
      FROM_KW "FROM"
      WHITESPACE " "
      CALL_EXPR
        NAME_REF
          IDENT "check_estimated_rows"
        ARG_LIST
          L_PAREN "("
          LITERAL
            STRING "'SELECT * FROM table_fillfactor'"
          R_PAREN ")"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  DROP_TABLE
    DROP_KW "DROP"
    WHITESPACE " "
    TABLE_KW "TABLE"
    WHITESPACE " "
    PATH
      PATH_SEGMENT
        NAME_REF
          IDENT "table_fillfactor"
  SEMICOLON ";"
  WHITESPACE "\n\n"
  COMMENT "-- End of Stats Test"
  WHITESPACE "\n"
---
ERROR@509: expected config value, got ON_KW
ERROR@509: expected SEMICOLON
ERROR@510: expected command, found ON_KW
ERROR@537: expected config value, got ON_KW
ERROR@537: expected SEMICOLON
ERROR@538: expected command, found ON_KW
ERROR@4943: expected an expression, found COLON
ERROR@4944: expected R_PAREN
ERROR@4964: expected SEMICOLON
ERROR@4964: expected command, found R_PAREN
ERROR@5006: expected an expression, found COLON
ERROR@5007: expected R_PAREN
ERROR@5027: expected SEMICOLON
ERROR@5027: expected command, found R_PAREN
ERROR@5096: expected an expression, found COLON
ERROR@5097: expected R_PAREN
ERROR@5117: expected SEMICOLON
ERROR@5117: expected command, found R_PAREN
ERROR@5186: expected an expression, found COLON
ERROR@5187: expected R_PAREN
ERROR@5207: expected SEMICOLON
ERROR@5207: expected command, found R_PAREN
ERROR@5244: expected an expression, found COLON
ERROR@5245: expected R_PAREN
ERROR@5265: expected SEMICOLON
ERROR@5265: expected command, found R_PAREN
ERROR@5523: expected an expression, found COLON
ERROR@5524: expected R_PAREN
ERROR@5544: expected SEMICOLON
ERROR@5544: expected command, found R_PAREN
ERROR@5782: expected an expression, found COLON
ERROR@5783: expected SEMICOLON
ERROR@5783: expected command, found IDENT
ERROR@5871: expected an expression, found COLON
ERROR@5872: expected SEMICOLON
ERROR@5872: expected command, found IDENT
ERROR@6036: expected an expression, found COLON
ERROR@6037: expected SEMICOLON
ERROR@6037: expected command, found IDENT
ERROR@6192: expected an expression, found COLON
ERROR@6193: expected SEMICOLON
ERROR@6193: expected command, found IDENT
ERROR@6277: expected an expression, found COLON
ERROR@6278: expected R_PAREN
ERROR@6298: expected SEMICOLON
ERROR@6298: expected command, found R_PAREN
ERROR@6377: expected an expression, found COLON
ERROR@6378: expected SEMICOLON
ERROR@6378: expected command, found IDENT
ERROR@6434: expected an expression, found COLON
ERROR@6435: expected R_PAREN
ERROR@6455: expected SEMICOLON
ERROR@6455: expected command, found R_PAREN
ERROR@6649: expected an expression, found COLON
ERROR@6650: expected SEMICOLON
ERROR@6650: expected command, found IDENT
ERROR@6706: expected an expression, found COLON
ERROR@6707: expected R_PAREN
ERROR@6727: expected SEMICOLON
ERROR@6727: expected command, found R_PAREN
ERROR@7000: expected an expression, found COLON
ERROR@7001: expected SEMICOLON
ERROR@7001: expected command, found IDENT
ERROR@7057: expected an expression, found COLON
ERROR@7058: expected R_PAREN
ERROR@7078: expected SEMICOLON
ERROR@7078: expected command, found R_PAREN
ERROR@7751: expected an expression, found COLON
ERROR@7752: expected R_PAREN
ERROR@7771: expected SEMICOLON
ERROR@7771: expected command, found R_PAREN
ERROR@7833: expected an expression, found COLON
ERROR@7834: expected R_PAREN
ERROR@7853: expected SEMICOLON
ERROR@7853: expected command, found R_PAREN
ERROR@7896: expected an expression, found COLON
ERROR@7897: expected R_PAREN
ERROR@7916: expected SEMICOLON
ERROR@7916: expected command, found R_PAREN
ERROR@8065: expected an expression, found COLON
ERROR@8066: expected R_PAREN
ERROR@8090: expected SEMICOLON
ERROR@8090: expected command, found R_PAREN
ERROR@8128: expected an expression, found COLON
ERROR@8129: expected R_PAREN
ERROR@8153: expected SEMICOLON
ERROR@8153: expected command, found R_PAREN
ERROR@8196: expected an expression, found COLON
ERROR@8197: expected R_PAREN
ERROR@8221: expected SEMICOLON
ERROR@8221: expected command, found R_PAREN
ERROR@8320: expected an expression, found COLON
ERROR@8321: expected R_PAREN
ERROR@8345: expected SEMICOLON
ERROR@8345: expected command, found R_PAREN
ERROR@8421: expected an expression, found COLON
ERROR@8422: expected R_PAREN
ERROR@8446: expected SEMICOLON
ERROR@8446: expected command, found R_PAREN
ERROR@8525: expected an expression, found COLON
ERROR@8526: expected R_PAREN
ERROR@8550: expected SEMICOLON
ERROR@8550: expected command, found R_PAREN
ERROR@8588: expected an expression, found COLON
ERROR@8589: expected R_PAREN
ERROR@8613: expected SEMICOLON
ERROR@8613: expected command, found R_PAREN
ERROR@8670: expected an expression, found COLON
ERROR@8671: expected R_PAREN
ERROR@8695: expected SEMICOLON
ERROR@8695: expected command, found R_PAREN
ERROR@8733: expected an expression, found COLON
ERROR@8734: expected R_PAREN
ERROR@8758: expected SEMICOLON
ERROR@8758: expected command, found R_PAREN
ERROR@8857: expected an expression, found COLON
ERROR@8858: expected R_PAREN
ERROR@8882: expected SEMICOLON
ERROR@8882: expected command, found R_PAREN
ERROR@8958: expected an expression, found COLON
ERROR@8959: expected R_PAREN
ERROR@8983: expected SEMICOLON
ERROR@8983: expected command, found R_PAREN
ERROR@9060: expected an expression, found COLON
ERROR@9061: expected R_PAREN
ERROR@9085: expected SEMICOLON
ERROR@9085: expected command, found R_PAREN
ERROR@9123: expected an expression, found COLON
ERROR@9124: expected R_PAREN
ERROR@9148: expected SEMICOLON
ERROR@9148: expected command, found R_PAREN
ERROR@9216: expected an expression, found COLON
ERROR@9217: expected R_PAREN
ERROR@9244: expected SEMICOLON
ERROR@9244: expected command, found R_PAREN
ERROR@9413: expected an expression, found COLON
ERROR@9414: expected R_PAREN
ERROR@9441: expected SEMICOLON
ERROR@9441: expected command, found R_PAREN
ERROR@9562: expected an expression, found COLON
ERROR@9563: expected R_PAREN
ERROR@9590: expected SEMICOLON
ERROR@9590: expected command, found R_PAREN
ERROR@9667: expected an expression, found COLON
ERROR@9668: expected R_PAREN
ERROR@9695: expected SEMICOLON
ERROR@9695: expected command, found R_PAREN
ERROR@9761: expected an expression, found COLON
ERROR@9762: expected R_PAREN
ERROR@9789: expected SEMICOLON
ERROR@9789: expected command, found R_PAREN
ERROR@9931: expected an expression, found COLON
ERROR@9932: expected R_PAREN
ERROR@9959: expected SEMICOLON
ERROR@9959: expected command, found R_PAREN
ERROR@10019: expected an expression, found COLON
ERROR@10020: expected R_PAREN
ERROR@10047: expected SEMICOLON
ERROR@10047: expected command, found R_PAREN
ERROR@10185: expected an expression, found COLON
ERROR@10186: expected R_PAREN
ERROR@10213: expected SEMICOLON
ERROR@10213: expected command, found R_PAREN
ERROR@11231: expected config value, got ON_KW
ERROR@11231: expected SEMICOLON
ERROR@11232: expected command, found ON_KW
ERROR@11265: expected config value, got ON_KW
ERROR@11265: expected SEMICOLON
ERROR@11266: expected command, found ON_KW
ERROR@11320: expected R_PAREN
ERROR@11321: expected command, found OFF_KW
ERROR@11324: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@11324: expected SEMICOLON
ERROR@11324: expected command, found R_PAREN
ERROR@11487: expected R_PAREN
ERROR@11488: expected command, found OFF_KW
ERROR@11491: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@11491: expected SEMICOLON
ERROR@11491: expected command, found R_PAREN
ERROR@11967: expected config value, got ON_KW
ERROR@11967: expected SEMICOLON
ERROR@11968: expected command, found ON_KW
ERROR@12057: expected R_PAREN
ERROR@12058: expected command, found OFF_KW
ERROR@12061: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@12061: expected SEMICOLON
ERROR@12061: expected command, found R_PAREN
ERROR@12295: expected an expression, found COLON
ERROR@12296: expected an expression in target_el, found STRING
ERROR@12349: expected an expression, found COLON
ERROR@12350: expected an expression in target_el, found STRING
ERROR@12758: expected config value, got ON_KW
ERROR@12758: expected SEMICOLON
ERROR@12759: expected command, found ON_KW
ERROR@12813: expected R_PAREN
ERROR@12814: expected command, found OFF_KW
ERROR@12817: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@12817: expected SEMICOLON
ERROR@12817: expected command, found R_PAREN
ERROR@13042: expected an expression, found COLON
ERROR@13043: expected an expression in target_el, found STRING
ERROR@13096: expected an expression, found COLON
ERROR@13097: expected an expression in target_el, found STRING
ERROR@13548: expected config value, got ON_KW
ERROR@13548: expected SEMICOLON
ERROR@13549: expected command, found ON_KW
ERROR@13567: expected R_PAREN
ERROR@13568: expected command, found OFF_KW
ERROR@13571: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@13571: expected SEMICOLON
ERROR@13571: expected command, found R_PAREN
ERROR@13796: expected an expression, found COLON
ERROR@13797: expected an expression in target_el, found STRING
ERROR@13850: expected an expression, found COLON
ERROR@13851: expected an expression in target_el, found STRING
ERROR@14399: expected path name
ERROR@14399: expected IS_KW
ERROR@14399: expected string literal or NULL
ERROR@14399: expected SEMICOLON
ERROR@14400: expected command, found COLON
ERROR@14401: expected command, found IDENT
ERROR@14411: expected command, found IS_KW
ERROR@14414: expected command, found STRING
ERROR@14869: expected path name
ERROR@14869: expected IS_KW
ERROR@14869: expected string literal or NULL
ERROR@14869: expected SEMICOLON
ERROR@14870: expected command, found COLON
ERROR@14871: expected command, found IDENT
ERROR@14881: expected command, found IS_KW
ERROR@14884: expected command, found COLON
ERROR@14885: expected command, found STRING
ERROR@14928: expected path name
ERROR@14928: expected IS_KW
ERROR@14928: expected string literal or NULL
ERROR@14928: expected SEMICOLON
ERROR@14929: expected command, found COLON
ERROR@14930: expected command, found IDENT
ERROR@14940: expected command, found IS_KW
ERROR@14943: expected command, found NULL_KW
ERROR@15269: expected an expression, found COLON
ERROR@16066: expected an expression, found COLON
ERROR@16131: expected an expression, found COLON
ERROR@16222: expected an expression, found COLON
ERROR@16990: expected an expression, found COLON
ERROR@16991: missing comma
ERROR@17317: expected an expression, found COLON
ERROR@17318: missing comma
ERROR@17429: expected an expression, found COLON
ERROR@17430: missing comma
ERROR@17708: expected an expression, found COLON
ERROR@17709: missing comma
ERROR@17966: expected an expression, found COLON
ERROR@17967: missing comma
ERROR@18240: expected an expression, found COLON
ERROR@18241: missing comma
ERROR@18542: expected an expression, found COLON
ERROR@18543: missing comma
ERROR@18812: expected an expression, found COLON
ERROR@18813: missing comma
ERROR@19042: expected an expression, found COLON
ERROR@19043: missing comma
ERROR@19525: expected an expression, found COLON
ERROR@19526: missing comma
ERROR@21093: expected an expression, found COLON
ERROR@21094: expected R_PAREN
ERROR@21102: expected SEMICOLON
ERROR@21102: expected command, found R_PAREN
ERROR@21143: expected an expression, found COLON
ERROR@21144: expected R_PAREN
ERROR@21152: expected SEMICOLON
ERROR@21152: expected command, found R_PAREN
ERROR@21509: expected an expression, found COLON
ERROR@21510: expected R_PAREN
ERROR@21517: expected an expression, found COLON
ERROR@21518: expected an expression in target_el, found IDENT
ERROR@21537: expected SEMICOLON
ERROR@21537: expected command, found R_PAREN
ERROR@21644: expected an expression, found COLON
ERROR@21645: expected R_PAREN
ERROR@21652: expected an expression, found COLON
ERROR@21653: expected an expression in target_el, found IDENT
ERROR@21672: expected SEMICOLON
ERROR@21672: expected command, found R_PAREN
ERROR@21741: expected an expression, found COLON
ERROR@21742: expected R_PAREN
ERROR@21749: expected an expression, found COLON
ERROR@21750: expected an expression in target_el, found IDENT
ERROR@21769: expected SEMICOLON
ERROR@21769: expected command, found R_PAREN
ERROR@22045: expected an expression, found COLON
ERROR@22046: expected R_PAREN
ERROR@22053: expected an expression, found COLON
ERROR@22054: expected an expression in target_el, found IDENT
ERROR@22073: expected SEMICOLON
ERROR@22073: expected command, found R_PAREN
ERROR@22124: expected an expression, found COLON
ERROR@22125: expected R_PAREN
ERROR@22132: expected an expression, found COLON
ERROR@22133: expected an expression in target_el, found IDENT
ERROR@22152: expected SEMICOLON
ERROR@22152: expected command, found R_PAREN
ERROR@22414: expected an expression, found COLON
ERROR@22415: expected R_PAREN
ERROR@22422: expected an expression, found COLON
ERROR@22423: expected an expression in target_el, found IDENT
ERROR@22442: expected SEMICOLON
ERROR@22442: expected command, found R_PAREN
ERROR@22553: expected an expression, found COLON
ERROR@22554: expected R_PAREN
ERROR@22561: expected an expression, found COLON
ERROR@22562: expected an expression in target_el, found IDENT
ERROR@22581: expected SEMICOLON
ERROR@22581: expected command, found R_PAREN
ERROR@22707: expected an expression, found COLON
ERROR@22708: expected R_PAREN
ERROR@22715: expected an expression, found COLON
ERROR@22716: expected an expression in target_el, found IDENT
ERROR@22735: expected SEMICOLON
ERROR@22735: expected command, found R_PAREN
ERROR@22859: expected an expression, found COLON
ERROR@22860: expected R_PAREN
ERROR@22867: expected an expression, found COLON
ERROR@22868: expected an expression in target_el, found IDENT
ERROR@22887: expected SEMICOLON
ERROR@22887: expected command, found R_PAREN
ERROR@22966: expected an expression, found COLON
ERROR@22967: expected R_PAREN
ERROR@22974: expected an expression, found COLON
ERROR@22975: expected an expression in target_el, found IDENT
ERROR@22994: expected SEMICOLON
ERROR@22994: expected command, found R_PAREN
ERROR@23052: expected config value, got ON_KW
ERROR@23052: expected SEMICOLON
ERROR@23053: expected command, found ON_KW
ERROR@24307: expected command, found IDENT
ERROR@24459: expected command, found IDENT
ERROR@24602: expected command, found IDENT
ERROR@24891: expected SEMICOLON
ERROR@24892: expected command, found COLON
ERROR@24893: expected command, found IDENT
ERROR@24921: expected command, found R_ANGLE
ERROR@24923: expected command, found COLON
ERROR@24924: expected command, found IDENT
ERROR@25115: expected SEMICOLON
ERROR@25116: expected command, found COLON
ERROR@25117: expected command, found IDENT
ERROR@25148: expected command, found R_ANGLE
ERROR@25150: expected command, found COLON
ERROR@25151: expected command, found IDENT
ERROR@25518: expected command, found IDENT
ERROR@25545: expected SEMICOLON
ERROR@25546: expected command, found COLON
ERROR@25547: expected command, found IDENT
ERROR@25574: expected command, found R_ANGLE
ERROR@25576: expected command, found COLON
ERROR@25577: expected command, found IDENT
ERROR@25650: expected SEMICOLON
ERROR@25651: expected command, found COLON
ERROR@25652: expected command, found IDENT
ERROR@25679: expected command, found R_ANGLE
ERROR@25681: expected command, found COLON
ERROR@25682: expected command, found IDENT
ERROR@25841: expected command, found IDENT
ERROR@25871: expected SEMICOLON
ERROR@25872: expected command, found COLON
ERROR@25873: expected command, found IDENT
ERROR@25903: expected command, found R_ANGLE
ERROR@25904: expected command, found EQ
ERROR@25906: expected command, found COLON
ERROR@25907: expected command, found IDENT
ERROR@25983: expected SEMICOLON
ERROR@25984: expected command, found COLON
ERROR@25985: expected command, found IDENT
ERROR@26015: expected command, found R_ANGLE
ERROR@26016: expected command, found EQ
ERROR@26018: expected command, found COLON
ERROR@26019: expected command, found IDENT
ERROR@26169: expected command, found IDENT
ERROR@26253: expected SEMICOLON
ERROR@26254: expected command, found COLON
ERROR@26255: expected command, found IDENT
ERROR@26286: expected command, found R_ANGLE
ERROR@26288: expected command, found COLON
ERROR@26289: expected command, found IDENT
ERROR@26440: expected SEMICOLON
ERROR@26441: expected command, found COLON
ERROR@26442: expected command, found IDENT
ERROR@26473: expected command, found R_ANGLE
ERROR@26475: expected command, found COLON
ERROR@26476: expected command, found IDENT
ERROR@27304: expected SEMICOLON
ERROR@27305: expected command, found COLON
ERROR@27306: expected command, found IDENT
ERROR@27332: expected command, found R_ANGLE
ERROR@27334: expected command, found COLON
ERROR@27335: expected command, found IDENT
ERROR@27777: expected config value, got ON_KW
ERROR@27777: expected SEMICOLON
ERROR@27778: expected command, found ON_KW
ERROR@27939: expected R_PAREN
ERROR@27940: expected command, found OFF_KW
ERROR@27943: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@27943: expected SEMICOLON
ERROR@27943: expected command, found R_PAREN
ERROR@28266: expected SEMICOLON
ERROR@28267: expected command, found COLON
ERROR@28268: expected command, found IDENT
ERROR@28293: expected command, found R_ANGLE
ERROR@28295: expected command, found COLON
ERROR@28296: expected command, found IDENT
ERROR@29057: expected command, found IDENT
ERROR@29953: expected command, found IDENT
ERROR@29979: expected SEMICOLON
ERROR@29980: expected command, found COLON
ERROR@29981: expected command, found IDENT
ERROR@30010: expected command, found R_ANGLE
ERROR@30012: expected command, found COLON
ERROR@30013: expected command, found IDENT
ERROR@30042: expected command, found COMMA
ERROR@30051: expected command, found COLON
ERROR@30052: expected command, found IDENT
ERROR@30077: expected command, found R_ANGLE
ERROR@30079: expected command, found COLON
ERROR@30080: expected command, found IDENT
ERROR@30105: expected command, found COMMA
ERROR@30114: expected command, found COLON
ERROR@30115: expected command, found IDENT
ERROR@30141: expected command, found R_ANGLE
ERROR@30143: expected command, found COLON
ERROR@30144: expected command, found IDENT
ERROR@30170: expected command, found COMMA
ERROR@30179: expected command, found COLON
ERROR@30180: expected command, found IDENT
ERROR@30207: expected command, found R_ANGLE
ERROR@30209: expected command, found COLON
ERROR@30210: expected command, found IDENT
ERROR@30632: expected SEMICOLON
ERROR@30633: expected command, found COLON
ERROR@30634: expected command, found IDENT
ERROR@30665: expected command, found R_ANGLE
ERROR@30667: expected command, found COLON
ERROR@30668: expected command, found IDENT
ERROR@31692: expected command, found IDENT
ERROR@32354: expected command, found IDENT
ERROR@32387: expected SEMICOLON
ERROR@32388: expected command, found COLON
ERROR@32389: expected command, found IDENT
ERROR@32421: expected command, found R_ANGLE
ERROR@32423: expected command, found COLON
ERROR@32424: expected command, found IDENT
ERROR@32466: expected an expression, found COLON
ERROR@32467: expected R_PAREN
ERROR@32499: missing comma
ERROR@32502: expected an expression, found COLON
ERROR@32538: expected SEMICOLON
ERROR@32538: expected command, found R_PAREN
ERROR@32540: expected command, found R_ANGLE
ERROR@32544: expected command, found L_PAREN
ERROR@32545: expected command, found COLON
ERROR@32546: expected command, found IDENT
ERROR@32580: expected command, found PLUS
ERROR@32582: expected command, found COLON
ERROR@32583: expected command, found IDENT
ERROR@32619: expected command, found R_PAREN
ERROR@33111: expected SEMICOLON
ERROR@33112: expected command, found COLON
ERROR@33113: expected command, found IDENT
ERROR@33153: expected command, found R_ANGLE
ERROR@33155: expected command, found COLON
ERROR@33156: expected command, found IDENT
ERROR@33828: expected SEMICOLON
ERROR@33829: expected command, found COLON
ERROR@33830: expected command, found IDENT
ERROR@33850: expected command, found L_ANGLE
ERROR@33852: expected command, found COLON
ERROR@33853: expected command, found IDENT
ERROR@34134: expected SEMICOLON
ERROR@34135: expected command, found COLON
ERROR@34136: expected command, found IDENT
ERROR@34158: expected command, found L_ANGLE
ERROR@34159: expected command, found EQ
ERROR@34161: expected command, found COLON
ERROR@34162: expected command, found IDENT
ERROR@34494: expected SEMICOLON
ERROR@34495: expected command, found COLON
ERROR@34496: expected command, found IDENT
ERROR@34518: expected command, found R_ANGLE
ERROR@34520: expected command, found COLON
ERROR@34521: expected command, found IDENT
ERROR@34746: expected an expression, found COLON
ERROR@34747: expected R_PAREN
ERROR@34763: expected SEMICOLON
ERROR@34763: expected command, found R_PAREN
ERROR@36838: expected R_PAREN
ERROR@36839: expected command, found OFF_KW
ERROR@36842: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@36842: expected SEMICOLON
ERROR@36842: expected command, found R_PAREN
ERROR@36993: expected R_PAREN
ERROR@36994: expected command, found OFF_KW
ERROR@36997: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@36997: expected SEMICOLON
ERROR@36997: expected command, found R_PAREN
ERROR@37554: expected R_PAREN
ERROR@37555: expected command, found OFF_KW
ERROR@37558: expected SELECT, INSERT, UPDATE, DELETE, MERGE, VALUES, EXECUTE, DECLARE, CREATE TABLE AS, or CREATE MATERIALIZED VIEW AS
ERROR@37558: expected SEMICOLON
ERROR@37558: expected command, found R_PAREN
ERROR@37688: expected config value, got ON_KW
ERROR@37688: expected SEMICOLON
ERROR@37689: expected command, found ON_KW
